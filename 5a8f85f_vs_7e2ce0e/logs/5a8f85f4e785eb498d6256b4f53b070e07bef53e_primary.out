cset: moving following pidspec: 12779
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.402270125 seconds)
loading group "string"... done (took 0.523913373 seconds)
loading group "linalg"... done (took 8.695936369 seconds)
loading group "parallel"... done (took 0.172736341 seconds)
loading group "find"... done (took 1.248630114 seconds)
loading group "tuple"... done (took 1.860408905 seconds)
loading group "dates"... done (took 1.528594527 seconds)
loading group "micro"... done (took 0.449022721 seconds)
loading group "io"... done (took 0.529693211 seconds)
loading group "scalar"... done (took 49.389328589 seconds)
loading group "sparse"... done (took 13.394437992 seconds)
loading group "broadcast"... done (took 1.253720652 seconds)
loading group "union"... done (took 10.238185813 seconds)
loading group "simd"... done (took 2.982796105 seconds)
loading group "random"... done (took 11.345271561 seconds)
loading group "problem"... done (took 2.180078873 seconds)
loading group "array"... done (took 24.286616265 seconds)
loading group "misc"... done (took 1.096709184 seconds)
loading group "sort"... done (took 3.680479138 seconds)
loading group "collection"... done (took 18.955398406 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.601348091 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125155204 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.20372374 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.279776539 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.23346624 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165752326 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141609675 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.243003384 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.49875599 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202526727 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135812517 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.502118619 seconds)
done (took 6.071032 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252273543 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.177544866 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16470299 seconds)
  done (took 1.027994209 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076767754 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154645824 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112213695 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092518239 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091166372 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107054314 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091439207 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108160528 seconds)
  done (took 1.446285517 seconds)
done (took 3.489429969 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.496873449 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.858487221 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.50267769 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.144074936 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313780467 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308498402 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.310714658 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203765727 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105370877 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088077317 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174175298 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.422711565 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.415891914 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959105526 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088135037 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092451269 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133267438 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.761804511 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077836189 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108952528 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.495422614 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.182880596 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098532481 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121022838 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184844019 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132011553 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159941772 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100670931 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670290343 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130911164 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180609937 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097449327 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157466187 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183172466 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.191854153 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107628137 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684221131 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.197951925 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.088526112 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097941403 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666254186 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116047547 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185891129 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102802602 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087477742 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179544297 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091003726 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.0765508 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.108530976 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083613871 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160123401 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.444996796 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104010396 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169489821 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09252848 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687632986 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096211345 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.270187279 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122646371 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092097213 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089784831 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086861695 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153550242 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093029105 seconds)
  done (took 19.914811787 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.14428523 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162559718 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077883694 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153914472 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120243581 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078197693 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100058963 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077116505 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106088002 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.193341565 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136900079 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151162449 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090516697 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090188749 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128773244 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244531091 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10677409 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.11927319 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088639016 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088665537 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137530874 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09676152 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106680577 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092151649 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173943235 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201542338 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106650611 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120492261 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088575765 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093689433 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140071512 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144030037 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09127927 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088347064 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.168443614 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121137916 seconds)
  done (took 5.134082834 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199424754 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121516015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.205671783 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.156351158 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145714393 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165131822 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128116443 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.270171115 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.197949265 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176510629 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1130183 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.122959907 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078890315 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079655228 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076149223 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.449509108 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148215968 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160357392 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128535979 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100947042 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080807131 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.377518753 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084235113 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092929189 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082819414 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063434527 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127416076 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175803138 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101399977 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.090562049 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10542555 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081778877 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130827252 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195364273 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.135928752 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13836167 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119584218 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098328787 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077453544 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221360533 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086675395 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076042276 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130088347 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129726875 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113201377 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093658515 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084024898 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222848327 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078318429 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114203944 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.055114032 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193356725 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121491499 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075722057 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287869467 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11724082 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079037661 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07602776 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.806918963 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113143483 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078955892 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095016024 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081079678 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07756896 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.429711492 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09761331 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.215532025 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083119831 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.151418028 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079857582 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096144895 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08599553 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084351015 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117819879 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078973508 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077477719 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076336261 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095267386 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078987874 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127618499 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085019348 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079314007 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15736345 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095806092 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097639158 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124182319 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08163792 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093270481 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112725209 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09555991 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080404351 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.148349049 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098135261 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112577608 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09607411 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142347301 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080542668 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080422987 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.244662969 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081120431 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120354583 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100139119 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125281633 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100945757 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08202892 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095720954 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083601789 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076981938 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096304994 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145065309 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079086785 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079570595 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095895572 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091499534 seconds)
  done (took 27.569830244 seconds)
done (took 53.30352839 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.426099681 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079468833 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079285138 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099228 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079260034 seconds)
  done (took 1.527053271 seconds)
done (took 2.267316158 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316957559 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187359644 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10186671 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186037826 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083926177 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191402018 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176703853 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094579185 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202557815 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083143975 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182636609 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084319932 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101866576 seconds)
  done (took 2.759362703 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103653566 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107912633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.116927444 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102051838 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082808962 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100554002 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117587411 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111085441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098495786 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110775974 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084052304 seconds)
  done (took 1.875115632 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098965487 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105506515 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097484839 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116256622 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084134532 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09588739 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112897594 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107309313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096763282 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109557152 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084930554 seconds)
  done (took 1.851916512 seconds)
done (took 7.224401604 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.079366423 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.239751591 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.167758641 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.209148145 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350662832 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.255000567 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.542049795 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.171680909 seconds)
  done (took 13.899866971 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.168582921 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107173191 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090413543 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09107337 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090458826 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.107599294 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089869867 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09218497 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.111405297 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093769002 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088793478 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104757208 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094478155 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089275889 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090232013 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.108345403 seconds)
  done (took 2.417368398 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141566721 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138280747 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099142681 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096331881 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109790741 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098234498 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098859836 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113225077 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092199031 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093512908 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099638606 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112150657 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095281238 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091560888 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113236576 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116270912 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091588624 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113084852 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114570934 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113387736 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098307686 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094158819 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110440897 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098136846 seconds)
  done (took 3.369043887 seconds)
done (took 20.427721455 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144861764 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098777883 seconds)
  done (took 0.988444365 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.140448093 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156011763 seconds)
  done (took 1.046738576 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109231163 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088744426 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133635877 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101022561 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089127054 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10517151 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115028286 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104770806 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090372307 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090066538 seconds)
  done (took 1.779935514 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093632015 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093343508 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119568308 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.135801933 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113345524 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091422954 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093218228 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091770718 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110962239 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089529278 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093894694 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122338658 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094376066 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123011184 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093661139 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09511145 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113094453 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093280576 seconds)
  done (took 2.615661623 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09007046 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091415866 seconds)
  done (took 0.937408182 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092729646 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08861582 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091106254 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108636753 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089241895 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088278542 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104862541 seconds)
  done (took 1.419373762 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.603255136 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.258538871 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.353119015 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105921792 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14164216 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.343229724 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142058707 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101097669 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100674991 seconds)
  done (took 2.940836307 seconds)
done (took 12.48073769 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091789706 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.21720805 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.619905683 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111190485 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089677518 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158200532 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.281215659 seconds)
done (took 2.33241502 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336330598 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141891384 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080590892 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089948828 seconds)
  done (took 1.40645404 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080226136 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097416777 seconds)
  done (took 0.942882172 seconds)
done (took 3.113344392 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088266333 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.120597927 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.104136654 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087361366 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.086343714 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085694726 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.103832837 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087073895 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086531489 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085820219 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.105095754 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.087791253 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086361582 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102610734 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087352136 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08687073 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.086105018 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102719619 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087037349 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087062485 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101572086 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088526311 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086611456 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085908312 seconds)
  done (took 3.015925653 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105045958 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089742575 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106025112 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091746528 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091613226 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106590428 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093188277 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089627379 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107368847 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089418942 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091549268 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106713781 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090321089 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091163786 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088595741 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109518248 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091069575 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089257156 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104584759 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092420569 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089816466 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107093379 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092621317 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091250971 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107468669 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092400572 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089057981 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105605974 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093229687 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091331479 seconds)
  done (took 3.653327605 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096366371 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084228342 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086599684 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111460525 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084991812 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087954045 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099366373 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086119978 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088214002 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087198279 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105349341 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087807419 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085987597 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.104476643 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090034623 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091109587 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09592084 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103485614 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085791139 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088400618 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107600513 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085890304 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088480962 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086810249 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103882447 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085765226 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087610949 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.103836827 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088808142 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089340488 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089480935 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106135236 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088607105 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097331134 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107194921 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088044953 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092468164 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101638528 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.08941586 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084755459 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083200714 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104794726 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085888665 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092715682 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.103881065 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088801441 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084942051 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.087634642 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.104373555 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091363826 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084673089 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099819279 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090471724 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08861118 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089495523 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10097079 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088743597 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083804435 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10400595 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087996571 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084431415 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084570522 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108432945 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088909495 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101352416 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110912894 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086933543 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089111697 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.104825162 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093763992 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089490697 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112951754 seconds)
  done (took 7.496263472 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100931723 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097351215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088179384 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106136466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089037332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087774184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11031321 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089120938 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089353957 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110490684 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088587714 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088391133 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0890831 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106665314 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090024776 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089205426 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110134649 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090111894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088073295 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105176902 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089329409 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093543261 seconds)
  done (took 2.871764429 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.232816211 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095297572 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13554768 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117461798 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105900666 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118494802 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093492532 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093322392 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108229538 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098340159 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096510744 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111554198 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106620417 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096863698 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114761554 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097967242 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108297599 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098714657 seconds)
  done (took 2.809000262 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10309011 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089419863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126488475 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090071524 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090454246 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089494267 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111671219 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108026079 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108505464 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091824517 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096753062 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093214402 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10725506 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09051902 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090645435 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107246792 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091101506 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090619311 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113017476 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097884157 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094054287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113553599 seconds)
  done (took 2.975353645 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103775091 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090547406 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124973759 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093768109 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08932514 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089550996 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113456221 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090205084 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095462364 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10753817 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091213245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088887001 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121654455 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091129671 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094299917 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107222033 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091115998 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089276279 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106377769 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090539023 seconds)
  done (took 2.749897222 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.16873676 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121351926 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106703285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112662939 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121879021 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10665127 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112399431 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12336548 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105746303 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132706483 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107706888 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10478192 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13022225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110711954 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105211192 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133307292 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111966736 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130676165 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105940794 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104359729 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134269557 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105003242 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13035206 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105660853 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105984366 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121686074 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107038792 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109805239 seconds)
  done (took 4.060480682 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089976453 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089762209 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088322791 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106136287 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089700847 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087873524 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088017399 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106518219 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089193049 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087893111 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105564618 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091184563 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089579294 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088254978 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106813649 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089689748 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088828026 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105206159 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091494622 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08987301 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088060363 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106662089 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089422565 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08812684 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087861591 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10686279 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090094332 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088037881 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105529849 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090324482 seconds)
  done (took 3.597427038 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103376873 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099235 seconds)
  done (took 0.989552377 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095685756 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103280121 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08766433 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106771183 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097105916 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08880819 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115081984 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09704078 seconds)
  done (took 1.579810265 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141038735 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160646113 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094663654 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099956554 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162419331 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151718849 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13050781 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094221667 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105729935 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084066389 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.153937532 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082214951 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090867664 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104436871 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091665831 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096295355 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108855441 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099091054 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096204356 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090656638 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112646508 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095053491 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093032439 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.120774098 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085118764 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092427074 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112124656 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101324452 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085408535 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109529949 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088511074 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090749012 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112620378 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095911536 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08986831 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163065642 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09657755 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105462129 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091956555 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093746157 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141288183 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092699987 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092390986 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106232996 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093125885 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09339304 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112138267 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091684144 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083123241 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084674479 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.109244661 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08655343 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090123317 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109407876 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091607142 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096975865 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.109929319 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087292436 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086142952 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104104576 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089527836 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085632595 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110598017 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094212503 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091912793 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10876497 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090590679 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090588477 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091715725 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.10968738 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089892485 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104619978 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109917401 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094735251 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093894567 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11013752 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088225211 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095166155 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107773878 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091479739 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095805126 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138825757 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091997985 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08609903 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104476945 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097532334 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092550615 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.109918746 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084276832 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098897841 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.110397819 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092980945 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084243035 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088195819 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105550074 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094688103 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083835144 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109318884 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089722746 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09407216 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1128506 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090613182 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092587715 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113945312 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096379325 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089221138 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156608753 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087759258 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084884485 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.111439773 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096200672 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084467699 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10831243 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089929044 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087371247 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104044129 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097083963 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091059145 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.109610048 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095481771 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091633268 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11005978 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093938442 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090060767 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085793745 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113142244 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098603195 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091802896 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.111857014 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092012176 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090508146 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107822052 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094286489 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08751669 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113196022 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089173425 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089564477 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091078433 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113874028 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091378324 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085232915 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107749528 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091870823 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089657731 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.111233496 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092081457 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087099341 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101550155 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092211284 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085746387 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.10905693 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100541042 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087642452 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.111517356 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088753354 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097853918 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105344763 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096251531 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094627428 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095081833 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114356082 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083809462 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08795914 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.111077554 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095260337 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087187909 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.109937527 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091685526 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097871418 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083186372 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.114868615 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084003203 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088155148 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.114584487 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093528916 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093178358 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105681481 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129609284 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10108942 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11443514 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091148025 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090919859 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112438128 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094438253 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094794186 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113574481 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09623752 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088289936 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089036814 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115171659 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087050949 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093182541 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107342308 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093741009 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084130198 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.110044281 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084871362 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094853632 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111092992 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096228072 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09596757 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092539822 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110899299 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100122734 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086549547 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.11414367 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084767643 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095264632 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.120078326 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098135951 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097143262 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111222864 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090065041 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091940255 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117455786 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095228944 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091545626 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.109945768 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086648771 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085238917 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096063752 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112301967 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087558533 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090223509 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11061656 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094399876 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088257061 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102464215 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096818165 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094278106 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105311928 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092917415 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087679751 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107347105 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099886664 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084361736 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105820902 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09471542 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094644493 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089902709 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109636458 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094111793 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096785089 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.112775063 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.093603469 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08934621 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118779744 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089776262 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090399947 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086755309 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.111879375 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085499019 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093802609 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.11028961 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089512237 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0959635 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112650876 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097754399 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096104979 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107459028 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096199765 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.095166604 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.114870672 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090342478 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096559957 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086547991 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103500458 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088457755 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083704334 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.111199796 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089362883 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.094995007 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108023244 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092312906 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095720908 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111564547 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090020588 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096334184 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120341933 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086636492 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084222675 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107557547 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092252288 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087965303 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106085779 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093909783 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102699184 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094602978 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113332624 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088779676 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091473731 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115344469 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088674404 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.096440951 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.116165327 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098312895 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087583975 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113294787 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088846494 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095019766 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.104042242 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091914143 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090164599 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109733325 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090947215 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091062055 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087035639 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103280035 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088710574 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.096279173 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.1084076 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097176399 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089733803 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109569771 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089282042 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08677021 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.115753244 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09165104 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.09731145 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109882444 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087509807 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085190268 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.094605289 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109535371 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097347517 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086436431 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.114039986 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097287265 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094388195 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.109770847 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101075311 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099224257 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.096993179 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117163306 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085324804 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088375401 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115496603 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091241788 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.093117657 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11238149 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086894723 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092464573 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.115734376 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093848501 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08916162 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103160344 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094107635 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096965145 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094136661 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.114848858 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09354496 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092417172 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105565965 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095060022 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096376874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111254593 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100403669 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090708436 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.113166658 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089682991 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.096302061 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.092155639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105348158 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08703578 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08912487 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.117019374 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08729214 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095970387 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114850638 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089804824 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089909755 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.113703584 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089757849 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095922441 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097481953 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109105233 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101483653 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094237483 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109575867 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097205887 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097861234 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103422679 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091926382 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090713361 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116604112 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091454563 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096416562 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110310542 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097945399 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094833599 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.096054398 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.116481482 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.097189992 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085667143 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.117126339 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096753087 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094605053 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108372829 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092365526 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087087881 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109211622 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099336601 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090101183 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100521855 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.117970225 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091913586 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089581901 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.116908083 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092148811 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09766154 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10775248 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093618208 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085282663 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113350818 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092697521 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099270912 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107938866 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088760383 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097243238 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096521035 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115352465 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09382851 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.097558533 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105288905 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087279028 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094954008 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10829543 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102312157 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094659176 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109006513 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091325067 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.093670113 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094346704 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118256992 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087387182 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088613135 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11278974 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09457946 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090806313 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106263769 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097115216 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09051753 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113018995 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092468912 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087218677 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109755613 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100523522 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090182279 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106128469 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091549251 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099986923 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091555814 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109018895 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087955814 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097740017 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114105667 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100501459 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088898039 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.111962749 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092252664 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095239993 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.117132136 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093488871 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092744752 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109957119 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098161712 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096851173 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108056025 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091954879 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10208996 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116605711 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09528934 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094796122 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090923151 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119748136 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099810436 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09438031 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106595244 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089601643 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090404626 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106822423 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097525543 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097158398 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109446704 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092393771 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096347851 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09631925 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.115725987 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096197274 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088586145 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118693712 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092488697 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095726639 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10542534 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087860868 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094681189 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096705928 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112409803 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092408505 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093450289 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.115066937 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087975023 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089656634 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116711935 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097233349 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098111376 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110795216 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092915578 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09534613 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120756647 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09638833 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091835825 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099183179 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.118459933 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094546478 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091486349 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117049377 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099758402 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094909912 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118773651 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091183581 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091368426 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.118342383 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101527171 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102295104 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112813609 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088466666 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097354373 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110236193 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090002601 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096696734 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118300345 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102008422 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093570099 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090007062 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121547926 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098956509 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092470398 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110829586 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09164731 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096837779 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11083507 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097219078 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090906657 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120068567 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10137159 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098756023 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122305631 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089263638 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098274437 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114666473 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102295645 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094826378 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087729502 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108068389 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097064974 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099614822 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120196493 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098451301 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096868668 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.096533426 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114380715 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093496621 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091066518 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.121650248 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099452331 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09490219 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114540173 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093664736 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093991033 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.114113047 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100688621 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099188048 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113307457 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106485322 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099618177 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112000996 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092244832 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094680303 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095723255 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115232246 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098857161 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089880388 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10805465 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101398756 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099858296 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113010728 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102564531 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100586453 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111747499 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098254347 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100878028 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.097834222 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.115626665 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094310767 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095945061 seconds)
  done (took 60.172470051 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140648781 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102112124 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116810497 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097086423 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11225625 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118292835 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098450268 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097896128 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118102516 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106093743 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096123911 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115705351 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110947175 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115907434 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133440521 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105438372 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115117393 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098232632 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096153466 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097304481 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132431789 seconds)
  done (took 3.164961021 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113444702 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109032493 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127482656 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109616692 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101661631 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127507048 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10688204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127334946 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111334605 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103959668 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130125629 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107068614 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122579177 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105257251 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10356686 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123903035 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111800442 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102175762 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12760617 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108868503 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123450905 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108011184 seconds)
  done (took 3.350121182 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.125379762 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100610253 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093730394 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116314734 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099983426 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096543966 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117838199 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097593746 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105037024 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090113974 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10762482 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091483242 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094666449 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115485997 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090897536 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096457096 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122279746 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101537 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100812878 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.095476694 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107303487 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097869698 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096186936 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.105509144 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102234102 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100740037 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096856241 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119600959 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08885655 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098360017 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.115485581 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092737024 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087453038 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086776661 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107674737 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.099601974 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099501571 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.115775644 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097730444 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087578781 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096511861 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120654981 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088092402 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097769954 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.11672806 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091943244 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099876038 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095619748 seconds)
  done (took 5.714074929 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126490633 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159493788 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100612476 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134017386 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132625259 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104838034 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098337524 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135251461 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098678412 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121191513 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111893872 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.347952469 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125671871 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104617199 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101103084 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122723389 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102473433 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099856378 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125423751 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099675932 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123637427 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.102837182 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109222073 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129251441 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103935032 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099409134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120139047 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105227891 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10778483 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126169784 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104309245 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103405139 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130292872 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101912944 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118821282 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101871691 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110835815 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120569332 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102246501 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099454584 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.118956639 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104355964 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100277036 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130482538 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102591486 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101330435 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12148895 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098396185 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108333148 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121665137 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106195655 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108590183 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123488651 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100765581 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101810157 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131117846 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10059022 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117872863 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10302018 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107901668 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.119111081 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107004853 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108664642 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120087097 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10678615 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.108667859 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122183448 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102511134 seconds)
  done (took 8.859226458 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130399224 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102117388 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130737946 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11158507 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102479498 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123812716 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103541952 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103885672 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125246855 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107986025 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123517744 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.198216087 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122264275 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1088441 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102823046 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124765375 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104122688 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103615125 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125548152 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104283233 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102980012 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132029161 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103764002 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131683276 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115162442 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100025101 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124540433 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103935056 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111422892 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1259971 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116809774 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124790173 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105093699 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110922559 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135756976 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10477022 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098506438 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125488655 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104464905 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104405642 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122173633 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110827341 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123576445 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102624433 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103021688 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123548287 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113112367 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114151818 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128796592 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109014499 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125323682 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112881614 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103922123 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125467234 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112446563 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13836532 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11267745 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111637072 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124646271 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112409946 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130655737 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119643625 seconds)
  done (took 8.076718511 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098798629 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097876887 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096337108 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118190928 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098927297 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098113838 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096115524 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118431511 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098264293 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097114911 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118660338 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098481369 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097291132 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096629078 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119507634 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097688992 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096787643 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11761946 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099584549 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098525888 seconds)
  done (took 2.913876316 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108625361 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113947638 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121631275 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106779678 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100408904 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125261089 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101000969 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100837528 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09955762 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122434049 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109045818 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127305909 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103527166 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10559176 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129186718 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106697712 seconds)
  done (took 2.639933365 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119866465 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115507044 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190008466 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102061704 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123356937 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107839032 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100053599 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.122797513 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101826927 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106649531 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103467591 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.1256202 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100950214 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101590562 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122338035 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104820421 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09956467 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124849073 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102243081 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.186185093 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104871432 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102423814 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.121955202 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103991878 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101149718 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10428614 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128067797 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099772028 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101571033 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.12149173 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101894292 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.105843692 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121597091 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104753816 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100194358 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123132717 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101025051 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100636878 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123277287 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.100562656 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102754957 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101389333 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.120947216 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102812684 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098046917 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.121629826 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098589265 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105906518 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122623886 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103084745 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099971283 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128620225 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105618112 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107475709 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129074405 seconds)
  done (took 7.042858392 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111887203 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101722431 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131881641 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100403715 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101582332 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100948907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123288854 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103459288 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100507684 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120150903 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101989229 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103042029 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121095757 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102399234 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101911898 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12079702 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099915598 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101971108 seconds)
  done (took 2.810322118 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106051892 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101416496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103621985 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12247115 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100813086 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098889403 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120918294 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101004797 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100054646 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100151959 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122528148 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100572401 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098452628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122806204 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10159458 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099265701 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120565934 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101062105 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101248341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098594888 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122896953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099972498 seconds)
  done (took 3.208984295 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111762786 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180951449 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106126482 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.187417461 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096815553 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094682742 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127181393 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096760843 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110184512 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117060253 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096018146 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094340056 seconds)
  done (took 2.285636222 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127501646 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136065027 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122355569 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102323966 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107776107 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126127752 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105175199 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104546923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134257676 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116418599 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12609791 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112518463 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111261438 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134541274 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110144955 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129781184 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106098308 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103942472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121951388 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120423373 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105152645 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133236659 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105664572 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104899451 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126311487 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112069414 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132395418 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116199672 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104032699 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134102019 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109270556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125443458 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114323732 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115594235 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123036385 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113291018 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104664271 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140818967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109517254 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1342436 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10198107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109031235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133128777 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110151484 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132208985 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106659966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108639068 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126628943 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105202247 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124887798 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131507475 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111776862 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131125233 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113042027 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113144455 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146331856 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116064862 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134709849 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109521007 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138971198 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113337082 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108275844 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134719841 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115392194 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130528872 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115810772 seconds)
  done (took 8.717172793 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139648726 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102675235 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127467347 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116357073 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134901872 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107060266 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108424274 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126767671 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107187591 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102561958 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167504157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105702989 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113045477 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133975549 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104982048 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127502212 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107412672 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112063866 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123810825 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12689767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127359965 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114608565 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113588866 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134671103 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116863036 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130315494 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107560908 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104493257 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127551075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106967744 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110144177 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128469788 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115025827 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103180559 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135653984 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106566521 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105572132 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1355718 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106001415 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130168651 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115842047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119920868 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12742938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106646318 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138555602 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106494789 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105809437 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123740203 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106990469 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102372566 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139627583 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118639548 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139075865 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114393115 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105375344 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127720686 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106345907 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105840092 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127944401 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111424525 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133649021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107553059 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124104277 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12809291 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107253311 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114220012 seconds)
  done (took 8.698414361 seconds)
done (took 164.218769794 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149249724 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.187215698 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144658003 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176733906 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092402494 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12533869 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145515766 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148399395 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.112536955 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093805129 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091554365 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095435501 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183635037 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092267392 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090878721 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115791945 seconds)
  done (took 2.915764106 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190082553 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.304884648 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106489451 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117334852 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099223935 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096318243 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116269541 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099923496 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096851375 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125459754 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09776175 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09242957 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125448215 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093291614 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096078389 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095655859 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.126755932 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095719922 seconds)
  done (took 3.05352499 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11835004 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139571418 seconds)
  done (took 1.14001275 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126547331 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190853208 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275594709 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167602545 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11818103 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136497433 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147045676 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130088895 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18449115 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130980333 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110931274 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094667595 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145298805 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101804646 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112035715 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117873885 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126054064 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110699892 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.13325534 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10028384 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119244214 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125798358 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.101857264 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132953553 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176176862 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131975653 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103144768 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102057175 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120953019 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112319869 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104349599 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137188844 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.10862057 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174804375 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10024032 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170962063 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105309271 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120030787 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110600302 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097227677 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122863973 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10050005 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131554263 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098418039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102324913 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125746424 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104371576 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102252321 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.127376817 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106170888 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105151743 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128239732 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168811176 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107203247 seconds)
  done (took 7.729192658 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.858455044 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1382726 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098452731 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.000789422 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148529244 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11310381 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.848600641 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143398076 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251138731 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.881216226 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114140868 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114492707 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.2555244 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.252712104 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.275316128 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.353374845 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698730984 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133869865 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126657755 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160550889 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1061351 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146412303 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118640692 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.51782951 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098897635 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097740872 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12893803 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111719527 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173399204 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098993983 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12415013 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172028369 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288726394 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202825233 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120493919 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098955052 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098066288 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182222447 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265510198 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210639836 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.192071994 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096100479 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097733019 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13001075 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118639524 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095587467 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17656708 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189176295 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188047161 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104036953 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132462132 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110266569 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107598881 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174919485 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095806171 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375342744 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364538066 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098457883 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105540424 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136950132 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263069508 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099670687 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22701336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149526236 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208384724 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098154612 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834659394 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180813211 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097328905 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127326381 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106460873 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103356598 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1288765 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163548662 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500391919 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110430132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125578579 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098486436 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228429634 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099642713 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120291763 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154651882 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121299648 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106925753 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133061836 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112267972 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185772115 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265454173 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112318085 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107993545 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126618317 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112464358 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099046611 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.22867946 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221949817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172415884 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229083377 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106246881 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178442817 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183059879 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106837122 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184946875 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105135319 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13867501 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107347538 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217570147 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154248565 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100791165 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125106525 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109918128 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.133205125 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125881714 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108083688 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188126661 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553592306 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.181424209 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097807456 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103446496 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128902812 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15350251 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127228112 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256556052 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110024593 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182272933 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10614029 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096057242 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129500441 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.176004893 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109575767 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106677028 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12986464 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10748992 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277209182 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215965796 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112012177 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244080897 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.196587609 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106491671 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190973555 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129051272 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161213917 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131099126 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106756547 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099360164 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846687636 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113999209 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10763003 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126983086 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183626546 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120719537 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103188504 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098958959 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096080005 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807621332 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126086867 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097723984 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100317138 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127941638 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107619302 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106048766 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127863176 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17485805 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241406606 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111941843 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128880713 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101303605 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175121253 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101089175 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100068516 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121879163 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101389839 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108328377 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125765068 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103322726 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187537754 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.150146639 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.246013274 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.632872956 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100589343 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099438943 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233567537 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123201376 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320169597 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10805186 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228095272 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180084648 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118837034 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.35869919 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160007318 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205217338 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102118399 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187540591 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096379661 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13135099 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174841122 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101204768 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107165189 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173560408 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114795614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135721446 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.27123118 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100129333 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247873524 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096862467 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185274295 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099227226 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130771421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320482119 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09933224 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139359102 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.173323711 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105863371 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100317634 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.67127648 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100152458 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133818093 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107337732 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228233685 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180838582 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129500798 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110690817 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112352655 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.1770318 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.22608753 seconds)
  done (took 47.19578989 seconds)
done (took 62.913732824 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.292478846 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.252984959 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303036444 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206532351 seconds)
  done (took 2.031885089 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.256543878 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160316653 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.231564131 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096122761 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.239007599 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095936038 seconds)
  done (took 1.990808632 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.4851939 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.363421246 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.300550628 seconds)
  done (took 2.063480319 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.25007404 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235608812 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328517666 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.399239312 seconds)
  done (took 2.236623008 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.262469105 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122873529 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.121480274 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.207775785 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.22745479 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209492347 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125392889 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177589549 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127004488 seconds)
  done (took 2.53854267 seconds)
done (took 11.766765778 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.238752524 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.342090651 seconds)
    (3/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.316662186 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.25991109 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.261678582 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.223055071 seconds)
    (7/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116233194 seconds)
    (8/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.238983116 seconds)
    (9/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.274011115 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.133716589 seconds)
    (11/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.225993858 seconds)
    (12/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.188962184 seconds)
    (13/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.208507404 seconds)
    (14/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.109422532 seconds)
    (15/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.318322922 seconds)
    (16/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.104554011 seconds)
    (17/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.138280276 seconds)
    (18/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.324803115 seconds)
    (19/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.162345708 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124344736 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103945384 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125442005 seconds)
    (23/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.216514062 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.131019976 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.155406222 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.216753115 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103743984 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.097004066 seconds)
    (29/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142013816 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.12339212 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143144336 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.211640711 seconds)
    (33/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.279057875 seconds)
    (34/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.212361492 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.132038814 seconds)
    (36/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132715918 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.153789215 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107792692 seconds)
    (39/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.149608475 seconds)
    (40/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.154677629 seconds)
    (41/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.165489247 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.132551646 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.191417444 seconds)
    (44/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110523947 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.189709728 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.125819014 seconds)
    (47/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.188279606 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.190767356 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.100216603 seconds)
    (50/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107187994 seconds)
    (51/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.223476956 seconds)
    (52/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168940071 seconds)
    (53/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.19366228 seconds)
    (54/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.271103618 seconds)
    (55/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.13918751 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.170092198 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.211780545 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110930188 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.102632445 seconds)
    (60/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.166113337 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.126699675 seconds)
    (62/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.145384138 seconds)
    (63/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.192481942 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121019967 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.074885086 seconds)
    (66/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.163112175 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150342967 seconds)
    (68/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182622921 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.113521853 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099295614 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099021014 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076435489 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.10108583 seconds)
    (74/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108675251 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118447303 seconds)
    (76/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.164644599 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104857251 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.186167208 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.14458065 seconds)
    (80/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077526226 seconds)
    (81/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107779711 seconds)
    (82/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100271901 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.123287584 seconds)
    (84/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.169844631 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.120987107 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10956746 seconds)
    (87/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.187938599 seconds)
    (88/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.100475792 seconds)
    (89/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.1005877 seconds)
    (90/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.142617242 seconds)
    (91/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107642042 seconds)
    (92/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.10741351 seconds)
    (93/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.140036996 seconds)
    (94/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122847939 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213911983 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07524323 seconds)
    (97/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076373375 seconds)
    (98/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.195846156 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.134793442 seconds)
    (100/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167998712 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.125372708 seconds)
    (102/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077811589 seconds)
    (103/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075154532 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077027568 seconds)
    (105/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.073910172 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.126099684 seconds)
    (107/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185170436 seconds)
    (108/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.212799534 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101461274 seconds)
    (110/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075094392 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.123931005 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102208919 seconds)
    (113/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.166922225 seconds)
    (114/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.156259798 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102814161 seconds)
    (116/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107981372 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074678008 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.133270923 seconds)
    (119/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108963035 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.209652461 seconds)
    (121/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.082821017 seconds)
    (122/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077601271 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076546771 seconds)
    (124/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.084558062 seconds)
    (125/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074366459 seconds)
    (126/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100121181 seconds)
    (127/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108347736 seconds)
    (128/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079705037 seconds)
    (129/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143524234 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.099824813 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077293302 seconds)
    (132/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.080601995 seconds)
    (133/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.074795008 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.105775811 seconds)
    (135/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.101381811 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122754356 seconds)
    (137/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109596224 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.144552044 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.07684627 seconds)
    (140/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077432578 seconds)
    (141/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.075261685 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099834518 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133734034 seconds)
    (144/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075516908 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.097972839 seconds)
    (146/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082847235 seconds)
    (147/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.09954311 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085800583 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104472861 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074936242 seconds)
    (151/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074282561 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.099930431 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076567711 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075160837 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085884578 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.098181393 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.127181109 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098574002 seconds)
    (159/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.082286001 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.074765391 seconds)
    (161/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16696819 seconds)
    (162/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074813845 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098643037 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.130837027 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122059464 seconds)
    (166/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077024156 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097502959 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.098534064 seconds)
    (169/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076210897 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102086093 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075654472 seconds)
    (172/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131525581 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113646965 seconds)
    (174/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.07826874 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075319008 seconds)
    (176/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076435834 seconds)
    (177/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.10108874 seconds)
    (178/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109178511 seconds)
    (179/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07538916 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118159877 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09962679 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099360222 seconds)
    (183/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107551524 seconds)
    (184/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077606847 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12487706 seconds)
    (186/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077475404 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107885601 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.074708444 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.075036651 seconds)
    (190/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.101405936 seconds)
    (191/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076585497 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078319226 seconds)
  done (took 26.182753358 seconds)
done (took 27.100539079 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178455704 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101585252 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.132423479 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107201756 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.199227077 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116451815 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123085735 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.134554709 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118718446 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108532 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.122312963 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120776029 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106573445 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201978795 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109904131 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12418655 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099457819 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.1175312 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.147164196 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125083247 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.199517359 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101708814 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117906683 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098190416 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.201559343 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100431854 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.133046494 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110323905 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120119153 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.13561208 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110238246 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.0994042 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.149510427 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123559981 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099781953 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.133675343 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101713365 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084088744 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108043844 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136097458 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121211899 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10972427 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.133467158 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101514282 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108343128 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133346808 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101613854 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111574862 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122493045 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111028731 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101577168 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147448846 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109026011 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098457188 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.121622477 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102448833 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119176905 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099533472 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.1464351 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100946476 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101297842 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125594766 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11219395 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100360676 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.1325298 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102545887 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109428971 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.134066444 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110677982 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103731777 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09984215 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.133202817 seconds)
done (took 9.682102801 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10720213 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.153366103 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198228626 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212263581 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129837205 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140974534 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125220928 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.131335393 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.146355135 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125910083 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.161011083 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132793616 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.210170647 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.116587592 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116246642 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139111913 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117476726 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111629483 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.213541254 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147521631 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.128954058 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114746253 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159306292 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123073613 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106160159 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.15359699 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.107267266 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.137086104 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108680233 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124774284 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14876913 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109086458 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107061056 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.155486709 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121499698 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116090097 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142136985 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112995214 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.129114492 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107673482 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113435029 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.148623242 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106840842 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115267445 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137858201 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117199573 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117230278 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142644519 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110414441 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112448166 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.135016759 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132502076 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115463358 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.142265094 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116626627 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.138619245 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.11889789 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116621395 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130409895 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11855987 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106073569 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131127576 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110543991 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128307302 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131540211 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118283578 seconds)
  done (took 9.612143812 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124403014 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.132729267 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139390958 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116577526 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108111617 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12397982 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099985476 seconds)
  done (took 1.812620159 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101015781 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184448691 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205626139 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206747495 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179088775 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217125611 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146793573 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100952707 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133095311 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135570961 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185257951 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238046519 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109004524 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141318992 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182941169 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124769516 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184292036 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125864158 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11448337 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208946042 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116370405 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.154714804 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113151151 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099929005 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207020403 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101655926 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.258988251 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117301416 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135612957 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114243081 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114451809 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203858258 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207750379 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114621518 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108981108 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.206532127 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.206253093 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114769127 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220765901 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10452778 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.205955833 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114463992 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115057739 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.140220915 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116502192 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.192583156 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119709418 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114635503 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.138733027 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19102858 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.135963037 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184765292 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.135881337 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11467588 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111031727 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14235429 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123651388 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115322539 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.218689454 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117362039 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.208107603 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.207357772 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183629684 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208946785 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122890909 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211013046 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.202246596 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114506042 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108160832 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14294412 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182294537 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.14044342 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114319201 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.196896046 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11794607 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.209615082 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183987015 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138494279 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114349396 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103359442 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138773726 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102455111 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.197823573 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115183496 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112301502 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142953981 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113427271 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114304195 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.13235389 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124139898 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114240024 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137498153 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119839084 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113911296 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14218915 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.210223607 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112075679 seconds)
  done (took 15.522471608 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104011667 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102471029 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107216765 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128851804 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102831147 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102113745 seconds)
  done (took 1.633191046 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.138800382 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115943871 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.14918475 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117667801 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159518531 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.216382209 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.220062661 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109429392 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156532295 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125744041 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.216473647 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192268829 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.219900694 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117165689 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.220254421 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117481183 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221424437 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112539705 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151436288 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113125959 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140212641 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119402314 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113580838 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.207842564 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116831212 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.142408915 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110602839 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.123452009 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.148626235 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110372317 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117976226 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142069374 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.108722685 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108867657 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.22262095 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107400631 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139162382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117882963 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117108903 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142889555 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.219309365 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114040377 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121302688 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14333382 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110472929 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.107904178 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144882972 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110042301 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.223640828 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117973832 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118362309 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.143857943 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117782305 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118174572 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135575559 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109904506 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119074782 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.22416666 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.142803832 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110057811 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117468631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.142584634 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110887678 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.139365679 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142812163 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118525503 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10765401 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141549651 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11437685 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117616417 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144184487 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117713037 seconds)
  done (took 11.10522118 seconds)
done (took 40.639243943 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.57293632 seconds)
  done (took 2.556010818 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.818966374 seconds)
  done (took 1.802949571 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.216000587 seconds)
  done (took 19.231116936 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.51322259 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.588489805 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.029113005 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147688931 seconds)
  done (took 3.263593698 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.053622772 seconds)
  done (took 2.054806514 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293688965 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264888561 seconds)
  done (took 1.546804417 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714617083 seconds)
  done (took 1.714454134 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.49543496 seconds)
  done (took 2.481872678 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.349988023 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176474919 seconds)
  done (took 1.534565973 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.626749321 seconds)
  done (took 1.636238246 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.627986613 seconds)
  done (took 20.638711911 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247069096 seconds)
  done (took 1.253827863 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288096763 seconds)
  done (took 1.293954867 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.634393109 seconds)
  done (took 4.644774589 seconds)
done (took 66.64828288 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113591711 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115238131 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113713268 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137915894 seconds)
  done (took 1.479397883 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121033719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11667095 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.11823552 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143304733 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121241365 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115555474 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14166829 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117591108 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114761589 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144106449 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115652329 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114757223 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144840817 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115975705 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113414924 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143754182 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119387581 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115921198 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.140977184 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117104742 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116879948 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141683063 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121052823 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118586471 seconds)
  done (took 4.004182713 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113650563 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106260911 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107704061 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13165258 seconds)
  done (took 1.474625007 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124289212 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128395618 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150710673 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123167484 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12757883 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15197206 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115224853 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11325947 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140502213 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124640479 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130416255 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154451308 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128745078 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116886765 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15170721 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110568097 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116024683 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152165005 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122588825 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123483553 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144027995 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12263071 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120359313 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150860937 seconds)
  done (took 4.156788745 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190761426 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127431211 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174571462 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160614494 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176466402 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114264141 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142892964 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147315048 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122430642 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116099785 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146055055 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159052157 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147278892 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117478223 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116976525 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147722981 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127352895 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120977406 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188839783 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12068417 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147722446 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128604712 seconds)
  done (took 4.156090549 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.11973706 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106978372 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101512071 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.136074484 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118285647 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108084563 seconds)
  done (took 1.712734812 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106573454 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100950152 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100758608 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125775553 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.104710242 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101101035 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09898773 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127591998 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101979225 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100826795 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126737191 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100895469 seconds)
  done (took 2.318545486 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.327186847 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.104355236 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132199364 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107654315 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.108955367 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.102986901 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144867276 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104676931 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267652489 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.1053249 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.143487425 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.190100066 seconds)
  done (took 2.858932011 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197177858 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143679246 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287792753 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337224714 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18295002 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180833839 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263425172 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185544114 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.172302166 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16109225 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20647044 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15661613 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149375517 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209391436 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16369984 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156596511 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192977571 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200347416 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165839096 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205408025 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177914513 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194074309 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18542527 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173518158 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135911501 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182221711 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117445841 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124347092 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187051373 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157932619 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193428488 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171839733 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138077544 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211795906 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24610623 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168520918 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282977127 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155423128 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166996616 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211936686 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254000522 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137641986 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211165587 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173455604 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126135686 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210168853 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148986129 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.204351805 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130995659 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167267818 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175076603 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199520256 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168887854 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159152419 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299478906 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130794088 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164089535 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164053943 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211079528 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196513714 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199140594 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118935906 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20126456 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212340781 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233686754 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.13744515 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184460443 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122619653 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185447713 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199882054 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201600451 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153556823 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.22316178 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154280783 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165413781 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194369754 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148763953 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227102287 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192335455 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117534062 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143895583 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157302897 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122544982 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.212796199 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120710396 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238402241 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129854398 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339331913 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204825793 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152475272 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181864497 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154309956 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18473197 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142867038 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126710278 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139292224 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156962453 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179129618 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122323704 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177472974 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13552041 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.149183107 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147570427 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119642331 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191260679 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.12992884 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184580216 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162122018 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155566893 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170730913 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171168519 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155583046 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189586803 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215917749 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126902851 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126271937 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238146606 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190653623 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132786052 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19788164 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191053835 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176466999 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129511881 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18547015 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214301942 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139541345 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220727498 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133322777 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156921017 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135696025 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191954456 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153575253 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.176417448 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125303806 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158332992 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214872293 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.149969971 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136605856 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201254313 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130474436 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122086923 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159597433 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133044004 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138129368 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.172142528 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13559482 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178092295 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161523065 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188837522 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149928872 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157020278 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164138153 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155279079 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163710007 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172841117 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117158733 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197026766 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192114826 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153575494 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175477693 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185230079 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207172305 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169262247 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154441441 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178564497 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150985742 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119142686 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157287722 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191133894 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182779522 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184179589 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205974681 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187358015 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157854084 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173226511 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160227122 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.209294021 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176744769 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141571586 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164088324 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191490278 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11767224 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148296257 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125337638 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132469999 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154099749 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133868236 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198251594 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157800013 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204494401 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18998475 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134036257 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214928158 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121844998 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183068232 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.168560696 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162503633 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184118647 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213696726 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199432523 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137657383 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184767212 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119234487 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122414067 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.156857007 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157505554 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159907014 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13339626 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135080846 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216239348 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193519669 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144852265 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214698789 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187564926 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197541444 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.144700183 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.158953954 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19293948 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162807959 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181042345 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154229399 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153489271 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215094586 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135112985 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215768091 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190169524 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173630279 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217404102 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.158658769 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156243893 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143070062 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185323713 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133100217 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187756813 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141929658 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153567408 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149166719 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134465226 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164312767 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204791964 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140989592 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199961421 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155660027 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19206706 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121994677 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163420754 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171393046 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167462664 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10451779 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162292222 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217330373 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171566859 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150858359 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195669761 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126351536 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.338422597 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181610901 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199569589 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131185902 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162221136 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167346594 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186606307 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155687711 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206533877 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135740882 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226962391 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191001025 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13911507 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125695716 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171018589 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146941962 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162679436 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1435139 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.185689653 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139778293 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205681466 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132327407 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194351315 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16926595 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17135444 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.15462117 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164058742 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248360131 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164972006 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196033758 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.159341838 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191407977 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178973949 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149251196 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124168357 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129362889 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209453864 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1255331 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199733911 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196989397 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20779951 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170502118 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186396807 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139230423 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123735601 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191968424 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143711357 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211489135 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158735758 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136218558 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212254567 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12509408 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127193425 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185471889 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295206545 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145198954 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195520144 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105019859 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264996183 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151432416 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127392233 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18770505 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16499046 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156885422 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178911081 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196819227 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136442834 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159302901 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159988671 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203536718 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18172061 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188765588 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192942304 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140941312 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182472481 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155915754 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19821906 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14133945 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.16991795 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156101124 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216417012 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177198419 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.155971995 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164545338 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192501971 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164709891 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194591163 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134062035 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208445424 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124428592 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18770429 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135601258 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121103196 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181935013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196479844 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127471953 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20154473 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165161871 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154661061 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127218135 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140720819 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189238581 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13511193 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.155688328 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179664128 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.154696334 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174727292 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228693864 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127855062 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191681628 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142461445 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15493669 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135827268 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138965598 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155985959 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172638237 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205473502 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129743372 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202880586 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159516628 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186885232 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15274905 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169612613 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.325332588 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.123768154 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217460238 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174348908 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190779345 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174899669 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169253012 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194136144 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144261988 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187527007 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142683437 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247054289 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159986001 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.190226891 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128304361 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167868742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134277378 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128773098 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176031125 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162623865 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167223407 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132164916 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.190498241 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140955517 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.169720063 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138587234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224285852 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147082791 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207216676 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181864453 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164796543 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168611188 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197225614 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125053866 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.187254211 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195890145 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141944621 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145099476 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.160395491 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134235393 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235562996 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123072333 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18452302 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16873816 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193657546 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166020516 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.157831405 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170849891 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166030291 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16977823 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151164918 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149884148 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193139125 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131604728 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123108158 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196861582 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15309491 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.189522388 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138299653 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.198888556 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192923142 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121135859 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158449375 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294155531 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15749679 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21981268 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134537293 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133273185 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170460402 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152250286 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.189887563 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16552159 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.15767552 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126885022 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.170063081 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155641659 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168216332 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164348637 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193703741 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155985112 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209245511 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13339017 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27924627 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13895708 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192528788 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115464439 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125332089 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163770642 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132086144 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136817861 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209072183 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235012958 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.157944969 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.171610538 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130931499 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.151819719 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128948005 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162161749 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175202328 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163115663 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171496365 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101480142 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134964684 seconds)
  done (took 84.104151145 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160038313 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150269808 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166135195 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220089631 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191566853 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285512047 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226213469 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244285578 seconds)
  done (took 2.751521065 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.116404588 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155186558 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137820037 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140460059 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.10732714 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.4399159 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.127261872 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.14275494 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158700401 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149213483 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132884822 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.619970136 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113980355 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.140293149 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.11897407 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132336915 seconds)
  done (took 4.030178584 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.533252254 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534782574 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.823260598 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.288959322 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247066435 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.196753046 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.740746608 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.183857803 seconds)
  done (took 12.65366591 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.142557199 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133392648 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.329871029 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.254847142 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.145953201 seconds)
  done (took 2.117558565 seconds)
done (took 128.817927239 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120290946 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.11983297 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120908951 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150850002 seconds)
  done (took 1.610635026 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173917555 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089299783 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092149226 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116391529 seconds)
  done (took 1.579891938 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40390842 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089596379 seconds)
  done (took 1.631659787 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144372464 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138099888 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.161882798 seconds)
  done (took 1.563890846 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138655249 seconds)
  done (took 1.246801607 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12824142 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118507294 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.233918311 seconds)
  done (took 1.595418537 seconds)
done (took 10.344911729 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117216503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.920895161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428969933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129860421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710614625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423379908 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.417673477 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170589831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171141084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134369205 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12837326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687447926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.430406836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873305276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.387884185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899552443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693939225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108467128 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141471324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110189913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.396295041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13511426 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109342154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108864502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716435419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.416513172 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106047003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912340694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107485761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.109865364 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424010086 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108579838 seconds)
  done (took 20.840550041 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116547182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162021908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143377065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10975007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111549169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136218626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120388353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119071078 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198492169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107045264 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.156436699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107790059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11297316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134923308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133452751 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107569895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136756406 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110563621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114457534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13592923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.129733547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106132616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135226281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111127208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10833378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.154166758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109085743 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120343223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.132739653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11223913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113252854 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107694541 seconds)
  done (took 5.138270202 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154712382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171528147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144655302 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145032421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182752146 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11101557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.218649123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145717579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199567272 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109152222 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128712232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135616934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148166489 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108092107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160985562 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108996328 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110391466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138781765 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116720786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10909091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157107714 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107100516 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108626594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137253935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107967331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129890236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136736983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12044219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106824428 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140804046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113911613 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108584593 seconds)
  done (took 5.449795782 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.121997386 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.1228033 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130508664 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.159583843 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117619182 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120940643 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15001283 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.117875142 seconds)
  done (took 2.169846853 seconds)
done (took 34.713199495 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133674396 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126296657 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127644307 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151989675 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.188853796 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146023086 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125138987 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115145726 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153465831 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.12970288 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.106908445 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115183231 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156621603 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119502751 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.219599667 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12331222 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223052467 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.18886971 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145180032 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122530857 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115444601 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.224316036 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120012305 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.144376978 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.192883734 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.109651741 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.210130067 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118113687 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148691237 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110250201 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.219851411 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.11984419 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115873722 seconds)
  done (took 5.983001759 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.205741671 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117433764 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147195668 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116011231 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117390018 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.144659317 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209441622 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145987097 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117225227 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115129108 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.11551202 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220909925 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122483402 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143721969 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119010819 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107135629 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238976431 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118800722 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107959751 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120424755 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115244187 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115194893 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.251844482 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111621059 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115796997 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149881615 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121106044 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121757532 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.147201857 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118935018 seconds)
  done (took 5.355005536 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.122473467 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129357477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134044183 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214476757 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145986333 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156512671 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136357841 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130559583 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166527714 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11084014 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125711514 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.174404192 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126853577 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120479551 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144292319 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128226496 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130778712 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139268272 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118932323 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126524749 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.159930214 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127203896 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132699653 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14750857 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109225137 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117993695 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.146739949 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125661696 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.117890483 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12360208 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141075975 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.113662734 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112648372 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.173279787 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111196654 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.12262123 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.16405033 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12243399 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.123222869 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.172870605 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114141947 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11047733 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.16530176 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16406344 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.111274781 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.152404323 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122499447 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12475782 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.138285634 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127431627 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151175705 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.139264321 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131316708 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.10873054 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138359769 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119078596 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110950097 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.143569818 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126211312 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.112457098 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.161454254 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118508864 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121780091 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.140539599 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123653012 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110473782 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109310243 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.14464495 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.1381267 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116729135 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175679163 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111699141 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122031752 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.151556575 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12313001 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121676446 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.138533523 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123497607 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122055402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116033547 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.154626314 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115034227 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.112815919 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.157031895 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131458455 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123561308 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151912161 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124151891 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.113749204 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.141954285 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128706684 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.110986889 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.144323586 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.123938274 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.109964659 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.142182765 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124847775 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121379811 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.108739584 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165609687 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115453458 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109561489 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.164708979 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114894387 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11573514 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.149967601 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.152949034 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11039362 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.15152879 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125264387 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110839428 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.147124037 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115302919 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110160308 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127395359 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.15629739 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.11837403 seconds)
  done (took 16.597053468 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.318624987 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.302419257 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.178632358 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.30670292 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154370977 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.205699021 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.301661611 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.303459072 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110004876 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17772192 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162119515 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.273443021 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142688069 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.138657035 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304299634 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.356055034 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171681217 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.146601989 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177678415 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124772431 seconds)
  done (took 5.507314781 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132873792 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145520575 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163598546 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139416884 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122997872 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.156593765 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111120269 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132422197 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152806547 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122062997 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114045698 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156122428 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124100767 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127152254 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155752335 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14410994 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.11723215 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146560453 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133843089 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11555393 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129332234 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137345565 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.11841582 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162648373 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130673268 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122311662 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139394185 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11697277 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118142254 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.147843926 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.11785594 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.128799525 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.146492016 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103892058 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.122573524 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126866656 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.148003697 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114324289 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117154057 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.142911152 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126426334 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123737472 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.147356416 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097473042 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129589065 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108049633 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.15656768 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125127976 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104452236 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129509507 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154141844 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126801583 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118411242 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.161576487 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118278072 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127786012 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151807576 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126201694 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116431445 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.138838651 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111582583 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115367076 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.119328053 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157173254 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.122735135 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.15837053 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129062519 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111667299 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.141881918 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11734725 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115363764 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125231844 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163102011 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.120984299 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118241054 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153113052 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120075905 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093234891 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.148539542 seconds)
  done (took 11.496523307 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138317624 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12160735 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12898279 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17563672 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125285861 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.11751054 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151708348 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.131198415 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12880434 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160511056 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126573016 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125493103 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164010966 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122594798 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12012587 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156896833 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126122291 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.148497152 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159497805 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139158859 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125985846 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.148323106 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125141924 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122493128 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170169008 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123366619 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137512552 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.156811879 seconds)
  done (took 5.02378859 seconds)
done (took 51.089952347 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.301477405 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.463161984 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.247426231 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.244753052 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.272913764 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.251283552 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.244889245 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.25610798 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.592745513 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.217106894 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.246162717 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.242322483 seconds)
done (took 28.727035029 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.318123803 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.750264153 seconds)
    (2/2) benchmarking "String"...
    done (took 1.531178758 seconds)
  done (took 4.418330459 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.233423022 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.234676307 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.493702666 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.232687497 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.249549194 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.234177464 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.246883717 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.238135159 seconds)
  done (took 16.067583855 seconds)
done (took 26.174271412 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.285625779 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.439433976 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.473000571 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.235144329 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.239277698 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.234059493 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.234934242 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.255100732 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.238715339 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.237020691 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.63252502 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.491467398 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.238874734 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.605225814 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.234003811 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.264367399 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.234977374 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.4684481 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.237469524 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.262875494 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.213856783 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.230524739 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.236802942 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.235574862 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.238191224 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.247150765 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.282046114 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.235427782 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.452887797 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.247354383 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.264907598 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.237600798 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.277220128 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.238777676 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.237430144 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.235942044 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.440329175 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.245336231 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.216689407 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.260541458 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.444655372 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.23571979 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.237170451 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.24423607 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.240832372 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.299662663 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.231540347 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.347369719 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.261112847 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.247068874 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.320680508 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.617758307 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.252861638 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.248318014 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.24589269 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.469491542 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.245270921 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.276302061 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.258713205 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.249120629 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.240634828 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.237356974 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.291321891 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.243565083 seconds)
  done (took 145.942090478 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.237480053 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.241005163 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.240770986 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.244106719 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.241192911 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.240751416 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.237945904 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.236376587 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.240835261 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.259935805 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.237683568 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.241502835 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.24180706 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.205260243 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.246621908 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.246045331 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.239160331 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.241982869 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.264963781 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.238188668 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.246241388 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.242618695 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.242566001 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.242687728 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.274549996 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.307513662 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.264383497 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.256361662 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.250397167 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.239062613 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.281588061 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.248000041 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.84782734 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.107523008 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.247111396 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.250474495 seconds)
  done (took 81.513040694 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.238864923 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.237866079 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.238457905 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.270446834 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.240737196 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792614925 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795584708 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.204239847 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.857184532 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.527547539 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.432661371 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.239038376 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328665187 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.253148861 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.239282309 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.25411316 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.269769356 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238675434 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.239925809 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786259842 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.256194807 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.427193994 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.408891507 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.254028392 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269465338 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.629188294 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.237917667 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.237711831 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270002816 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.563977756 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.285040859 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.237209205 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.523048973 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.534363224 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.237068834 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348638603 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239993822 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268920374 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.238126783 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.515549134 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.239098668 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.236305786 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.24061215 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.82274369 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.237639693 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.778631661 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.242981826 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.156001529 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.238027385 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238919193 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.175897365 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.800681188 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.23661798 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.23801483 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.23927375 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.237958617 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.238073737 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.26780265 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.160713485 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.33194013 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.237516253 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.241030783 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267122371 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.238873037 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.385048025 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.237303763 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.259039999 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.30073731 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.333660685 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.767518873 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.24212618 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330005692 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353368313 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.237644768 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.237843472 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239778001 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.237728474 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.345343766 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.237340674 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.892976909 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.406976388 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.253849769 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.454465836 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.333109846 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.237689979 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54139788 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.243157768 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.23743746 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902888168 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329972154 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.237179203 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.238265139 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.238245421 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.889514824 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767843755 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.460506683 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.241064333 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.238230562 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.770212908 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.242723109 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.067968521 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757487192 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.822671373 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.240033653 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.239473052 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34784383 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.40822571 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.255964829 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.239269271 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.45068018 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.238906327 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.29655608 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.241479145 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.638261014 seconds)
  done (took 377.302874098 seconds)
done (took 605.892555324 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.10587761 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.054112391 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.20215428 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.06292515 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.048799686 seconds)
  done (took 11.614429976 seconds)
done (took 12.753536322 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.42396813 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.423844842 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299222687 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.429591689 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27100724 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.441934364 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405538777 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.258917266 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.347030327 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.321141948 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.352277897 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.295394268 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.275200785 seconds)
  done (took 18.686259684 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520477122 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.251603844 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.307652132 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488492592 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.286718693 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510985936 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.549967789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.250414152 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398097824 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.286966394 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.260003504 seconds)
  done (took 18.254556703 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507447719 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.251399452 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308220421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496033464 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.28828409 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520290762 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.56196552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251709758 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407420374 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.29148024 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26387237 seconds)
  done (took 18.289379606 seconds)
done (took 56.368684718 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.279904193 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.335838547 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.278622379 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.261939488 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.257765961 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.25913347 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.26354181 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.25912095 seconds)
  done (took 11.337295516 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.257946673 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.256226879 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.255673761 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.256030128 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.258552564 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.255866335 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.256755922 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.256871098 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.257793207 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.257749302 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.256735457 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.256821845 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.258141384 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.256529445 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.255515402 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.257669699 seconds)
  done (took 21.254239357 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.258975381 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.25839137 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.258405144 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.258788637 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.258200505 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.258505968 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.259870412 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.257602782 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.258024539 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.257830245 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.258464197 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.258872019 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.258965901 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.25811252 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.258800783 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.260218103 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.256607322 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.257200296 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.262727989 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.259926573 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.258244178 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.257642114 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.259091053 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.258777414 seconds)
  done (took 31.351790828 seconds)
done (took 65.08310588 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.244041414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.248629096 seconds)
  done (took 5.636785824 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.316707792 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.315631832 seconds)
  done (took 3.776703192 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.260712144 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.258761611 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.260524274 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.260233938 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.259204136 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.258248179 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.260286615 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.259430095 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.260346024 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.258522492 seconds)
  done (took 13.739084684 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.259935335 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.258180373 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.259073134 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.260455806 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.25988823 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.261221257 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.258330441 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.259510392 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.260001888 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.260516515 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.260595785 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.258679874 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.259582493 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.25980026 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.259348595 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.260200635 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.258415569 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.258982025 seconds)
  done (took 23.816914817 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.274442567 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.278972017 seconds)
  done (took 3.696203253 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.388170629 seconds)
    (2/7) benchmarking "second"...
    done (took 1.301182938 seconds)
    (3/7) benchmarking "month"...
    done (took 1.36349106 seconds)
    (4/7) benchmarking "year"...
    done (took 1.355991494 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.301845362 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.28085327 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.301895914 seconds)
  done (took 10.437692341 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.261554403 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.461188641 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.586909086 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.872299374 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.261733209 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.262593341 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.182486483 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.265362036 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.264626514 seconds)
  done (took 14.563189049 seconds)
done (took 76.806845361 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.244843524 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.265486185 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.265598396 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.26564398 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.620599769 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.286265376 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.248327058 seconds)
done (took 16.339112727 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.223083188 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.230056793 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.240761395 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.258568077 seconds)
  done (took 10.096595814 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.215066412 seconds)
    (2/2) benchmarking "read"...
    done (took 1.569369483 seconds)
  done (took 4.928817381 seconds)
done (took 16.167456263 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261314359 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.261253128 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.260293736 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.258749248 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.259098512 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.259303074 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.259062496 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.259961935 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.260094368 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.259392938 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.259875401 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.259521769 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258768574 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2610409 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258599344 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259025927 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.259208727 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259028319 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.259994436 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25958006 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258984255 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.25858092 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.258980157 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.259575782 seconds)
  done (took 31.372946969 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.260711887 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.25945635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.258252801 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.260392376 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.259358754 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.259980871 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.25814393 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.258859967 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.259634098 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.260756609 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259795982 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.260108422 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.259173069 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.259668893 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260361396 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.257980559 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.260064057 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259039808 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258924091 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.258657282 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.260007244 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259167896 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.25913174 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26079241 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.260276594 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259408098 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.258051129 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.25904813 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258291287 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.260800732 seconds)
  done (took 38.927817773 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.26235473 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.261041536 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.260971053 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.259529091 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.260306607 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.260655558 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.259459303 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.261147394 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.261778594 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.259590817 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.263428322 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.262152344 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.260259357 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.261151443 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.262117802 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.259947688 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.261239631 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.26097235 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.260219058 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.259984592 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.259613838 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.260383655 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.259731756 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.260094833 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.259647745 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.262123205 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.258673692 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25965543 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.259452042 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.260626041 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.25969972 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.25847502 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.259443775 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.261480626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.260499453 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.260037609 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.261909653 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.260978465 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.26161615 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.261478034 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.261490756 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.262092951 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.260046566 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.259244382 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.261441678 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.259429699 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.258954607 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.261280032 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.259297615 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.261973756 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.260212425 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.259518239 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.260477643 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.260025264 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.259202427 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.259153025 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.260683259 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.262802646 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.260621409 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.260276679 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.261899112 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.26169751 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.262150433 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.261178125 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.26250742 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.261635464 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.261258121 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.262268289 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.261029111 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.260538374 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.260292509 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.261806475 seconds)
  done (took 91.917556117 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.262271414 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261301756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260599172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.261009878 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261392461 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261431158 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.261743327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261153666 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261797829 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.262376774 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262534165 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261156298 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263404153 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262436125 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260417721 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261884793 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264038787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261287546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.262791334 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263289949 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262817408 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262505988 seconds)
  done (took 28.909739202 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263023169 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.266115438 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.261632165 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262950389 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264068202 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.263675779 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.262327986 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263680593 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262908721 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263118108 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262775636 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262753049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265402839 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262202298 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262001107 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26441719 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264596334 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267908086 seconds)
  done (took 23.892942385 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.263476596 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.263397051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.264064689 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.263527247 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.263336103 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.262026229 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26562078 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.264018481 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.263533983 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.264396613 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.263891524 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262861731 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.263307947 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261121203 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263550131 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.263117106 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.264537153 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263255987 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262828993 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263157179 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264647098 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265164159 seconds)
  done (took 28.946564559 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262818796 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263965053 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.263027264 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.263898037 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.26466289 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.26289776 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.26440364 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.265768291 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.264240673 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.263444976 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262684844 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.264432283 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.266842995 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263945635 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.265646225 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263478206 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266382508 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.264544969 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263397715 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.264630671 seconds)
  done (took 26.434568678 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265881276 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265521545 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266856048 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264642545 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265286414 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.266244339 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264586256 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265738947 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266061711 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267306986 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265615406 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265920079 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265698606 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267092449 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264645237 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266983887 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266762039 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266936392 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267042939 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267290332 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266853135 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265640978 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267240577 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269473116 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265335808 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26616611 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26777817 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265513619 seconds)
  done (took 36.604816925 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265631859 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265059218 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.267543614 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.264614034 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.267682887 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.265984575 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.265925733 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.265539259 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267494569 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.266415952 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.26758643 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.265280849 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267174016 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.266145264 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266888116 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.266287586 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268444888 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.268120797 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266450837 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266130003 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.268536755 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267244791 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.267690896 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.266903789 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266560069 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.267142692 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26888505 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267158716 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268004668 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267379795 seconds)
  done (took 39.156285374 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.283958401 seconds)
    (2/2) benchmarking "in"...
    done (took 1.28774998 seconds)
  done (took 3.72236487 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.270125333 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268911743 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.268828899 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.268516309 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.268323901 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.268062214 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267460139 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267774232 seconds)
  done (took 11.297882649 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.261428063 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.270342581 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.269206419 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.268933108 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.270286886 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.263521462 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268246384 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.273844999 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.263660676 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.263136565 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263199139 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.262900144 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.264801104 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264357 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.263519235 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266148073 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.272313282 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.272247552 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.269442412 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.271634438 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270152513 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264670276 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268927377 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.273642219 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.262570969 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.271883461 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.271712757 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.275287171 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2635359 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.269717513 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.264639066 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.272352975 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.273564993 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.270879675 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.270128213 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.27186669 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272208356 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271021337 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.271834749 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275379611 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271499663 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.270525599 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.265683499 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.268475929 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270213395 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.275516797 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.272077526 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.270776101 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.264886284 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.266274996 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.275106812 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263433163 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.274078384 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268955096 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.270882621 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275127092 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279846205 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.266980282 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.265076686 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.27393408 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.280320347 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.274624334 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270867693 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.277168184 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269335098 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.272492983 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275940726 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.279831877 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.274600496 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.271483286 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.273374277 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282018597 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278910638 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.279564898 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273371426 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.272917123 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267177961 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279100733 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276596081 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277728256 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.282017195 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27393861 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272206161 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272142569 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.270074372 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.278281607 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.274470615 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.274213449 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.265351136 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275651697 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.282805616 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.27512535 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.268217635 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.269599144 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.272762587 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.277836664 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.267184 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26951571 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.278116412 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.276167713 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275393096 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268309045 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.274000483 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278723166 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27616551 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.275814259 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.282049768 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270056864 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.27841927 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.283423565 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275223404 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.269236181 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.273297422 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.27794742 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269361129 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.273202087 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.27933068 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.273454817 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.281387222 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.276504023 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274506919 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280691833 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.281982351 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.277290612 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.270441728 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.280601417 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275206126 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.274050219 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.28266546 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.276132419 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.277576906 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.273995758 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.282248756 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.271015274 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281806689 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271855591 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.278783155 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.27701556 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.278941844 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.274103356 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.27798383 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.275074053 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.276316883 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.279793566 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.28285238 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.275179135 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.282741839 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.27592648 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.276140271 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.279043028 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.282760807 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277842116 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.270659282 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.281038453 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.270191163 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.279153742 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.271365483 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.281315484 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278372036 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.278346024 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277721323 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.270275251 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274572847 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.282172654 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.27787415 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.277274704 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.282354654 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.278720067 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.278714708 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.27246913 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.281342572 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.269808901 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.275154542 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.28112386 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.278838481 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.278697238 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.276756156 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285766457 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278768086 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278196623 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.272704142 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.277813484 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.284995946 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.282705154 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.287814997 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279469006 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.280089521 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.274711088 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.275385157 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283289552 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.273862079 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.283048224 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286098196 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287634747 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.275306213 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.283285726 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.271507028 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.282471718 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.280618661 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.289373096 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.281095173 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281173519 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273721472 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284846423 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.275393859 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.283560155 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.273205514 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.283335978 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.281665237 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.281245091 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281937162 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.276320819 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279090378 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.285638405 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281078314 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281404114 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.27612995 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.284417033 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.272997102 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.276741788 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.284288776 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.281736586 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.283835026 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.289670297 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281189714 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285746555 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.283108783 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.276980272 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.284310794 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280694992 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.282790759 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285558248 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.284338492 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.27817133 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288398174 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.287741228 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.277204745 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.284604239 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.292063188 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.282775173 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.275908389 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.285762078 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.283464972 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.283976011 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.281917492 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276464289 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287037012 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.286645016 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.292924392 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.276653761 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.286981766 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.279057671 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.286842313 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.280559765 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.284083427 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.284079445 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288116676 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29187352 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.284415864 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278906563 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.287145583 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.284455509 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.284912077 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27678966 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.286313661 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.284483851 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.28513737 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.282268983 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.281228433 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.287393788 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.277688633 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.28627412 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.278464845 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293382771 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.300340372 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28874165 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.289242126 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.28762028 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287504123 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.288648073 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.28000746 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280927082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282423088 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.283226912 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.279907922 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.288636866 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279811904 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.290228789 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283692328 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.287787416 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.289370725 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.286755293 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.279604318 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.290556099 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.288487679 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.287380601 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.279995625 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.288359733 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.282323209 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288523086 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.288159503 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.283624133 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292396779 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291773315 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.286370709 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.284154242 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.283434403 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.280799634 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.285397541 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.293843997 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.280544793 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.291020945 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.281294229 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.285614986 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.283852485 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293473215 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.298066677 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.28168606 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.292792848 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.288954104 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.280817055 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.283940069 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.290600879 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292619115 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.299682584 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.283098054 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.290437065 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291093529 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.28994219 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.290074925 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.288918694 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288629327 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.288726332 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294037762 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.294201199 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.284447789 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29168606 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.298712617 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.288976787 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.289540026 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.282490088 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292392609 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.298884535 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.285255994 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.288393128 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.285514344 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.290881693 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.289752779 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.290097546 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.290971658 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.290208815 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292984206 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.295498577 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292498924 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.29084504 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.29531858 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.301656548 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292846105 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.303773279 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.28553786 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.296736857 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.290070782 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.284903836 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.286711081 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.28778822 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.294932777 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.283645967 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.293226908 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.290789344 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.285297478 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.290267302 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.296506977 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.282122694 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287693111 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297248704 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.281264721 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288960272 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.279951563 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.271409902 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.281995548 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.28209163 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.272980795 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.274750857 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276070006 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280121717 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26631811 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.275446041 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264201462 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274773958 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27279089 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.274102178 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.271791859 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.270656963 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258885574 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.268410139 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26501258 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.276220435 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260848728 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263933875 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262958994 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.267717553 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.273500721 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.258117988 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267901711 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.26341562 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.255842746 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.261395961 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.270921063 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25169997 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260423745 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25034122 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252188125 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.252077855 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.25917035 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260519616 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.262832913 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.247174498 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250331427 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257584014 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.255885881 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256078158 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.24989003 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261251013 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247851508 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.244906251 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.252639618 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.247685087 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257738508 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246359722 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.248427419 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248897243 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.255841437 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248466921 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250484653 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241900837 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.245696061 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255709288 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254986259 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.24722588 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.245582862 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.253304653 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.244754355 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246199003 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247955882 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.246135877 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.246884566 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254158784 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.24747806 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.247004386 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.245199645 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253245498 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.254924413 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.256047567 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.245553482 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257992303 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26010965 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254982781 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.241457507 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.244562021 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.244012196 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250055312 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.248207455 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.242236397 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257636681 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.251306658 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248354439 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243196308 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.245709698 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.239027874 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247863414 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246038367 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.24162498 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247014949 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.236701983 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247156845 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240806353 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.241008829 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.232558088 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23537985 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.237307997 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.236469269 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.243161735 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240976468 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.244627825 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.239291372 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247237233 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241581533 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.241483843 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.241593666 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.234619018 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244910303 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.234838612 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.242506315 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.244070071 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.235790451 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.244816346 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243654818 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236259281 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.238635362 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.246563223 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.242532978 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.235368675 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.240384087 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246989215 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250620118 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.241335268 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234071479 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.23736976 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24437295 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23970293 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.239665387 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.233710806 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250130065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.248836525 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232108799 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.23395422 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240585505 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.248065919 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.236717632 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.237627793 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.234325536 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.232419677 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.240141534 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.235306897 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238643764 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240196847 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.231225019 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.237993925 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.229752208 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.22877189 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.234271695 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243660717 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.234759081 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.228401341 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.240565601 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24497965 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231604263 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244671894 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.239375701 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.234440712 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.239169786 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225985936 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.23574991 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.229835283 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.240038553 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.235516895 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233348273 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.233955558 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.227632732 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236262307 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.241745723 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.243226525 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.236250677 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.22707729 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.231082594 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.236504492 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.23601844 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.23802446 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.234681374 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.236144745 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.23652462 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.23011592 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24559914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.248973509 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.240973792 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.235914366 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.237403098 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.236066368 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.240513366 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233246228 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.238221584 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.237586558 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.238596525 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.233711454 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245917782 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.238275845 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.230259349 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.234316094 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23229628 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.239748032 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.243853597 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253729586 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.240021073 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.239317383 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240882353 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.236838403 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231453934 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241332701 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238150127 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.232302246 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.234514266 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239054049 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.239837288 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.237789052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.232149185 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.241222702 seconds)
  done (took 756.693758431 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239207945 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238164005 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237761716 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237408707 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239990062 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238421009 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237426332 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238204322 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.239114528 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238633892 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.237904634 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238543289 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239029369 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240467961 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238270211 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240101429 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238596651 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238930028 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239301423 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238575957 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23861044 seconds)
  done (took 27.138751037 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.239741659 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.2379135 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239097437 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240513137 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239519024 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238250083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239533362 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239854843 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238346853 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23889932 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23952882 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239415074 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.239485795 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.239218285 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240409254 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2400565 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.239767865 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239616628 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.240742804 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240514667 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240744519 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.241335927 seconds)
  done (took 28.399810879 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.241079491 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.240570262 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.233551063 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.243899846 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.240136318 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.241656253 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.24283031 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.239374232 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.241558489 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.234631924 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.235659614 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.234952897 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.235835345 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.244640366 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.237177386 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.245539064 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.24119153 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.240628866 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.241931493 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.242240979 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.244584387 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.253212941 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.243435995 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.234423931 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.243353719 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.242318931 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.242530103 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.240987707 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.235201998 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.243891106 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.242289384 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.236911106 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.243826989 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.243640751 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.235821113 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.24356322 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.241739716 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.240713614 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.241082948 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.241522208 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.245970052 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.238031665 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.241302373 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.250255751 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.238131525 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.230739654 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.241580499 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.239456239 seconds)
  done (took 60.689949879 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.236694372 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.236007221 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.235333067 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.235030645 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.23481297 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.234754157 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.23574421 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.235319749 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.232879904 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.233309493 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.234340183 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.233889538 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.233947837 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.23355199 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.235376182 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.235350245 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.233355034 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.233681487 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.233660943 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.234473231 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.233640423 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.234310987 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.236268744 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.235550526 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.235645204 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.233838882 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.235406745 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.235413086 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.234943259 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.235271912 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.234601578 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.235313615 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.235389677 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.235460724 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.23724312 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.235113448 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.234490393 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.234213969 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.235491755 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.236509582 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.235669554 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.234306091 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.236610717 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.234822095 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.234225692 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.235798312 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.235792672 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.23654944 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.236812186 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.236155432 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.236788636 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.235440352 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.236640513 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.23757645 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.234970868 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.238796531 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.236552782 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.236976088 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.235993834 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.236194523 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.236206544 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.236306766 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.237151802 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.236920381 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.237460158 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.236266292 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.237371618 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.237360888 seconds)
  done (took 85.140995087 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237444162 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.23561024 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238463436 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238665699 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238129036 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.237749679 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237751876 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.238196016 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.238911608 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238172067 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239381901 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.238059029 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.236965021 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.237416385 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.237582532 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238211809 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.237860237 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238379598 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237958399 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239605475 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.23795256 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.238630122 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239853843 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.239279173 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239831715 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.238000587 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240137004 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.239056396 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239794414 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.238567584 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23881524 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.240087752 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.238760659 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.240303925 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.240037759 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.240732232 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239590891 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239846558 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.238914338 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.239443597 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.239686148 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239690058 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239418787 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.240208181 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239171076 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.241471564 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.240159274 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.240521029 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.240451753 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239542393 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.24117686 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241537559 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240931173 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240443029 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.241305253 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.240044482 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240818328 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242107849 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241479478 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.241173535 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241057809 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.241870742 seconds)
  done (took 77.969030066 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242027305 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240033612 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.240977509 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.241348414 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241058227 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242258461 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240237535 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.24271204 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241570776 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.242509394 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242946744 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241269086 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242372899 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243983622 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240924348 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242298488 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240488164 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242597305 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242802356 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243127521 seconds)
  done (took 25.965683756 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.242196882 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.242130417 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.24254904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.242201238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.242140093 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.24151178 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.242135755 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242409092 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242243868 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242853151 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.24338881 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.243899948 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243053578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242352188 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.24302607 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.243318672 seconds)
  done (took 21.00978828 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.243381783 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.241786705 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.242826402 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.24393219 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.243368059 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.242899274 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.243407009 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.242987597 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.242538389 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.243593416 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.243579719 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.243477473 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.244253422 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.243387028 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.244398434 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.244197229 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.243158555 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.243641757 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.245005583 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.244667367 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.245153232 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.243641033 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.245487212 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.24455478 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.245534557 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.246167567 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.244769746 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.24647823 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.244638554 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.244542122 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.24541015 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.245049621 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.244411436 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.24465567 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.246053428 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.244218064 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.245454479 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.246463178 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.245729028 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.245549604 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.246074954 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.244931222 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.246058862 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.246544967 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.246140719 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.246277875 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.246144565 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.246313871 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.245998824 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.245461446 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.246923937 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.24769093 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.246747502 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.246097736 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.247387732 seconds)
  done (took 69.600366611 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247950744 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.247502472 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.246528162 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.246506683 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.247821006 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.2475393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246459647 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.249448107 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247487728 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246970838 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246319422 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.248469679 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245668408 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247664097 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247287703 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248134793 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247740604 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.249450535 seconds)
  done (took 23.587255962 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.248918282 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.247784935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.248168519 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.247736431 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.248058799 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250199723 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249661382 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.248235858 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247699752 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.24726395 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248094629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.248144342 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250329848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.249338372 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.24923776 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248859424 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.24986151 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247689177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.249253214 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247766871 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.249528323 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248647785 seconds)
  done (took 28.605247651 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.238713002 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.239910375 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.239348021 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.253027925 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.248250424 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.239473305 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.239401566 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.239746727 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.256685956 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.264573353 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.259749268 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.247681145 seconds)
  done (took 16.10056243 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251634018 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250241433 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25063481 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250621611 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249961847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25161763 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251022134 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251632262 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25082087 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250336409 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249978924 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251444021 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250469213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250231505 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251043518 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251813524 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251739254 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25198408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249948038 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250203364 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251153544 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252439328 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251928484 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250163717 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25090571 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252043532 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251072186 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252487211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251293526 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251433881 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252057613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25252661 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251753365 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252333354 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252016559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251103946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252332011 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252151307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252554456 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253062023 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.253137113 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252690519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252421059 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252683865 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253648036 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253413579 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252571809 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253165709 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252819435 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253133831 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253291288 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253250014 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25460986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253509623 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254248243 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25352486 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255059185 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252472916 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252022444 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253033782 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253259293 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253392211 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255306447 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253902402 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255554955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253939775 seconds)
  done (took 83.781891079 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255138364 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253979291 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254448932 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253439592 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25391381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256789652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254889039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255849763 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25529445 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255088135 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255728356 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25493924 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254766611 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25526045 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255638542 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255275274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255940939 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255231509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254873673 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255590866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256095268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255872226 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253340432 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256649489 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25561893 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255839502 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25524093 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257392891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256221448 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256969813 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255935779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25664023 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255553566 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255862813 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256024175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255520729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256578612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255387698 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256701601 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255313579 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255649657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256568569 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255651957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257834243 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257539608 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256483263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255961076 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256972072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256422948 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25605255 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257146834 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257429132 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257688137 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257033119 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258579656 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25803025 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257193214 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25925883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256889673 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256920052 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257425229 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258154184 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258662791 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258210952 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256787487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257334148 seconds)
  done (took 84.049564801 seconds)
done (took 1751.057877342 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.416747915 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.367339685 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.248130709 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.260374638 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.248914626 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.250051632 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.261427604 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.249778217 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.248840445 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.248588266 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.249215862 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.438406537 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.283748554 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.250407028 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.248720251 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.346246147 seconds)
  done (took 25.760197551 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.27252071 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.265188395 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.369167004 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.263120693 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.28604192 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.442456276 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.31826937 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.264449055 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.420910491 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.281577344 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.257569912 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.284396629 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.263234877 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.261306821 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.28156063 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.44079206 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.510623945 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.262657216 seconds)
  done (took 27.889877596 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.673089631 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.260194984 seconds)
  done (took 5.085513302 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.282340006 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.263879998 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.265968508 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.262800596 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.25974116 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.255976994 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.264305744 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.264816242 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.260626726 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.380331062 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.265925393 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.277977453 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.262871672 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.264124431 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.272160852 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.309909381 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.414696114 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.273412781 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.272301507 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.270339234 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.264091495 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.352637567 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.303989566 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.273069558 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.380402761 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.259498306 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.27174925 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.272158705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.383779321 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.275022033 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.263838749 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.264330989 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.266337285 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.191694112 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.797105913 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.263084 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.288591414 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.274420204 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.273228798 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.395449065 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.267042083 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.273172058 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.259801408 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.780922322 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.373875851 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.378500539 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.264363945 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.267791269 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.268511723 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.330155204 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.270917326 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.268457933 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324150213 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.061592083 seconds)
  done (took 81.502766697 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.315517039 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.259823818 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442725078 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.283939541 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269533666 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.26551635 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.26581245 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.523945332 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.2868435 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.261190014 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.564446832 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.878751541 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.276300575 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.327545216 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.29723567 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.323262161 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.261865124 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.293111634 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.263347162 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.266185632 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823161417 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.263427473 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.261465926 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.350571608 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.300302307 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777706643 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.261766985 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.267649525 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.267199537 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.26691615 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832340392 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.270865506 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.313861514 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.265348734 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.544036029 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.63557291 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.591671199 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.267204208 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.306057366 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.266130751 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.293371585 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773960751 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.621252446 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.268529319 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.262809121 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77569893 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.267764168 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.263719664 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.274721077 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534130464 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.262401184 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.26461744 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.263211218 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.264949031 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.262254788 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.334843222 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.351371519 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780826082 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.263262213 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.26334123 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.27389344 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.267789067 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.266749493 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.270283312 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.266389022 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.622423851 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.523990018 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.272556519 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.623089935 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829111104 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.26972773 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918956432 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.268782911 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.283341102 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.311751753 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.265228948 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.265378236 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783927659 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.296015157 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.264445416 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.599548412 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.272907763 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.5635585 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.286203875 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265676008 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851602135 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.27540534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.314245477 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.266679321 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.266305878 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.28018738 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.268503737 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.548598046 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.316387074 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.266925607 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.266186664 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.312239326 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.266659106 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.282165153 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.265507909 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906396149 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.277293434 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.266129472 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286818642 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265887205 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.26879682 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.270365208 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.267042543 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.55685179 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.265909581 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.272122865 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.270196281 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.267183303 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.280789218 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35967463 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.269894605 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.563309598 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.271337854 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267560071 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.27436822 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.272402307 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.286134982 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269077876 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.288510443 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.267687226 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.567005059 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.285059955 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.282505161 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271017317 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.26948722 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.267975934 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.270455073 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.323006579 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.269184614 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122878592 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.278295974 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.282654043 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.269520971 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.278472146 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.269767594 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.292902387 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268380682 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565180603 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.548762902 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.517716408 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.282049661 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.269540489 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.111083841 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.277497171 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452355771 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.287962503 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.270035346 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548441556 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.497571078 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.271862652 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.269274988 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.273881088 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547895139 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.269125007 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595031648 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.869139378 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.275015334 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.271275636 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.124779318 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.078737226 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.270225315 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.27427426 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.558465183 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.286540445 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.27326643 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.27095605 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.271538782 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.270338007 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.275214421 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.270865612 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.27046709 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.270792387 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.569146927 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464238213 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.286256985 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.281426116 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787334042 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.293395709 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.271964392 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.27936625 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.273908207 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.271389581 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.355055647 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.274443339 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.273258723 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.272991255 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.274712836 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.813248949 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.271712887 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.294214055 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464205375 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039782453 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.272387285 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.271224115 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.272475122 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.327875641 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.821247796 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.312306132 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.564318252 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.284241139 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.312464827 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.272794467 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.282054653 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820444372 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.272681231 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.287580894 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.003757781 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.272463903 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.754399224 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.273925742 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.273643307 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930392439 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.274029736 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.273738996 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.272622989 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.274211312 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610482906 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.273754147 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.290429828 seconds)
  done (took 484.332314227 seconds)
done (took 625.712507666 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.275490735 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.274153077 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.257209413 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.281228178 seconds)
  done (took 10.256715127 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.294835296 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.282683706 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.294117922 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.283306744 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.291220072 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.282971858 seconds)
  done (took 8.90035276 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.276715754 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.277924467 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.282294726 seconds)
  done (took 8.007626739 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.499913525 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.301026524 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.631569598 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.293797255 seconds)
  done (took 8.89856883 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.294773218 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.292976224 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.292704437 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.293234 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.294426787 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.296095811 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.294092962 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.293881979 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.296055782 seconds)
  done (took 12.818216802 seconds)
done (took 50.049991551 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.3542198 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.27003388 seconds)
    (3/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.30824078 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.471839685 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.431361313 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.350490105 seconds)
    (7/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.291491492 seconds)
    (8/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.461858529 seconds)
    (9/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.070485657 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.316569015 seconds)
    (11/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.966847782 seconds)
    (12/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.339454673 seconds)
    (13/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.346398821 seconds)
    (14/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.35465947 seconds)
    (15/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.524102725 seconds)
    (16/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.398992381 seconds)
    (17/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.399084123 seconds)
    (18/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.259201808 seconds)
    (19/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.438194545 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.432319361 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.383690628 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.364886384 seconds)
    (23/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.443138844 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.40545923 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.394781271 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.427108185 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.359708834 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.131544457 seconds)
    (29/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.283955975 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.423330286 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.366269788 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.53313957 seconds)
    (33/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.263717538 seconds)
    (34/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.009554974 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.282201132 seconds)
    (36/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.322472586 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.396992942 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.352095863 seconds)
    (39/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.352423647 seconds)
    (40/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.269314411 seconds)
    (41/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.489487524 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.307037709 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.287793446 seconds)
    (44/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.362739914 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.459716343 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.281409836 seconds)
    (47/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.132364498 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.115130286 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.408186315 seconds)
    (50/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.316895545 seconds)
    (51/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.260115657 seconds)
    (52/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.397634301 seconds)
    (53/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.260096187 seconds)
    (54/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.237602458 seconds)
    (55/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.319217699 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.262341481 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.263263296 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.385011058 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.395792345 seconds)
    (60/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.313012038 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.35925407 seconds)
    (62/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.489704211 seconds)
    (63/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.018094963 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.374507187 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.383808245 seconds)
    (66/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.492822585 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.505877744 seconds)
    (68/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.432135711 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.262730939 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.371664939 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.395415824 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.283796593 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.282208435 seconds)
    (74/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.322473182 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.369738292 seconds)
    (76/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.46030418 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.391563887 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.413076329 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.368872383 seconds)
    (80/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.262948804 seconds)
    (81/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.327970145 seconds)
    (82/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.301761948 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.35478936 seconds)
    (84/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.267598728 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.401750682 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.317427913 seconds)
    (87/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.263622008 seconds)
    (88/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.34627736 seconds)
    (89/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.390201634 seconds)
    (90/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.4503538 seconds)
    (91/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.465395747 seconds)
    (92/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.62616165 seconds)
    (93/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.409773257 seconds)
    (94/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.360112084 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.986869949 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.995329112 seconds)
    (97/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.263371833 seconds)
    (98/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.27075726 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.535362651 seconds)
    (100/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.283518265 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.388786363 seconds)
    (102/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.315081153 seconds)
    (103/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.293820077 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.412887349 seconds)
    (105/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.520942802 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.524670628 seconds)
    (107/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.088922935 seconds)
    (108/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.2667263 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.40144155 seconds)
    (110/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.460713344 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.302571792 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.312777798 seconds)
    (113/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.104476466 seconds)
    (114/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.430782298 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.292838976 seconds)
    (116/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.324494352 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.428641599 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.326610515 seconds)
    (119/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.321002515 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.133134765 seconds)
    (121/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.496279148 seconds)
    (122/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.265253254 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.266254993 seconds)
    (124/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.254915457 seconds)
    (125/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.139938453 seconds)
    (126/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.421250644 seconds)
    (127/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.319322595 seconds)
    (128/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.265756436 seconds)
    (129/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.280295064 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.266638644 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.299881995 seconds)
    (132/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.362785544 seconds)
    (133/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.383855586 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.320831291 seconds)
    (135/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.364056254 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.415215442 seconds)
    (137/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.357873405 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.377059871 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.134923023 seconds)
    (140/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.266625439 seconds)
    (141/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.431008588 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.436117663 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.354102942 seconds)
    (144/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.551286493 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.468259716 seconds)
    (146/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.269865308 seconds)
    (147/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.19478833 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.266888987 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.407719815 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.09127944 seconds)
    (151/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.108641115 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.271672194 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.31278348 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.267925966 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.267813202 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.428247885 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.530692673 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.348859704 seconds)
    (159/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.405205583 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.274227894 seconds)
    (161/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.546797684 seconds)
    (162/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.976963999 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.395205067 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.330544349 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.401471674 seconds)
    (166/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.316440588 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.398594284 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.049753836 seconds)
    (169/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.305473044 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.310204833 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.454578247 seconds)
    (172/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.329656651 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.442508355 seconds)
    (174/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.36430066 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.47856285 seconds)
    (176/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.26847611 seconds)
    (177/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.350158322 seconds)
    (178/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.326794988 seconds)
    (179/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.066630955 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.488988815 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.276899941 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.407271972 seconds)
    (183/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.32211003 seconds)
    (184/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.38568188 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.384561575 seconds)
    (186/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.269453835 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.332936676 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.435739464 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.168009599 seconds)
    (190/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.269379091 seconds)
    (191/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.051064663 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.389155463 seconds)
  done (took 330.742772822 seconds)
done (took 331.914982847 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319657205 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.38557077 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.298943619 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.299187449 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.301293572 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.301617598 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.322286648 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.300909877 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.313251377 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.314967345 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.301898369 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.308831292 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.315417878 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.309882437 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.332803037 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.300443149 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.298503416 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.310968302 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.314560657 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.316796151 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301627954 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301031134 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.328304822 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.299970594 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307583396 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308054423 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.305888956 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.302023153 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.314016871 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.314728829 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.291753561 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.312512006 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.317213558 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.313840533 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301397191 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.311921231 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30317624 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.386312714 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.32278743 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.311676442 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.309749787 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.31719212 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.306223658 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.306455039 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.312462849 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.327955116 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309931915 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.315745207 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.294192506 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.302655586 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323612859 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.314671804 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.309345202 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.295186802 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.294125898 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.322946017 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.31258839 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321650927 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.310457833 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304191549 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.336649747 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.324350779 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.314947099 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310812309 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.309990595 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.316895051 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.313367288 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.319745528 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.310598346 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30477457 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304237722 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.311900655 seconds)
done (took 103.699265884 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.426774119 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.303027379 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.459247057 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.312614753 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.467294465 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.424663054 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.310774594 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.311809976 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.310643694 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.104114404 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.311582756 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.312636592 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.302679762 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.312375641 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.424698411 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.311707532 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.310734751 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.002947949 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.31256852 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.441496024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.304164604 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.313439158 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.312114016 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.109596025 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.301658526 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.299642969 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.440869497 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.312748798 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.008539464 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.297504711 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.30121575 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.009994175 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441642048 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.332960974 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.32336407 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.323186967 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.471400216 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.316684587 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.430774471 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.430343251 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.461464266 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.351569428 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.297768608 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.303225761 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.315718 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.315290223 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.313419872 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.343688141 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.305240034 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.314502533 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.006598123 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.325068648 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.323236365 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.314898843 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.314585622 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.334849379 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.31557022 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.315880524 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.442657698 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.315823409 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.430576476 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.111206583 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.106825261 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.316373284 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.303566065 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.316896164 seconds)
  done (took 106.663552808 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.376403312 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.38227425 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.416962641 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.308227035 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.35688184 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.41928932 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.307671971 seconds)
  done (took 10.75995601 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.315130264 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.317450319 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35531421 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355133185 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.316869665 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.479372493 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.316219297 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.319675129 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.316796098 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.359408683 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.319587375 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.317694421 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.32615384 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.307467646 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354318558 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.318966941 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.428028279 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.309550586 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.31685132 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.459994045 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.316073935 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.326075521 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.358441901 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.319469553 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.321595529 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.315335191 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.094044045 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.31864489 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318713313 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.317615283 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.318240838 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.381921528 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.317622527 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.308533871 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.317562391 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422232014 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.319028206 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.31815972 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.320506487 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.311986787 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.319144731 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.319012719 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.318526576 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.318930287 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.319380394 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.333828308 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.318853477 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.319375697 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.31886293 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.319815091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.360118419 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319577788 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.317760993 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.318617794 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.364786419 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.329197298 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.319987749 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.319119987 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.320155654 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.319924354 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.462883312 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356523925 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.320908377 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35769705 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.318562021 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.320076459 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.320372585 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.319661329 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399200086 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.319873086 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358754469 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.318946076 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.490679423 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.334021399 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.321172963 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.315372924 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.31461229 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321410326 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.3089176 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.320035137 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.32070599 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.314041775 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.318009039 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.321354278 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32025689 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.469625887 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418335011 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.319861938 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.327774843 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.319830624 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.321368326 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.36310122 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.321634285 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.322382232 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362621622 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.430206498 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.364560128 seconds)
  done (took 135.778572928 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.325111241 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.326078214 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.317355407 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.341473048 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.316125066 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.312960717 seconds)
  done (took 9.137266259 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.317258623 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.325175941 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.322658266 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.321338323 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.323004033 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.325361056 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.323787717 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316476787 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.326498916 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.322949699 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.325533096 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.326839156 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.323324429 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.323580398 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.323657801 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.324795796 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.324552949 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.323104764 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.323393756 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.324326395 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.312237286 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.323841662 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325381028 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.317740437 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.329092808 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.324062896 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.336730179 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.324234332 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.324810999 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.323113786 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.327065093 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.32617126 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.31732109 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.320441087 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.328608748 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.317510283 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327105582 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.326779895 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.323997869 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.328618675 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.328843101 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325626777 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.32477983 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.327868881 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.319140101 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.320998176 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.33107387 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337764855 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.32692414 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.329443026 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.328709851 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.3276931 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.330138817 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.329420425 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.319949359 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321855645 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.333251401 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.327968691 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.328798063 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.319642689 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.328942788 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.329264245 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320547073 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.331530688 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.326853414 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.329456779 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.320204196 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.330534301 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327609869 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.326743883 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.331030203 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.326462367 seconds)
  done (took 97.622560233 seconds)
done (took 361.148213389 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.671600167 seconds)
  done (took 3.873896425 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.583552824 seconds)
  done (took 3.78688003 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.120171658 seconds)
  done (took 22.575452785 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.33173891 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.339172535 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.341639679 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.315072084 seconds)
  done (took 10.53073716 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.708512102 seconds)
  done (took 3.910724344 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.325677696 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.330498101 seconds)
  done (took 5.860637148 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.479601278 seconds)
  done (took 3.682754909 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.563060509 seconds)
  done (took 3.767208588 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.326895056 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.340070456 seconds)
  done (took 5.878557223 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.293616817 seconds)
  done (took 3.496341681 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.246905027 seconds)
  done (took 20.449498421 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.34156739 seconds)
  done (took 3.544993043 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.369594123 seconds)
  done (took 3.569763586 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.805008607 seconds)
  done (took 6.00564856 seconds)
done (took 102.136798961 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.312954374 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.313261374 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.314062658 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.312825315 seconds)
  done (took 10.453822168 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.390297202 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.388690221 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398973513 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.384148117 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.385190326 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.393109572 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.352344679 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.351618574 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.383395245 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.381115451 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.394980164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.386046881 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.392714352 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.353421791 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.37849903 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.395729025 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.382665967 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397735141 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.353033427 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.385214259 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.328908571 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.385927909 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.379261206 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.329013662 seconds)
  done (took 34.253919524 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.815847041 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.389410257 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.47278346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.368927606 seconds)
  done (took 7.249909398 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432162563 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.433463303 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450274828 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.493770566 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.529992569 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.44745991 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.353964702 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.35088121 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.337827889 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434519232 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.512278031 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.432221846 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.647105594 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.330576578 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.649912859 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.330989341 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.329308612 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.433305321 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.481904548 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.512755705 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.329845556 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.433960702 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.435916693 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.433851378 seconds)
  done (took 35.761917625 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.338176766 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.346679857 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.33125177 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.345622857 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.330600682 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.332006936 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.332650937 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.338663764 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.332321825 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.330011952 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.33268837 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.346221154 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.331701446 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.3317587 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.340767156 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.334387205 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.333077458 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.339615279 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.340613029 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.332127909 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.331981969 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.340557761 seconds)
  done (took 30.598080508 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.318782273 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.317047843 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.668611458 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.5719459 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.317694241 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.32154771 seconds)
  done (took 13.721947635 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.391009037 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.524812446 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.323660171 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.660058628 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.747668301 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.32786415 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.323371961 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.559536061 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.847301241 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836800199 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.38215797 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.391686392 seconds)
  done (took 19.522021246 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.329526935 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.321457852 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.331863269 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.337971202 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442124079 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382020546 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385062329 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.317729597 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.380929182 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.380875999 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.382206343 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.377653802 seconds)
  done (took 21.576730754 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408626219 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327821464 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329072666 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340837333 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328755408 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330206689 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3406521 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.0168205 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.332844357 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604197514 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336818294 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411803447 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575922847 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342509648 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335602301 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.275482281 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560187777 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802827712 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335575384 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331001713 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377742309 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330537574 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344077167 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531011237 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332398687 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331058844 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.593140647 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330594268 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602747029 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577768036 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578910861 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334882425 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606923038 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97095391 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43634936 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529529084 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331894686 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334139688 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.333599015 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.340941582 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332721601 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338180868 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576553631 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334525643 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333021355 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342557595 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027918028 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.34058238 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.333981115 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335313033 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578388055 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416788214 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.337046164 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332298221 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375948172 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332798177 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.338301879 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455206749 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970947523 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336781819 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349598343 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.337700437 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328538162 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335116668 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961890568 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.34210945 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.339255535 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340157688 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333493698 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335830383 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354026631 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334493952 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.353436413 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334805439 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085268506 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34853743 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336211747 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855163445 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337035034 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.341247257 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558484398 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336046077 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335101709 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.335898503 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334485763 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056461464 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346272086 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.303297115 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378622433 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029322328 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535133471 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358050011 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363901045 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.556504288 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.304005906 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337869603 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.342052399 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338381208 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357355887 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027172781 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337243144 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.341196435 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583639299 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.54770918 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345085193 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.280933063 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79952115 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336040031 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.367269714 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345190584 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53980167 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.938412582 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589076085 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351014411 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370327227 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337526067 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11237624 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342370223 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.349951675 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353769835 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608365318 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.136459894 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343761638 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412993649 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340030629 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339924141 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338531872 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340582731 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338936024 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.515135178 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349330989 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589746751 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.341471143 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338609017 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.34898269 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340548936 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.357607168 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.559964536 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339462536 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618940367 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338534985 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339495725 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339710495 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.556950119 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.348791669 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.346881503 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677865023 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350168644 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353937374 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591214516 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373670548 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452739198 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371311091 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.34613776 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591222938 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.347543343 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.346185523 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340035519 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342559422 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345472332 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.347961506 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334782186 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943992488 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316976265 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345702402 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341605207 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.356807049 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414776942 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348039515 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543073298 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.355512663 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350800851 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.34861319 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.352592335 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562884894 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587861948 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.354618482 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514937508 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.798752362 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944335769 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357158939 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.341641866 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.341934218 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.342138583 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344792174 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342014076 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342063197 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543524203 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59544704 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341852825 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.951822152 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34699436 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344240954 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.348509484 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588422187 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.354122253 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345757368 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.345772752 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360418956 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345093881 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596711168 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567768706 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.360143243 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343812487 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.86390853 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351454759 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345884595 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346038015 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371735122 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343275307 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169253643 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683003393 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353397761 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593143191 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346654646 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.379872853 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.343030917 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348961579 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344757851 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.385340427 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352826435 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.545817385 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347811393 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347365962 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982302025 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128575241 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897938997 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352528448 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.345853155 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366670572 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.039367763 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345107181 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34565689 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587259038 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046181165 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345530003 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805285503 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.358481819 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091567431 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593627899 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570789062 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351417068 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.353509662 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59567632 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558075881 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371850025 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358123113 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351546217 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.314605322 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87995361 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351470648 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530970063 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047905506 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353346631 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348268053 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.39969652 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353238207 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731228459 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347073396 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34792896 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354907403 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366516619 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181510588 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351215449 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346887108 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978601654 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356472309 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.812481935 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346080494 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.548676733 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595386309 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.574361313 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.349319102 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.374315221 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.589800218 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597252818 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349563598 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352029325 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903033784 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.221886181 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.355348752 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34988413 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126133785 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361292836 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625356418 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.35116211 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.352946547 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354131436 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349287072 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349057186 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.348740004 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355745488 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32311072 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824118306 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.365081308 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365812285 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357661155 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350277586 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595658817 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.36592679 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955255841 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581105876 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348027459 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383195314 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.356332005 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350060408 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.321494701 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350005574 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349401746 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3949933 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571523319 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349604084 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.321396977 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414541974 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561254498 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34953003 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36531758 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563785529 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.352762067 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.356307403 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128350114 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387472224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350520573 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35245786 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354745079 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391499632 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424034624 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553169394 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.603439227 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603884357 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739764877 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351565467 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354379174 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.368668428 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433408603 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351764057 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.357166339 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.353180293 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960059722 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12399163 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.973240106 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605713639 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355854978 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363867474 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352663693 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59421172 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353006544 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630636632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35266493 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.345410747 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374286531 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353009856 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38340666 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570726918 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627744054 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352669627 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358547101 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35951676 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.354923789 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608768994 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.567084994 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83157986 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885579724 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3568385 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362846289 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055697391 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630755472 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353821577 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355688031 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356118767 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.369706112 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387035388 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.36290695 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355064398 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581006848 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604084881 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996425599 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602986045 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.538862303 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.26520901 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367272792 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601510922 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186843422 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.55765619 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970485088 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064981485 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607762825 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430081717 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55981793 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.356970395 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59389205 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.356083016 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360809472 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357946683 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356190691 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.356262119 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605222286 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970545161 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609000819 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.362759425 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.357071318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390580699 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.559889116 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.580093943 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08378022 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58064469 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612792582 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365382755 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356792686 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977226731 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610534835 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359471715 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.36286396 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570094963 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357595255 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390528581 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.232264462 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.357966716 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888221136 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.572683045 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379567943 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363744152 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074484179 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975197789 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.361402642 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840907312 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366551568 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359736213 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655636194 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.36651061 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372566951 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644376264 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.365580272 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374584341 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569962511 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.967297109 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108558618 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.382175974 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378017335 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.361335002 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359905669 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370449933 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359440626 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36312293 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.751189603 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361225176 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360643566 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374717117 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.366366735 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364398057 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.366345582 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363041323 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.368407741 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.348414577 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.36116132 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374266664 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484402496 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90237572 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363447534 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.975923766 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.69710028 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609706406 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361078282 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.351989085 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.367476381 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364039377 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361218089 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360926414 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359566782 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891631209 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.365138583 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.618696894 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370456085 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.571449598 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574367892 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362707908 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569134607 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364929231 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38981672 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.332222741 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361351278 seconds)
  done (took 967.086260517 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.370677046 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.370548634 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.355204626 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.424927337 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.371771857 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364880998 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.368751016 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430068316 seconds)
  done (took 20.294483445 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.368014743 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.363824579 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.366206311 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.363202231 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.363083304 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.828009487 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.362698335 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.363952705 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.378238007 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.36308748 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.364116137 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.04033084 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.379659272 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.356109059 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.362060453 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.365775499 seconds)
  done (took 32.227493333 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.059990255 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.390532112 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.906879859 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.404192488 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.356110723 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.359200417 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.492734945 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.385070155 seconds)
  done (took 25.595941022 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.368810235 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.370875891 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.368343671 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.372316054 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.371038049 seconds)
  done (took 8.091603057 seconds)
done (took 1227.636473263 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.370348939 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.371164512 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.371606714 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.370948972 seconds)
  done (took 6.723924307 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.335800756 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.335541109 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.33470199 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.352725463 seconds)
  done (took 9.599831905 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.028638787 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.978994772 seconds)
  done (took 5.247773395 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.892266769 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.887299998 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.886064272 seconds)
  done (took 6.90730257 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.645244696 seconds)
  done (took 2.886846171 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.32615604 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.356428437 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.078518023 seconds)
  done (took 8.003114241 seconds)
done (took 40.609317477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.363528465 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.121425559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.512920706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.362019365 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.537373574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.513355166 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.605878255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.358842067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.369780554 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.366342698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.364165782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.51993015 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.597007745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.121243859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.59683105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.122273765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.552597887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.356665322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375755001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.370988931 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.609371695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362961141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.35839899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.36653109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.524013865 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.503102664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.35911862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.123154675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.358871423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.375647986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.504011417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.367612385 seconds)
  done (took 82.144775791 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.372677305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.366258358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.372593438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.359479724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.374670079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.386485427 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.362170853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.360556616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.361594687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.360296292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.360379788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.37725517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.360875369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.360867387 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.375827061 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.362036937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.375343419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.374752399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.361176449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376561842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.36140989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.361708315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.371038752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.365601048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.365318059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.361256382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.382162405 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.36140524 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360574217 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.365776456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.360925859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.37792601 seconds)
  done (took 77.001384248 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.361724775 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.362165805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.364956695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361660736 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.371243731 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.369429425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.364642208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.363078862 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.376682157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.366265496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363155095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.365794729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36411734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.378346738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.3633519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.362314827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.367973277 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.366540666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.373578141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.364458183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.364434743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.37535947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.377170149 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361987562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.367134491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.363653772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.362607677 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.363854526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364006458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.365717398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.370958125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.36650972 seconds)
  done (took 76.982513733 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.601578092 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.378754399 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.381074558 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.372531894 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.38009796 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.37878582 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.372754794 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.610066889 seconds)
  done (took 14.723589886 seconds)
done (took 252.094280737 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.38283373 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.856411766 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.402755553 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.374263425 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.390545518 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.402473758 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.588363148 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.400295718 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.592200175 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.395948713 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.388854231 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.373952818 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.156942069 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.523628503 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.187186952 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.302343592 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.237656627 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.366566473 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.92145609 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.648608123 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.402265957 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.366435262 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.185012515 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.251899221 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.345453818 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.45293435 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.468271757 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.600419043 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.533370412 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.451155817 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.867163916 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.379669551 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.37586582 seconds)
  done (took 63.820774556 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.37251232 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.382536143 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.382385549 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.381556766 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.382991318 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.383338548 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.373783952 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.383798648 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.382950706 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.383109951 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.384141683 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.38286505 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.384522886 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.383597113 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.383425088 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.356905827 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.372697362 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.382873381 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.374124783 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.357442388 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.384761153 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.384040359 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.384359638 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.383449552 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.383930939 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.384667538 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.384069031 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.384083166 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.385095175 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.384722864 seconds)
  done (took 42.666185166 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.384246793 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.94564415 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.099725053 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.382031425 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.377918636 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.380361634 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.659842029 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.388907402 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.379474693 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.379035286 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.839129704 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.38799051 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.409070017 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.107785142 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.378760946 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.387051139 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.387108305 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.377186907 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.960443407 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.388153332 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.658115631 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.385952454 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.658780537 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.387852291 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.381298004 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.379775198 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.383548929 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.200732136 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.396992711 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.838332652 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.130068059 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.659982087 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.12670339 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.157544809 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138072874 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.393643985 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.386495516 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.84307347 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.380638418 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.378973326 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.658877878 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.380162781 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.112075907 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.064826959 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.396158208 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.388570151 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.224013723 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.841733031 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.615849321 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.386933082 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.148885925 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.383161627 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.389974654 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.38207117 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.616742894 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.383534265 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.379548118 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.214787707 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.385513342 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.658628973 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.390785365 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.38049265 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.96135981 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.381839758 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.954927458 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.383727876 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.38950351 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.381590677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.119568088 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.384090403 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.0794671 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.399314419 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.389165663 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.839207685 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.954850818 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.2756209 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.383221438 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.962976469 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.156973332 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.67624551 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.385542065 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.175092476 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.678744706 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.385386547 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.392768637 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.390578029 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.392011426 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.460865267 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.659238904 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.990679489 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075009569 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.227409803 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.664696256 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.391247072 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.38410911 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.219494588 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.391821845 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.391805256 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.114965862 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.08537956 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.40078023 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390563747 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.068542457 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.403406665 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.66554089 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.388690036 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.154673971 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.384989832 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.456207983 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.393167743 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.389883254 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.388269442 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.663080876 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.387416454 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.393456316 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.068931866 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.867385696 seconds)
  done (took 193.102848367 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.379604339 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.377553405 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.379502457 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.377916585 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.377663535 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.386350405 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.379119802 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.378926867 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.385067203 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.378200626 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.379056999 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.387277814 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.385360493 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.37906549 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.380400533 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.394460807 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.378256064 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.379124797 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.395943663 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.380588318 seconds)
  done (took 44.899264619 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.395144811 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.932674531 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.907334632 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.39637186 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.395283993 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.387575107 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.440229154 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.396584572 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.395425234 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.676733904 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.555162117 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.397718479 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.395729904 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.394322753 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.907725113 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.368251469 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.678312493 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.93351676 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.395884832 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.932460007 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.368181519 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.395294489 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.386000264 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.933324253 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.688492145 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.66637478 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.445859362 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.934072347 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.398257772 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.394916712 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.933861693 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.398794084 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.387342469 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.918644132 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397843921 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.4111029 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.395695459 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.44390831 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.44479417 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.681301973 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.939297912 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.676553621 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.407565112 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.55106933 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.3997829 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.368807283 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.94383854 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.397841948 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.369002729 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.3988247 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.403665309 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.919283365 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.389374958 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.920586561 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.397921306 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.398462762 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.934923318 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.920827518 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.909957999 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.560006651 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.389680791 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.66802336 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.398004553 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.944887438 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.399085309 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.39965911 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.397678951 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.560036432 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.93569778 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.671166131 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.680729831 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.681819142 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.401061774 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.4552927 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.399165938 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.682070721 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.454914692 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.777082514 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.6836244 seconds)
  done (took 125.758261237 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.649934611 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.505257138 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.757404962 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.957968039 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.883850414 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.52942197 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.50363185 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.633378046 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.402563364 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.503333333 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.02244134 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.482493485 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.146892871 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.453580947 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.071610726 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.517718014 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.785451718 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.361781425 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.007895171 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.00744238 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.398658235 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.499976458 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.914775704 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.586473265 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.39636351 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.956420819 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.318768482 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.898611562 seconds)
  done (took 53.42095832 seconds)
done (took 524.915664757 seconds)
SAVING RESULT...
DONE!
