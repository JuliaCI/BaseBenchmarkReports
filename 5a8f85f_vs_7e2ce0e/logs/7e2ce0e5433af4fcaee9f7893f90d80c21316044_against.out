cset: moving following pidspec: 17435
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.394232635 seconds)
loading group "string"... done (took 0.506129588 seconds)
loading group "linalg"... done (took 8.704094073 seconds)
loading group "parallel"... done (took 0.171664308 seconds)
loading group "find"... done (took 1.247782153 seconds)
loading group "tuple"... done (took 1.920789504 seconds)
loading group "dates"... done (took 1.462871575 seconds)
loading group "micro"... done (took 0.199436061 seconds)
loading group "io"... done (took 0.524837037 seconds)
loading group "scalar"... done (took 50.200032898 seconds)
loading group "sparse"... done (took 13.413273733 seconds)
loading group "broadcast"... done (took 1.257860552 seconds)
loading group "union"... done (took 9.902984922 seconds)
loading group "simd"... done (took 2.979970359 seconds)
loading group "random"... done (took 11.364131074 seconds)
loading group "problem"... done (took 2.186613689 seconds)
loading group "array"... done (took 23.565608311 seconds)
loading group "misc"... done (took 1.095307083 seconds)
loading group "sort"... done (took 3.664241467 seconds)
loading group "collection"... done (took 18.917709199 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.606214629 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.188544351 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199918589 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.277022475 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.231061374 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163864261 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142485909 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.239918324 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.521599327 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202184553 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13629713 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.501939916 seconds)
done (took 6.154745058 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.249279525 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180212678 seconds)
    (2/2) benchmarking "String"...
    done (took 0.164157209 seconds)
  done (took 1.03222328 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075456687 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157575226 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107792249 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092430641 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091388804 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107240478 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091240692 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105967041 seconds)
  done (took 1.444635054 seconds)
done (took 3.49034148 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.48936871 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.854543844 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.505006729 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.1425268 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311499058 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.314252845 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313151808 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201794836 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105626382 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087372186 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174792265 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.392845252 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.412972119 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.950220385 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091735405 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093031076 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131405273 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.75327325 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079280537 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111933707 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.489453359 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.183153915 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098976962 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120288753 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184795161 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131514875 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160251144 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099719426 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668658065 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132653409 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.17970982 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09663924 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159182705 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.182958751 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19146516 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107906205 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679510843 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200598403 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.089373184 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097925665 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664799603 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.114856358 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184451028 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102156503 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086454695 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177533428 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091099325 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076569501 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107789083 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084029821 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161009982 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.464332676 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103733943 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169077095 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090887901 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687377566 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098164976 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273229347 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128358404 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091773148 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09022983 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087155727 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154245699 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093093909 seconds)
  done (took 19.884843821 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145670132 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163014711 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076329532 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153603301 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120385298 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078507489 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100905762 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076652356 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106214398 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.192375714 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137324436 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150363997 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090918223 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088891888 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.129292147 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246157885 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107352902 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119272834 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089167632 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088675999 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13658474 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096196046 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106070064 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090793904 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167895241 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201967738 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106624053 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121771264 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090917778 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093161441 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141497343 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143543045 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091373807 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087633492 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.168274452 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121062307 seconds)
  done (took 5.136443251 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198185572 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121385573 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.20564333 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.156306324 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144131859 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163979834 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126229662 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268801788 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.199750796 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178725059 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111615381 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119248504 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079847174 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079070246 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076095459 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.452582661 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148778566 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.159877842 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.132035438 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100304236 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08115555 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.133529478 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083280938 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.075497243 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100989869 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11976804 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.321200035 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175837797 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099776149 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.09655885 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104967649 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082390408 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131613454 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192905647 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124118777 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136513845 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081701976 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.075646614 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219217442 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101668353 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077746168 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113640803 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131179028 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113215022 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094920378 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082830792 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218749276 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094084303 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099910563 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.102517345 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19400747 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124918186 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076098047 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098576528 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290079243 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099104844 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078442652 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093746477 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.848477618 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127225994 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.133526927 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097073639 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07762454 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080080632 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095744695 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.434791652 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081537484 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.720224776 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079401326 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152948226 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079453525 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095676996 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086677668 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083937068 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116728873 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078790123 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077159729 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078082183 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096300459 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081159386 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127289816 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084138502 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078467817 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157346935 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08596533 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094337294 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113661801 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108517975 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099611548 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080564386 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125318481 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084068478 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079802947 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.16350952 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078820249 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.128733586 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079734418 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142008464 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083235176 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.276632933 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08203614 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120066648 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098975793 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123644765 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100949072 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079180333 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099209264 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078673949 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079475587 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160920403 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080580027 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07907831 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078849376 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109019504 seconds)
  done (took 28.239936631 seconds)
done (took 53.950193675 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.426407506 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081706637 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078574007 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09720169 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080189743 seconds)
  done (took 1.533339575 seconds)
done (took 2.275307037 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314434575 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.184635902 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099633749 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.182537143 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084560628 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.187870041 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176671083 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092043781 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199907245 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081885674 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181639183 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081576824 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101315237 seconds)
  done (took 2.739886848 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104584617 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107670714 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10019644 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116324597 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082598206 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100060766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117016268 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109506733 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099107148 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110294965 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083535081 seconds)
  done (took 1.872614982 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100736692 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10456581 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097961227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114693832 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084184518 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098072128 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112634702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106487008 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096061044 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109203556 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084493967 seconds)
  done (took 1.853213922 seconds)
done (took 7.206649996 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.074229 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.301868198 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166605227 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.208259713 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345902333 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.237033413 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.563805733 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.172508192 seconds)
  done (took 13.96447349 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.122539218 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.151514838 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089816292 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093507562 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091408216 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.110290129 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090036408 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091059027 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.106462652 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088920875 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089586043 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106763838 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088996772 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092120884 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09146801 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105733264 seconds)
  done (took 2.416327591 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140205336 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138390925 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095130321 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096760654 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109776066 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096760671 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100295657 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112235808 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092705277 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092308849 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101560401 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112616968 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096144738 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091706983 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112584209 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115012871 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091765545 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113439839 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114291599 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112469767 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099680634 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093886497 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111091372 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09639716 seconds)
  done (took 3.367921451 seconds)
done (took 20.49462807 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146831707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09909956 seconds)
  done (took 0.995835996 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.142187855 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156380111 seconds)
  done (took 1.050545793 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110559785 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088414737 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133894483 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101036012 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089377989 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104412593 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113303486 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105661714 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090833023 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090190007 seconds)
  done (took 1.784225097 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094610306 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093090173 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118384141 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.1369354 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111987736 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091870439 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092475912 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090522836 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111741484 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089828994 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093691548 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12202166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094120217 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122631645 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093870183 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094267629 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112722878 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094000368 seconds)
  done (took 2.616626491 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09051764 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.089805305 seconds)
  done (took 0.93990623 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094795799 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088507444 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090087569 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105719594 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088853105 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088726647 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103707559 seconds)
  done (took 1.419800549 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484606971 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.258524732 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.353944162 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107472687 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142555386 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.464783352 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142107932 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101743954 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100693514 seconds)
  done (took 2.951436816 seconds)
done (took 12.51337226 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09234176 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.219228543 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.618948846 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11079202 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088702959 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157106469 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.280324168 seconds)
done (took 2.332552896 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336323044 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140787041 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080308148 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089145256 seconds)
  done (took 1.405643543 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081007471 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096865975 seconds)
  done (took 0.944983973 seconds)
done (took 3.118066519 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089466825 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087219444 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.085989686 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.102402876 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.086768325 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086440391 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086689331 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102958158 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.087518441 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.088179374 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103023179 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088110356 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086435619 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086346189 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.102615916 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08627529 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.117095002 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.105434332 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088162887 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086263838 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103610091 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087346175 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087249098 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086325454 seconds)
  done (took 3.020973347 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106000067 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090672735 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106858767 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091569933 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091669396 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107386668 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091379444 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090141247 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106914927 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089781025 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091942463 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106492201 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089114304 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093029812 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087499696 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108436194 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092306161 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088577879 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105238079 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091734892 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092617203 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104296758 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092642588 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090638688 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107435168 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091499114 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088709398 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105069106 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091697967 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092320832 seconds)
  done (took 3.653447425 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098073665 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086022678 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086553099 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111122427 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084376659 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089233512 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099246228 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08569629 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088032657 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086556811 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105636852 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086983369 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084187644 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105599492 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088146907 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090391083 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095903655 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.102733366 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085079403 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088160436 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107084259 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086208716 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087326388 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08658017 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104927136 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085823683 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087745319 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.103715351 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088184923 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086902376 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090262089 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106403363 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087657447 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096557932 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105901804 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087473717 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093483428 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.100795007 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.088865464 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084837179 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084164868 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10299937 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085623403 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093475559 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.103550998 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089265254 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085287213 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.087650983 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103902197 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091202583 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085689665 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101544029 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090355863 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089243579 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089117425 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102505415 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088271385 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085673602 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.104074201 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088011667 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085334114 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083546703 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108366508 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089303841 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100923093 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110496602 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08570574 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088844046 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.105662494 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093689255 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089334578 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114181294 seconds)
  done (took 7.49577535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102421605 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097905627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087772405 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105931845 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088767534 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087397247 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108756119 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0887734 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088596089 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111699244 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089319366 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088265663 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088628887 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10683405 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088877549 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089315334 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110880509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090583348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087541905 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104724588 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090086809 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09262314 seconds)
  done (took 2.870722129 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238457647 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095415487 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135752551 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118662372 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107095646 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116856202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092695867 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094252991 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108137331 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098465463 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096609048 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109861267 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107754423 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09515119 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114097928 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101908772 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108101219 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098685414 seconds)
  done (took 2.817052794 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103993875 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089597372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125833033 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09147047 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089837118 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089098575 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112341185 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108956183 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107560202 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091527001 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096892842 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092062288 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.107381882 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091282387 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089122244 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106666485 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091266043 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090306467 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1129729 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095957833 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095289164 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113536774 seconds)
  done (took 2.973200208 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106993383 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09153568 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12384832 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093766657 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089091985 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089429505 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112806797 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091517646 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096032089 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107280524 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091698478 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089545814 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121489636 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090901837 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095819604 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107564983 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091725484 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091933233 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106790941 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09113168 seconds)
  done (took 2.760439927 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172850551 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122236281 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10690623 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113660399 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122925513 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107851796 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113356981 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12426327 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105899405 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132714225 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106045997 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106234997 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129806077 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111745155 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105931727 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132096169 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113593275 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130501211 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10675734 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106166502 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133019429 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106423047 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129762567 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106073867 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106191289 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123152663 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105666341 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109602926 seconds)
  done (took 4.075293472 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092768359 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08956558 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087222847 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105171013 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088909422 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089387389 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088296553 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.1057814 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090625836 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088118735 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106028988 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089404097 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089361749 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088551325 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105422573 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089486706 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08848284 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105066258 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089899266 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089187481 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0892188 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105929601 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090143464 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088517656 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087856722 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107374204 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088549492 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088880354 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105222708 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089674911 seconds)
  done (took 3.593764038 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103957243 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099307557 seconds)
  done (took 0.991224402 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098764886 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10408528 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089557979 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10788641 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097045873 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089270326 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114904111 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096765098 seconds)
  done (took 1.58664719 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143203944 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162435829 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094606137 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100609462 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162710735 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.152761549 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131248108 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094410587 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106180514 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083466216 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.153992223 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083137737 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08975749 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105711321 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091778601 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097498172 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108117784 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099977761 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096663768 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09115175 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113644117 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095885144 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092366879 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.118151119 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084744266 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091795054 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110860522 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102169403 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086595593 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111287075 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088914284 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089191424 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112436503 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094700786 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091147207 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.16135046 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097414563 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105577828 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09088546 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093728921 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140967512 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090763958 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091446243 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10579439 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093268669 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093541231 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.11289573 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.090856174 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083589738 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084921154 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.108262326 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08727595 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090123679 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108776091 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091369916 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095383607 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.110330969 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087426217 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086427257 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103520288 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089952986 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087609403 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109520724 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093662783 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092457545 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109667374 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090176038 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090289619 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091960609 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.1095373 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089620666 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104225431 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11161873 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096205578 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094667851 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.109158743 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088452593 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095644967 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107544889 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091231164 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093177646 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136742946 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092398007 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085298968 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105279049 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098473194 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09224569 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110847684 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084765444 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098846366 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.111078912 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092825559 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08476071 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088502562 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105023768 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09493151 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083539629 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108475267 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091764762 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095827281 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113918024 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090415062 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091497346 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114001313 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095972445 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088630639 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156868274 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088811794 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085978351 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.112081799 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095154835 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083891794 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107825101 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090897242 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087356446 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104109507 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095658262 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089372438 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.109694042 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096115362 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092847452 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109200551 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094191457 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090718433 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085842311 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113002693 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098769068 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092138047 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110674277 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091670496 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090905008 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107969208 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094218379 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087910158 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113848791 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090136954 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090363123 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092837139 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113656969 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091469654 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086561316 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.108752563 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092167082 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088741017 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.112474117 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092107635 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085692771 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101429272 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092480588 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086566188 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.110175741 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100393223 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087713571 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.111396003 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087997326 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098494324 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105782874 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096929789 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092850637 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094927325 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114943292 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085180668 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087588314 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.111895619 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092977047 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087979207 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.110480771 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091775203 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098449882 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101055996 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.094845854 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082799007 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088319573 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.114108425 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093233932 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093167827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104596585 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129948139 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10021241 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114374202 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091372137 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08933299 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112722893 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093549642 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094518215 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11333545 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096025329 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088506169 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105979895 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097478807 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086992617 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092815149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107912641 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092333707 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083050388 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112052151 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083880731 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094704311 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110922776 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096532646 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.094612236 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111248229 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091410269 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098785477 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105576812 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096211345 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084126769 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095880754 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.119603682 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09742654 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096908371 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110696926 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089210629 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092009826 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118160434 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093985608 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091126451 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.110930929 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086841339 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08640838 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.094425526 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.11262004 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08769396 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091596711 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111151415 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094696767 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088207197 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102489467 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096981018 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09426408 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10531133 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094164488 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08723474 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107418505 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099327485 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084213572 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106538817 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094030519 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094715411 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090685118 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110888286 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09462135 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096698393 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114570999 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096321489 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090276968 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121230398 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091437718 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090149606 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105163777 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.094484152 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086099201 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09225691 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109807938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088779759 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086240646 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112633939 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098373791 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.095509151 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108424593 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095668981 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.096178375 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.114785144 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089474286 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096286037 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104932642 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087261079 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087282717 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083608518 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.111472269 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08736281 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095967951 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108425694 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090719215 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094281513 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111967977 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090330758 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09587895 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120045514 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086183502 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084254142 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107861414 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091993753 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087665848 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107959588 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.103273792 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093058269 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.113592371 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094748246 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088217989 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091029292 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115590459 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088698528 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.096884817 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115309499 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.097106371 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087458789 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113933084 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089838595 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095623704 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.104650106 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092051691 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090922156 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110014751 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089365777 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091185834 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105712733 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08542318 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088072086 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.096371643 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.110523963 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095854821 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100808214 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10934525 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089523763 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087448487 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.115760243 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092379906 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098780727 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109660395 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086717473 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084868918 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095312721 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111160545 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.096626638 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086658827 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.113176679 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09801381 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094520906 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.110576426 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100784972 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099283042 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.115850335 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098356799 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085611058 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107311924 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096454978 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091624407 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.093986853 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11391714 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086061429 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09280117 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.115924195 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093081702 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08974658 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104360785 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092585479 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096846399 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.113830933 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096722717 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.093722976 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092336664 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106366908 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095916148 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096443518 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11079589 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099296649 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091128409 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.114521068 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089382775 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09725205 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.110777815 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08666254 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08559574 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088285987 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116149116 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087008514 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095774218 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114521765 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090094374 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089561895 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.114123973 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088921235 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094969002 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114465289 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09182971 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100847273 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091766214 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109869125 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096810874 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.095921369 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104478432 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092029025 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089718081 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117793946 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092159273 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09592165 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111114347 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097850941 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094074918 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11607522 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09745564 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.097515804 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084567353 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.116689292 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096696919 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.092519138 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108831831 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091166183 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086570588 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109519439 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098989156 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089003138 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118711018 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.098743632 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090020419 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088677675 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.116248418 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090275938 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096310291 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107360411 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093803348 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085362741 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112468732 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092250768 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.098436136 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107642567 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08711954 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095571885 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.114173783 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096750983 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094188865 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.097427459 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.106362042 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085219783 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094052154 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10766483 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102171207 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094969125 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10915405 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09072658 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.093707071 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.111637237 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100902708 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087433111 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088947863 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113029714 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094322702 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090188557 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106996335 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097078639 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090529415 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11281335 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092594973 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086843137 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109746921 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098900371 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090603889 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107778742 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091349703 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09972997 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109618431 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091180805 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087221981 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116544251 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095427853 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097926071 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089049067 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.11231123 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090826538 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094545417 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118938607 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092012389 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092755457 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111864681 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099186498 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097552102 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107784699 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091282447 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102208059 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116047967 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096024613 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094804616 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109509471 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101151705 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098861883 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095478961 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106169581 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088411188 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090272753 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106058891 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096195701 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096509769 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109699039 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090870175 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096275522 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115193865 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096004746 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095587302 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086589898 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118253866 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090966296 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094883984 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10550688 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088617597 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093603291 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11681039 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09300532 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093190467 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09349533 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.115421142 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088740955 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08987203 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114473269 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096639648 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.097998443 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110507486 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091989229 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09547769 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120678703 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095556398 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091586644 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119103603 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100553973 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092909898 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109905617 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097886665 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098137107 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095055735 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120195654 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091213537 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092746908 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.119890968 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099825193 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101044385 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112721478 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087551645 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.096800245 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111930716 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088381157 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097423367 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119795467 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101314596 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092623465 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108540569 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102458003 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097810958 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111286976 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09286821 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090466086 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096909661 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111276154 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097513852 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089815959 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120933332 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101746145 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099143786 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.121845473 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089509273 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098426055 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1143827 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102773026 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094509473 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10780839 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089553226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096847574 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099321171 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.12033029 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098237972 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096999554 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.116216696 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095315447 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094390273 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108901321 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100459389 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099566613 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092577764 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114391724 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093269533 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09287226 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.114188215 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099114652 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.09902816 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113349167 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10311338 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098850938 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110515573 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091214854 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093841526 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.113499546 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094345739 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09791732 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09037075 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108681797 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099385263 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099934773 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112503805 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102713812 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100836281 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111332888 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098328349 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100808701 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.118218699 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096258529 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094573139 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095916131 seconds)
  done (took 60.132751636 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146847036 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102784503 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115453367 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096468343 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112251202 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117417481 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098063586 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097876763 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11701155 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10731834 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096103514 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115995176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110759144 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116523292 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134153022 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104919015 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115004288 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100558562 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096468177 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09658847 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128745193 seconds)
  done (took 3.167108291 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119110309 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109371288 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127415981 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109849532 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102311869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127590881 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106588577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128881856 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109747178 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102539448 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131771672 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107997825 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.121907178 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106962756 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10440519 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126109327 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110001976 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102265225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128193302 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108269619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123698645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109594539 seconds)
  done (took 3.35987236 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130301668 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098677792 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093496576 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115728261 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.1002823 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095546185 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11689504 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096927881 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103812571 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091211825 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107179087 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091663539 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094193083 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115393662 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091645145 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096060437 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122204908 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100262896 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100534087 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096033071 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107380534 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098386143 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096123312 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.106099344 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103533219 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10209956 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096305718 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119268863 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087713413 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098411667 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11565276 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09147638 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089050133 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087026235 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107426916 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100450318 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098600762 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117110466 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098446871 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087282406 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096433128 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120435317 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087985221 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095517946 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.115899452 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091140242 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099236185 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095614614 seconds)
  done (took 5.710317595 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129386681 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161122332 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100706949 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134040309 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131277416 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105274708 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098609745 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135190618 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09805416 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120841483 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111472988 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109188513 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123104737 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104471136 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100978405 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123598431 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102910657 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09912376 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124464522 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101318419 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.124736109 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103999163 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.34494934 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13031906 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104170876 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100985418 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119938557 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105145014 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107352928 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126566707 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104279249 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103052793 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130019737 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102297631 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120095384 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101575834 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111594767 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120674162 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102171311 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098578971 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119924368 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103800393 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100460588 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129979516 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101847345 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101657106 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120996765 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09881825 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107750747 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121485179 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106423262 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.107848468 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12225565 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102079513 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101161413 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129869669 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100555452 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.119200717 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103152966 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107171614 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.117622544 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106827158 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108836007 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122372432 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10639286 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109576299 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122390614 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103155376 seconds)
  done (took 8.864775652 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135668741 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103002096 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131618992 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112280648 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102336416 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124533336 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104309412 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102833401 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125474346 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108430626 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123618151 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.198868802 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121339271 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108840599 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103709209 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124963165 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105177444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103790775 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126089254 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105536915 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101911778 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132183996 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104513117 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130415206 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115002797 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100463478 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124175505 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104589225 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113006054 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125651269 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114515599 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124215747 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105997616 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111455413 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136982324 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103328013 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097962684 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12625797 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103748217 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102622378 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122451407 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111345104 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124280836 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102352663 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103622984 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124351086 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113221632 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114899245 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130214066 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109151918 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12414671 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113660088 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103450956 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124556567 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112468568 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13899915 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113743156 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112153679 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125329694 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111533743 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131706356 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12002715 seconds)
  done (took 8.090400102 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104358716 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097601482 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097236007 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118422661 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098200135 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098057157 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096877285 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118470728 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099310461 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097677291 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117605819 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099333102 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097867555 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09817911 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117966824 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099317119 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098314643 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117791844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10069747 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097733151 seconds)
  done (took 2.927212983 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.114543905 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114373639 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120408356 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107875435 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099482906 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125283588 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102083608 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100307242 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099113281 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123385025 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108235731 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127963325 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100808225 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106798892 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128429572 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105933765 seconds)
  done (took 2.642001589 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.125444648 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115947803 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189225583 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102949827 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121326532 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108362056 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100789118 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.122440848 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100996998 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106208316 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103227137 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126436082 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100826892 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100568949 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122530294 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102804638 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098844266 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124257979 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101311502 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.186073981 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104217631 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101674333 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.121236668 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104132901 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101455731 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10409881 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.130546824 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099728917 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100518755 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121934531 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103485784 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107232621 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121156823 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105326334 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100916081 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122630014 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101981538 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100220405 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123734065 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102069461 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102915066 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124051707 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101832632 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102312555 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099053804 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.121990135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100332203 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104823696 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124600901 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103673466 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099242883 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128153541 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105291314 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107764733 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128411604 seconds)
  done (took 7.053949639 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116952935 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100603357 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133562117 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099521404 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101108574 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102268197 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123459015 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102204708 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101323984 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120424485 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102575769 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102919819 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122175221 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102627195 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101043019 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121671222 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099386486 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101512283 seconds)
  done (took 2.813498681 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112049677 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100652532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103382493 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121973185 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100955225 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100054845 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121424978 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100303077 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098706216 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099922318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123423837 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101035877 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097866894 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121765544 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101975765 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10006403 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122022793 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100385696 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100524461 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098300969 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122439284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099663862 seconds)
  done (took 3.212912822 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117464506 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180579576 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.105490989 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.188912515 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097227876 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094575689 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128512615 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097942231 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110983083 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117507647 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095948299 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095060381 seconds)
  done (took 2.294739525 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133284842 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134913979 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122939826 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10091664 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108752402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126792429 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104866644 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10383718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13513567 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1163027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12672566 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113010729 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11068052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134236965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109355553 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129722666 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105996882 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104429391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122580253 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122973928 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105353825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134251291 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10573806 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104330785 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127277708 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112750585 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132539731 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11697431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106090627 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135516016 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108844371 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126576403 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113952155 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115791274 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122852492 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112927508 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105330622 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141036295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110530989 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134670547 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101826055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109340636 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132842414 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109587894 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132856136 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107338477 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109415847 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127311694 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106920328 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124607693 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133534453 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113195028 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130674763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113574552 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111758706 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148000817 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115660564 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135780443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108882429 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140070977 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113296005 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109161481 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135115325 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11522768 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132628181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11335268 seconds)
  done (took 8.743561065 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145011753 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10243894 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127671501 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117481803 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134693944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107922217 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108698494 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12700454 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106510057 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102325995 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170615508 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105043696 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134869434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114469587 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106189766 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127856849 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10663647 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113204003 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125139717 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125539671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127110908 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114746681 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112601466 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136798592 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11628732 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13177637 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107004199 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105878676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128050243 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108341964 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10938565 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128390669 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114555899 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102660621 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136939939 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105997396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128808864 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112886204 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10574765 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132865969 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115663282 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141607646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108118684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106126549 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139581779 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106784472 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105606587 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124708584 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106226412 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102987806 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140255981 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117978793 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138511293 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114862913 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10625739 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1283609 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106214201 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106537051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128434795 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110527727 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135044254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107913104 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126125192 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128804399 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10727275 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137040615 seconds)
  done (took 8.74910115 seconds)
done (took 164.368871921 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156599697 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189277766 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145014476 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176635394 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093730463 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126176998 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145673838 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147769408 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.09088671 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114785327 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091912438 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093212058 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182387924 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092555553 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091271597 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115763644 seconds)
  done (took 2.921885548 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195558451 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308936067 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10586418 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119139766 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098762997 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096128273 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119264636 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099132643 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096599266 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126102694 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098010076 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092362363 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126534022 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094065814 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09621469 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.11712158 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10508121 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096661593 seconds)
  done (took 3.067263384 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123947228 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140045202 seconds)
  done (took 1.146409059 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132963198 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192675913 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276266496 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167455237 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118012496 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13760065 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145811349 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129972787 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185122774 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130832152 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109611981 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094814276 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14472594 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102595417 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11388192 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118615037 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125064415 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110764571 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.133036715 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099127182 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118872871 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.12323372 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102655551 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134692492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17661754 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129234913 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10388358 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09977979 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121199746 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112006299 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10307217 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136607501 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110081943 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174686516 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100617173 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171952667 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104303954 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120200061 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111166291 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097476577 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123452908 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101147106 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109281376 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118040123 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101185442 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103713334 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123407315 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101139773 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104674093 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126768513 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105460919 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125852808 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148067769 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127282614 seconds)
  done (took 7.719537431 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868015311 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138648994 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097460509 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.005862258 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147573791 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111768255 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850267995 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142629889 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251611573 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.879082109 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11329571 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109569003 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255158093 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254234564 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.256228575 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375933917 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698236252 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133957951 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127727615 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161218648 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107150539 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144891849 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118907066 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517267349 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098804408 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09877346 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128764353 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111856692 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176162894 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099587002 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123493018 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173352654 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287939722 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202870268 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121424141 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099980666 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098230151 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18142847 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266492045 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213360268 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189239976 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095738971 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097789595 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127567442 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117102623 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095876627 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176185347 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188329081 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1868022 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102919611 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133162165 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11100402 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105728182 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175340892 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096439912 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.374896403 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.35917534 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098273016 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105480977 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137288121 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263774863 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100344572 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228385106 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147822294 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214793647 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097588592 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836198184 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181147763 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097808104 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127612973 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106011871 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103361277 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128752882 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165057401 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500585434 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110136463 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125707329 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098918752 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228381381 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098773325 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121582156 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154466401 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122351192 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107581027 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134121538 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112576205 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186036801 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26493453 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113494124 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10730715 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126801775 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111506419 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098390921 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229184387 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221089769 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172198645 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228440932 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107249811 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178579405 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182027616 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105959852 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186109934 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105240763 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137501991 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107312469 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215179908 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.1543831 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101409564 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125911242 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109808074 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154638945 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104172615 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108709278 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18656152 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553211251 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.179620439 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096348277 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103421425 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128898129 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154410116 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128171381 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257318587 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109013821 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182932566 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10710682 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095178684 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129203166 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.176727956 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109236647 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10711228 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129969948 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107772644 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277121141 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216916039 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133264875 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245315866 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174506943 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128249303 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168022823 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129679325 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162510674 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132362688 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106317425 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119722331 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823829191 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113750364 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10560407 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127559403 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182643005 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12141217 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102533646 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098591183 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117498609 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812028928 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.1033938 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097141228 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10093466 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129361268 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106838278 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127952757 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106002833 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176112578 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238785748 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112448406 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127980908 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099652549 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176659532 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099952956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099172072 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122539607 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10091967 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107442665 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126856294 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103415654 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188335864 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171444145 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225019478 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.631461023 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100917011 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098982859 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256049094 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101571993 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319817523 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106418141 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.248974101 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158784526 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120419229 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357013063 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.179903984 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183589066 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101663158 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187588861 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117661655 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108814776 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17486287 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100715523 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105597895 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172482378 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135390139 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113897597 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.269076468 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098459091 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248693529 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.118283288 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.162993838 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122014841 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108153706 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319121928 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09986777 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140264735 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175085592 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105360291 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099972498 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.670390164 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121447027 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111933353 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106935564 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.247386133 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158677571 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130714162 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109918627 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134903798 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.15586158 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227136603 seconds)
  done (took 47.188243415 seconds)
done (took 62.914322401 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291963966 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253902109 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303229407 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206605606 seconds)
  done (took 2.031749597 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.263067016 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160249702 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.23115672 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095699631 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.241540393 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095507529 seconds)
  done (took 1.991846975 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.491215562 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.363612429 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.300922817 seconds)
  done (took 2.066523194 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250373129 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235517356 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328710791 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.400384102 seconds)
  done (took 2.238748594 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.262193687 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12440342 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123197166 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.207128428 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.229051773 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208300177 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126460193 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176302999 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128566416 seconds)
  done (took 2.543512628 seconds)
done (took 11.779050118 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.259209354 seconds)
    (2/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.328314525 seconds)
    (3/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.200426098 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.329836927 seconds)
    (5/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.233301449 seconds)
    (6/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.168648482 seconds)
    (7/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.176659917 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.196544531 seconds)
    (9/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.287570416 seconds)
    (10/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108873175 seconds)
    (11/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.13505452 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107777458 seconds)
    (13/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.149189325 seconds)
    (14/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.168678421 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114713359 seconds)
    (16/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123546933 seconds)
    (17/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.134491817 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.214591905 seconds)
    (19/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.288945573 seconds)
    (20/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.209576643 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.213928878 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.204327931 seconds)
    (23/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112729487 seconds)
    (24/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.199663287 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098783812 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.153047219 seconds)
    (27/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076595742 seconds)
    (28/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.168952714 seconds)
    (29/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.184050047 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.231370736 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.154661685 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123509789 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.239989591 seconds)
    (34/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126564871 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098773123 seconds)
    (36/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.190541338 seconds)
    (37/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.276205158 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137957929 seconds)
    (39/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.270773068 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202166994 seconds)
    (41/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.189404897 seconds)
    (42/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.171508878 seconds)
    (43/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074072278 seconds)
    (44/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.20946621 seconds)
    (45/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.220949888 seconds)
    (46/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.190015362 seconds)
    (47/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.189647603 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.167723289 seconds)
    (49/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.136256349 seconds)
    (50/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104749401 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075916375 seconds)
    (52/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.076333965 seconds)
    (53/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100999458 seconds)
    (54/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.074925017 seconds)
    (55/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.168467315 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074541975 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099791088 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.154873245 seconds)
    (59/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.146605137 seconds)
    (60/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.098435023 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128545088 seconds)
    (62/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.170521955 seconds)
    (63/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.158853715 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.138084663 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075280237 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.19553304 seconds)
    (67/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108457995 seconds)
    (68/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099473681 seconds)
    (69/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.102349596 seconds)
    (70/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.133924019 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076317294 seconds)
    (72/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.291778312 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107588491 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118903661 seconds)
    (75/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.164816537 seconds)
    (76/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076833498 seconds)
    (77/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.138480026 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129046802 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122275722 seconds)
    (80/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07757981 seconds)
    (81/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074473098 seconds)
    (82/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07446173 seconds)
    (83/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.155152745 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.167594286 seconds)
    (85/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.166694213 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.155724557 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109046813 seconds)
    (88/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.100887325 seconds)
    (89/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103885904 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09767486 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.132689553 seconds)
    (92/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105280267 seconds)
    (93/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083131651 seconds)
    (94/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074532356 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.105315623 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.102631162 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10157255 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123979912 seconds)
    (99/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075924433 seconds)
    (100/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.101959214 seconds)
    (101/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10464047 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.103512107 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125019425 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102172946 seconds)
    (105/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169853974 seconds)
    (106/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.167001967 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104127982 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082391918 seconds)
    (109/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.132424064 seconds)
    (110/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108838524 seconds)
    (111/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075073619 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075323439 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.192217493 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108730773 seconds)
    (115/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.140123284 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193476469 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.075875414 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100639199 seconds)
    (119/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.076467707 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076376816 seconds)
    (121/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.1090598 seconds)
    (122/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.141491301 seconds)
    (123/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106863679 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083057601 seconds)
    (125/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.125068069 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101198988 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107237828 seconds)
    (128/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.162581833 seconds)
    (129/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170155206 seconds)
    (130/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107540466 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.146740014 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.139946281 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07558311 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196544051 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.132169725 seconds)
    (136/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074353227 seconds)
    (137/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.112243486 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.076004604 seconds)
    (139/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075904053 seconds)
    (140/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168224324 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.109353197 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11009313 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.130581154 seconds)
    (144/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.074866167 seconds)
    (145/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.101070227 seconds)
    (146/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111204356 seconds)
    (147/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075736513 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110616713 seconds)
    (149/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.107742612 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112477002 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098700453 seconds)
    (152/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075495156 seconds)
    (153/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.106551764 seconds)
    (154/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.134931936 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099556425 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.098909423 seconds)
    (157/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.124389385 seconds)
    (158/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.075676284 seconds)
    (159/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075610165 seconds)
    (160/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076609767 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132606295 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122753985 seconds)
    (163/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101291593 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124592808 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101674398 seconds)
    (166/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077329134 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096895849 seconds)
    (168/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.106062259 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100679004 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100861661 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.075026808 seconds)
    (172/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084641168 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136309704 seconds)
    (174/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083886414 seconds)
    (175/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078580403 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.074441534 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.126105569 seconds)
    (178/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079387923 seconds)
    (179/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101318827 seconds)
    (180/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.076342317 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.144385771 seconds)
    (182/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076051659 seconds)
    (183/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076340256 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100652764 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123654051 seconds)
    (186/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077325919 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077903457 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10080582 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.09830019 seconds)
    (190/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076635913 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099839668 seconds)
    (192/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.109240001 seconds)
  done (took 26.009113445 seconds)
done (took 26.927369883 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.219188854 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127076124 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.107429984 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106878117 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.201400181 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11360204 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148805037 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.109799407 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.1161611 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132469691 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09877521 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119474924 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.130387673 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.178362583 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.133732419 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.100537958 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100018882 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117804173 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.147848639 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12527727 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201430483 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102788798 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117327078 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124336055 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17608778 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1259389 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108370445 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108468168 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.145313406 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109560039 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10881641 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12327453 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.125231088 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12360452 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122244048 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.109262845 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100594674 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083189828 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134322548 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111273292 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120401282 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133636499 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110162945 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100965552 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.133162613 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109491476 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100304768 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136024976 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100315252 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108955431 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101377727 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.14919723 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108291718 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.0980814 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.123810146 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.101753137 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118387519 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125312883 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124188401 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099748194 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.125107057 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101881787 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110365607 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099478629 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133211266 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100868021 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108136632 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.136506492 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109402377 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102424528 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124290459 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109378217 seconds)
done (took 9.71793866 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111770113 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144312412 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197859602 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.210017969 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127597456 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114432876 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.144762233 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12393976 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112122202 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147951828 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13767981 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157988894 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.178597336 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141680306 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116934124 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111935553 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.139129049 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110490931 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.207233816 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125350529 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12320729 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.141554264 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127192388 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141282221 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.104583008 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134156764 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.135546974 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113554108 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103067532 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136881908 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125618379 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10346867 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134122954 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124860867 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123064188 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140315525 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116218295 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113259862 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132018787 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105047466 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112516048 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145289274 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106443881 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13877088 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114648695 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119307104 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11102517 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141697176 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107259455 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112537792 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131427375 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132295925 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115257377 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148232996 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11752901 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142001182 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121727471 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117654818 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132803151 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118356227 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106031298 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103071001 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13186939 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126680219 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131240183 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118240155 seconds)
  done (took 9.492733375 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130869257 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.132930762 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139990206 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116122775 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108816614 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123455448 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098714096 seconds)
  done (took 1.815283788 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107852966 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184918073 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206397757 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207247195 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180322973 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215568877 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148680902 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101114276 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134750462 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136146465 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184518785 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.237926849 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109588882 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142242805 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185066258 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12535367 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184566042 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126830571 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11432327 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210643919 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116942264 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155144948 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113301123 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100321003 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206360774 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102272868 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260614659 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117248794 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137509932 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114369305 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114862034 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203015075 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208460104 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.1150159 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108035338 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208559497 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.204581095 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115354752 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220915459 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104876971 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206520995 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115141272 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114934263 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.140118966 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115262493 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.192494397 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120206657 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115662002 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139057325 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192113779 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136009315 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184460265 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137319354 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116411637 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110367811 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141649044 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123875556 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115061817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.217405044 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117663792 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.207167953 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.207516853 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.182627195 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208827126 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122924709 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212104782 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203077281 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113820993 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10785073 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.142162721 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183454857 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140632648 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115195161 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198024766 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117622968 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.209187259 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.182402926 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13811729 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113056092 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103703865 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138786845 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101270683 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.198533703 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115622387 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11271351 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144899946 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114717793 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114352098 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.130659367 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123334469 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114681792 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137859466 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11997458 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114753123 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142828983 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21086679 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114991652 seconds)
  done (took 15.5555962 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110283675 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102290568 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105761124 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129826837 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103443155 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102292629 seconds)
  done (took 1.637675672 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14548297 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115162146 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149659931 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117123373 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1585811 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21586104 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.221580056 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11080625 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157439304 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124970089 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217676514 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192903565 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.218983364 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118121902 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.222504425 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11650493 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221262093 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112508874 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150162111 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113383683 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13930709 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119928693 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113007083 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211307624 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116703841 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144255259 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.109604865 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.123408604 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149025417 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110801538 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118607223 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143174608 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.108302144 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.134102274 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197754459 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.133395872 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113802508 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118372595 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143515989 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118898211 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.22120698 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115505924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121211453 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144813722 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110469203 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.107247691 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145171617 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111327685 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222308849 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118834809 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118276418 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142924656 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116604706 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118046079 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137322434 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110803969 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.143909274 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.199267395 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145713005 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109080029 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117017843 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14302667 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112481642 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11945572 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143896405 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119637444 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.107974992 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142645963 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114128038 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116645101 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144247567 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117442614 seconds)
  done (took 11.114629764 seconds)
done (took 40.574216545 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.676651484 seconds)
  done (took 2.654959361 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.832228346 seconds)
  done (took 1.814996034 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.954497966 seconds)
  done (took 18.968542726 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.522542407 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.588452487 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.022553003 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148407674 seconds)
  done (took 3.26421475 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.078319411 seconds)
  done (took 2.078206519 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299131852 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263785806 seconds)
  done (took 1.550144029 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720916757 seconds)
  done (took 1.721431224 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.503661543 seconds)
  done (took 2.492107931 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355307379 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175706008 seconds)
  done (took 1.53440413 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.611006606 seconds)
  done (took 1.614071835 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.567181239 seconds)
  done (took 20.572084711 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253696534 seconds)
  done (took 1.260722536 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288744726 seconds)
  done (took 1.299792042 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.637749525 seconds)
  done (took 4.645775533 seconds)
done (took 66.466110851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119441479 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114783709 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113664138 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137890218 seconds)
  done (took 1.483087214 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127637005 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117034699 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.118699657 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.160481396 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.120274727 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115099127 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141569836 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118506805 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.113719722 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144325378 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116157272 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114779575 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143221742 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115425826 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11365555 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143161378 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119112559 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11512199 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141158108 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118224002 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116921384 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142399195 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120003368 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118308926 seconds)
  done (took 4.024493941 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119639777 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106110377 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107937376 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130618387 seconds)
  done (took 1.477694686 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131375633 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.126830257 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151151662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123199588 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127184034 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151006565 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116388806 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112763255 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141648792 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.122998146 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130206294 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153664969 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127563255 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116406521 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152015148 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110091929 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115746881 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153389083 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122204071 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122766168 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142614028 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12188963 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119544821 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151453559 seconds)
  done (took 4.1550785 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195266133 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126816122 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172071673 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158415272 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174217444 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114496385 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142098724 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146662547 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122397079 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116517237 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144467504 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159954885 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14630784 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117488383 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115467294 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148109323 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12684495 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120881298 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18689153 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120939913 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.14727184 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127623982 seconds)
  done (took 4.14181133 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125538469 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106198257 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101965303 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133949982 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118584688 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10767566 seconds)
  done (took 1.710785336 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113571846 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100637246 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102659276 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127082642 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105760484 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101350087 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100338398 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127952727 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100853838 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10072479 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127025084 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101489017 seconds)
  done (took 2.328674045 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.336110598 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106244118 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133955007 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109897733 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111893723 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.1034885 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144818572 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106401879 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268052975 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102105676 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.142330774 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19586507 seconds)
  done (took 2.879882831 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206507561 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145286312 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287794133 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.339682022 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184663128 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182850255 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261761703 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190569306 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173476734 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160841908 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211299588 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156244301 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17735949 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180893268 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163280949 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158149269 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190444167 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199931632 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164536125 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232085592 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153237528 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195475189 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185351061 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171641026 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135246168 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183362704 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11681064 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122935642 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187348003 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185740987 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166240323 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172597461 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137205494 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213988945 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247690708 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166515337 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.308842111 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129203824 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.190167499 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.187179168 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255265195 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163538865 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183767855 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176619077 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126792582 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212043289 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148213603 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205157122 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130598004 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167302461 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174648206 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202111095 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198318642 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133981106 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300920164 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129713716 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165460344 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163636493 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210700605 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223154016 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173162159 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.146148704 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176953094 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212126136 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2332774 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137399814 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186041141 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121885802 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187959273 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201508395 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203324853 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184362254 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222990027 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128055732 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163907193 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193087804 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175141032 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197012972 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190552733 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118928094 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172444578 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130732505 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121418103 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.212441156 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118346032 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236987366 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127562025 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.338823524 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206710508 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149609804 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182455055 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178971407 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158500989 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141311132 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126522238 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139451356 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185345232 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152417448 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151773882 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152240238 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134171336 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.149407546 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145975644 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.146605841 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16376531 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.15663902 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158687981 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190208931 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12854755 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19986271 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144329561 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.185134709 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161769887 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215867133 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126779552 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155908871 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212435199 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191193492 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13299141 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201060389 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219776595 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146555989 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158490553 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160701946 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216679193 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140851701 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222451022 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133367276 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1584924 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135546013 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194681724 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154597505 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.177267294 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126420281 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.188188482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187888107 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151169673 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138494475 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204224753 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131014449 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147658167 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133850845 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133712906 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.167151828 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144912367 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.161236071 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150895963 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186897747 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162584132 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179308356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131381 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19145721 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127269444 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.189695108 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146941789 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11620553 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196937418 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220329921 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126741846 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203087645 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159473641 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208562554 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194062021 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126287 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206196566 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125870746 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117701287 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184442888 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165363274 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184793777 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208260655 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179546202 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188265778 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18686181 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145155174 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189523203 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181328904 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17924304 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140923977 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196394729 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162119881 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.145073151 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119765929 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124195594 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16089705 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127511325 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132873739 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198781164 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186064566 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202934775 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162877054 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133208666 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21512394 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121196837 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183835426 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.197201725 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136289227 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211248313 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187772015 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200847573 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137787487 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184896248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118006382 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121558354 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157960256 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157909658 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162926524 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132695789 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166411715 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188441921 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195571959 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142952658 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219343344 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187009401 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225147682 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119258937 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.15750704 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19623059 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163275704 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.208251034 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130239593 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.18285123 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186776947 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164941205 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187776774 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190259308 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199436693 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18950204 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.188236049 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127756787 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171450326 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159044945 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160959433 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160708754 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140606778 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155447146 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147103973 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.162802992 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136992563 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204798131 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138636771 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200869364 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155601724 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19238201 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120933127 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165348889 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169574701 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168844327 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103048835 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191968867 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188680183 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173565777 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15064098 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198118991 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126314078 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345128156 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209161738 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171633828 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158779529 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135444813 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19231915 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160203425 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184366159 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181454866 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164668426 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200509805 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193749156 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140266854 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156460935 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144118891 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174956081 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135707049 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.173012144 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159061087 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.168309473 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179072723 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161596206 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167858314 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200455737 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142430404 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174027381 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136559627 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247386214 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161700545 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196613074 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16047784 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191151329 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207396525 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121529018 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123303255 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.156866949 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182172193 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124342717 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199536671 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19645869 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210576784 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169905486 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185486031 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136598179 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.1510623 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162376204 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172701504 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184141451 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157866147 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134043456 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21379792 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125100993 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155953525 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157080757 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29460829 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142812799 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19647002 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104466688 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29089188 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125986522 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128284061 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187399164 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191742821 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130533591 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178946385 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196533509 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136506341 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189264803 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130946206 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204613679 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211549631 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160902338 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195185055 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141035611 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184915857 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154206187 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200262348 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140525382 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173230385 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152945554 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218868576 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203678522 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129329844 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16380599 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193868402 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165398723 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195914038 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134390211 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208493744 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123948107 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188434777 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13598071 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151278374 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153713581 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199521794 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127103058 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202824457 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19141271 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13030132 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124131048 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172123539 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161587409 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164044539 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127320121 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207302574 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126651111 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204224231 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201667388 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155110715 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162495313 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170205519 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127701364 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133901786 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167761016 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128056555 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171077737 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202451191 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127455895 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201128756 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186910705 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158170707 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181998214 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140057682 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.353802377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125664358 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186407017 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176625563 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220826783 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146383138 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19893627 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165275966 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173956725 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158286161 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172546719 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218233634 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187422736 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.162364016 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155682148 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140159705 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134269326 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158882424 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147113203 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19327019 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136709301 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.160499349 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.162884023 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169104874 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142736572 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138185457 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225728023 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17468448 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179008815 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212456981 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133492351 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199810672 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166709707 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154473902 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158254832 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19622109 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139296348 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176428454 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130274319 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.16257844 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206284845 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152314217 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155838195 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197201759 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165889213 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195950365 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131431801 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200695671 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136737528 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198689876 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125626421 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147972372 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197015508 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132556338 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153083069 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167237275 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18166149 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162482625 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167497935 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171598742 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21993244 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121666099 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129781789 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294554034 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187440455 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192607683 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161976214 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13577681 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141270041 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183442839 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.159103016 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195563136 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126063108 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154384941 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142284251 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.178548605 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142606257 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191230294 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168485843 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182714958 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181166122 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130758241 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280863678 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138533512 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196827284 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113575266 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154197213 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139337366 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130462912 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165865574 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208803623 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208395531 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.188787191 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143301967 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160573607 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12449566 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127972524 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192573437 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146013536 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194396358 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142370002 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101368271 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164319512 seconds)
  done (took 84.310058582 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167507181 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149708332 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165503841 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219217091 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191023052 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285965966 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226929276 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243473713 seconds)
  done (took 2.755326652 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125914201 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156361391 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139095882 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141106066 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108098073 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.4430929 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128206915 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144133037 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158456045 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148727065 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132445457 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.626501825 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113881193 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142307902 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118623926 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133126689 seconds)
  done (took 4.055396087 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.562388156 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533765805 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.847530997 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.290334266 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.24828131 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.198626259 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.742882414 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.18664454 seconds)
  done (took 12.709740111 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151352095 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134248726 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.331727007 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.253649416 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.147187439 seconds)
  done (took 2.129702551 seconds)
done (took 129.161645909 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128547342 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120124031 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119598773 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149591453 seconds)
  done (took 1.611166191 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.181766309 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089625644 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091998868 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117456023 seconds)
  done (took 1.585902584 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407295453 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089529892 seconds)
  done (took 1.632768182 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150661805 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141387407 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.161524606 seconds)
  done (took 1.573755558 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.145168032 seconds)
  done (took 1.252837761 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.131720364 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119049523 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.233218073 seconds)
  done (took 1.597608028 seconds)
done (took 10.370753053 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124287251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.919860879 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428663131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130978198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.706236198 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424220159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.415613412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171915047 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171280662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134422922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128647191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687557163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.434160452 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.876092237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.386806986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.900747694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69277749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109037301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141761175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109996185 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.397592241 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134102205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109403551 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108994677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716770529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418582778 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10786666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912127844 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107556106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110608239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424035203 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108648766 seconds)
  done (took 20.850656489 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122747678 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162044868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142845179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109276127 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110800015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13595519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.11957978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11889909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19865214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108154117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.156317588 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.106975508 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11234508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13610005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132752058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106624586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136775109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111998062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114203497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135953089 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130450165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106033692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135195662 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11129846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107214862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.154147633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108817571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118600125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134623551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112058578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112241469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108276402 seconds)
  done (took 5.137354741 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162785563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172237839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144789504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144365971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181182968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110914232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219873723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145331749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198604143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112355083 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128677353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134521141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14937063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107992219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161420869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10872305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110347007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138257496 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116159824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109233766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157123506 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106905442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110290696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137922488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108500928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129897917 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136138089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120122356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107182218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140215981 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113445713 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108395126 seconds)
  done (took 5.454229231 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129318778 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.121847971 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130628637 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.158579231 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11715473 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.119903058 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149914188 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.117695918 seconds)
  done (took 2.170455367 seconds)
done (took 34.724141145 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140510546 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126952209 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127385867 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151674067 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187917904 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145035998 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125985911 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114858483 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152677255 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129873441 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107001618 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116161726 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156827629 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.11785655 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.219782801 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124516432 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223752533 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189883269 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145289914 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122628783 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116160222 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.222991226 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119946086 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143780657 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.192701685 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.109851701 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.209208558 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118213549 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149129268 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110147104 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.219443026 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121842286 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115692212 seconds)
  done (took 5.984470469 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.214522898 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11887078 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147324184 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116847095 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117897662 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146539548 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.210062654 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145581956 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118058616 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115414083 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115016692 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221457175 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122901694 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142852007 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121170546 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107696592 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.239468166 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117499306 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108501925 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120639759 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113980214 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116352952 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.251608621 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113004407 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.11713365 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.14726572 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121749654 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122575788 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.14767025 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120891554 seconds)
  done (took 5.370781661 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129952187 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130721428 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13333709 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214095632 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.144563449 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157073494 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136930909 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130366262 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166360276 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111785226 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124619745 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175433635 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126059112 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120741633 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14374449 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.12853379 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131492824 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139795106 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119427036 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126863075 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160182161 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127445113 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132924063 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.146958526 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109357691 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117122083 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.148212934 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125933725 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118214421 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123501702 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141091609 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114141923 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112136336 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174191321 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112333432 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122548805 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.16553469 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122594212 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.122535573 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.172207323 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113700096 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110995453 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.164569004 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163499173 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.11162525 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.153450265 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123918878 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123798273 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.137959612 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128598273 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.150960748 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.140499989 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.129674991 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.110509801 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138384139 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120725422 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110526421 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14278128 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126978375 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113555518 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.162675079 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118390122 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12069388 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111583281 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.15091933 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111844253 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110276743 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.143770234 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136934307 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116980065 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.174987347 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.110986322 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121713681 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.150776494 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122330655 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12165367 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.137219643 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123152367 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121715393 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116020283 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.15209995 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114113517 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113231403 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.156782967 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.130877611 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125237646 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151242196 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124064121 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114395011 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.141684854 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130223885 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112734698 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.144213383 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125860597 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111477937 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114443355 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154535255 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122112101 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107976417 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.16637997 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114804885 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110170756 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.165861989 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115235611 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115324168 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.149154122 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.152341798 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.110319233 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151590418 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124660807 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110306644 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.146086655 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115266601 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110484686 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128684891 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.154636587 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118652497 seconds)
  done (took 16.609485646 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.325054084 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.304516575 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.179092734 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.306629064 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154729434 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.204052036 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300346375 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.30307348 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110838455 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178764911 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161756401 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272752246 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144224989 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.138903479 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304343419 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.357636769 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.170632737 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149122849 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179008254 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124735106 seconds)
  done (took 5.515436542 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139925551 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146200736 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163214823 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139526003 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121837792 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.156766252 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111932303 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132832618 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152755974 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121389845 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.112997455 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155888706 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.1251573 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127413235 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155524013 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144319878 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118261452 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146583657 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13399661 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117162581 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129357261 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137180731 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119500871 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162834123 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130633071 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121319445 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139390698 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117551325 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118044423 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.14842223 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117023022 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129428099 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.146604397 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104283717 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123180628 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124731438 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.148040846 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115265403 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116610386 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.14423276 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126850624 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123898776 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.147933665 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097887389 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13125212 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107581471 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.153966016 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124804436 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105423512 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130233589 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154627307 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127619903 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.117838126 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163410176 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120294331 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127881584 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151176969 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126916069 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116504181 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139658594 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111143129 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.114959379 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120057917 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157080611 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.122872225 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.160020661 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129601133 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11226127 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116654381 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.144839972 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118793084 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.124696581 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.161916823 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12151739 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119312706 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152970459 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12071474 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093313955 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.149707509 seconds)
  done (took 11.523287308 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144079102 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121918178 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129861431 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.175269105 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125811566 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117325193 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151403205 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132119599 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12867045 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160678346 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128352796 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124520201 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163126713 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123649296 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12090704 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.157300933 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126000406 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.147860373 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158701258 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138767111 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125792463 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.147260855 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124305023 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122451103 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170011148 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123424693 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.13814369 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155857135 seconds)
  done (took 5.034091242 seconds)
done (took 51.163471602 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.299865537 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.478222781 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.255755143 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.252131605 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.279517017 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.261908889 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.254808469 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.270047073 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.668487855 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.224560996 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.253523921 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.252483321 seconds)
done (took 28.899614201 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.322795374 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.764549089 seconds)
    (2/2) benchmarking "String"...
    done (took 1.54440795 seconds)
  done (took 4.453240434 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.243845698 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.242587332 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.492448548 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.242652757 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.257947376 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.243835388 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.249092575 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.240521646 seconds)
  done (took 16.111897238 seconds)
done (took 26.27437836 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.292801938 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.43639298 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.494610417 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.238211237 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.274496179 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.239418851 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.240692276 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.265341785 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.249883249 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.244716649 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.672191375 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.506616605 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.243881724 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.619233957 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.240937828 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.256141497 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.253590944 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.510094947 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.23924432 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.27458086 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.219416056 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.233817904 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.264222252 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.246363804 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.251261969 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.25666649 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.304367906 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.240270918 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.463505291 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.240820308 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.277969863 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.238888265 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.304891334 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.243364459 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.257225256 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.248307396 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.447101405 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.248108119 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.228597853 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.274602028 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.453780828 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.24823056 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.238765307 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.257218578 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.248063083 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.32209163 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.247097088 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.353238892 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.266952304 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.250508733 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.272886265 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.612411495 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.24510209 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.246386709 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.255161796 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.495984371 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.256321852 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.294488683 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.26795705 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.245498452 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.243424961 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.238792017 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.279834339 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.24456585 seconds)
  done (took 146.508881251 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.247433972 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.242314542 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.24313003 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.24362504 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.246869633 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.244504964 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.247534011 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.248540443 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.243167805 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.272836212 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.248052112 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.243608928 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.248193079 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.193632424 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.262243693 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.271246242 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.249052059 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.245457079 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.269005172 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.249186349 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.264241034 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.249255673 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.248530261 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.245641334 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.245017993 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.328034343 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.285381747 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.279984579 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.25967611 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.249961907 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.290477246 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.255436199 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.861503433 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.121099597 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.261329511 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.26789098 seconds)
  done (took 81.818011332 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.252301969 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.250747557 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.250806358 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.281721628 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.249701158 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.822864394 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.823309885 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.230747163 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.349695383 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.619053768 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.478487965 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.244808245 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343310512 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.258514077 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.245121954 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.267773914 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.278940425 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251218895 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253856202 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.824344849 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.265540675 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.246381666 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.42974487 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.262240268 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283627027 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.645410262 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.439176241 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.246330297 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283377999 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.583556887 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.295294867 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.245478705 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594446418 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.562827663 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360705157 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.244294544 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277953583 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.247839637 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.532826586 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.246185651 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.248977164 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.25093018 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886236113 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.251333533 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.81208485 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.246829548 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.19689896 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.245609338 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.248975362 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.208434891 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.947350327 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.245261437 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.244210133 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.247493339 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.248320232 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.245385744 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.247514693 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.279398197 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.193977271 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.339105821 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.246584356 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.246889197 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.248071959 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279311828 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.246762783 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.425839429 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241075815 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.141018782 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.308558206 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.348083697 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79976219 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.246863047 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341592713 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361110049 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.240974005 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.247595044 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.246482133 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.247717049 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.35651719 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.242103628 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.924317956 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.415565383 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.257811979 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.550956056 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.24879366 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.344196842 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.242880789 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.557449955 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.249806546 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.247102188 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942188693 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337292592 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.24244209 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.248834926 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.248042164 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.928403057 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797259228 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.496192603 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.249475355 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.859761387 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.251032587 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.10331363 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.786208491 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.874977765 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.251339333 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.359066167 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.418843035 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.257682846 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.249003621 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.554302139 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.249706476 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.307948118 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.247642545 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.65028529 seconds)
  done (took 378.868213387 seconds)
done (took 608.334532262 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.131141319 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.072349742 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.226647854 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.083679698 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.06704087 seconds)
  done (took 11.722215443 seconds)
done (took 12.865488063 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.441178977 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.435043359 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306930071 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444194771 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.281894022 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.455220126 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416444844 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.269736633 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35816323 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.326832141 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.363620005 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.296896629 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.280674176 seconds)
  done (took 18.82160868 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534033213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.261951945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.315767791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537013635 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.291729649 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53231646 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.55489313 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.258358856 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41312887 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.301529581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.270012542 seconds)
  done (took 18.416716397 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526379934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.259246865 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.320339291 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520871486 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296049963 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529061355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.559836636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.263065677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.402764401 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271847804 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273447855 seconds)
  done (took 18.369324334 seconds)
done (took 56.752303672 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.288241049 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.34781701 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.285739316 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.274017711 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.268861758 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.269361072 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.271784762 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.271164187 seconds)
  done (took 11.422210766 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.269483333 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.266728565 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.267075439 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.266042529 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.269591129 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.266209826 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.270589559 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.267909336 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.267586357 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.26771985 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.26738364 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.264312464 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.266881333 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.268944962 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.26633228 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.266632748 seconds)
  done (took 21.422327382 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.269244774 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.269430629 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.268558286 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.271468963 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.268926845 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.268299632 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.267410371 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.268636724 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.266580944 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.267568837 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.26697041 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.269805907 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.266638686 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.266079831 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.26651704 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.267922845 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.26617795 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.265494943 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.273402396 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.269701819 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.267529143 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.267065707 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.267146028 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.265381961 seconds)
  done (took 31.576687639 seconds)
done (took 65.567177617 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.251245266 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.250427663 seconds)
  done (took 5.647414093 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.329994217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.325194604 seconds)
  done (took 3.805605763 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.268844853 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.268185273 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.270821966 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.268425968 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.268669531 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.269874055 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.268893859 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.266371967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.26951705 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.270365788 seconds)
  done (took 13.837500904 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.268613849 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.269358447 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.26849196 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.270042991 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.268690628 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.268630936 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.271409643 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.270336145 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.268946166 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.269422485 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.268183092 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.271078344 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.268433388 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.26864881 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.272521287 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.267911631 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.269489141 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.270216594 seconds)
  done (took 23.997133013 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.282900054 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.288269849 seconds)
  done (took 3.717643945 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.399430069 seconds)
    (2/7) benchmarking "second"...
    done (took 1.310194451 seconds)
    (3/7) benchmarking "month"...
    done (took 1.372960313 seconds)
    (4/7) benchmarking "year"...
    done (took 1.365286383 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.309085247 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.291683656 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.311684276 seconds)
  done (took 10.507917699 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.270177253 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.473785318 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.603023224 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.858295855 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.270733877 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.273475742 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.174947471 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.271954374 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.273499886 seconds)
  done (took 14.617030896 seconds)
done (took 77.275637208 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.261528798 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.290794103 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.273215436 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.267931305 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.611356163 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.308113779 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.255806081 seconds)
done (took 16.415654667 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.238978456 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.234839465 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.251485722 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.262981924 seconds)
  done (took 10.136390562 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.264027826 seconds)
    (2/2) benchmarking "read"...
    done (took 1.670186415 seconds)
  done (took 5.082198891 seconds)
done (took 16.371305902 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270513479 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.27222221 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.269994364 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.269127158 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.26862931 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.270326029 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.272424578 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.267702902 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.268756623 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.271134516 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268762631 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269966835 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267597245 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268167415 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.271522384 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26824862 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.271812704 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.268406801 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269813337 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.270696326 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.272148357 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272200868 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.270377725 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.272253469 seconds)
  done (took 31.628804097 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.269791261 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.272316556 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.271179026 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.272579554 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.270439282 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.272235285 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.270172741 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.271977682 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.272557292 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.270385938 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270749071 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.271101203 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.270834376 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.269538055 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273455377 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.267765609 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.272563184 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271746798 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270170662 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.272453511 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.273799286 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274374648 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.274606973 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271364996 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.273331823 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272864289 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.272501417 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.271922042 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275189062 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.274437182 seconds)
  done (took 39.307338183 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.274970686 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.271417703 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.272559395 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.271994374 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.274327884 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.272139579 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.272074313 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.272830463 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.274616772 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.271451471 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.274196312 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.274703237 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.271832733 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.276185293 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.271224826 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.276007239 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.275827043 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.274949467 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.274196115 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.275672361 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.273233819 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.275014421 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.272410305 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.275010457 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.270213861 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.272291497 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.272778114 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.273099459 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.272660289 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.27488367 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.273346899 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.275947221 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.273678047 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.275566587 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.274017955 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.27424433 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.277767749 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.27666289 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.27353343 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.27506559 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.276507526 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.275443539 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.274576961 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.275204073 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.275361614 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.273253356 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.275846513 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.27614673 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.274318443 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.274734964 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.275566055 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.274433314 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.276083426 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.275859958 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.275634274 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.277284517 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.27603968 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.275612141 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.274979434 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.275569507 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.273661773 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.274269704 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.275234698 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.277267285 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.275176066 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.276697384 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.278713713 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.275657929 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.275231339 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.277422116 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.273128541 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.275802281 seconds)
  done (took 92.923291599 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.277294137 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277266228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273335769 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.27957955 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27490804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275640526 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276154734 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277029476 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275551461 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278192522 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277313564 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278391014 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276381759 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280245298 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276001278 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274648645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.277022809 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276292658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.276309962 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27884988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275875773 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276077283 seconds)
  done (took 29.241982899 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276969814 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278273863 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.278094558 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279376493 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276250119 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278143093 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.279618643 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278859777 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27846461 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277911629 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278572899 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28162741 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279202295 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27770735 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277485098 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278689364 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276173888 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280727438 seconds)
  done (took 24.167092344 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.27906222 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.277393166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.28085461 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.280877477 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.277827949 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.280293784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279292156 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.278870697 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.280872355 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.277396566 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.280900349 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279888394 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.277482641 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279913325 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277508122 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.279987165 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.279734075 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279925484 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279834981 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278277039 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.279822187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27730932 seconds)
  done (took 29.300782687 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280733121 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278355672 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28044643 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.281415986 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277756863 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279907881 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.279140691 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.280048309 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.279277154 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.280069635 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277317813 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.279181993 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.280059709 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277571601 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.281398004 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279698824 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282423087 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278185811 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278215221 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280530607 seconds)
  done (took 26.747044909 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278129084 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282708979 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280275105 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282154561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279562679 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.281906426 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28438445 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279903285 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280396202 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281543965 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278250645 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278225592 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280766194 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281279261 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282200107 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279799878 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280297588 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282238507 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282323988 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281057511 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278193153 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283366719 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279594941 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281801873 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280035707 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281355144 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281267638 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281028174 seconds)
  done (took 37.022084769 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284757933 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.280843482 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.281155515 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.281477518 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.280812675 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.280807502 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.281829031 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.282175063 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281020504 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281166248 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.282262956 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.28175701 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284615425 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.281311583 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284292572 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.282769707 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284165637 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.283041861 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282239291 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283880324 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.2824321 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280387965 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.281471276 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283081604 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283304518 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.282642575 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282372664 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28013071 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2823462 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282963592 seconds)
  done (took 39.624620727 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.301603704 seconds)
    (2/2) benchmarking "in"...
    done (took 1.302536804 seconds)
  done (took 3.761811885 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.283526108 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28217152 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.282569215 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.28093143 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281215369 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.284307542 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.287267527 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28125264 seconds)
  done (took 11.420914981 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.275885431 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.285216155 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.282730475 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.281398511 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.281078286 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.271275046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.282121135 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.285066542 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.274762263 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.275262704 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.277018556 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.276746906 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.280820636 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277663506 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.275130655 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278641721 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.287509875 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.282175287 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.282272649 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.282222529 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284197952 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278442349 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280719696 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.285534668 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.273928178 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.284535721 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.284362885 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.288423153 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277502137 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.282052367 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.278090237 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.285892377 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.285004644 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.283992974 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.281815752 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.281705234 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284617306 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281892844 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.284985971 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288100982 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283045929 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.2831184 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.28098215 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.283835319 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281568898 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.289403481 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.284502877 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.287476527 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.276192762 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.280375686 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.284761836 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278577557 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.286122279 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281879724 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.282190251 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288573581 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.291259574 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.279758434 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.274973555 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.291214143 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.29236127 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.28323308 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281723791 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.288605136 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282149979 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.285178523 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288972356 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.293145689 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.283030325 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.285566067 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.285442366 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.297052538 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.288631715 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.288153449 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283101211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.287668356 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279912926 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288136471 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.283115481 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.290141873 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.290406768 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284798252 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280969758 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281280628 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.279463338 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.288312157 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.283793387 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.286483423 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.27703166 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289407422 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.293403691 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.284264151 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.275263958 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.280744997 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.28320397 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.286609098 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.27703131 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280256443 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.290278509 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.282173569 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.282355401 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276564393 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.282788764 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289397943 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284148058 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.284011215 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.294343306 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277872629 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.288062394 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.288349365 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287756651 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.278201706 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.282040305 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.288356273 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28016618 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.279878343 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.291588797 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.279381322 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.289729895 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.285328532 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284299504 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.289713492 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.291230569 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.284593494 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.281606363 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.289024689 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.282919837 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.281791113 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.291837164 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.286750785 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.285646934 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.283043896 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.291196608 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.281511232 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.290799569 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28067966 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.289524086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.286989763 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.286231611 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.280639281 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.284997951 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.2830423 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.285147865 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.287275667 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.291304383 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.283102092 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.291712437 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.285366696 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.284258065 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.287391137 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.289522138 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285857619 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.281179498 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.291157872 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.277492542 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.288140835 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.278606291 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.288334526 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285728253 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.287484893 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288334619 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.276670556 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27912252 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.290020904 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.281147502 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.28606562 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.286692699 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.287517174 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.285967742 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.278831954 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.287774106 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.27695904 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.282232808 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.289980654 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.28305477 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.286193192 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.285211908 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292723073 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28409185 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.289406469 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.280390406 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.282691347 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.292773574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.288813793 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.295650765 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286726857 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.287995834 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.278782827 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.282960672 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290166854 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.279932659 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.291440303 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292078393 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290640454 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.285234392 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.289158563 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.279069634 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.289995706 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.287276902 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.296353403 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.287281498 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28914577 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278797 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292633167 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.280851435 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.293008149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.279391066 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.290294005 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.290288582 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.287791159 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287426446 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.281950261 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286623122 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.289837318 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288346788 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292355473 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.281407559 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.289354862 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.283094218 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.283002458 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.295354766 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.29060606 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.291115254 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.299972807 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287553993 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293766948 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.291430425 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.282771308 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.289711083 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287153584 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.28785885 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294496702 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.287818377 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.285517704 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.296115396 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.293137627 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.281293604 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.290768125 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.297078817 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.28854486 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.281404959 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.294271697 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.289258367 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.291567883 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.29008669 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283139281 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295471913 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.293261632 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.297583058 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.282893504 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.293128916 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.283002362 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.294354439 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.285559442 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.291029082 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.290036861 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291723635 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.301373324 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.290336356 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284999067 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.29428572 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.288608019 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.291118965 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279921502 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.294134748 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.291443454 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.291734164 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.291245792 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.287531831 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.293477032 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.283059239 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.292925076 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.284934153 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300589891 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.310046259 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.293621816 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.295724754 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.297027571 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29246199 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.293551714 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.284772456 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286645944 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290024918 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.287595192 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.285566778 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.295714072 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285487039 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.294936739 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288989318 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.293704112 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.295062927 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.291402994 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.287053186 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.298205987 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.290539613 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.289324609 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.28514127 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.294611852 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.283698428 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294963133 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.295337686 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.287812697 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.298135892 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297114696 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.292225909 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.291515105 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.289065727 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.287766957 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.290630006 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.299653523 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.28285808 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.296446049 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.285441711 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.291917916 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.292401229 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297554147 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.30451896 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.284661588 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.296103492 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.292747301 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.284320819 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.286282077 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.296561908 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297845337 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.303726904 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.284247216 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.295378829 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.296610782 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.292032467 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.293782038 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.295424792 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296004149 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.295644507 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2982222 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.297986034 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.288688126 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29763179 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.302938093 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.295395117 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.29456205 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.288042658 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.29729503 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.304144847 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.289702493 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.295464873 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.289787736 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.297974867 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.297102193 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.293578109 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.294657001 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.297194089 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298775401 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.302943194 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295480386 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.297015895 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.300564506 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30744668 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.299156011 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.308582966 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.292483021 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.302893162 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.29604284 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.289673375 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.295214593 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.292326074 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.298190697 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.286482458 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.299272006 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.298132758 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.294446497 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.297059259 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.303135734 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.287076783 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299105976 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302932302 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.292227052 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297768233 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.299611138 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.289033456 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.30122828 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.293949416 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.288356276 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.292319679 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295115183 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299949496 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.292779635 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.301884317 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288734756 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.30138394 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.294382565 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.294545522 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.299517995 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.296021456 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.293232899 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.301100375 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297789163 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.306716898 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.295505122 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.296358337 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.29488403 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.304399359 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.309120663 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.291385214 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.303584323 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.297377863 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.293803573 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.296692508 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.302430322 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290809875 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.303956599 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.288187181 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295031246 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.294870615 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.30307164 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.301194621 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.302880757 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.290412539 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.296761872 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302388821 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.298327221 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300664666 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.295979314 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.306218866 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.295154748 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.293617126 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.302892876 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.295228213 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307026446 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293106809 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.297773324 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297129432 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.301790434 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.300456329 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301510786 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.290814569 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.294166255 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.308444223 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.303557405 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.296825889 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.297874804 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.304888029 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.295098543 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299108712 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.299300454 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.298178982 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.297646312 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.307092774 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.294727514 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.296641156 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.295855016 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304130718 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.302362958 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.305397605 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.297410707 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.306147086 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30996912 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307788069 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.293035923 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.300649499 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.298292596 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.304623064 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.301203183 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.295869201 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309285657 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.308775428 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.308418943 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301544824 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.304156839 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.295280334 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.306487277 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301644412 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.302101325 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.310699317 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.301401048 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.311189569 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.303306236 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.303932442 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.29545608 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.299003843 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.30015293 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.299893788 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.306542087 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302178077 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.307627047 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.301607354 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308165604 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302938138 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.305270736 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.302339483 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.296231172 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307572636 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.297144925 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.307528279 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.30489626 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.297724134 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.30487675 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304519847 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294510492 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.299684083 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.306664142 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.304788754 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.295814241 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.302318676 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.312148552 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317080448 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.304945169 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298164469 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.305257434 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.309647847 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306313302 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.306763834 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.297290213 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312768549 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.317707974 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298054535 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.304315166 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309164322 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.317087144 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.306655451 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.304860664 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.300784846 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.304407692 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.310301713 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.307319346 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306906011 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.314158221 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.30016586 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.308566359 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.299165719 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.301907802 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.307372585 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318682529 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.307329954 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.300405198 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.310199203 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.31789191 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303774829 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316972367 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.31531067 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.307564286 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.31371261 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299691096 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.311063145 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.302617928 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.311733238 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.307554239 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308426405 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.306973086 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.298194439 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.30900325 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.314185073 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.319388146 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.308868771 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.298908861 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.302092147 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.309413471 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.309562917 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.309338362 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.309746333 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.30663094 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.310607121 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.299751245 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318139002 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.321002869 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.314673251 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.310001773 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.308113974 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.308488214 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.313476163 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303835269 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.310551418 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.309391582 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.308330951 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.304763398 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.320399856 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.307961054 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.30220445 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.307731297 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.303180477 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.315150558 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.313760059 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.324913041 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.309123164 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.314141849 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314325978 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.310172998 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305243298 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.31872208 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.310463402 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.300119254 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.307940779 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313205637 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.31273605 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.311403456 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.307031061 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.31401789 seconds)
  done (took 772.341008597 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.315766415 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311292329 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309130367 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310949138 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313737703 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309928518 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31247355 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.309709144 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.313272231 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312686219 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.312116333 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312639347 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.311692986 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.311342563 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309744792 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30933035 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314597755 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.312675242 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.311185649 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312360999 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.31432625 seconds)
  done (took 28.736467894 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.314576953 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.312539072 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312568315 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.314034326 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313410679 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.312057434 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.315242531 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314188131 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312673488 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31115679 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.312771697 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312978229 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.313416161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.312876484 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312397904 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315217656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.313170003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311830191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.312895914 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315061925 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313734223 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.314136055 seconds)
  done (took 30.076172653 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.315078357 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.314856861 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.306620845 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.316886781 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.314867587 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.313753121 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.314736403 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.311863255 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.311364878 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.309153155 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.308224674 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.31120806 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.310764843 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.317556377 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.309198326 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.3212992 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.314928764 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.314350691 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.316458941 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.316491361 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.319580757 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.3273747 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.313688228 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.307331851 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.317240247 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.314209281 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.322689008 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.306651941 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.298460498 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.307424223 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.307356499 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298864917 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.309414952 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.307735541 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.300576779 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301309971 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.297635906 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.296185165 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.299935246 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296007515 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.309853999 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.298227211 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.303296007 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.304981867 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.292423105 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287511285 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.297008393 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.291377685 seconds)
  done (took 63.991814995 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.293477802 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.290657941 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.290758348 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289186757 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288495576 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289636927 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.290212643 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290490455 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.293455758 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.283150397 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.286286045 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.285226516 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284668067 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.286390358 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284573423 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286368415 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286989139 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280492361 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.283043987 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280810107 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.283663166 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282531907 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282751314 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.282511469 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284363679 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282115497 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279892409 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282045101 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.28196306 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.2823077 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.279865378 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281931239 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281061324 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279797168 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279630163 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.279614381 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.278453977 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.277058365 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279275229 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.277318376 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.278908753 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276873853 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.279886369 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.280504519 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280687483 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.280566532 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28038015 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282145738 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277913725 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.276645183 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.278725604 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28040006 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278145442 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.277511438 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280000885 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.279169246 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.273288065 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273313834 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.273235454 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.273220395 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.273432295 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273339789 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.275719521 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.274020563 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.270701534 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272516324 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.271023006 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268772541 seconds)
  done (took 88.273735259 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271948587 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.268666859 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268387398 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268998389 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268091683 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.268667233 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270175428 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.270450485 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.272480524 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268153315 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270371394 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270839534 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.270073059 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26912121 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270512013 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270536261 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.272363887 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270261849 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270180687 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269639021 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.271780398 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270587633 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267726717 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269970847 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271337011 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271079816 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269090038 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269247334 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268355922 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268489232 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268207647 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.26787535 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268466023 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268918517 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.270363231 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.265738255 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264778058 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266522799 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.265548547 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265041418 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266724533 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270089469 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264279377 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.26514309 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264746648 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.265147141 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264847737 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.26497413 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.264867723 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265541954 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.261388868 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264030144 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262792136 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263405314 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261951752 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.265687297 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261840355 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261960504 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260625907 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263661242 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259729035 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.262792785 seconds)
  done (took 79.726182925 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264596111 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.264191299 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.26305288 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.263860242 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26361879 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262877973 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262797116 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.264088805 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26267346 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.263466872 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262266532 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263719509 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263545586 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265606619 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.263244197 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265948996 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261887182 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264493017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262183893 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265416942 seconds)
  done (took 26.417295584 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.264259507 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.264093765 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.262178276 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266082831 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.263276543 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26549922 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.265008165 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263295548 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264920398 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264532898 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265482444 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266339305 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26529384 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263732093 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.264428099 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266082186 seconds)
  done (took 21.377117828 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.264987053 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.266208261 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.265414963 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.265638579 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.262903271 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.264410883 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.265044705 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.264692301 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.264304575 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.265155979 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.266143908 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.264317681 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.265158984 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.26533575 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265155363 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.26685079 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.264531274 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.265514078 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.266253747 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.266390418 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.262771739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.266339014 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.266503848 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.267926224 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.266834577 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.267814714 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.265570863 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.266816927 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.26727011 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267250793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.269882278 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.265745613 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.268102537 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.265782997 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.26982158 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.266916851 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.268397686 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.2690261 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.265861375 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267527677 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.266775342 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.269074585 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.270549881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.270239951 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.268008949 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267967067 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.268360381 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.268662437 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.268373522 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.269233466 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.269002458 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.269886916 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.267556832 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.269247684 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.271551912 seconds)
  done (took 70.827388476 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268553576 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268935387 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268892174 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268007027 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269509217 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.269009035 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.270533277 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.268705867 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270204643 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.269854075 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269094491 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27181735 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268945554 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269921577 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268979167 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268568263 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268702011 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269979224 seconds)
  done (took 23.996713553 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.27008592 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267550175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.270090722 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.268523735 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.268041075 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270563682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268974203 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.268360808 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271086603 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27129282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270494402 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.26912324 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269111821 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.269614276 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270713699 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270322065 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.27095275 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269695853 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.270432904 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269660386 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270917107 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270045592 seconds)
  done (took 29.084225345 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.263989215 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.260213438 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.262004856 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.275543697 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.269966314 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.262041372 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.261958785 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.261321753 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.279491314 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.288483713 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.278833836 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.267950388 seconds)
  done (took 16.38192629 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270699317 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268025618 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269113921 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268025088 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27142779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265480783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264558538 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266694797 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266246343 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266058228 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26696298 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267943266 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2683821 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263493268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264852253 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26439055 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262367003 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265046942 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263838967 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265062919 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264708671 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2602012 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262346222 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262345366 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262499762 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262508697 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262696343 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265800265 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263984856 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263767126 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26390837 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264840256 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263814011 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265300147 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263385198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266784328 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262851907 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264819131 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263981722 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266958064 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.262888656 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264817099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263496758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264158269 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263888667 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265872571 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263809613 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265100543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262314154 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267669329 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26340133 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267682631 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265475642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267085275 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26261843 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266754127 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264754654 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265456924 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266198522 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266140408 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264130457 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266372954 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264217984 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26568789 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264474488 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264657927 seconds)
  done (took 84.645234083 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267853914 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265619467 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265581521 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267766551 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26439151 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265021333 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267790537 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267251169 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267661521 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266517405 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265280061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266988547 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265150923 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267509903 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265422929 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268009188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265654729 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267519633 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2664278 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268096952 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265483775 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268934522 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265959068 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267891187 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267727254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267655511 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268898692 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268728372 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26723822 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269293282 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264258424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268732714 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266035712 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.269312842 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266499367 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270861345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267888163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269152318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26734227 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269625974 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268104039 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268484838 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269160981 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268192354 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267831019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267117906 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268687261 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267585414 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269856955 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269446964 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268105299 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267359305 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268581674 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26799699 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26694518 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268756744 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26753672 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270949195 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269570088 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267087302 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265545131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267727968 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269963625 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268646916 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270344895 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270282376 seconds)
  done (took 84.813980726 seconds)
done (took 1786.982151943 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.425537245 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.381616352 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.261030336 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.26815878 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.255697225 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.261617753 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.271164619 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.256621618 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.261366191 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.2622392 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.260474818 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.452593626 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.296441115 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.257965339 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.259750811 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.358986444 seconds)
  done (took 25.938741453 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.286668971 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.275138159 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.379516467 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.272338835 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.296590679 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.452282882 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.329138456 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.275896815 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.4306829 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.289815576 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.272691827 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.291712025 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.27655562 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.265099655 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.287026093 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.447499577 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.520419714 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.266301621 seconds)
  done (took 28.066667219 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.682827397 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.281623005 seconds)
  done (took 5.122230402 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.293421766 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.274314865 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.276774643 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.274838653 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.277966275 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.266695549 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.272963245 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.278061214 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.264253957 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.387877219 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.276920041 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.28817128 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.27365151 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.273670307 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281079104 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.318772995 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.422354174 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.285460818 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.280699394 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.278623833 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.273182765 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.361564418 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.313057674 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.284433065 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.389904795 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.27899268 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.274806892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.284449117 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.394331267 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.283619129 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.273087618 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.273268374 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.277258118 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.198460681 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.794168258 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.264630515 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.294758654 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.281492843 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.28348347 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.405483155 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.278723725 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.280914398 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.268038652 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.7856247 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.377001461 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.390954955 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.268093256 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.273957551 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.279736018 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.341057002 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.27912135 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.277847585 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.332688789 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.048798015 seconds)
  done (took 81.973541911 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.273439244 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.26985756 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450126029 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.289740657 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.267327432 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278401296 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.263663697 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.533992044 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.28431925 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.271754859 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.576144997 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.881511534 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.277758645 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.33678439 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.304504123 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.330051838 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.281872508 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.266974758 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.282869027 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.271150705 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835474273 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.273190632 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.266353636 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.358260432 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.309877293 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790356051 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.26528949 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.269038246 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.267038987 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.270340678 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840000563 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.282294861 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.320784007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.26949144 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.553644741 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.636863615 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.598271271 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.272499292 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.300966796 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.282447686 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.301017541 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780717511 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.619875484 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.268273371 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.271062613 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773742874 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.268451226 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.27358497 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.285045014 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538828433 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.273805337 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.272195309 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.273278468 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.287824888 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.271387563 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.344990797 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.357533137 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793787731 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269893157 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.267444655 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.274425988 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.275197612 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.27476078 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273615502 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.279002919 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.624187692 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.529199305 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.280941789 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.628546645 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827742832 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.269806382 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915728522 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.276544127 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.288073265 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.322542404 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.276024062 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.271914514 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783420067 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.272997214 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.272759741 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.607052446 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.269224428 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.578560081 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.290360927 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.271901814 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859912629 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.281733707 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.318786815 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.274394818 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.269709697 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.284116264 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.276876946 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.559344533 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.327524606 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.276778173 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.276241479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.301131751 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.27294101 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.287331518 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.284738179 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906655474 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.274729227 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.275578933 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291835161 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276343198 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.274520216 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.277628452 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.277961319 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565242096 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.273803923 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.276791767 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.276878297 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.275673612 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.270255595 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.369583621 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.277166715 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.571164106 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.278939211 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.275895119 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.275144085 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283149147 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.296614443 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.271532741 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.29575385 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.271294345 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.585045756 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.289245648 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.290280462 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.279334541 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.27810855 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290495738 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.273422049 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.330305299 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.282997584 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128570208 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.285245044 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.294371706 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.2775285 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.278759929 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.278523331 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.296772686 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.279772723 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574236174 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.558506986 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.522418891 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.283584205 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.279304069 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.110087081 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.282557477 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458550356 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.290623412 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.276201643 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559083124 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.507387169 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.282276462 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.275357799 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.280744864 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.555151978 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.281866208 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.593441792 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871689687 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.280867475 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.280773821 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.135080496 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.086101348 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.275466284 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.281687499 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.576352347 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.296108902 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.280964805 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.278279957 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.283756954 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.274749475 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.282080255 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.285644564 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.283707708 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.281836721 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.574705787 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47647312 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.291802259 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288658469 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799325049 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.299389453 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277419146 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.282411426 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.281735113 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.280456947 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.343448132 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.281452023 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.287848997 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.282631943 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.295304208 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820621087 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.277764526 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.297016268 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.477548965 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040220249 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.278525681 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.285816045 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.276317095 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.335013353 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828684049 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.338700348 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.573061512 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.283678576 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.322526465 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284416752 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286993996 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829204873 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279210504 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.294639714 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.00810412 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.280997876 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.762980012 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.283373361 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.283236881 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932279773 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.279443192 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.28779641 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.279009008 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.280947582 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.623468568 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.284437588 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.295535117 seconds)
  done (took 485.823303317 seconds)
done (took 628.07119638 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.282882056 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284768445 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.261843965 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.281840831 seconds)
  done (took 10.283040515 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300809753 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.288896009 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.298423611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.288884434 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.298377582 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.288665576 seconds)
  done (took 8.935295614 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.28700624 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.28321417 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.286114344 seconds)
  done (took 8.028704754 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.495492557 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.293870406 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.634480825 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.292847774 seconds)
  done (took 8.891246608 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.299068718 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.299635077 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.297610144 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.299256302 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.301604301 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.304678941 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.300522662 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.29922435 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.303370157 seconds)
  done (took 12.876356182 seconds)
done (took 50.189552019 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.285535141 seconds)
    (2/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.270432399 seconds)
    (3/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.266248768 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.533946524 seconds)
    (5/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.267868158 seconds)
    (6/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.272670385 seconds)
    (7/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.507240085 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.346638042 seconds)
    (9/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.263674328 seconds)
    (10/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.327959561 seconds)
    (11/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.316715783 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.318557095 seconds)
    (13/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.551809834 seconds)
    (14/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.494039976 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.291378986 seconds)
    (16/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.353087031 seconds)
    (17/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.320568166 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.386591445 seconds)
    (19/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.264431636 seconds)
    (20/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.361628502 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.141951805 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.09009393 seconds)
    (23/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.316083136 seconds)
    (24/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.107858826 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.284769868 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.379659179 seconds)
    (27/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.263954757 seconds)
    (28/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.262854893 seconds)
    (29/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.353810288 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.294534427 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.437945033 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.367489564 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.021098824 seconds)
    (34/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.359296367 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.438142765 seconds)
    (36/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.416481778 seconds)
    (37/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.264831759 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.355445294 seconds)
    (39/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.999176562 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.136511588 seconds)
    (41/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.107500489 seconds)
    (42/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.96338876 seconds)
    (43/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.461569958 seconds)
    (44/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.046909847 seconds)
    (45/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.267779468 seconds)
    (46/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.120358168 seconds)
    (47/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.262277188 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.283399292 seconds)
    (49/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.362043926 seconds)
    (50/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.462471016 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.263811195 seconds)
    (52/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.367429563 seconds)
    (53/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.264127767 seconds)
    (54/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.069449943 seconds)
    (55/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.471933034 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.471761076 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.085700933 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.437833767 seconds)
    (59/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.267701877 seconds)
    (60/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.49344379 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.395721134 seconds)
    (62/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.403957724 seconds)
    (63/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.360734945 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.37697623 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.144828995 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.524920984 seconds)
    (67/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.335599545 seconds)
    (68/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.294458538 seconds)
    (69/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.275104337 seconds)
    (70/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.330521717 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.268894434 seconds)
    (72/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.297127196 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.326232441 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.381792583 seconds)
    (75/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.532883779 seconds)
    (76/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.296206494 seconds)
    (77/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.469894223 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.395539617 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.373375746 seconds)
    (80/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.387222653 seconds)
    (81/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.265852056 seconds)
    (82/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.04727772 seconds)
    (83/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.309726777 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.267288365 seconds)
    (85/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.539719263 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.448970147 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.417210837 seconds)
    (88/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.264869948 seconds)
    (89/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.409104086 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.400784774 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.31908909 seconds)
    (92/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.403549624 seconds)
    (93/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.494621208 seconds)
    (94/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.272393468 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.318512709 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.270496865 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.399585974 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.365405236 seconds)
    (99/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.271187597 seconds)
    (100/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.006115453 seconds)
    (101/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.372353668 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.406443898 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.315167344 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.284949073 seconds)
    (105/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.971140772 seconds)
    (106/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.372241081 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.346862283 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.404415893 seconds)
    (109/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.331113409 seconds)
    (110/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.335605679 seconds)
    (111/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.404848588 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.305938365 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.02493166 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.334762138 seconds)
    (115/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.500263336 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.269092781 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.446613235 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.397819231 seconds)
    (119/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.317537014 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.300818322 seconds)
    (121/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.500157559 seconds)
    (122/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.323256583 seconds)
    (123/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.325632119 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.271325292 seconds)
    (125/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.384243171 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.424699939 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.325866867 seconds)
    (128/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.351813758 seconds)
    (129/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.421203743 seconds)
    (130/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.317132806 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.425477229 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.384030361 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.270769151 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.193125548 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.52880378 seconds)
    (136/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.407676115 seconds)
    (137/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.414523406 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.440098521 seconds)
    (139/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.308880243 seconds)
    (140/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.438797403 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.267510328 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.358123392 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.439605398 seconds)
    (144/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.118058218 seconds)
    (145/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.271835032 seconds)
    (146/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.376973906 seconds)
    (147/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.143327738 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.337764599 seconds)
    (149/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.634541537 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.436765862 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.399483768 seconds)
    (152/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.179838037 seconds)
    (153/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.459558621 seconds)
    (154/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.326832073 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.356686378 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.43856581 seconds)
    (157/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.472888843 seconds)
    (158/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.391383008 seconds)
    (159/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.274734965 seconds)
    (160/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.277507125 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.335964264 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.404065456 seconds)
    (163/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.297327879 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.567582745 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.403176232 seconds)
    (166/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.27338696 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.402382046 seconds)
    (168/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.408616412 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.385331551 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.409995851 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.396264173 seconds)
    (172/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.277331498 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.452327275 seconds)
    (174/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.46749597 seconds)
    (175/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.368657105 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.476982359 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.534489524 seconds)
    (178/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.422944912 seconds)
    (179/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.321234843 seconds)
    (180/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.275265386 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.499798826 seconds)
    (182/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.257053969 seconds)
    (183/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.071851308 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.399665667 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.448412013 seconds)
    (186/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.27367866 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.392767674 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.445706051 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.437331926 seconds)
    (190/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.273136087 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.419848954 seconds)
    (192/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.372301925 seconds)
  done (took 331.707639148 seconds)
done (took 332.882574474 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32552257 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.393104491 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.30423391 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.306030953 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308343578 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.310730797 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.323029278 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.305597126 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.320778551 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.318857504 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.301557532 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.312949778 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.322359521 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.316114652 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.340572827 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.307762206 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.306922737 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.315851257 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.32383751 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.322451212 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308127581 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309206735 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.335130963 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.306508704 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315729519 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.315918789 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.314148142 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.309907384 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.316746335 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.322985777 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.29996767 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.317397662 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.325104492 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.319942429 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310830722 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.318354954 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309075746 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.394769448 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.332596573 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.318892128 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.318967066 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.325943069 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.315047341 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.314020682 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.319555731 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.33590371 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318162589 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.327788873 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.2989771 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.320021307 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323602429 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.32342339 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.315381486 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.301979589 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.29721878 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.326703296 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.319587173 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329908191 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.318766661 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311254409 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.346319628 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330481216 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.320511431 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.317771288 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.31845207 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.32643661 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.320604906 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.325665006 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.319700812 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313791118 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313732707 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.31644077 seconds)
done (took 104.208212025 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.436033425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.306841369 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.470943586 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.316806135 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.476319353 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.43370779 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.319294191 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.318524902 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.317735329 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.11253335 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.318680646 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.320520133 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.308526532 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.319228543 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.436982533 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.320075571 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.319340025 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.013934259 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.320487082 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.451940861 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.311106638 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.321931597 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.320444215 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.120161524 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.307746986 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.304041185 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.453078175 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.32158966 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.017390453 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.305593944 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.30936974 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.015591986 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.451942806 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.339941138 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.330245979 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.329835706 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.479889339 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.323214702 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.438473484 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.440516425 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.468626161 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.361255707 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.308370067 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.311697825 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.323100432 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.323304362 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.31851229 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.351511332 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.307908617 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.322084477 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.017605631 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.332935615 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.330509402 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.321175135 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.323675748 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.342335873 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.322800227 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.321359208 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.454077836 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.323590013 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.439049938 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.117805278 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.117772721 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.323764646 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.311242956 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.322666614 seconds)
  done (took 107.19092726 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.382847816 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.387764776 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.423771141 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.310610314 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.363709821 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.427779952 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.310991197 seconds)
  done (took 10.800169839 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.319207937 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324476444 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363446426 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361121317 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.323982004 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.485366813 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.323702821 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.324266602 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.321836789 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.363857826 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.324872567 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.323708949 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.330744472 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.315931797 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363188841 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.326947516 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.432553748 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.316746246 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.324508151 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.465419805 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323542054 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.3319447 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.366190051 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.328221075 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.326300762 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.323235777 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.105325024 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3255026 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323526063 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.325123654 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.322984656 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.380557163 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.324193772 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.314559854 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324940262 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430253813 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.324608411 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323538347 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.326269463 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.319163275 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.328294187 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.324552368 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.325274595 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.326066418 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.324918235 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.341998335 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.326893963 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.326237003 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.325511556 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.325149358 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.366282732 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.32607507 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.32523525 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.325227946 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.372933358 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335140304 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.324990003 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.324541779 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.325889783 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325895965 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.468809405 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36484482 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.329630064 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361342831 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325019453 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.327931409 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.327438929 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.324992893 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.407026403 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.327648181 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364930103 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.326276343 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.499267949 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.343803598 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326540899 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.317965538 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.32043756 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326477971 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.31325145 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.323281065 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.324948362 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.320306903 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.325133312 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32811928 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328958723 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.477015576 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428211195 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.32681161 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.334973106 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.327240877 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.329081036 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.369841029 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330193935 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.327300287 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372275507 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.438956007 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.369658085 seconds)
  done (took 136.413972913 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.332021592 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.330289637 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.320024574 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.346206705 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.320254008 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.319302026 seconds)
  done (took 9.166440108 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.323251823 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.333226685 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.330759425 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.328092791 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.329758012 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332061925 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.331676957 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.321936652 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.3327612 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.331175365 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.332119874 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.335574523 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.330354204 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.328750232 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.33199213 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.328302775 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.331338803 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.329695201 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.329674519 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330306612 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.318551366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.330212268 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33115586 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.323038817 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.337166605 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.331003159 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.346632995 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.330011316 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.330652871 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.332499301 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.331069687 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.332132975 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.327298098 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.325779293 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.33618431 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.325103968 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333056665 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.336861493 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.332022585 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.335595372 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.335418668 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33513138 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.330638797 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.334148365 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.324280943 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.326981124 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.338274371 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.345813007 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.331091683 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.333199041 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.336006862 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.331669007 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.334381806 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.333252601 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.326811914 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328569744 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.337393485 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.333808635 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.333767473 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.324628483 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.336894696 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.334535039 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.328179032 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.335564002 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.335127415 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.335150025 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.326174277 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.336566276 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334868404 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.331421655 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.337080156 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.334114351 seconds)
  done (took 98.090589097 seconds)
done (took 362.851476273 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.641137606 seconds)
  done (took 3.844886293 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.323213024 seconds)
  done (took 3.528720978 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.252354515 seconds)
  done (took 22.457004658 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.354396828 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.359266687 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.339894116 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.318831144 seconds)
  done (took 10.573462032 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.708897091 seconds)
  done (took 3.913510517 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.332889082 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.333141582 seconds)
  done (took 5.87206449 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.498379532 seconds)
  done (took 3.7028457 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.532010466 seconds)
  done (took 3.739582272 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.351350245 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.354338424 seconds)
  done (took 5.923285474 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.300736383 seconds)
  done (took 3.507530258 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.332637712 seconds)
  done (took 20.537730584 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.351031722 seconds)
  done (took 3.559632165 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.361233369 seconds)
  done (took 3.56767679 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.807199787 seconds)
  done (took 6.014207495 seconds)
done (took 101.945661981 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.320616151 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.322578286 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.323651809 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.319918215 seconds)
  done (took 10.490481942 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.399848961 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.401776817 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408411032 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.392012275 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.395357066 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403671948 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.362622891 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.366779941 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.391214656 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386126129 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.404945507 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.388823896 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.401280754 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.380123761 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.391636497 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.40584058 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.393994783 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.406044794 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.379204583 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.390277837 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.335895137 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390985638 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.390950812 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.338373369 seconds)
  done (took 34.514016635 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.824263579 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.39763109 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.48283298 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.377451174 seconds)
  done (took 7.288274087 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.442950387 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.442293874 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.461363583 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.497286555 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.528628809 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.456420732 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.367270044 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.355585036 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.346985594 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.444860558 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.520870233 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443667882 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.657868907 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.339297983 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.658559715 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.339405511 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.338796049 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.44282569 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.493889611 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.520408743 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.341125778 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.444348852 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.446793273 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.441486729 seconds)
  done (took 35.981328561 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.349024708 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.356519704 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.342174712 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.357272894 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.341856663 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.342422823 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.342804278 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.348289862 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.339133777 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.340291969 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.342646467 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.355306783 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.341119852 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.339938398 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.34759981 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.343116024 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.34159383 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.34661133 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.348205986 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.341039397 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.342578262 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.34789207 seconds)
  done (took 30.808143171 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.326483727 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.326365035 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.677900654 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.580561315 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.326286693 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.327478129 seconds)
  done (took 13.776966362 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.399266704 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.536730916 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.331754649 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.671087158 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.755853362 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.337811457 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.333149696 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.574011368 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.859365382 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.847457536 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.387149563 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.3988175 seconds)
  done (took 19.645768603 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.32678054 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.3292938 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.340282009 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.342759009 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.385005145 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.33638519 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.340963194 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.32737593 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.387695283 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.384582772 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.335746601 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.386533636 seconds)
  done (took 21.436795895 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419148905 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337444846 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338539965 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41370847 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339252152 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333211875 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34261773 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.038307942 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.338393113 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614605278 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336500224 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415003117 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587906581 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339541333 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351450809 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.289835183 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566247747 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812384838 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339987338 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340423338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385931724 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348434029 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34546227 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.539552287 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341028265 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340767725 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.659560792 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341937202 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609714191 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581179519 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582560642 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336438204 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616841913 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987439152 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448716965 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539011964 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342297108 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335709306 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.344899223 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.347755982 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355676997 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338309816 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584334701 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339852442 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343812403 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347538069 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043320793 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345802849 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.342871925 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343052998 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588402709 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422405037 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.347220279 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343481818 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382348709 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341723112 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.348477588 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464074223 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984683391 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352463554 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347093677 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.343413054 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349610561 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338139685 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97075634 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.345305777 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.349098567 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34835107 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342768554 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337646536 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365236703 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343692806 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.358683623 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344555359 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0959218 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341975655 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344595175 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85942538 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341749922 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.344696303 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569884952 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342465662 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344710016 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.34458948 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343750021 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055182087 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351759441 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.314065416 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401016337 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.041126086 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.537663732 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365343641 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375777348 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566396934 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.313505105 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346641844 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.350550468 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341655632 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360574642 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042683368 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340536924 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.346047548 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592447348 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.555045812 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346702369 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.298065938 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815802957 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342665841 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.3717715 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347598609 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.545350075 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.942781871 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597343871 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353803931 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381202647 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346448763 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12346322 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362001224 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.352521339 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347767091 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617438918 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.126251785 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347516684 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420156393 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346574599 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34862782 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347800311 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347827305 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348223467 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.523075476 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344671963 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59276022 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.346070694 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346610715 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.353180089 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347645199 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.343721509 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.56905568 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345945652 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640037119 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347678287 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34772693 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341938282 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.563187843 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.348677176 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.352001482 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686793113 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348264826 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349167574 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59709938 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376440165 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460266374 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381841203 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.349575997 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598610776 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.354701274 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.357929221 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350530187 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348224241 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354193377 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.360412006 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343990923 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948186101 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321778192 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354021096 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352324867 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.366369293 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424944459 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358168662 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549433827 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.353667233 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360102421 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.353405093 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.348933674 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568266079 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593841289 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361619519 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528196934 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.813845262 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948264114 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362284042 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.349876726 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.352595597 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.352479731 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353048897 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352055538 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351701087 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549273873 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604588895 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341225571 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.954825308 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351300059 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354249591 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.357942331 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59720128 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.35653535 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354045942 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.355882025 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360787473 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367106938 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599496876 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571808796 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.367685008 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351581295 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.872053803 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359246669 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353186644 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354684516 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377684102 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353417844 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184221557 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687113373 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364476978 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594697052 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364478123 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.373832238 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.351526506 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354055876 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355932816 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.375541287 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35831972 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.553274034 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355925261 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351432987 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99474298 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128137432 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904232626 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366399158 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.350923283 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354231675 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.056051302 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350611498 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357074043 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596068959 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059225734 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348449627 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816212397 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.363230582 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101225556 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59653517 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574415182 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353937729 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.357270932 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619079181 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563416845 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383312202 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360899801 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357614598 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.317801834 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894430918 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362868863 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52922135 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075455656 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361982054 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351707121 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.396823328 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.365256562 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739567224 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355677878 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357609666 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359602472 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357270131 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189372773 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358334319 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358463776 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986421238 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362350392 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.831017863 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357780071 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557580327 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605624025 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.575982425 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.35107743 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.363492742 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.594729846 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601369178 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359032751 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360503081 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906562861 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.213911523 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.364031514 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357823508 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130326773 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363431258 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630769127 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.359924062 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.357334618 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361967227 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357534911 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361097203 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.358857361 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364442952 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343827582 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830651716 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.354457485 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349474261 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366271961 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361279586 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603825547 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.37408841 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961762823 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59028148 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356660809 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386124333 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.364208784 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368740896 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.330850748 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360424354 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361678205 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400820412 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581522735 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361589593 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.330330654 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436042325 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572103524 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358377008 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369471692 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572991797 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.362230784 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.367268407 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128133387 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39219645 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360817892 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376482402 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347122141 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394553381 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436190627 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562957595 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.606226822 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609293757 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746692786 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370086714 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36108602 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.378863483 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443251867 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369060675 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.363625639 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.358851021 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967326549 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120699414 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975632651 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609186137 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365848063 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361213685 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362563996 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599057077 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363235809 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639694224 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363084892 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.366933496 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386744005 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371927393 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365649336 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574680445 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636977818 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361610525 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372421712 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364586637 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.365483563 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611844657 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.576371434 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839748498 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901491911 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364478291 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369101397 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089568684 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634874593 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364494237 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364695264 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364113644 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.376201857 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.375675636 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.391267867 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376125183 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589211996 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605851034 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005342746 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605508554 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.542377898 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.280399974 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373799769 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61138854 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199415036 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.565580258 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978587588 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071438774 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617494251 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441241788 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567729773 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.367041761 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602640322 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.365135392 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36508248 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368853804 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36428384 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.365256996 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617126315 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977681464 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618903065 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.371260339 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.365413278 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399815819 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.567694234 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590199069 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090124557 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589533093 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622137555 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371840557 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366954329 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984733108 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616872099 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363702447 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.368419119 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58256775 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365922702 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403382967 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.238156876 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.367619372 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897206992 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.573917834 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389183564 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366463696 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097424826 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985318008 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.369173034 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845924893 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371710769 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370487309 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645142809 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.37383296 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367630239 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663861033 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.372883917 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381535457 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570410617 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.976957602 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119520085 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.389384726 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38068897 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.372204952 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371595019 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37216348 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370157322 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375469872 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.757703372 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371335841 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370722268 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377218636 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.372596199 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382561396 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.368841926 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37247028 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.373925357 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.358438705 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.372545013 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380991263 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494898029 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913766334 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367803028 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.98590797 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.706277119 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617915687 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384281839 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.34147939 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.380203552 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371888512 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371971581 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366000309 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357853678 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896989804 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.38064951 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.623780204 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375427691 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.586295153 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584977007 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380159033 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574333059 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382227235 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394200004 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.341648269 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37242763 seconds)
  done (took 970.879287253 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.371702259 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.358333195 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.387310366 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.421301011 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.369959 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.363697051 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.370640408 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432228476 seconds)
  done (took 20.319246977 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.36226987 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.367606215 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.377292438 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.366437064 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.371814091 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.831917953 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.37072073 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.368079354 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.383327502 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.372324055 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.368092959 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.04044896 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.388819995 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.368888879 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.37055542 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.373245373 seconds)
  done (took 32.322577795 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.062127419 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.394600213 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.919202486 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.408644841 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.363463483 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.359429409 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.502225346 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.375363706 seconds)
  done (took 25.628098945 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.377932444 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.376822303 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.379391444 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.376497443 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.379871959 seconds)
  done (took 8.131452568 seconds)
done (took 1232.428020443 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.379032222 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.381252372 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.379757264 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.382490425 seconds)
  done (took 6.765064679 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.344848182 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.344198774 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.345127246 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.355395068 seconds)
  done (took 9.631164793 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.027492476 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.975340795 seconds)
  done (took 5.247574875 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.892542105 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.889962234 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.885023975 seconds)
  done (took 6.911243483 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.662538792 seconds)
  done (took 2.905515251 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.329040561 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.366970703 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.070954203 seconds)
  done (took 8.012025013 seconds)
done (took 40.713221838 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.375057475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.120738861 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.528642603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.374620588 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.524484141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.535607164 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.615490145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.366321316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.375239097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.365363208 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.386210194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.520595843 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.60566792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.130439447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.604655972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.131635566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.525628686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.365124248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.37507177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360602933 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.622109433 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.376431815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.361267234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.371061155 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.519762635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.514986746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.369148003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.121321698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.368608562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.362043457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.508443747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.379212552 seconds)
  done (took 82.304433454 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.366507194 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.369015028 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.368212367 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361552532 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.366274975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.369298123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.362385343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.362038113 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.363958159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.366178735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.364580478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.385360919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.365397903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.36213636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.382285156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.364458925 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.364811041 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.378391662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.363172649 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.361687134 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.366718479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362520408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.374866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.36334159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.373077293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.378952857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.362777999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.362427555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.363434559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.362864378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.36377307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.384418038 seconds)
  done (took 77.014532222 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.369579916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.365570184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.366498419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.376398782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.363832401 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.362737364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.363662916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.363403047 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364507641 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36455709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363855832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.36555258 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.370523159 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.382015861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.365585888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.365217653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.3750449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.366526304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.365282372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376121493 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.367762487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.366288579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.382083417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.367106983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.390447826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.381891542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365502776 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.379991224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.368158589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.367626445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.3876356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.371287621 seconds)
  done (took 77.101573791 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612933895 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.38990575 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.388286791 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.382606728 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.389068208 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.388094686 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.382214037 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.618247511 seconds)
  done (took 14.801665527 seconds)
done (took 252.466930872 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.388376022 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.866450702 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.412266782 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.382358346 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.393944814 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.409405697 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.600315983 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.408052717 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.599378047 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.402383038 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.391578827 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.382511673 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.179848336 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.526755038 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.191464042 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.300532689 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.255273443 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.36869797 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.938066602 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.652051284 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.402955457 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.37429828 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.183821034 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.254825557 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.347304743 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.452563494 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.472045368 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.60356 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.535508587 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.45189138 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.88464292 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.388855619 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.381238814 seconds)
  done (took 64.031527374 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.380619161 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.39308657 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.389044259 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.389059902 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.39066349 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.392183914 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.381879825 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.392363517 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.392500567 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.391340889 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.391093023 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.391032182 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.392564789 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.391867014 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.391426339 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.362557324 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.379879889 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.391179141 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.379885795 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.364497063 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.39028145 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.392631882 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.391876287 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.391670271 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.392845319 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.389831827 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.389012737 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.391410428 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.391863983 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.3912881 seconds)
  done (took 42.8942214 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.391475081 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.960055534 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.117313632 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.392618239 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.385947511 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.387858646 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.668657034 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.393080886 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.389968161 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.38807673 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.852415905 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.395885236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.415521023 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.117840776 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.384033838 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.396007064 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.392835066 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.384691129 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.96362157 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.387654634 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.667933359 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.393866533 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.66791418 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.389064184 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.388031482 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383955891 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.393443183 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.216982117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.40334595 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.857542699 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.140820734 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.661439261 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.130706336 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.160562594 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.140985705 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.394833167 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.396926796 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.849377995 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.383581071 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.389496765 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.667415338 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.388434625 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.118348638 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.060419036 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.395269955 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.395107128 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.245900811 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.85880319 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.624662657 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.392457215 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.16256831 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388225114 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.396002635 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.389758775 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.624683102 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.389572015 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.385249344 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.228995851 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.383654306 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.668871191 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.397415886 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.388360408 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.96807109 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.391340174 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.96238649 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.389627165 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.395192933 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.391382875 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.128164541 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.386798531 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.07443248 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.39807755 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.398487268 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.850007391 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.964219942 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.294203518 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.390654351 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.971074959 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.174277235 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.683261008 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.395523151 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.201537027 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.687514978 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.393416718 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.40176547 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.400769534 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.397656388 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.462491623 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.664953972 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.006715828 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.071218576 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.228022748 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.664982064 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.398300271 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.388372603 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.231315946 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.392642782 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.398546013 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.122634586 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.076595022 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.400516461 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.398680042 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.070211666 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.403627868 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.675320857 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.397220738 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.170204743 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.392355975 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.512148921 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.400908779 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39718393 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.394377325 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.673591209 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.396279339 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.402190147 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.068058085 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.877249005 seconds)
  done (took 194.010491856 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.387203586 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.386794284 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.387117963 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.392277283 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.386396439 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.395405304 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.385623945 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.386618725 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.393268281 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.384050222 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.388554356 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.393488998 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.390429201 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.384933846 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.38704583 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.38483777 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.386617036 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.381976622 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.381880996 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.385343299 seconds)
  done (took 45.011937252 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.403228306 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.947721372 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.908509426 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40135964 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.40229213 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.391465102 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.449075377 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.403482586 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.403766133 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.690198083 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.561047342 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.402983154 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.402740947 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.402166327 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.910408169 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.376225514 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.690965655 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.947692144 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.403429819 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.948553921 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.375131495 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.405039888 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.394480601 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.950573255 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.702105707 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.672647469 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.450895969 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.951850665 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.405537472 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.403189992 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.950171059 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.404609995 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.395044136 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.938351525 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.407238795 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.418608686 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.402604872 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.449586552 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.449947048 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.691917464 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.957089864 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.683302977 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.416671436 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.55713106 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.405006028 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.375085733 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.960729762 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.407552129 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.380124905 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.405326046 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.411962004 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.919484404 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.397043251 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.921690998 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.406727386 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.406533056 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.950213334 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.923859142 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.914816003 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.565377221 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.392199962 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.67480788 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.4062015 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.961317504 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.407105563 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.405897441 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.406854493 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.564896889 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.952838964 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.677274779 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.696525792 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.695602871 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.406123522 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.463208569 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.407773906 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.69613559 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.463839303 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.782853549 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.695142825 seconds)
  done (took 126.451718844 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.672366877 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.503304789 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.777576642 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.986889298 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.901372885 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.533552371 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.508708455 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.641811738 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.40913113 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.515582988 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.060371935 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.494896125 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.153766849 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.458032157 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.503784597 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.528618359 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.795765149 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.378794396 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.026168556 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.025370752 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.401411908 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.496054057 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.913480858 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.601140296 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.39701349 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.962195524 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.338760674 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.919877028 seconds)
  done (took 53.171561098 seconds)
done (took 526.822112761 seconds)
SAVING RESULT...
DONE!
