cset: moving following pidspec: 5609
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.291626087 seconds)
loading group "string"... done (took 0.553014323 seconds)
loading group "linalg"... done (took 7.718102695 seconds)
loading group "parallel"... done (took 0.173778325 seconds)
loading group "find"... done (took 1.173771238 seconds)
loading group "tuple"... done (took 1.850225427 seconds)
loading group "dates"... done (took 1.26041318 seconds)
loading group "micro"... done (took 0.235156456 seconds)
loading group "io"... done (took 1.067845993 seconds)
loading group "scalar"... done (took 41.246787817 seconds)
loading group "sparse"... done (took 13.747197442 seconds)
loading group "broadcast"... done (took 1.061004379 seconds)
loading group "union"... done (took 14.732514563 seconds)
loading group "simd"... done (took 4.833766373 seconds)
loading group "random"... done (took 9.70809493 seconds)
loading group "problem"... done (took 2.067722368 seconds)
loading group "array"... done (took 22.903206135 seconds)
loading group "misc"... done (took 2.099885213 seconds)
loading group "sort"... done (took 3.510840601 seconds)
loading group "collection"... done (took 19.42632974 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.49369565 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14178586 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143150094 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14899745 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186180332 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136735907 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154918107 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.109190341 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.995909903 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172293408 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139564326 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.48898487 seconds)
done (took 5.084819187 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.208369675 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080447506 seconds)
    (2/2) benchmarking "String"...
    done (took 0.093143841 seconds)
  done (took 0.891492081 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.088198232 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140652008 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08927524 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073143697 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072231147 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090476714 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07242519 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.089704388 seconds)
  done (took 1.347215465 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079556054 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07418409 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.091993777 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074962022 seconds)
  done (took 1.039325857 seconds)
done (took 4.300622186 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.716995575 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.259582609 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20052967 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.498874356 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.172135864 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.203948003 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66472619 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.361257217 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.238138852 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101437439 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126604989 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388977778 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113721625 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68492702 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.085421167 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122341613 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.167610492 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453954719 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.090097735 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089296013 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.112697158 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.150059934 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.11024465 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082194594 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.176450881 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075773985 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.181669386 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.103108276 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075120476 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.265888702 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.181607554 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.707256664 seconds)
  done (took 10.718857501 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110129074 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134073976 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074026122 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15142682 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13252487 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077737696 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.093381802 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075310573 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118842125 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175321384 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111254002 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137439658 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089022788 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077609007 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112896066 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225816557 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119251124 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094662328 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096660798 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084807089 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.133236559 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090685328 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.104672317 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10317147 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163835173 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200963907 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104701633 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121601806 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.075718045 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.106854595 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139580266 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154630479 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073625373 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073606295 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171647406 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119517281 seconds)
  done (took 4.960790089 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107964589 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188543789 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097666075 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167507078 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091477343 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140919817 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073685311 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109606541 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255895482 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.199954165 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157988828 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142055769 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111233546 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075317031 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096262552 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074321224 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.502238202 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.119947988 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149569617 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091233473 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096033703 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097319961 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366893687 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08089317 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071763985 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095819958 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066127384 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153904232 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095001728 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.166411456 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096484185 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097967958 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128181969 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.186601337 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.124910686 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105181372 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09096087 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076174962 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133019302 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071256233 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176874836 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097378983 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074942683 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118584985 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.101689928 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129822264 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133067698 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073516968 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092278976 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208077448 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072693654 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106871569 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.957533267 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176281293 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102433452 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071476267 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330770808 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111483513 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074822656 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071471775 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277167469 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.10810908 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092960014 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073290962 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093047743 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076571497 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380732456 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091034926 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.746274635 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078656269 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.087875567 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092330682 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091143556 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082290176 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07988792 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11091671 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072734417 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093935185 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.072884417 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.090618022 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.075975732 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109983855 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080133698 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091832959 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143695335 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.090313331 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093727652 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121910937 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.077091274 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.090846828 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123302092 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077501456 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073544887 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130906069 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073900932 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111183197 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092638692 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.136645412 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077168765 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.130975889 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088815532 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102717977 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095610968 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124857988 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104445868 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076639503 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.093930104 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.073056178 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071014885 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.089851515 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142805523 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089983797 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075129745 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073551426 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.104357289 seconds)
  done (took 21.720116554 seconds)
done (took 39.228849506 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.33057078 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106294132 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105507771 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105739148 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104201096 seconds)
  done (took 1.544096195 seconds)
done (took 2.312940846 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.267342153 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171718178 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070975133 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.162312182 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091670682 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168179292 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.154688092 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10646967 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.178954791 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0709383 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175759209 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072720127 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07116946 seconds)
  done (took 2.5553936 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090206561 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11064081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078219998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088196062 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089032027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08889543 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105277591 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098038933 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105561804 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079646124 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069978072 seconds)
  done (took 1.769270072 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089401121 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090369244 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095211658 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087142052 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088868879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087935379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10435672 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094011546 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10563935 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0800178 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070317303 seconds)
  done (took 1.7607223 seconds)
done (took 6.84329348 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090322256 seconds)
  done (took 0.85029545 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.000921464 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.133744459 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099066165 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.159028925 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.302426272 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.207517919 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.583696896 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128073646 seconds)
  done (took 15.589235172 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.121809865 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09637816 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075833159 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094043855 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077981551 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093792354 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077480416 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077935936 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096148136 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077097875 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093298303 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075482573 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092307541 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078492658 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095710658 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07656729 seconds)
  done (took 2.222195014 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111195631 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110599955 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098922585 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083956263 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098042263 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079338 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100352959 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08082051 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095811282 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079235245 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101697622 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082227945 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099984128 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07838661 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099370389 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083631058 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096119034 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081923907 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101244148 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098171346 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085090378 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09647372 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08324744 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099489137 seconds)
  done (took 3.096776376 seconds)
done (took 22.526192907 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147009716 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080684603 seconds)
  done (took 0.995804687 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096665839 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113000538 seconds)
  done (took 0.984491935 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101152646 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093113349 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.128454524 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092427899 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094300802 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076508073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123930803 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.075490007 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094291824 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077694543 seconds)
  done (took 1.732227089 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080972702 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079970178 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101934613 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11363216 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085821845 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095846172 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081163018 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097126143 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082690129 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091623748 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084669201 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110292763 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.082121219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.111184975 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097408005 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083714154 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103298807 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080093698 seconds)
  done (took 2.439367453 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076985377 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077010289 seconds)
  done (took 0.932224393 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079726703 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074525508 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095753093 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09364339 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07633909 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.073792067 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092115357 seconds)
  done (took 1.364934324 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.475766034 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137962293 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263057269 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079320117 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.117967627 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.323671227 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073379379 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098977033 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079919458 seconds)
  done (took 2.464822063 seconds)
done (took 11.686664975 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.087524922 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094583449 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.124704074 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.445927253 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11407657 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074439312 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.151666988 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252230795 seconds)
done (took 2.126616162 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.137063231 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604591868 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.42623054 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.222918155 seconds)
  done (took 2.038126671 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.406349359 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1027169 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085056339 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075126055 seconds)
  done (took 1.454984832 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075443788 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077572199 seconds)
  done (took 0.938661882 seconds)
done (took 5.351218443 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0753356 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.125473525 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074534453 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.07147287 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.094228115 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074386827 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.091102037 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.072523576 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071662702 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091590564 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074114208 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091016797 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.074491029 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.073077027 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091965375 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071993211 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089380624 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074911591 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071600538 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08981786 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072176563 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09104124 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072760818 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071171224 seconds)
  done (took 2.768807445 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104015315 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092859736 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080820507 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098146683 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079290803 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097939712 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080580271 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092356526 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081884486 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094499708 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078679725 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.205248743 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077807472 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097180073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077991871 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097112994 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080548993 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092936551 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077915425 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096697927 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08126727 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09324193 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080191952 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098636476 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079030145 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096111783 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077439765 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092458595 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080977624 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096711142 seconds)
  done (took 3.551100443 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.079865642 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070955693 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091188586 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078949564 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089935484 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077030493 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070553188 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091593338 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072877587 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089513011 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.074250554 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071168891 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090685176 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.073285339 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091461432 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076113711 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101627276 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072887075 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071200703 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091350704 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074572848 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089642417 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075925236 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071050643 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090954361 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072314324 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089227445 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073221675 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071777207 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0901167 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074661723 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093200597 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072797667 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077774437 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094192114 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072032057 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09365951 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072657993 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.071969085 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089354273 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072081261 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089367593 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073766218 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078532304 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094234549 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07412108 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089981371 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.074107165 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.072922323 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09444661 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071839572 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089779254 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.074958823 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072513193 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095670442 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07146683 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091544791 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072650231 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091580295 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073854517 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071103005 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09004958 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074704928 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090189303 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089350671 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078718768 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090364806 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.074253582 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094716375 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07552772 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.073620927 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105850829 seconds)
  done (took 6.656781794 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078793658 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100382324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075505785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074266552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089937477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073317009 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098540002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073082536 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092770698 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091454787 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090414735 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075409798 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074151113 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095348315 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072949554 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093240733 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082252732 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088722265 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072974325 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094242744 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07443664 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09654899 seconds)
  done (took 2.655010138 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209350146 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100734449 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135121572 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090629458 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110883586 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090242521 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098602203 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080165785 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098439573 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081172959 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10106705 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096994853 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091860733 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100367274 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082149642 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102678455 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07892981 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102563931 seconds)
  done (took 2.645007154 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089387563 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093529569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096832398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093671374 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07621457 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095422178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082616297 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109433676 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078313824 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093261457 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086171098 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09659259 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078691817 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092900664 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079090677 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074858337 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0966097 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075270156 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103684982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098714645 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082129722 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103390323 seconds)
  done (took 2.77288942 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092015925 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094955209 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09533442 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097527618 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073885524 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0947665 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083297663 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092916159 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085238804 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0761394 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09442544 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076319373 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.100775788 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075062996 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099892097 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075399221 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096505584 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07518976 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096031526 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074567405 seconds)
  done (took 2.545079795 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114698803 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108944517 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090050185 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119359019 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089941087 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10983507 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118842702 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091034285 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108311135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103410035 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108738923 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091077801 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119697474 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114252624 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090848044 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119721355 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100588803 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119038927 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107945566 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091278672 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121655486 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090106299 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119293489 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092190451 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11024988 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089593124 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109372426 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114728193 seconds)
  done (took 3.763802359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076193759 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073983654 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091773409 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073529489 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071809154 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091874362 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07202674 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091743554 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075162764 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072116408 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093895916 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075472435 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093972101 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075906221 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076896256 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094370714 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07454091 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090970848 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073599736 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071966355 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094180965 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075162423 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093760899 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073559288 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072231439 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093864136 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072785113 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091062619 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075651612 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072690792 seconds)
  done (took 3.224298312 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084169676 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098753517 seconds)
  done (took 0.985350213 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074190961 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109337807 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073906751 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078859048 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100545875 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075966281 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104062265 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080491132 seconds)
  done (took 1.496152189 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094314487 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112167188 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082490469 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106038293 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094238025 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111012843 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135391326 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100279671 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.081477139 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092875568 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.092680417 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093598387 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.081835141 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075773525 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.101406835 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082245435 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095669142 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086179279 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101425604 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078973144 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099770293 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088100655 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077509582 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103304075 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076004169 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10643146 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08436587 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107900317 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078583237 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10512425 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080778812 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088812358 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080385686 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09898018 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077602662 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110484722 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08969306 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097382916 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085213979 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.080374324 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10468989 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.073906411 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100628877 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081638323 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105265722 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.080613293 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10092986 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074794107 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072760733 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.098001144 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074256777 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094958819 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071270057 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102678526 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.081160682 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108512274 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079580613 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.095859678 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.080328332 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077725672 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101345246 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.077405451 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097087419 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081073012 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1017984 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.080432335 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101617211 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075207968 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.069302701 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096620631 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084401109 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118270919 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.084093354 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100930666 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081679927 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096243481 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079683386 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101454667 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084258658 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.103772465 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080797124 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101771653 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085142677 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094343114 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.079672375 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08203523 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097491569 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.078901111 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.092739963 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091710283 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09820724 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077216113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072583488 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104453262 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.078388988 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099750285 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.074396999 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102747085 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070659922 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099773641 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082539121 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075748914 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.105424769 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.080995591 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101867905 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083453361 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106739959 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075402873 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.098664189 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.073216712 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100948594 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.079395989 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082060732 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090640331 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079174615 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.097440019 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081802174 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103041474 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078126278 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099408028 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085022028 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.102096401 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079631807 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072426421 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09945029 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080628428 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103587213 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083193706 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098238862 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.074618129 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093134113 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.082198014 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.079413001 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101710896 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081638014 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099176169 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070775643 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095714432 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081905621 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10351295 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.076687989 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.076139087 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.101344691 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.077078436 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098820494 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.081208446 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.096831598 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.075716703 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099017906 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078708639 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074740217 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104539219 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.077536204 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098688328 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.079853184 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104556395 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07848709 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099979361 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080122024 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07982382 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10275795 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.074175837 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096042029 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.07870529 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.105173228 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.078755084 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093602766 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073754259 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08196766 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.093922595 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.079901375 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094519123 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.078768148 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099954293 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079219683 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07904631 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.096914757 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091145381 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108896082 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082189636 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102102086 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085332171 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09963363 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07827983 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098430137 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082164874 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100679449 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.084287726 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080522588 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10194354 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.078127192 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092906763 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081963153 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103051535 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.075947687 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096186546 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076086037 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.080337581 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.103099085 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.079919508 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10026318 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078402217 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095516387 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085984367 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.097902347 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081088562 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.074340197 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100214619 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085353337 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10224781 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082309637 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106276576 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080093711 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093628678 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085653272 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097365121 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.083607131 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.073986891 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.094465316 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.075566065 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101650112 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080342059 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097691458 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071576827 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083477059 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104215113 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076327248 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.095779696 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.080753613 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104782129 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079142956 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098852353 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080981172 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080338447 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110844972 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.075591909 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099919242 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.086131602 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100329408 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.070879989 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10313558 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079600639 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095164179 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080285713 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.077488735 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099869115 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082800271 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101253201 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070596508 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098354761 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079398365 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073979622 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095622828 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.082866476 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10007645 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.078498785 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105391552 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082824886 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101240057 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081493942 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09916898 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082719451 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10074591 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080889504 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.081042116 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098569306 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.075305355 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098669673 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07636114 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096293463 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.079510042 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.080287017 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.098977353 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081381822 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099666784 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077574915 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09854938 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08246208 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096665311 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.077913182 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.075360167 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100077842 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077417027 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095622803 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080154761 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093647939 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085788638 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.079837329 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105585028 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.076420444 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094120075 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.081582121 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.098864256 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083034292 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100244298 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082940511 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.076908153 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100453739 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.079809133 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105303345 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.074215266 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.105668866 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082424828 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097333189 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.080660506 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095373467 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.078863549 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082668547 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.098150834 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.081601469 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096728525 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081688171 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100845041 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07991334 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.075835625 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098715046 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082490949 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096790194 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082892691 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090859911 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077220939 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.074910004 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.1014217 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08367456 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102577656 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080290161 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099681697 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083631763 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098948001 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074669621 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.083987477 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104830777 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.081856129 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10600192 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076695972 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098737821 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086738625 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091308836 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079989022 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.076638247 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.095690347 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0849281 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102434377 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085092097 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.097236817 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077635444 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092741352 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083539769 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.078696724 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.092382061 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078328455 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099660999 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080035504 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078425031 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103238943 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.079264577 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103142793 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084471835 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100517385 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.079184938 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102101008 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075011934 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074973694 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.096986043 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.080180624 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102288464 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.075618805 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095154926 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082272121 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.077971138 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098659506 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.080386086 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.099413471 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085277412 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101428902 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080846097 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106141038 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.073113274 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.079868004 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102048958 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.080693349 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097294291 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.081927171 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101028797 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083484558 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104287006 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082456902 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097143211 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082896402 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.078078639 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101255424 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081267941 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101550306 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.077570147 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103223257 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087465874 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.077270893 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10053657 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076606811 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09867039 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081906298 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102539504 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.080638827 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103973668 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081234555 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.078140161 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.104753575 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08091831 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100980872 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082992591 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099088961 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084999705 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09593398 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.087534239 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096872425 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.0840566 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.078066581 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09553827 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080745208 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100913151 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080548132 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101817894 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08350967 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.075910789 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097078271 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078609053 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.099432389 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086439417 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10651242 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.080766874 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099921576 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077004069 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.073553444 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103723717 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.075749071 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.099284914 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.081231207 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103102479 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.080845848 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.096489977 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081810476 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.084973941 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104531814 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.083062913 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.095965287 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.083068448 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103400349 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.080069148 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098071414 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.078566828 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082907548 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104767236 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.078780508 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097286048 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085749386 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.102549025 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08428892 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098963264 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078371245 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.077215732 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097058586 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.082805103 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.100657449 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084474718 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100580687 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081795178 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107899948 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078461283 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096831051 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087779909 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080199933 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105789926 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076066215 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.099381804 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083521995 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103583259 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076405143 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096398233 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.077153169 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.079456761 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097638469 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07679254 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108017279 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.086072214 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.100166431 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081258803 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099526985 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077879637 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.075339315 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.098375269 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083155888 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099683651 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.087967334 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.097106575 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077916536 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.075949896 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103246177 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081629676 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.102358762 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075927632 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096709245 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.077562936 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.080052832 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106155888 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080214569 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102378503 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081183616 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101348085 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.07969453 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105758721 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075987051 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.081143372 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10948484 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08261869 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099324462 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.082744487 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107103896 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082215308 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09708212 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083846313 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.099906288 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.079676956 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.082736451 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105056514 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111393042 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082962652 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076474386 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102238881 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.080860127 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097478731 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.086529645 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103203421 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083761964 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101885809 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080696159 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084248999 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101930662 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08317002 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.101651251 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.080657433 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101183184 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078665863 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079263907 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097600944 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.082677975 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104248247 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08153566 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106621812 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.077395067 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108268452 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.086911703 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102359422 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.075797293 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.076618201 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098045792 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.076963434 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103703757 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077046849 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.079411837 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101392904 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08147647 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099441082 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084141524 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100649857 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084866371 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101513226 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073505225 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.079362169 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.101516577 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078570417 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094631466 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083168022 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084254923 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085852281 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106399147 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080637421 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.079431743 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.100274442 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.079235488 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096828165 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.085250747 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079581338 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.101611201 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.077181999 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102617725 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.083312684 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102416875 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084604919 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103452991 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.0811732 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105729381 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087152112 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.075428231 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096653354 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.083527493 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099567137 seconds)
  done (took 54.073748232 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123028082 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105406527 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072242592 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094266789 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117678514 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079526948 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073094004 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099196735 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077694043 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108211601 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073105555 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095042152 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093159055 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123048197 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117698528 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108359256 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073902414 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097971612 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074405118 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077877236 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114863135 seconds)
  done (took 2.84951199 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100117729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112644574 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088955911 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115270416 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10538573 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090309349 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111523123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110215879 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095002104 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106679689 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114250022 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091436479 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.106203558 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085702774 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107119686 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087576666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115232684 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105010564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091560938 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111166545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107896926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090117866 seconds)
  done (took 3.101668954 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088120432 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.080337382 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102849263 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.073233521 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101105108 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.073484226 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105659497 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.076867023 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085152319 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.097897881 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.077125368 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.096941416 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083480257 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.071620998 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.098795524 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.075443117 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.148285837 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107413754 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082699269 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10388385 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076700093 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.079444889 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098750443 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.076683937 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.097739729 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091039392 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.1035602 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083823914 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.080888171 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.098838951 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082225139 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.096721464 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.079318171 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098257237 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.078239207 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.076505546 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102244959 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08198001 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.096323296 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080013501 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.077759762 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098405963 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082699246 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.099705169 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079684328 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.074221231 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.102186058 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081296498 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.093841334 seconds)
  done (took 5.234752157 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.111438379 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150257736 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102836451 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140768814 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.094276863 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112428564 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.081246447 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119057141 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098727282 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079550024 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.119105307 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116231588 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082457974 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107950974 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.084611064 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103159525 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08324503 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09841773 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086051803 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09908018 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.086065491 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107181748 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115887252 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.093496118 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107518056 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080098897 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.099318448 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.08602074 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113784889 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108772887 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087884932 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109383575 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115202149 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.085193419 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097632342 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.085086728 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.117960624 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.081898209 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10542718 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.075677329 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10488372 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087152787 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.107035528 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117374382 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08377469 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103138916 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082405878 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.094887947 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.093584509 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105781388 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091304648 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116694151 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106582021 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083158752 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107222415 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096151399 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103528331 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080071047 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107086375 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.091103085 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097979518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085447778 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115872511 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10474877 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09003668 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115704775 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104079588 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087186155 seconds)
  done (took 7.79253678 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112157706 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107483491 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096300875 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119180694 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107430293 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08707352 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106249626 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086847944 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107692842 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092577961 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107781974 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153733699 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083757927 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112826741 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086803712 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108726668 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.085556032 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108272161 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086207751 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108476322 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.086639039 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118462142 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107343126 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096547149 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120462925 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104764037 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087277263 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10784617 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096811649 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109081441 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120443529 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.087281026 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107359113 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096443441 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121040538 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107633573 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081093678 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107906704 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.086082259 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108492716 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08394121 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119470066 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085690271 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106512912 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085597782 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109108341 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117210104 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.098824703 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112741482 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113819982 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.086624832 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118646007 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085460535 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108161313 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117974003 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.124410458 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09873806 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118196656 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086211508 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119013111 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118777014 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12604574 seconds)
  done (took 7.333981044 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109645497 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113771024 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119985513 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074858915 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075567731 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110303468 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075279658 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.098551919 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111387254 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092456592 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115696985 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086240536 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111556865 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114876227 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086518811 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112172079 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106099188 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0878836 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113141177 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086768838 seconds)
  done (took 2.871708909 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088016501 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119610088 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080441039 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107055248 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082782447 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107512547 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081193735 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10296567 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080436914 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102655025 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091951871 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111795817 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079312311 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107359572 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090288151 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108047709 seconds)
  done (took 2.414588708 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100321755 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120897474 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.101786445 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107255993 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.075537941 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106053308 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.0817098 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096525059 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075522847 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.116631091 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08536829 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106572115 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082632208 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097527286 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.081319958 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08452226 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.097200566 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08458669 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103384869 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101353995 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106691208 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.080758585 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104661929 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080391786 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103903041 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083835523 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108005302 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076441742 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099351561 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082196952 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103193661 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.086959504 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098288902 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083880653 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098630788 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.07755366 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101394664 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083679514 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084139901 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104579262 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076839533 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103893561 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081901879 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101603273 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075365109 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103408927 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075595884 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106001375 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082348503 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102726136 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.083164268 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086415715 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109550112 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.089714599 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111025388 seconds)
  done (took 6.019432206 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094669291 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103978185 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075785325 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07626612 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104432767 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.081195961 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105345688 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082561962 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102999132 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077620768 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102579195 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085014998 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08086418 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105667298 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080230608 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105720158 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.073836938 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102348208 seconds)
  done (took 2.519058992 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08622756 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078601221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109511097 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079401244 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102193654 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081859171 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096878045 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078536981 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076415714 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101191014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079233994 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103424512 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077747991 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102800318 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079911809 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099360392 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082840509 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077051555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101631869 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075177389 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103746819 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077957425 seconds)
  done (took 2.828755915 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11605118 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.119877324 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.087890538 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.203833961 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.119683009 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.105199879 seconds)
  done (took 1.633515263 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10491139 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136385237 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079571832 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104323966 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092479358 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106734686 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084055269 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105708774 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094011942 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118295393 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105091293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094897342 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117726006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116082251 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090473735 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113238166 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083083167 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106075723 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079085923 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125931345 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105166138 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095263712 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106330203 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083370469 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106729809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115588067 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095581149 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119220838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105880967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095759927 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114130748 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083741614 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117310191 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117786377 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082042249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11749299 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084028662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125882017 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112852219 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114529832 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084230414 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112058669 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09544816 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112832572 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11619986 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085812775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112310212 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084664953 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106106867 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131837516 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091989657 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116422128 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112168949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095758089 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116979322 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131142102 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118266535 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095185277 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113770093 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118339223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094957865 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113921154 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114984573 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098260193 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113485312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115379114 seconds)
  done (took 7.844667403 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118323308 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103277237 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084347826 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119630237 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11590874 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083620013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10654997 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083956297 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106342227 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080896829 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149296857 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106140741 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093773816 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116664541 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104893283 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085239987 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105181815 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094264946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103880573 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132232524 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083991827 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11691991 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116563383 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094090754 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119837519 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113418584 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083383616 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106496042 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084050489 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106601611 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111737895 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085463722 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116304552 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080607457 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116754112 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083816167 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107841474 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111092329 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085810476 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113084425 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094701889 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126798457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106371944 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085816688 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118789345 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104634946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08631469 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101635476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08619416 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080350034 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11902702 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119753145 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119401375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094293396 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107746801 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104976322 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085847291 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105772192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085469029 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113174935 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093858243 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106403971 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132014823 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084309233 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106650695 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116298364 seconds)
  done (took 7.704485266 seconds)
done (took 148.073406013 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218534573 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.205877506 seconds)
  done (took 1.306714386 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096021294 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.133689008 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.093695932 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163511013 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081456232 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.111962865 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135552023 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094459043 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102369498 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079698597 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101156489 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083520691 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.144821074 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103030325 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.079641411 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103569526 seconds)
  done (took 2.596760153 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113931872 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.242916605 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120858973 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.078037108 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10669439 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080568503 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.076979489 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112194119 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.080487824 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101686379 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080676519 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10213073 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080985207 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.079212325 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103335318 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07943079 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.101526923 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080397979 seconds)
  done (took 2.713976357 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107797298 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140555396 seconds)
  done (took 1.143025618 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.245412945 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.158414717 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227740732 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.361525797 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.188482437 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.332864877 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180425476 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177068698 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.170674714 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174316427 seconds)
  done (took 3.103473216 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114553282 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171597347 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.288395332 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.150825438 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118944301 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094359755 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151361615 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121272702 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10185007 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12443159 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123519118 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086496006 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13344422 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111142188 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089219905 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.1074461 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.113232108 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109773628 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08893583 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.110688595 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.112901117 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101985576 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.0890594 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.109599207 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098880853 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123301247 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103470055 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080439271 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.10829451 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.089668759 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084738883 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115408631 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123162388 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.366014742 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.090992523 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166294942 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.087631869 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.105929285 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089994396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.105397154 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.090694714 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112209159 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.09478334 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.108408248 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079947937 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107770258 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.080377492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.078782133 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109640716 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.086430219 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109354914 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.085274112 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.143644083 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109992396 seconds)
  done (took 7.153436923 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795836027 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147383303 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085554375 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.860699101 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133898152 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119658272 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.758278556 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131667011 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22971255 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.767330374 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125239883 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115575301 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197131832 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.227265295 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.977246561 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307203763 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669694541 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094437295 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136762182 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.143521179 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088880587 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131035378 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123500618 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.420654615 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.084994354 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105756148 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.087987299 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115376188 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152042201 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084579499 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108929529 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168527464 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24100123 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172031292 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10787812 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08304736 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106624802 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.158700172 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260566052 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185310093 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.167977546 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07955583 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105907444 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092003336 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126121345 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.079495902 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175924593 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.161855672 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.163016273 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085348928 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115456459 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089651749 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.114501868 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153617875 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103837077 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285951192 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316774505 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105321683 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092175519 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120967523 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23612615 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106743945 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.193255774 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13172913 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.203315422 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084955158 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819755226 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15760882 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083342533 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111891639 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.089864943 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110171647 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.091634414 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158289219 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398349635 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116396489 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087173582 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081830885 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220236037 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084511975 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106042576 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155313316 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084569427 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11356356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094866053 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116349125 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.158953806 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.220103139 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116136185 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090347021 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110546837 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094352241 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.107832218 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208673079 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211327372 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151064679 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210328225 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114949424 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.155321873 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.157675987 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092447099 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18238131 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091209793 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118940137 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094141556 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.20738712 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134215859 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084264615 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10945457 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088999199 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137492642 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087207333 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112888127 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.160027572 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.450765233 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.155632338 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.104084274 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087494752 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114095951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154892537 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088852927 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257981754 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113495323 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158894709 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090515215 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103496663 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.091002286 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.154641683 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118064395 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112086008 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094612491 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112928595 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.229765836 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186633971 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118534602 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210098585 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.172667964 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113369654 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.162385182 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.089635198 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181207542 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092762424 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114341422 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085577094 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813081426 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.093720705 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11307048 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087005349 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177550102 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105859477 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084980445 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083686435 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104134753 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798969504 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109407808 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081108873 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106416687 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091172796 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11291253 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088276076 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110447539 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153318612 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22127564 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093225045 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110818768 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084304747 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.152490757 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107213698 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085040436 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105691806 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086524626 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.090633726 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110093153 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084381493 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184200985 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1508128 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.187467636 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580519359 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083733213 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107069126 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197656215 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106246589 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261371241 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113400686 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.21669104 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156785148 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081007246 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312931012 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.158267712 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178357998 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085886729 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.160658544 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103970454 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088010987 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.152100594 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.106880155 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088186895 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171528458 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096592522 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115944412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.985429451 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106967276 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223931445 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.079698808 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.15840517 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107943073 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113430699 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262190664 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105977622 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099328275 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.151655561 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109549888 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083929164 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.866484894 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084886893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115027534 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090149053 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214442008 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.156433188 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112635775 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090403554 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11588852 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.15415882 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207438073 seconds)
  done (took 41.713867406 seconds)
done (took 60.618273335 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255964353 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210759011 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264208975 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.164889149 seconds)
  done (took 1.915519675 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.177126874 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.121361937 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141435333 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101123005 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.124528715 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102402466 seconds)
  done (took 1.686632649 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.339728426 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.292744373 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211875877 seconds)
  done (took 1.766460587 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.241550029 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235747615 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459055482 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.311393152 seconds)
  done (took 2.269110392 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198460895 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095268258 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119843316 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109554875 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164567277 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.200568161 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.112366723 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.167490152 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10305747 seconds)
  done (took 2.2354032 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158567859 seconds)
done (took 10.956248321 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.203177736 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.242257987 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.143535264 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.132649508 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120623546 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094795784 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.150706566 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.144106686 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.254708589 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.135531955 seconds)
    (11/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.218145684 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.270846929 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083995416 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.115206187 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.089100894 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.130992145 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.231945044 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.093431681 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110984903 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.089889775 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116210292 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.162598881 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.205815678 seconds)
    (24/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.235758063 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.234609808 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079022073 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.15286655 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133212403 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.159087894 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.108251024 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103445968 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137459411 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16145001 seconds)
    (34/309) benchmarking ("sort", Int8, false)...
    done (took 0.199579699 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.202417053 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078233292 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17328186 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090128205 seconds)
    (39/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.195201959 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.128989148 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114905163 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0895012 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.268996881 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150349136 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191100909 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103888273 seconds)
    (47/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.172595999 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.2276161 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.185378326 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.10302413 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.197239216 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.129357759 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.087269506 seconds)
    (54/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.104951095 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087122029 seconds)
    (56/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066449823 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.112676399 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195481749 seconds)
    (59/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.178091055 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.131411412 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.077823373 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172695796 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.214780089 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.078532874 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.116995522 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.085200267 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092172514 seconds)
    (68/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.106694877 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110854829 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067746082 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.191488366 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067530817 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.186478826 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066863783 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.094834381 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.094794122 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106444515 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.079829905 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.154444563 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08429542 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.219915498 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.235776795 seconds)
    (83/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.086824676 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.132995905 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093760086 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.222297847 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.124105025 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.232992699 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.203502343 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090784849 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10580469 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09623084 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.185613252 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083330152 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.119373231 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068147585 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130014071 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.180135771 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.203795595 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.115608827 seconds)
    (101/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079902319 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.093680661 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.103081474 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.193593715 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.128837558 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107063206 seconds)
    (107/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102807617 seconds)
    (108/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.124092459 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.104086426 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170316292 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.15725736 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.103854044 seconds)
    (113/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091143284 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132592879 seconds)
    (115/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.135127035 seconds)
    (116/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.161943192 seconds)
    (117/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092494326 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.210551864 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.084316907 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.138642285 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090197445 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094968143 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.182413254 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.090929311 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177107275 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0869569 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174411123 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.083534945 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111820553 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087831003 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.13231564 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.082557838 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.190749383 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084767845 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118949611 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068490908 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110208574 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.10872128 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.113038437 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.082559885 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.135531257 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.186179731 seconds)
    (143/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.069451692 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.130397835 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084123414 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.079699002 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.092689704 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088780827 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067148241 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.130116065 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.088605861 seconds)
    (152/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111524577 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06807928 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.112571703 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083670114 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17659632 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.091524799 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220592005 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.159759417 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077155673 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132911104 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.174959796 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.105342509 seconds)
    (164/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092083843 seconds)
    (165/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119042355 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071549488 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082259004 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.116259023 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068726319 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 0.173866118 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082224733 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.177036493 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.204085865 seconds)
    (174/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082091911 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.091954729 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.16833322 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.163850497 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10365981 seconds)
    (179/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.158362222 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.112306703 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082374582 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078436828 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.236802298 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.096529042 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.184092611 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149035152 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105339521 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113806856 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111085999 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106644247 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.116858279 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.082588373 seconds)
    (193/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079891151 seconds)
    (194/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133941424 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.091337811 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.094732572 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.191777307 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.129156936 seconds)
    (199/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112508052 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08130119 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.145242743 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094155529 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067285001 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.104699531 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067937304 seconds)
    (206/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093121578 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080650314 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081051483 seconds)
    (209/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.125123729 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086737464 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.092629044 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137325579 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.115221045 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.08885122 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.176801601 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.158687332 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106775647 seconds)
    (218/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077225161 seconds)
    (219/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.163437866 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.156862519 seconds)
    (221/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.084107483 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080626877 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105557345 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069037784 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07871891 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105942754 seconds)
    (227/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.131420545 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 0.175911728 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.161426822 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083182472 seconds)
    (231/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.115511258 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08185758 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173387996 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07942175 seconds)
    (235/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067936319 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110633107 seconds)
    (237/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068639309 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.106446752 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.083190476 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.081068043 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.19184921 seconds)
    (242/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.102192602 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.071165423 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068704572 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.127481613 seconds)
    (246/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077602114 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06787609 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.095707755 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.106594312 seconds)
    (250/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.104287445 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149516046 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106227954 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068091628 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.161637055 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068455658 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135399145 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08092183 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.105253427 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08285139 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067673677 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.107732662 seconds)
    (262/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069126784 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105237435 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.088915078 seconds)
    (265/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.086128769 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.140533288 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084500766 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.157424643 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.079824158 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.114918715 seconds)
    (271/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080109889 seconds)
    (272/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.103045894 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069507486 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069336045 seconds)
    (275/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.093099636 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.087671005 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069108719 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.093381864 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069934001 seconds)
    (280/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067898241 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.113540445 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11236072 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.105814897 seconds)
    (284/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079880374 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.092732525 seconds)
    (286/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088850357 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.079665104 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.104786139 seconds)
    (289/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082494114 seconds)
    (290/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.0670172 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114808891 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.069387616 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.0945184 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069786547 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068734349 seconds)
    (296/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093761745 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070084573 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079110118 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.094688461 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.096406446 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.105170015 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.10382448 seconds)
    (303/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.092703802 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.085866211 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078801585 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.093827823 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081137055 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.224890182 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.198978025 seconds)
  done (took 38.548576965 seconds)
done (took 39.475009907 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09568778 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14570847 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091560682 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13322588 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.094886594 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.119454782 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.089767059 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.091353074 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.11960533 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.094321208 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.118341854 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070665575 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.117122015 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.092306168 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.115756198 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111836616 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118136384 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088772835 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.10808882 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081634541 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.083237676 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106879018 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083177992 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070700746 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.1190873 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089120276 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.112499509 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.091998668 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105742175 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08183517 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.079591532 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.113730624 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.080165742 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119992795 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087728978 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.108815326 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093080546 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.089979114 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.109164591 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.080793508 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.114588617 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081752706 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.086820943 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.114753622 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.081910129 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104655634 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.08489134 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.11884671 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113412184 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11030606 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090598584 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.090354957 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.11586611 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.086678116 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104845404 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08520851 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.10418431 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114402579 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.108351368 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08753767 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.08806318 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.11413534 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079699402 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.108352642 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085921397 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114072599 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093413533 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07955217 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116526235 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086305299 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.104972091 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086540513 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.079498019 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.106336778 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.090988496 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.116318506 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081010882 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.081582985 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.113851681 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.08631477 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10589975 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083911267 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.081724762 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.107892571 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083314404 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095758704 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081573893 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.086568898 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.105902178 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.083575906 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112025562 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088427138 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.081470199 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117382903 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079989737 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.105911329 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081859702 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.080501759 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108204552 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081591331 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106373238 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084517713 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.089801351 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.109068381 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.082646974 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118196114 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081595731 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.111197726 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081457901 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080819638 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.122038561 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091114631 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.106225456 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087092006 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.079368284 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.108795216 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080009799 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105266619 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081739036 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.080103837 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.108541151 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.080607155 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10882294 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083752136 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.093799735 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.10652056 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081047284 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108594608 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081697904 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086143074 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107079712 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.080734021 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.107133017 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080286732 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082846812 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.107069713 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083063534 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108430656 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085346795 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082418572 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11290065 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.085801384 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110318639 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081739662 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.078864342 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.103991941 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086498386 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109147525 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.100850579 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.079707971 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108345724 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.080791695 seconds)
done (took 15.64604244 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082684648 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179068514 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.14044917 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.115972431 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127227392 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.08161628 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117099569 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113321204 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108860874 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.136229714 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106027273 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.125686778 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121051991 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.104750685 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082258266 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084094999 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.10860811 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.096548962 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146506449 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.101115558 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141190754 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.10521949 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.110635519 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.132176543 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089562546 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125584349 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.081793013 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110931884 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085598671 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131394921 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102283015 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.083635063 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108810429 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102825223 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124509785 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088888116 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.107689321 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088752113 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106542354 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082772494 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.128939842 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103554823 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.112827705 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088208363 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109626846 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.08638795 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.082332446 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116139292 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092268491 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111695909 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09617689 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137118371 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.083259605 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.116925359 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080155942 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118110233 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089968648 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.110231587 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.081695726 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.10904928 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.08254709 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.084703086 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123383892 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131734292 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086508908 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.115687486 seconds)
  done (took 8.047918742 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100214587 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134881085 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.101015084 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124457045 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082175264 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08157812 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108450588 seconds)
  done (took 1.724031268 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083985937 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10715275 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134619475 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107540327 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131392227 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125520125 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094131029 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.081944423 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.128097812 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083298123 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133388435 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121956644 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110403376 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.090143396 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138219332 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082217131 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136244683 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082322597 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.111264412 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109656535 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110561305 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104312808 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.110173879 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083977681 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.099293682 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110029468 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158865429 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087996669 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082852108 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.112090452 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.080637756 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147763316 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.099594185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120640734 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081063527 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126435856 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.100735898 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105762143 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.09930907 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.11248152 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.10080823 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.082379564 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.110743043 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.080220298 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112609196 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096492074 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.111184869 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084916005 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085617106 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132512658 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.083356074 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125832268 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083585827 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.111344617 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.086219876 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088618338 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119142899 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.083261178 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132314237 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084448083 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128383122 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103354853 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125260683 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103233245 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109857131 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.101762925 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102108928 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11253281 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084360733 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.111893168 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.102928887 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.106156043 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.085939807 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.096007342 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111986345 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.109159122 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136813887 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.083535338 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120504438 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083089844 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108768217 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084202934 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.108925207 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113846084 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0829973 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113741037 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086500993 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106052035 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.082963739 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.085737186 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.107624997 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085137963 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111492215 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084918623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085858986 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129369501 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.083601141 seconds)
  done (took 11.102194305 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085464585 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.083899629 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11239172 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085180201 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10914455 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085362975 seconds)
  done (took 1.569941316 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112311336 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.109804819 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097332898 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.112466126 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124675649 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.133838121 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107151593 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118658533 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.100918703 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.121167176 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107637386 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136255746 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112553292 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115458634 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106715581 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.114628825 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.107422937 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116153062 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.093563217 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115266309 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101275346 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115067626 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089267725 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.128762096 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092891011 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.114132195 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089875424 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.120295593 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095050175 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.117838495 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089696477 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118028555 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090895948 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117045555 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109488185 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113715856 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0887585 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119015722 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091381424 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.091490116 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136493087 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088200165 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121057836 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093580753 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.118959831 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.088488045 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121516555 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087834042 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.134283778 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093043419 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121791628 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.087540493 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119053478 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094744767 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114920263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091869921 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120379937 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108514073 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115502104 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.089177701 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111960333 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093369828 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11863768 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093034252 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118328025 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094957725 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114629443 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089422393 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115214675 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089789637 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.093349437 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.112080258 seconds)
  done (took 8.759846856 seconds)
done (took 32.192963391 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687908423 seconds)
  done (took 1.689787351 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.679995897 seconds)
  done (took 1.684713653 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.617652739 seconds)
  done (took 18.624086957 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.466566205 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.565417879 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.821783017 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158928359 seconds)
  done (took 3.013828576 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.961687199 seconds)
  done (took 1.986195697 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.278065056 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227314057 seconds)
  done (took 1.514604056 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772832217 seconds)
  done (took 1.792328531 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.439958591 seconds)
  done (took 2.453207364 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322940887 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.150749957 seconds)
  done (took 1.499090711 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.558608147 seconds)
  done (took 1.581650782 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.803393952 seconds)
  done (took 7.826432068 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238014644 seconds)
  done (took 1.269648447 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283500517 seconds)
  done (took 1.304164355 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.630240894 seconds)
  done (took 4.650619228 seconds)
done (took 51.904225497 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094459229 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096282727 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123329915 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094412325 seconds)
  done (took 1.423731163 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099259041 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.089165312 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124404603 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.088939703 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125845395 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.088322909 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118869548 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099171265 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115909809 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.090167923 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116267959 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.088912805 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.118874651 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.091444272 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112243897 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094451138 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122364072 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.090823548 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.092349708 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.11803422 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.086828053 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120221403 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093123266 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.115898211 seconds)
  done (took 3.531784164 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095035258 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088170579 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116893161 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087622071 seconds)
  done (took 1.414333056 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.095264742 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.099695736 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.127025808 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.093258131 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127719512 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.098801893 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113356588 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.085936672 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114768926 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094012628 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.083311847 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13469004 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126444937 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094345588 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094836577 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109753028 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.084848113 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.127553773 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.093501705 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121069846 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087074025 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.118424711 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085643648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10070817 seconds)
  done (took 3.543742209 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165526386 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.123370826 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.106154129 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116030472 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128013866 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.136318451 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.081178191 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.136338158 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.081396164 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124171341 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.08653235 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1539428 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.094484399 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.10780519 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083092155 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.081015338 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121486814 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.093916072 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.112507778 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095940251 seconds)
  done (took 3.264161581 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093729509 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.086246317 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109276002 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086291765 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121111536 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091379785 seconds)
  done (took 1.625302765 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092709723 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083862246 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114566898 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085488872 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114625164 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084304866 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.081916663 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111415371 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084006013 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108924591 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086381713 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.081710049 seconds)
  done (took 2.166508694 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.491616809 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.086136269 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.110754864 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.084462689 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.092817743 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.110037773 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100050381 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.111014732 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11041179 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.109037074 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.084353947 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.084947014 seconds)
  done (took 2.613179414 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202987503 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092971412 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255957 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338375237 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155784529 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161151222 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269788404 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160594366 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179199574 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106172364 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187753718 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15304315 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150148539 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172979455 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109537267 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.152849416 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169577989 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193373706 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144659096 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197323619 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158012681 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163463116 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174283823 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147664414 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107314496 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153027087 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114801646 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09949307 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167327214 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163615774 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169039184 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144625951 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133744699 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194471063 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200921397 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171520027 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27096978 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130300114 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14808183 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161015217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245270328 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109106034 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213753906 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12249923 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126268497 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176460928 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150838948 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172890419 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100618221 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137451382 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174779459 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171651572 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172510791 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132103446 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296125758 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145600942 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113850677 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175258992 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179281324 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182217306 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162549088 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11445181 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177132453 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176958789 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17266859 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112933146 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159019713 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12111632 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167597867 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188742246 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171701521 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158075036 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178311725 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131157252 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15792577 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16360924 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120650681 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172495294 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155265755 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115220142 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118728946 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133509105 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097173708 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190221462 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118820896 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197883556 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10321024 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.168844388 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19594871 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15331095 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157000562 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157967122 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159856352 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115297926 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113606674 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139674746 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120398738 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152563012 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126840103 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124127305 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138377302 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.120762961 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119335627 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.118652243 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153131426 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09749187 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15852358 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158235061 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.09489397 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160741918 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144971128 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.117242392 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163952998 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177600369 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129799816 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099739369 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185789221 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153541125 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129789533 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169083119 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181670372 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149383263 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106619025 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160436897 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185580112 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138150977 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18175513 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135530288 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102761918 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135708684 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153161665 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123641789 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152996882 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126232998 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.145392509 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183984135 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09296179 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132815052 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168148448 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096698729 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123893029 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109519889 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132080046 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103532096 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.13743686 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.130863432 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121664775 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155130625 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149573127 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149296196 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136853108 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184324457 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101085893 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.146639815 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142629818 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.0886725 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169346811 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177630764 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124981145 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189154814 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159988707 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188336617 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159902058 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098103385 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171815179 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125687539 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.08659472 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159031963 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156741596 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157264122 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174769252 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184508848 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160852105 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147450208 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142009621 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1306681 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.15912132 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149515974 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13237393 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129336696 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152153882 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118165827 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092594295 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123531622 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108734688 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127404654 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099991951 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202062862 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156543647 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180160254 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156911766 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109583639 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175791804 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121577022 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15822162 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165345678 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10613055 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.176881359 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174763428 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161836976 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138810624 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166450611 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088994248 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118565925 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101509231 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158569737 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127511184 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103129585 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138961571 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176028124 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167013961 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142911357 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193666896 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163412234 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185204587 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.088708515 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16358494 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162249692 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15213758 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146538068 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131071992 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.117721617 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171425522 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138644622 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182095882 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155819649 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162243113 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18891723 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145920508 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099111818 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145111632 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160180484 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13448305 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132144519 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141218576 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131105276 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117940747 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.12406141 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093905053 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16466357 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139704952 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16863539 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142602976 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162899544 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093749477 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138799538 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156183091 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139086015 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084564614 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159874868 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176904431 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138925334 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123224821 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166123454 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126257922 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.300279903 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183689581 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175268355 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131967074 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109961286 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156403994 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157472196 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156468584 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173415241 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113516682 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173017155 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154450543 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.130632856 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104511727 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142951023 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144783862 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107811303 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128608394 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14781869 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104524271 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169558051 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138134706 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153867946 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157363135 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11723384 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.139440389 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10902155 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191222347 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153362051 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171865609 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145509679 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157187678 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191049347 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091985404 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125481916 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094277324 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173563756 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128843714 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152661913 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.177908881 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191409018 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156308949 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160044105 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105722017 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.114931719 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124519921 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1436309 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218433067 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111429835 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131732167 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179913545 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109808473 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12814625 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157693324 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278735256 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142214655 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13848911 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110275211 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267335723 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094679081 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127608736 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154964129 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163410628 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103371857 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.170571991 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160172796 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112028168 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156104368 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132235369 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181422694 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199430111 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163549671 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166823808 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09968978 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153421904 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156060577 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170172751 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139256624 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104697432 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158604915 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17614522 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.18110126 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.127407796 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128676974 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156723267 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154964535 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163077832 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128546738 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191731869 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098591949 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156971832 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13604503 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090925968 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15215211 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.178962877 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130917749 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165915844 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152192956 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101049106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122479897 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1172859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153309482 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13950654 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.0935933 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164046639 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.120663259 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157103811 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145634843 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126830373 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14929971 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112674029 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13191419 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139441922 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110927132 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133020079 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.133650077 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172611034 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126449696 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169462538 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168143616 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158269439 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153742504 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112330803 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66464875 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.095283503 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174356221 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143733467 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177734652 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14458101 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159923103 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126396135 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145205591 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160604778 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144425388 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.224086298 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129100922 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15259707 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1277302 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138827003 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110330027 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.126765442 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117174485 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155637384 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137458319 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.101793012 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151812297 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140666984 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.099600447 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134989401 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177902913 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14333283 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168666328 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174951343 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106281495 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160615591 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166398991 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126325164 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153224951 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136506522 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13794562 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144611148 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.096804004 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131459617 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174557622 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.090646803 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154941365 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156149703 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156262921 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127858477 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.129849255 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154996228 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136845952 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126658444 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126850713 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147128257 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1509475 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099739194 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.122900337 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122160667 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14924259 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.145985188 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093192354 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160905546 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175799861 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.091966843 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127407339 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275331911 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123939584 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183749459 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138761046 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130685027 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110329844 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14285784 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146352378 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153504441 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098690778 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12626077 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097744385 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161194656 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111012165 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152833156 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178902776 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150014381 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192973161 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.101654696 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277416943 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136368907 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148712278 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09181642 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124015491 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109453653 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129954707 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109401717 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211522733 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176604012 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.114421733 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.129763158 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094242807 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.119902115 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100557111 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156416336 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149458688 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123280091 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138461896 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110002535 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110568526 seconds)
  done (took 72.145831105 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154462573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.160826704 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163367866 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199152437 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16465401 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249768601 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.205730049 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233871177 seconds)
  done (took 2.655864555 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.088347491 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.139870565 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.12127834 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131923871 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.112153749 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087555424 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.321508895 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.128030705 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.08546792 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.143764398 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.126282615 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.113925027 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.524118386 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.085425764 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.112742691 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081295787 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.11287186 seconds)
  done (took 3.630679168 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.464717057 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.728262602 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.47284042 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.120813284 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.166554271 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.132233697 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.774645849 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.192185103 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114194616 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483934854 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.747446498 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.184938688 seconds)
  done (took 18.706158223 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119294171 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.110424797 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159175852 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157517189 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115560584 seconds)
  done (took 1.790094299 seconds)
done (took 119.527451212 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.09970298 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401504782 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073379968 seconds)
  done (took 1.635687994 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105455885 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.132697938 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10710725 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.132371617 seconds)
  done (took 1.611479061 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092848517 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.092874046 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.13470854 seconds)
  done (took 1.446278354 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.307280413 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157587455 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.158704999 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10051684 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.0951965 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.125079179 seconds)
  done (took 1.456298031 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.091718873 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.09293257 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120883473 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.09516011 seconds)
  done (took 1.531824408 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099453889 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071397576 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102804632 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076378643 seconds)
  done (took 1.485882866 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.10785275 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.12482521 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099905987 seconds)
  done (took 1.470630938 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.12260627 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.134721554 seconds)
  done (took 1.393753424 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099258401 seconds)
  done (took 1.228058597 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.112430734 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.163258888 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.170709232 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114241041 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16928187 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.147314903 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088292877 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085170987 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.116298374 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085670651 seconds)
  done (took 2.387597733 seconds)
done (took 17.501881164 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101488396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421457801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385116965 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139994569 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691465138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404518075 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.028783197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141515547 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161383218 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087708354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130883108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667933151 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01539328 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.342980431 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973445231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370767597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683219112 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115515728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086789084 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11402709 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020211312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086027481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11550888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.084997108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707888725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391001784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114965837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.341230761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113502541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09513938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.372255387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116247632 seconds)
  done (took 16.744016167 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093492115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172542787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097606404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131413852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094003112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.087890107 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120502221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087380533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177417037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115303517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105002215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114798435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092872838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086733902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136253778 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08647772 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116356366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086888396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114044785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089074578 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104078416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116579612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086720681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115277857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088661151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127639798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088486109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08609998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117124839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094067361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119325231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087426825 seconds)
  done (took 4.57786642 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138611766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181927823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098952091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150746258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166871952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089612632 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194614987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.140727464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151558159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116871131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103618181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117157722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119783006 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116926299 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.106628649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115814061 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088490729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115063824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088416794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086289918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136125906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086211559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116701754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087437361 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115448578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101446188 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11598996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088097403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086239869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124908618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089076468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117827039 seconds)
  done (took 4.902216282 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092615076 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.091479051 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132010744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.102277781 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119192162 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090973713 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.11990179 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090043855 seconds)
  done (took 1.98314612 seconds)
done (took 29.341613177 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105827893 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.092554635 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131247739 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099166797 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127989359 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099763393 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115630175 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099575831 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.098575004 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127110184 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102391978 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116297153 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.088674509 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114838758 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102406013 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091314739 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131497599 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096301294 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131525379 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.100169195 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118763 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101362845 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.096533488 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131634032 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.100486519 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131526839 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.102198244 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12382352 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088240164 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119142716 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100924093 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.137653866 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.08984318 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131918347 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093234907 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092069774 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.11899806 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09151595 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13108946 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099982835 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123039735 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099847082 seconds)
  done (took 5.732288875 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114306875 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146147843 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10954076 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081823598 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119965443 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081510981 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.145895315 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079931844 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112172239 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111958029 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104802354 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079703511 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079139144 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104417897 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07824637 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076394733 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111221298 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077366558 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077209169 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.109086831 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080789003 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.103707322 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081554606 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079493975 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.106540465 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082055065 seconds)
  done (took 3.689164815 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095047529 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.10180496 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.1381787 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.169056352 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.120809709 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.124710528 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097549509 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103497071 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134415767 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087300802 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.118983666 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.114145652 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135488406 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.093814224 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119930285 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102308808 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100281978 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.119440864 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092056148 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137786393 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102861921 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127434722 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.107734989 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.127824624 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087656983 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089078403 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123579048 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.096017093 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124671655 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095051042 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122853879 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090777558 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116984337 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100157443 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.091622344 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118105843 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105399174 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126856955 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095507459 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.117720189 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.090464066 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.088912024 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139221846 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162681686 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088919851 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.092926756 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124375264 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095277126 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118360416 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105640577 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125553908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.08747702 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.088735696 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117905979 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088396359 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131260871 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.088499006 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.087210095 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129512014 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.088737177 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129402093 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.09183705 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130432639 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.088212429 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.092250279 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118708947 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087006224 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115822403 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109794481 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1223929 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.130423435 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.117900323 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088863927 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12377066 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094990662 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093272121 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118206257 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10166751 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127131671 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091534659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12804251 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.090545274 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.088777697 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135478671 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.089594237 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.118472106 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089428458 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093179854 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12045668 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.087794418 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132367051 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.08737926 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119583416 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101679405 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.086884967 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.11923849 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.092253456 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122109849 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.086082649 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129953814 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093096533 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116490869 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.097857785 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.086199864 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120642083 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.096127427 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121913195 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.087010868 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.120056469 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094503327 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.086352942 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122003752 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.088837496 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.118970617 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.097947207 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.092092169 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121604162 seconds)
  done (took 13.828210082 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.224401437 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211949496 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.183112947 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.258924589 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132153864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113600289 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.207607838 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155104969 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088009086 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.155442209 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.168588826 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180543813 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166218967 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1761 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168055516 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.087844866 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.135377764 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132742461 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.210759163 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.285745061 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107262329 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127622188 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126071372 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155347723 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132779237 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097619677 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.135521059 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100409185 seconds)
  done (took 5.58914015 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104090454 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150630611 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093444188 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141199488 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114486406 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118426385 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092216352 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.118563799 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102510119 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132755647 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.087720373 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122075644 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.09665528 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.096100665 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.11900988 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.096213909 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.127876628 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.088901156 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.119728678 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092416919 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.093421586 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136288002 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.090755884 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117665779 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.09597319 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118108883 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089892822 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139973321 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.086947313 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140842394 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.08509233 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.126299022 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.09742347 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.118912902 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088351781 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.088711691 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120637012 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.089346553 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120063148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087515952 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.085178992 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109870287 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.086865892 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132787547 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094280875 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111997218 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094349185 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.121817807 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089964239 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.084827362 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120992354 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091519249 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119639776 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097567395 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091843548 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119773917 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0913595 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117738044 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09526756 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.089500259 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117703742 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.08694502 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.121274494 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091840934 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.125931102 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093409928 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.085663579 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.121035386 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.092078815 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124928261 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090885838 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.090100046 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116693068 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.089860907 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.120853831 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.092756016 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.089923219 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117169958 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.08771346 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118596717 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077378788 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.087809072 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106804454 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.090933683 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.115563872 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087666188 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.089170564 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124211168 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.103107284 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12007228 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096461962 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119818195 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087123119 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119480357 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086317843 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09000146 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133721224 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136385499 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088985078 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.085249285 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.132640067 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.089817485 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117335327 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078961645 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.094170867 seconds)
  done (took 12.202583568 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.121955557 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.148879241 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.089987972 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136911712 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.120765916 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.153166507 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.094497124 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126803821 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090230999 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.13641302 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.091771101 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.096576257 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.122846097 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.102271781 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.152932245 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.097775509 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121149463 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103034801 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126271595 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.133828357 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13727292 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.106276341 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134311053 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.089101849 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123317022 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105878783 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.157678096 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102528487 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131727819 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107470275 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.101199356 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.155243866 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138147815 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.092825227 seconds)
  done (took 5.233093582 seconds)
done (took 47.421788073 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.247521546 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.459029893 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.227676265 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.148941172 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.2931362 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.257888984 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.239986279 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.228177186 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.504091525 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.227789553 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.491033684 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.842443358 seconds)
done (took 59.332305462 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.32565391 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.389713858 seconds)
    (2/2) benchmarking "String"...
    done (took 1.52226742 seconds)
  done (took 4.073778348 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.942336423 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.187266104 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.490542453 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.229403791 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.230035019 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.5258361 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.038511258 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.676947243 seconds)
  done (took 28.53933492 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.23346914 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.646616514 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.086334992 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.090607285 seconds)
  done (took 19.220183014 seconds)
done (took 62.265275856 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.218468579 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.293160027 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.239825289 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.217036424 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.350175422 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.250942903 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.62625116 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.255340676 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.249759664 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.224563845 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.25172872 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.231356723 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.259446652 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.613610159 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.238004903 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.235279303 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.27465757 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.829751446 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.649165085 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.233659233 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.238090067 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.286118679 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.270654882 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.254007953 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.25356911 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.234725662 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.230870275 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.240245738 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.985450789 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.237652998 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.255474164 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.790886397 seconds)
  done (took 192.182654716 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.231600007 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.299586952 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.379497552 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.269776116 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.957482611 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.432321349 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.366940738 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.019031053 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.251151559 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.256445607 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.484930022 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.23683452 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.554371218 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.209501006 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.243091019 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.291346034 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.550665022 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.663128279 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.254854006 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.473833687 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.23291307 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.426345694 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.331294016 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.545943782 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.248116621 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.283611405 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.244313616 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.250580273 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.434177298 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.483214687 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.277029408 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.27100897 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.889011469 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.097458417 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.247239974 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.25128805 seconds)
  done (took 152.104521159 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.562686236 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.233273625 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.23413207 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234120673 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.267722294 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.233067892 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831717301 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831389462 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.762085551 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.698391029 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.727406437 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567764077 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.239714743 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330234464 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.250135674 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.235734438 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.250689333 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.263185332 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234978411 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235611542 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837413811 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.251529191 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.399980524 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.417121956 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.253523732 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268635714 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.633508849 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235315996 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26828859 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.572229121 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.287855096 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234619618 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.656614452 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.692349066 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.235168223 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350223949 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.235520033 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268740614 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237725644 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.235712697 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.518405915 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.236333352 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.235676304 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.238536493 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.236232956 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959398189 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.241096665 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.842592011 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.23942481 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.215928355 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.236519284 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235860828 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.272948849 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.990308807 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.24150334 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.236356939 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.239101304 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.237639507 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.237052173 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.271333614 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.303066101 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.340674561 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.239069928 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.243031359 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.271679306 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.237578871 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.393474535 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.236466403 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.835878836 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.295411723 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.458999211 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841221528 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.24176857 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337247837 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.359520352 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.242954168 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.236220033 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237115608 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.236608426 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.348221722 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.235846743 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.666614139 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.414202117 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.254070685 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.719210844 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.339122702 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.235468162 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.674563759 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.2399317 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.233822618 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.077703893 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337125751 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.234922052 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.233159227 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234308734 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.663684519 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.839976225 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536310682 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.239773378 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.527143577 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.237459495 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.666078904 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.800936664 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.937199875 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23629324 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343835434 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.409830077 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.249433794 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.232620515 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.231493341 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.677084495 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.236158124 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.289188891 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.235754641 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.628469817 seconds)
  done (took 370.853689955 seconds)
done (took 717.866980976 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.850225891 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.836777671 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.954954538 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.834769303 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.78737408 seconds)
  done (took 10.427428667 seconds)
done (took 11.590720932 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428560187 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.427036771 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294727135 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430978109 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261719703 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448022425 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409457391 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.256767567 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.338740413 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.316732357 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337378185 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290270939 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261604067 seconds)
  done (took 18.666141122 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.571433046 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.551781945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303104935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5565973 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.275027013 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.577534146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.447809559 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.473582954 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441472016 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249936473 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248287849 seconds)
  done (took 16.862058272 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572926836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.572258552 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30625788 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561217256 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276791173 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.577508402 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441063649 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.463405658 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.460227427 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249382867 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247182532 seconds)
  done (took 16.893066597 seconds)
done (took 53.58606874 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.245216529 seconds)
  done (took 2.411926837 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.279449292 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.446192667 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.266417738 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.250592629 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.247619118 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.247098936 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.251574548 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.244488785 seconds)
  done (took 11.400436446 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.243685523 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.243437897 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.240803559 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.241348126 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.243556751 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.242317571 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.241444807 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.244677473 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.244047364 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.243801322 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.241277192 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.24078055 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.242596861 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.245382122 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.244178439 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.242117074 seconds)
  done (took 21.052910716 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.243269005 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.240873946 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.241294784 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.242503399 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.24162066 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.242966734 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.24316399 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.242184264 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.241926379 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.241722453 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.241973893 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.241638609 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.242701029 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.241775436 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.242394418 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.243235942 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.241850865 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.242988245 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.246372274 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.242126914 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.243637178 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.242550245 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.242830179 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.244041425 seconds)
  done (took 30.990813547 seconds)
done (took 67.022595851 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.401648243 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.03785637 seconds)
  done (took 9.607280438 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.305087299 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.305062117 seconds)
  done (took 3.780929701 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.246047871 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.708209012 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.246584395 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.246128971 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.245822804 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.246000502 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.246956866 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.246833455 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.245351262 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.245678677 seconds)
  done (took 14.092524032 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.246099721 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.246245165 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.243484063 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.246475345 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.245979964 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.24380572 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.246417994 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.245594655 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.24702356 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.243980281 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.24705098 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.243928162 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.245665446 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.244024247 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.246476387 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.245020874 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.244225249 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.244629656 seconds)
  done (took 23.586829095 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.260619107 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.268136142 seconds)
  done (took 3.698844645 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.375054545 seconds)
    (2/7) benchmarking "second"...
    done (took 1.286361898 seconds)
    (3/7) benchmarking "month"...
    done (took 1.354487524 seconds)
    (4/7) benchmarking "year"...
    done (took 1.34157402 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.286500718 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.266787421 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.286926447 seconds)
  done (took 10.368602484 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.248307524 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.430233808 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.531845065 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.819570853 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.249805633 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.252703139 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.122623084 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.251508585 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.254926014 seconds)
  done (took 14.333241831 seconds)
done (took 80.637103868 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.27239648 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.245149977 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.45372112 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.244140846 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.260929785 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.539532834 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.262898234 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.371732764 seconds)
done (took 37.822659056 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.241506662 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.017931642 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.025392746 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.252079961 seconds)
  done (took 11.467815321 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.232501509 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.206129399 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.23195861 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.388456847 seconds)
  done (took 18.230335291 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304586357 seconds)
    (2/2) benchmarking "read"...
    done (took 1.576343762 seconds)
  done (took 5.05094864 seconds)
done (took 42.162136466 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247873592 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.247752563 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.24690493 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.244393279 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.247574318 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.24735406 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.243893647 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.244366948 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.244772217 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.245790319 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.247142029 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.247151531 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.246417976 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.246055148 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246285749 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243899721 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244147777 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24822496 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.243443521 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243580673 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244756137 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246477823 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.244825991 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.243540636 seconds)
  done (took 31.06689776 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.248384787 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.245405323 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.247309923 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.246737054 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.24467385 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.24677911 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.246638138 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.245281422 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.24922333 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.248044593 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245475434 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.244878151 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.247663089 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.244324267 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247213413 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.244256666 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.249536536 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245664734 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247013967 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.245168395 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.248433114 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245099099 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.245567445 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248262068 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.24620924 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246143667 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.24855124 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.247071786 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248534976 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.246564254 seconds)
  done (took 38.571224185 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.253716025 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.256200971 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.248508763 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.248196049 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.247965361 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.248470745 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.248599921 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24824122 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.247725744 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.249359641 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.248551843 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.249210437 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.250085452 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.249094117 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.249835667 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.249751529 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.249505684 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.249347123 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.250107751 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.249061378 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.249732765 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.250940647 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.249863938 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.250374112 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.250336522 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.252210013 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.250452138 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.250587364 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.24989617 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.250822142 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.250989962 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.251305249 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.251399205 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.251721292 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.250950481 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.251301691 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.255259708 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.257299506 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.250285359 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.250591806 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.250550979 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.25159739 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.250533175 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.250129603 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.250666808 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.25144845 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.250552183 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.250869995 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.251729873 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.25161424 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.248880526 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.250033108 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.249392613 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.250100969 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.250398671 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.250328729 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.250349287 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.253478373 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.249807119 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.250484305 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.250357337 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.250519963 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.250934313 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.250083569 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.250216834 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.251505844 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.249891062 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.251188342 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.250005795 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.250702285 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.24973318 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.250730768 seconds)
  done (took 91.210604205 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252181919 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248296158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.246176403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246525549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247327799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.249462518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.247394971 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250030998 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250921038 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250075478 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248713917 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246436246 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24729896 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24963159 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250404921 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.246827921 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.250885523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246610817 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.249412548 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250034691 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249829516 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.247786351 seconds)
  done (took 28.646778622 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25067059 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253052104 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.246102741 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251342067 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248162158 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254098605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250677189 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252588335 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251676635 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247295282 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248664603 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251172847 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251322355 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249372754 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248490236 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249158977 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250490603 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249622705 seconds)
  done (took 23.677586606 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.248476044 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.248862083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.251838281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.248506325 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.249345289 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251671015 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248787148 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250461752 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.251266521 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.249452868 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.25157422 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250870735 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.251858989 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248617415 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25172001 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25053612 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.251659397 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249451452 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252122292 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248446148 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250266293 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252397537 seconds)
  done (took 28.682751564 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251739017 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252230112 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.249521476 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.25025588 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.249700213 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252722006 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.251785634 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.250579018 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.254335976 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.252416339 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249710698 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.25210403 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.252023067 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251550134 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.250469389 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250977945 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.253464827 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251071626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253489322 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250416313 seconds)
  done (took 26.206658091 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255505751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25668928 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25644851 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256052095 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256919773 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.256325984 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257289673 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257431983 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256544257 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257841755 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25864254 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257386669 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258218165 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25738043 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256142752 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257711385 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257832202 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257319909 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258838237 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257795243 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259404617 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257866843 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258604344 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259255516 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257939712 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257850686 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258310451 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256672833 seconds)
  done (took 36.387220864 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25492588 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254291549 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.251850744 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251163837 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.252548565 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.252807989 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251834164 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.251597489 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253488637 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252574601 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.253466099 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.254022327 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253636315 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255645234 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253700935 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.252727503 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253570159 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252553572 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251581732 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252538238 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.253568482 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255062279 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253473043 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253010294 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250367703 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.254797459 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251343564 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.251924044 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254719185 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251772545 seconds)
  done (took 38.768798559 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.292932492 seconds)
    (2/2) benchmarking "in"...
    done (took 1.297435259 seconds)
  done (took 3.766235149 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.252155269 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254152978 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.253142209 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252789502 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.251375636 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254020512 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253679368 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251072583 seconds)
  done (took 11.198110381 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252984918 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.254307852 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.254813834 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.253270806 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.25550261 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.252494771 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259915562 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272458305 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253870982 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253866635 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.260347481 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.260257745 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.254462858 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253332112 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.253164062 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254019551 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.254089783 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256257626 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.258090362 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.255058497 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257753417 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255341947 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25592268 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.254065433 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255495634 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264379611 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.258593629 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.255029252 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253850157 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25750519 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253953743 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.25234411 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257480232 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.257469444 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257568412 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.257655926 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261740327 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274281484 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260766023 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257414068 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255548199 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.253271109 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.255043372 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255328156 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254900386 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.257053281 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255472308 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.253074105 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.253692276 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.25785067 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.26000074 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252758297 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.251249648 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256229491 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254847741 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260181858 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276088964 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.256823612 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.263515759 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.263719668 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.266835401 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.261213818 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255283175 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256842185 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263748766 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.27646865 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262379785 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.270827764 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.252316007 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255270067 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.260600237 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266272789 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278673064 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257931335 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258041011 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.255271728 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253328314 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25544374 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260435597 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273629211 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.257798579 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257853728 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264958811 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275696073 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.254275686 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257435104 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.258626421 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259275263 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255893753 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264837949 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276308499 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2563074 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.254000663 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.254401297 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.256080562 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259525373 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.254487859 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255488797 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.255309252 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.255976639 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25862529 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25768786 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.262762531 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258653041 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259642829 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26448859 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.256923224 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253723463 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260779137 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.256715557 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258483578 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.257942242 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.25949525 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25438159 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258876237 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.261260147 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.257573184 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.256429314 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.258548695 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25749486 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264175424 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.278179049 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256536205 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.256808678 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.258418277 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.268235701 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258417692 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.258154312 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.256832197 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.255599836 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.253808955 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.255353541 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.255921416 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.25507872 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259541309 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257043096 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.253257021 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.258004473 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.261358144 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.255726443 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256217951 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255020286 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.256289901 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.258435717 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.259528021 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257739534 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.260975223 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.256161487 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.25615306 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255605645 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.254677467 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257833517 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.257621603 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.2597066 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.256525706 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259819045 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.257236282 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.258912549 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257634246 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.257085136 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259953485 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.258319551 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259322189 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.260466772 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25987253 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.256175372 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.255318105 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.257240996 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.258199687 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.258434941 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257899553 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.256333096 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259527558 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.266818474 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.257559355 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.261145581 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.260522867 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262923107 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261117774 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260704719 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.260157108 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.26376388 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259838929 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.26342772 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.261244002 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261839245 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260759008 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.258272764 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.257269342 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261469901 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259622531 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265218068 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26896737 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280162401 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.259370552 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.261668245 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.259526026 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.264761214 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.260850743 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.262737163 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.2604759 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261721741 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259093613 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262737048 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260339433 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.262061148 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258976037 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259960423 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.261028169 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.261383725 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260905327 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259090407 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259608682 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.258360345 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261295019 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263319114 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258982897 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257498234 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.258655875 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25955546 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.261665608 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.263269401 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265548578 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.25791112 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261264982 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260219981 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.259953096 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.258456384 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.260926943 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261481597 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.261186611 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267785918 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27758704 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260959949 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267494212 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.278233729 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.260007792 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.263053705 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.261981943 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.258552913 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.264505129 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268605641 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.262332164 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.264465602 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26447384 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260992816 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262497768 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.26688517 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.259987981 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.261499422 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.262776385 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262715466 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.26015426 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.262228065 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.261699383 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.262174542 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26325693 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263321043 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.262558199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262502907 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.266166176 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.265755638 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.265777932 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266575541 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.272918479 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.267191714 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.261708383 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.264566871 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.264208005 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.266243656 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263083579 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.265875651 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263382205 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274359102 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288570957 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269134707 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264944395 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.263383503 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267800086 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.265151151 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265633108 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264358154 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264111689 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.263486286 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.263861986 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.261381572 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264236772 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.265794503 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266261814 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.265489079 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.269121682 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.265316437 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263530136 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.267770246 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.268059685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.266367943 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.263589087 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266226959 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.266564152 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265322014 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.264557825 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264068947 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272040439 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283067129 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.265628155 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264851179 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.265410194 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.264076145 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.265689221 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.269766268 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267861551 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.275238948 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.269124154 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273300514 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268351129 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274456636 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.27012041 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.269426939 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.275362602 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.26403485 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265637632 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.265471638 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.26936899 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273022723 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.286336535 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267791914 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.2734395 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270241751 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.272104658 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.267200913 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.270537092 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268765909 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.270517546 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274561126 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.287371072 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.270072001 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26830601 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.265853345 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.270354709 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.268520286 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.266766552 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270657487 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.271389922 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.268213209 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.268533391 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.267291711 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26925674 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.27168837 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.268987198 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.266462499 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.270009942 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275298513 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287571503 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274598228 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.270272446 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274965266 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271664509 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276770212 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290051684 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269009613 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.271690342 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.27026637 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.270345085 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268560974 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.270122123 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272352093 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.27099841 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.273235532 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271985859 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.270308597 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.269047062 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.279216286 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.269420322 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277378634 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293607744 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.270744355 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274096531 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.267675427 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.270262193 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.276698364 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.273754822 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.26880595 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272996608 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279685344 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278058032 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269601991 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.273989187 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270183866 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274631313 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.271292399 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.270611275 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.273686261 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.272099924 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.271623184 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.274275536 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273637823 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272719553 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271521982 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271979617 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.27189984 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279688077 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.275876523 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.272132077 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274669587 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.274611758 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.271236497 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271158838 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.275057183 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272497425 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271944822 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272791855 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277600856 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.277184319 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272999513 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.271221557 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.276054675 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.27296917 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.272408145 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276709103 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.277277785 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276085289 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273353623 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.275022519 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.273303109 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.271547065 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.274169635 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272420633 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274636618 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275925023 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.278684189 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272512641 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.271816099 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274286983 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274104585 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272273988 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.273583689 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279008812 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276926638 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.283883071 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280664368 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279818349 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.273451726 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277244402 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.279844992 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.27264504 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.274941921 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.278504286 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.274976715 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274346812 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276871564 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277697013 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280530942 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.274522938 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.274614591 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28156763 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.295524564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277416098 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276292394 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.277406675 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.274529056 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.2738872 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.275238629 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273691679 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281783141 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292376513 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278535872 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276720224 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.275367601 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276383657 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281379278 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27707459 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.275217438 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.273508687 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275897141 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27936686 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276566785 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.274299352 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.275685846 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.27468538 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.279075471 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281761846 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.273555266 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276721124 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.276170652 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.277089059 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279643836 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278442405 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.27461477 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274965392 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.275377062 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279733055 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.277175862 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.278293553 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275710958 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27712994 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.277739568 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280478944 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280410694 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286526962 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.285723878 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.275888888 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276455951 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.279068745 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278873943 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28061622 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.280923529 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277082486 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.278936776 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.279310938 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28142859 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.278458572 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.279880245 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292298954 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299587421 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277751965 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.278525862 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280160817 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.279152184 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.276484724 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.279413863 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.280364966 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.28134615 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.288143037 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.282726137 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285932109 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295327487 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27932016 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282986455 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.28165441 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285785663 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281472737 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282839722 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.282484524 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284303829 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29337266 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280560101 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28785023 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305509877 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.298243789 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.282244338 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.283628244 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279351781 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.284021604 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281748739 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.283463269 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.281769562 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281387479 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28317111 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281934103 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284697593 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.280871766 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28300731 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.281562696 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279695647 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280586544 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.279346067 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.283959686 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.282118916 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.284347455 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.283622076 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.283269848 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280826084 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292462358 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.304056678 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.281962472 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.284851586 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.279936747 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.28408148 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283587944 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289987196 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.289400857 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.284799029 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.284980399 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.28281704 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28495629 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.282614107 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.282057399 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.281880346 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281896294 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.281357709 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293122742 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292467096 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.286942557 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.28281399 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28585662 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282759889 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283859556 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286928077 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286722761 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.283719989 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.285307894 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289536543 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.285215284 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.284087798 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.286238244 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.290555572 seconds)
  done (took 757.472041169 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282925159 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28184049 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281891549 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281670524 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281672129 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282172521 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2821073 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281993897 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282323518 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28153596 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282851197 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282269327 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281570332 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281791678 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282214129 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282317382 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281871422 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283431737 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282911548 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283047118 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281908848 seconds)
  done (took 28.131056709 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.286175471 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282724221 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282695667 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285618659 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283351343 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285856432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283412493 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286281315 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286165875 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283197564 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.285722059 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285818909 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282515282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283526674 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283306103 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285764561 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285541072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284299705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285359685 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284334423 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286542493 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28455341 seconds)
  done (took 29.469141515 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288275248 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.289535299 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284467885 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.284358338 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28636023 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.283926122 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.289077171 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.288160885 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.28682047 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.285815248 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285132935 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.288411169 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292257592 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.290700913 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.288294042 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.288600142 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.433141761 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290381505 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.290532603 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.290376251 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.285965052 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.292553273 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.285369207 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.286340514 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.286705529 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.290532832 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288472839 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.287284612 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.291575814 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.288982693 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.294277544 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.289317439 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287534523 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.29059158 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.287874161 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289020421 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292666225 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.292583636 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.286023943 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288991619 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.29686519 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.307159001 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.292258008 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.294025493 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.289975365 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288992779 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.290810571 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.298256479 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.287323627 seconds)
  done (took 64.541484717 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290787596 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289757858 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287550092 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290253325 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290188832 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.29089264 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289776665 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290162051 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.288101571 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287962396 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.290713633 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.288533145 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288323276 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.291358665 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.290926865 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288311413 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289036714 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28845244 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288631224 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288551286 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.288264023 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.291189278 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.292177981 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.28938981 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291470002 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289182873 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288033066 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.291037606 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288946396 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.289262334 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291639762 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292667658 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.291558517 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.288939363 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289733676 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.291313895 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.292809074 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.290050871 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292052732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289122526 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292495479 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291597806 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.292291293 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.293471911 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290406224 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.29136998 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289762702 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.290629712 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.29086744 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292962773 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293248364 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.291713588 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293682684 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290173736 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292499881 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.293688818 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.291478737 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290483554 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.293804817 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.291456371 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.2917082 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292788232 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.292083646 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.29413742 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.294236483 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.291591554 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290714262 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295025491 seconds)
  done (took 88.989231545 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296526811 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.29575214 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297281051 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296513135 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296595188 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.295985115 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296770342 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.297465688 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297545916 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297453066 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296220898 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295551801 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.29593693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295085511 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296077817 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297151221 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298238221 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297806601 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297259807 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298334235 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.297434164 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297450325 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.297841675 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297274244 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298150753 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298396163 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298103818 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297815463 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298289852 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297364989 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298506887 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.298502453 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298550482 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.299768628 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.298344601 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.299024918 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298285069 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298342 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.298333394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.299034204 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.299731264 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2989792 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299350533 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298410543 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299420389 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298085153 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.299498693 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.299472712 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297109208 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299473898 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.30046714 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300364096 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299225528 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300167367 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299884963 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.297643536 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300177634 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300563473 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299694678 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301008908 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300418674 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.299013155 seconds)
  done (took 81.704888909 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298380949 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298113877 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.296141686 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294967157 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298248622 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296573012 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297942345 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297917579 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298601365 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299393785 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299519612 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296472477 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29788072 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301859596 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299352853 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299896301 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297595756 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295979974 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29920696 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297212725 seconds)
  done (took 27.179155206 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.296729484 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298827346 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296003296 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296719816 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.29855292 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297460896 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.298918618 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299911308 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296729787 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299886996 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299291498 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299869176 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2971329 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297112955 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298807733 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297669105 seconds)
  done (took 21.987949478 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.297875667 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.300056302 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.302597065 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.301554183 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.297608981 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.296562516 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.299804164 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297736442 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.298083344 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.301049801 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.301122723 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.300201256 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30101817 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.303863714 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29686711 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.300637339 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.298398827 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.297447674 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.3000445 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304261467 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.300613414 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.298317604 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.30119393 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.301224068 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.298471904 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.299683844 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.298821398 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.299860071 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.298364315 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.301768878 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.29949301 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.300524384 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.299113528 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.299011275 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304928224 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.300126017 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.301929844 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.301702524 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.302106511 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301653412 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.301904188 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.299257831 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.302644722 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.303235641 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.299752047 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302535421 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299931645 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.299887897 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.300005269 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.300247984 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.303203463 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305838429 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.30381495 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.303781986 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.303531601 seconds)
  done (took 72.755648813 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303810133 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302882739 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.301059372 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304424344 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30408224 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30046724 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.30331075 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302436577 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300833084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.304148484 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302762953 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30639378 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301615293 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303702442 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302048954 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303855183 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.302519589 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302180909 seconds)
  done (took 24.675707866 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301531939 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.301882655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.304689026 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.30174775 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.301543593 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304424229 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302739652 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304888848 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304237489 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302362622 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303697756 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.305544068 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304618926 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.304992512 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303405157 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302885672 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305692645 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305054527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.303305426 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303355255 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306072267 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305804752 seconds)
  done (took 29.908976762 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.304433583 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.305066048 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.305313505 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.322063317 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.321667818 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.327185108 seconds)
  done (took 9.110166907 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312340368 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30715235 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304238282 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306927186 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308351889 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304134759 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304161025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304108948 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307197943 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304996886 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304804302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307832396 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308112239 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305065882 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307109793 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307395342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305378499 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304701718 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306092502 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307728879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305165844 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307863044 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304180125 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304394264 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305943122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305180654 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30685811 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305408906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306014288 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307998963 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308016875 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30480648 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307673362 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306300173 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310045431 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308930395 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305378103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30878275 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308521074 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305555932 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308949779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30931141 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307869622 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307844038 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308952556 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306002739 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305847521 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306817895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306389092 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309990596 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308606915 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306855985 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30875149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309067853 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309945138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310037125 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306784482 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308277452 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310422444 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306576484 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307905215 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310468434 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306895794 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308409468 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310532203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30853048 seconds)
  done (took 87.526590187 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30752795 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307822304 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308490189 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308642297 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307329773 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307617656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308831903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308542605 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309047171 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308220044 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311148288 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308312921 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309325128 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308760604 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309095362 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308886175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309430009 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309326671 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308896582 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312599121 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310094161 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308193337 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310688286 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309498377 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30972686 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311877207 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309663593 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308473282 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309402819 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309925559 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309711509 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309924508 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310316742 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310185788 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311425862 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310504803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310935956 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310218587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310587759 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312288853 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310083921 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31280655 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310653516 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310792198 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310610714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311130186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309550297 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310522413 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311355365 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310588074 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310400653 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31129276 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311522239 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310544254 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310606186 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311402458 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311804209 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312422522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312097249 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313515548 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311059784 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311263902 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313202539 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311804793 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315227362 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3146154 seconds)
  done (took 87.713601877 seconds)
done (took 1770.519344966 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.344562709 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.331865294 seconds)
  done (took 13.910044267 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.476018356 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.429850405 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312587613 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.307919732 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.312365802 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.308663281 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.331089783 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312901923 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.314939048 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.313631167 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313534223 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.49843569 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.318159912 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.313459654 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313320769 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.406848093 seconds)
  done (took 42.819576001 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.338293013 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318995677 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.42820704 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.33896729 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.340676856 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.498559791 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376555189 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.318643887 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.481578515 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.357324219 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.793095525 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341317169 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.316660135 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.368935408 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.336821004 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.50010807 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.557198675 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.818521741 seconds)
  done (took 30.064875877 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.739660018 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.31508172 seconds)
  done (took 9.288772848 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.355741222 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.351218318 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.317005588 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.31516819 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.327117748 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.351321636 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.350685049 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.335249443 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.330033329 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.346234177 seconds)
  done (took 64.61715114 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.33883471 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.320439171 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319521559 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.319025394 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.309358011 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.315745903 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.317366486 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.314329995 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.716662538 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442703358 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.326185625 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.327261682 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.335718989 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.320626764 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.316141707 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.35441236 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.460587267 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317476031 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.316669936 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.323349067 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.31845223 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.416892485 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.358409512 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.318764809 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438625266 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.724578909 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.328270974 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326146206 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442905266 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319547732 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319747236 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.320629525 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.321913072 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.932499185 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.750905589 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.334189568 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342760789 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328260562 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318628282 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.455776544 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321281678 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.325138192 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.316562879 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.754080093 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465137123 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.430133058 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.458228826 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.327834609 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.322512508 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379443218 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322887323 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323021505 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350160257 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.073042426 seconds)
  done (took 109.93727095 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.364086913 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.701283804 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483142904 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335721764 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.035016029 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.988140057 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.334809376 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.582653954 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.356473146 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31384447 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.607905367 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810406839 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.344163797 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.342355446 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.661283154 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.354296925 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31762461 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.181440338 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.336766798 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.316619622 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808674079 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320359627 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.320163978 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.481579887 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.353683064 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754601502 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.62896909 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.874669118 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.331065753 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.315749411 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772922394 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.34646871 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.354736787 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.316882593 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570012509 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656844431 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636894271 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.32759437 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.338409571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319128674 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.332510958 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.74673379 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640942538 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.3203018 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320798827 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755640178 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.316494944 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.318793056 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.321266031 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526919915 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.284926438 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316644155 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.629435662 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.322095648 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.595430647 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.370091818 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.364703646 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.781861546 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317322811 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.49742708 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.366789571 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319601176 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32106929 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318366109 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.32154833 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.648386493 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887015588 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320801793 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.644517261 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.767384215 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.335584831 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832315692 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.233639342 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.338719146 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.415903689 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.318218132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.008557106 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791350375 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.319520241 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319088184 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.633959395 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322377116 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.589349884 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.33329312 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318918796 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835737569 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.326040301 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.368239266 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319751514 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.321161792 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.061427159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.320857764 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.596462879 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.391370921 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319050108 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.319044255 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.333574713 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319413844 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.338075366 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.323699566 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.833072189 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.338126896 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.280815648 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340309775 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319859825 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.325527163 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.319735461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.321601303 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546651885 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.771108365 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.32513025 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320285003 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.324765582 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.326172442 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.498077631 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.326672899 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.610783034 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320191017 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323013388 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.32057239 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016429853 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.385279728 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320222936 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.321704283 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.200311221 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.527161056 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.337848937 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.320854052 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322546772 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325954041 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.488952544 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339608224 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.364138098 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324203256 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013338678 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.350145798 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.349403195 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.954246646 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.321017302 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.152080955 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.346561038 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323745629 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614828729 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.580523164 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808847888 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324340192 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.321841623 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.003525523 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.340316659 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468803568 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340260523 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.344745246 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519467068 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.360725101 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318079077 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.892694516 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.311045682 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525891079 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305471808 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608754013 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790091783 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323246429 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.316402857 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004347219 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.003634438 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.089251931 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.310958875 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.576119398 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.279914354 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.789417755 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.307429466 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.304948181 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.880272144 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.309421779 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315179446 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.309713513 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.305527101 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.365465369 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484883044 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.763800597 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311016055 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.743480435 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36725531 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306582164 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327447749 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313014563 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.659053563 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369976445 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.316998058 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.335829551 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.314873374 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315504644 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.761745871 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.172810983 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.312615097 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.461202 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926922422 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.325008722 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.307848593 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.866842949 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.948733702 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844875434 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.360801684 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.601514389 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.313787872 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.346818893 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.97738171 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378433186 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805210248 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3077147 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.307292151 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891233538 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.325300777 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.672998367 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.307219484 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31351503 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.838545217 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.316559869 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.317370789 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.473951512 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318958674 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571022542 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.301466664 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.321908544 seconds)
  done (took 1107.743216971 seconds)
done (took 1379.614882081 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.304533674 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.29876837 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.285201355 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299176551 seconds)
  done (took 26.409190412 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.313234365 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.306074381 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307613407 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.305744029 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.302586796 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.296962897 seconds)
  done (took 9.04713206 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.358465958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.294074307 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.293765067 seconds)
  done (took 19.160068684 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.488783211 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.539539022 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.619758718 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.4345059 seconds)
  done (took 10.294703139 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.298357236 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.298966246 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.297205078 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.294024368 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.297856418 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.301624904 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.300727177 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.298724653 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.301591827 seconds)
  done (took 12.899223717 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.093046293 seconds)
done (took 84.125175769 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.27934256 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.151407354 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.701605736 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.069048963 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.371988685 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.396712501 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.665982565 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.698696042 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.298709368 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.298554518 seconds)
    (11/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.27907296 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.960800357 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.575358911 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.387587087 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.312623228 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.677487027 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.281697573 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.336206137 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.656491383 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.324246604 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.289210651 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.314410642 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.2780409 seconds)
    (24/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.189573762 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.281212715 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.690918941 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.457748066 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.001218969 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.309883791 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.364322035 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.175345352 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.562006403 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.072886206 seconds)
    (34/309) benchmarking ("sort", Int8, false)...
    done (took 4.319117841 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.972216973 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.764184173 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.283476831 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.304092654 seconds)
    (39/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.075324696 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.394588226 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.424227936 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.32675627 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.290470618 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.523004871 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.290955759 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.18907381 seconds)
    (47/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.504631984 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.294234458 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.668250397 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.360470164 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.297259594 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.695231535 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.394517769 seconds)
    (54/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.420060665 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.408098274 seconds)
    (56/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.279152434 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.548542616 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.294887498 seconds)
    (59/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.305317856 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.694407265 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.356596536 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.47375174 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.095886539 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.158803554 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.290421484 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.34164544 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.280642496 seconds)
    (68/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.398545174 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.319555461 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.286192355 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.295966846 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.297197375 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.286909206 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.290320291 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.303500453 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.455266605 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.298847549 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.49207086 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.325927973 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.361619871 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.28533476 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.303349863 seconds)
    (83/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.322615822 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.149165299 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.429111618 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.295274261 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.616281438 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.295138983 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.280377973 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.322988013 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.308161732 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.002753988 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.705621928 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.819729527 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.622526332 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.298260395 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.675684677 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.544993158 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.77202528 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.310222889 seconds)
    (101/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.308571532 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.29150893 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.505661425 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.536784397 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.307322205 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.197842937 seconds)
    (107/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.557776488 seconds)
    (108/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.481834903 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.293932039 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.302168289 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.296891916 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.402407883 seconds)
    (113/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.296686934 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.321426629 seconds)
    (115/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.552164502 seconds)
    (116/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.660793686 seconds)
    (117/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.388402885 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.125034722 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.753504668 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.347158332 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.933167197 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.314359576 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 1.811307308 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.320086832 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.501352255 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.550167846 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.295911376 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.369732034 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.032312564 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.55581509 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.140528041 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.380674164 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.289390391 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.035867577 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.323638182 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.288923303 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.503071572 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.599968601 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.410080991 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.335046799 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.300933602 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.322741872 seconds)
    (143/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.894460334 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.907675993 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.387891672 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.034182898 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.809093537 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332700414 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.31365396 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.335156883 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.408040839 seconds)
    (152/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.331903301 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.295679955 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.308112751 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.364709591 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.294478252 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.319370886 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 6.302608689 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.664918648 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.717795288 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.335746938 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.311480754 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.332860259 seconds)
    (164/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.39458985 seconds)
    (165/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.312574346 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.295999485 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.782657705 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.405898064 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.991767797 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 5.542963987 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.360493621 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.348307038 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.308823828 seconds)
    (174/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.433095939 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.243082583 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.437557267 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.295883182 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.705655854 seconds)
    (179/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.138021532 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.328729769 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.416357984 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.384635233 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.30632663 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.291259842 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.431779188 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.334575199 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.65469344 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.373194072 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.335330983 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.852856724 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.463509691 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.30820159 seconds)
    (193/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.308712466 seconds)
    (194/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.39544332 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.350862976 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.297780863 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.310662098 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.915802965 seconds)
    (199/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.387939431 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.141575555 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.378688731 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.319211376 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.086080534 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.361205787 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.521320832 seconds)
    (206/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.315979869 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.296401106 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.385958259 seconds)
    (209/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.157489274 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.11998236 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.123469143 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.288600417 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.32600894 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.509131746 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.895905028 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.328737976 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.920417337 seconds)
    (218/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.796009489 seconds)
    (219/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.075358707 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.378628754 seconds)
    (221/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.320349702 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.33363687 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.656949298 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.409923684 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.346928141 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.197109703 seconds)
    (227/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.655427462 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 5.302651747 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.58529569 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.30123208 seconds)
    (231/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.401234292 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.94623717 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.419214136 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.352555008 seconds)
    (235/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.738114477 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.346873985 seconds)
    (237/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.822008007 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.439136833 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.358945478 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.389584336 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.306686075 seconds)
    (242/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.550570158 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.361603447 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.309820761 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.87091706 seconds)
    (246/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.666983989 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.500783208 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.298132777 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.789303067 seconds)
    (250/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.051757637 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.074402432 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.878919477 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.265621966 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.411861687 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.297786352 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.287191352 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.064931675 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.51402126 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.330101468 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.9250599 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.307157352 seconds)
    (262/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.861570228 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.204310275 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.333414809 seconds)
    (265/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.340069954 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.314909369 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.826898164 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.385439683 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.064170635 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.690429885 seconds)
    (271/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.707395363 seconds)
    (272/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.42467826 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.51890618 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.302718818 seconds)
    (275/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.68269718 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.330932204 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.300440546 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.733103589 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.858141584 seconds)
    (280/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.496522747 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.392872086 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.363709577 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.392679874 seconds)
    (284/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.563505477 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.511352774 seconds)
    (286/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.335719406 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.863972312 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.427065324 seconds)
    (289/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.449449102 seconds)
    (290/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.141485626 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.139439299 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.294273843 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.301588929 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.311430261 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.301680969 seconds)
    (296/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.315037517 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.901446244 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.351365909 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.300795722 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.643996252 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.682186896 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.241120284 seconds)
    (303/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.956646763 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.320434073 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.335513181 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.302055297 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.797889788 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.35294323 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.332057374 seconds)
  done (took 1023.141446664 seconds)
done (took 1024.353290706 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.345681125 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343898464 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.322410652 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.343423331 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.437677757 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.506343812 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.336468614 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.327921281 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.374032637 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.376620207 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.32567016 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.508253473 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.32804955 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.325765399 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.324914709 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340999616 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.323890285 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.322027737 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.341615554 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.332527508 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.341881847 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.323539697 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.376684276 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.510913825 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.328513088 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.325480588 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.331326248 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.345925764 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.437829748 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.328863574 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.330915385 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.338575659 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.32097188 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.320298969 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.322997831 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.346944176 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.333597675 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.335399118 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331558159 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.359783489 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.718241772 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.324131664 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.330182281 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.328403945 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.328030104 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.333582447 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.330812015 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.33236593 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340487696 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341221023 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.706750177 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.338482058 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.328707961 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.327288926 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.339199642 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330513989 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.332772396 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348355867 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.348694792 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347027102 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.319132288 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.327891506 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.329980697 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.347008147 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.335270821 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.743304003 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.318561841 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.333919627 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.721663564 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.329036845 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.747473099 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.333252945 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.331320689 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.342457904 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.362221865 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.332290312 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.319756038 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.330137934 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.337332804 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.329821705 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.337675199 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344769914 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.335961502 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.332971773 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347387399 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.514384973 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.340681136 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.3327095 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.340069416 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.350694008 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.338911664 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.34278806 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.335560346 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.327512985 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.339665208 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335139796 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.334441536 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.336148747 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.33600042 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343262088 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.7353437 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344764115 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.329661349 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.330020111 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331389174 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.345575491 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.724931179 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.329347478 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.353779493 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.381360775 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.334332369 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.323979348 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.332423685 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352724979 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.342474368 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.334836235 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.327239974 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.325019536 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.720235052 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.341740125 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.336056168 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.332868195 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353232892 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.335357455 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330800933 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.339011246 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.330194023 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347758247 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.455863049 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.344848561 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.366042342 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.333019856 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.337739797 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.375317616 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351817766 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.365447258 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.336689266 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352739611 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.35067125 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.332208853 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.346463383 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.344583201 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.336523031 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.339902856 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.328431022 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377274363 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347415806 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348407694 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.356452917 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.456558881 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.331885508 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.327339085 seconds)
done (took 224.885438833 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.388977801 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.332747977 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.415623296 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.331536654 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.431555381 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.430108815 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.330643608 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.330571918 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.329761222 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.707737644 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.32864788 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.329012471 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.328987531 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.329850368 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.414036016 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.333645583 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331475298 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.673672635 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.336897064 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.403712662 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.325301822 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331363713 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.334853436 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.719793163 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.326552932 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.330974066 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.40439255 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.333909076 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.686345611 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.331038241 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.333647605 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.686072121 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.422135503 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351387346 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344259858 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.339458612 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.433710112 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.347917507 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.414203458 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.414820825 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.415947214 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.376373934 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.327239199 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.325183746 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.335937742 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.337994166 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.328391532 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.361491935 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.32578894 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.331528453 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.670730358 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.344143251 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.334298731 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.333066753 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.333379387 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.367459339 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.331722573 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.337428869 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.420127973 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.339329688 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.398941905 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.721945886 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.709346337 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.333236395 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.335478837 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334442371 seconds)
  done (took 148.405575881 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.403451467 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.40790254 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.446263488 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.337910289 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.383759268 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.451032978 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.333447791 seconds)
  done (took 11.00856361 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.341183858 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339439076 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.386181763 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386715757 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.339247236 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.516882275 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337269697 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.347471456 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.33479962 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389834731 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.338917751 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.336356472 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.344679853 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.335472152 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385411853 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.347866062 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.450081806 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.33901958 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.34263842 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.492667126 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334423247 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.344842592 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.388142762 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.348448856 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.339586599 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.341989377 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.221793472 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341397892 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333381458 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.339114057 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335867855 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422668146 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.340446352 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.328736039 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336684732 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452458249 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.341070465 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333371051 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339934136 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.336320064 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339613119 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.340079406 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340565745 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.337673986 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339673526 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.362539339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.339815778 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.341477304 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.340790263 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341051789 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.391898675 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341119754 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339090837 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.338173501 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.395943638 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347544408 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342936994 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.33697726 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.341985167 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338402276 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.496031176 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.387363738 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.338983563 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387296058 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341518819 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.340932836 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.339778773 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.339676409 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394500487 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.339870437 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388058997 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.338926013 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.531057386 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.363795738 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341614132 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345348816 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.341991677 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344916036 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.339706972 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.343218574 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.339754655 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.342570387 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.345191313 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340713501 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339599089 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.52526094 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.452335852 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.337760742 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.35272014 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.349127264 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.338836025 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.395772054 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.342803663 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.340461945 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392532899 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455163547 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.395790213 seconds)
  done (took 154.289936678 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.346854898 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.351372373 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.344925387 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.366096648 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.338502806 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.342186805 seconds)
  done (took 9.340147763 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.344412713 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.343122603 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.343357342 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.345966015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.347570847 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.343724642 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.345741681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343134952 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.349216714 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.341950622 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.344970315 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.353050686 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.340923912 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.346783689 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.345340904 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.340502801 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.34880044 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341576023 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.34501334 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346847195 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.449717571 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.34815957 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347632251 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.342013273 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.349252154 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.3437472 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353319071 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.344314716 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.345531816 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.351239423 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.350498374 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.345267823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.34651631 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.350507719 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.351288139 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.346287045 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344940994 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.353301514 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342217646 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.345152696 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.352491209 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34395359 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.342224558 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.354346173 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.346905953 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.34862319 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.357275111 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351913205 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.35002122 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355887389 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.354413708 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.346405166 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.345222441 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.355921882 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.344719426 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365339918 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358689663 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.350031639 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.348293622 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.347344917 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.346228341 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.346787968 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.347100254 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.353410846 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.339260278 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.356306011 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.346299252 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.35184592 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346228397 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.348052771 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.352338026 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.341542226 seconds)
  done (took 99.400911286 seconds)
done (took 423.686099139 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.699730385 seconds)
  done (took 7.953645364 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.437554278 seconds)
  done (took 7.694497454 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.49608878 seconds)
  done (took 21.763288428 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.351752347 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.453872081 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.374859396 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.361783117 seconds)
  done (took 26.801532845 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.746145151 seconds)
  done (took 8.007362642 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.344069716 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.339418565 seconds)
  done (took 13.945856711 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.940760268 seconds)
  done (took 8.200962891 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.829096053 seconds)
  done (took 8.096907194 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.354484373 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.378347882 seconds)
  done (took 14.260076137 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.329631779 seconds)
  done (took 7.59279536 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.995862124 seconds)
  done (took 8.258038572 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.357074198 seconds)
  done (took 7.620967258 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.399033202 seconds)
  done (took 7.661367983 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.220111635 seconds)
  done (took 9.48390625 seconds)
done (took 158.596360054 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.346551954 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.345798342 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.348899454 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.346735374 seconds)
  done (took 26.650793909 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.384442196 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.390341568 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.390446699 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.39834055 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.392972795 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.390498305 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.37996673 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.380927962 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.400569645 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.391552904 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.388910786 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.394800916 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.388904812 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.381076955 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.39150975 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.391360965 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.399065591 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.391338592 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.38180959 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.391820856 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.356126219 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.40223175 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39380119 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.35685897 seconds)
  done (took 34.575659891 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.878346838 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.428332009 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.509812749 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.409586691 seconds)
  done (took 7.492086268 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.409749105 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.409774309 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.421939965 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.458964253 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.488625947 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.418863996 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382395828 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.377217458 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.365617109 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.411523221 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.486882729 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.425510354 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.510239025 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.35905213 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.567234307 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.358101273 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.359300957 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.407374644 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.460987479 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.486306936 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.356178344 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.406793024 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.413592778 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425838977 seconds)
  done (took 35.433770663 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.358388675 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.377124692 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.356698651 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.357266626 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.365487351 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.356791428 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.35798545 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.359531314 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.356733848 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.365506378 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.358159014 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.370518522 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.356816078 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.355398464 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.366519235 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.358612503 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.362999036 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.358743341 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.357421327 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.364844093 seconds)
  done (took 28.489011337 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.351964819 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.334573123 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.701880814 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.604419707 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.349126815 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.345046234 seconds)
  done (took 28.954878665 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.423522879 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.556927938 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.359670423 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.710537315 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.788618804 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.361526398 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.360404891 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.596920803 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909082436 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.895753349 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.416386756 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.425221882 seconds)
  done (took 20.073890502 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.362606079 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.354400553 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.356923675 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.36943751 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.412863909 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.365135778 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.366399769 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.352506152 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.413248939 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.418959535 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.365558486 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.415875148 seconds)
  done (took 37.82446998 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44026523 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399567385 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.259343654 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424896902 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08448106 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559569062 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400941376 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095812597 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.359163181 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627219986 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356505718 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445378056 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609581336 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356640442 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358565911 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.33525402 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578537221 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817607652 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352574101 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.438070672 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382257943 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368004123 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.421237466 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583790024 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570397432 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.33490765 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.618416212 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.135615396 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640550214 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370446265 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368768881 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356084515 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630418797 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008908135 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454231949 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564553573 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360556768 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.912802065 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.34262329 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.379667203 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362637638 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.359847817 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366291683 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35760434 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29158013 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358393469 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124155017 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.36298994 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.070022301 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358938052 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612334682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455789431 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.362077518 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.349309135 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44134577 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.358886028 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.361814657 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451336116 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924555006 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.774968486 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365025618 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.295307354 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359682975 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.385513075 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962217384 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.367461407 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.362952476 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361988824 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293683815 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.312519505 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375959906 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506647814 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.380998113 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010257277 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029617634 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364097358 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290656868 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875454586 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361541014 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.294930063 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58831294 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135181064 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296596446 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.305565167 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294727922 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029878251 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362865436 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.737592122 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374822523 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106274523 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572013579 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380025443 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384294841 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583437719 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.25603505 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360985202 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.367155082 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491730628 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376377923 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.121258622 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295718392 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.36036424 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616963573 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.571425089 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363639143 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.330813296 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871831 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361625335 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.377913976 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373334164 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571819943 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.921327868 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379076458 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782228232 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379313572 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.138014964 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066030097 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37321387 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.365802944 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365164749 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605541425 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.111356294 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240076103 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429983979 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368370343 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36294638 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.421338944 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214758449 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.263285628 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.56528301 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388578274 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.374304439 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.368095556 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307833035 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.357315257 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370539118 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.143127699 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585839356 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365551996 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658248616 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298598955 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512326023 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3678717 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.579866337 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.548658115 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.360558257 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623918071 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362312633 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380628768 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376022708 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381813995 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463817809 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389670662 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.374480075 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622753928 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.364680616 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.369558139 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.412660626 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.144291966 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369167138 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.367620043 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386369165 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92815861 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342995837 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367746289 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254745247 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.378101761 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432487506 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371754425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577841438 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.148909279 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365631091 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.36803239 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.371551103 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590063549 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374511673 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.336786884 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447663759 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.871542611 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.928501002 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380316966 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.303584702 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.079772813 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.061644629 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367262016 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.555851453 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365328703 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57740129 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380914114 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368288166 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925892237 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370852598 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.333896427 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.373516228 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379792166 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.373172561 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367298265 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.126717167 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.812798127 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375986477 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380021324 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510995237 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38011935 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302874617 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.885692914 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374079953 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369626986 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.141530508 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403380623 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.344707345 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195616909 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621188379 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365909705 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632190974 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.505597989 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.399339233 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.369292919 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38038214 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374695482 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.387352766 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376319003 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.379931381 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.400150175 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.808588255 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931875523 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07662926 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875670538 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662285262 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.368473036 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.266622167 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132614333 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305701818 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.025444785 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556186005 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136948779 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31517146 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874409914 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.557830509 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119768769 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624269706 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600319633 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.6551823 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.374567219 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627793342 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58394506 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405125984 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.375403376 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300147329 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.650038701 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947641747 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367010169 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450098696 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130826806 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37031216 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.151991965 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.417811831 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.00381238 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773134471 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.000415987 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.759735465 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374693887 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371448508 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197538658 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374011402 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.896967481 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981944675 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388469703 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.876686358 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307387129 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58254676 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.383276047 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.375705878 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.647039832 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.37471572 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.628562738 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628416122 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3094138 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379640565 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88236417 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.228367218 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.379351594 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372125672 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074228047 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372495574 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653896526 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.379123152 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.118698499 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383028268 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308408095 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305945813 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.066579553 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381963983 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35019474 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824051583 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.368576975 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372490301 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384817666 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216697852 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629526802 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.38676468 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936723753 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600118955 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369628124 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392305003 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.378182385 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379788638 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.362716043 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.271981978 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608658364 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377631129 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592554711 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.283391405 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.275466137 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.443390345 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581969061 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.258294665 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374735539 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615395112 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.086500254 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.38563344 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06054832 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402400349 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387511748 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387226177 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369788784 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389427869 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444416272 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5881126 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.387750628 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.387799286 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784151787 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375870944 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379626554 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.391107953 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469864755 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.843058363 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.12806865 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.152033474 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946414117 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094589701 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950403374 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6339878 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378156704 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384009726 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312050974 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517776803 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904630741 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648982485 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509191425 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.379730494 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400587535 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375599968 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380694241 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590307541 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653301618 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.248582887 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385492563 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.038154927 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.260468692 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390276825 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.588933131 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839406345 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89772686 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751972482 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384779519 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.14171006 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652101492 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.47074237 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379951531 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967916022 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.379199639 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.045589771 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.378013041 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379305934 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525325492 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633327508 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045762133 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.388288563 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.54004538 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.149050922 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.383750153 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633895254 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.777406506 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588524944 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95119311 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066520339 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643427533 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446206407 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590974498 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.485926118 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527226875 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.377827755 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.276302819 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379334769 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225034517 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.087726516 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.390609906 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952201449 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645378771 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381421223 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.378343207 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404937562 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.390964168 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604305781 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057192291 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59774083 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391205885 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390762779 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.953261632 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957326003 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638144444 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318068617 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.37848816 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62253119 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619832817 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406974145 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.835118048 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.094751522 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90684118 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.347138806 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401967968 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381468691 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.062208884 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955628022 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.141925004 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844852099 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.034613433 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398370667 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656244164 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.387591729 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380382763 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658248188 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.387684643 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384108642 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598905786 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.952344451 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138865243 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.384671431 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.510475114 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.320174481 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.605545081 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463287021 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311155479 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378582936 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.806324971 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400447828 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512634743 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389677866 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.395492143 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38979722 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.114959951 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65818816 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.381456694 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.387433762 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.379997155 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386848454 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475723078 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978710453 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388321614 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.073895186 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.736331557 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64111576 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39622268 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.372340655 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.388288325 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385547486 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100335426 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348630012 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381019972 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904963237 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.387483056 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.395134738 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388271485 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.601211926 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597474068 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397468849 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603343626 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391691348 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40063935 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.293166153 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.155703551 seconds)
  done (took 1652.583892168 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395424702 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.392304717 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.399036389 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.47320283 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425215613 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481176173 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.454418416 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.489321356 seconds)
  done (took 52.806592505 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.390957299 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.542367028 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.41509786 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.383168852 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.394411511 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.383367768 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.836276304 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.395423962 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.389020696 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.39452125 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.39697357 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.389271863 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.030476171 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.396847649 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.400714039 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.390055381 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.387620612 seconds)
  done (took 66.220938693 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.39412454 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.954737897 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.496116173 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.389331988 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.436474211 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.399055064 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.206433383 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.44999374 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.38029348 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.730947908 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.031293961 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.420675645 seconds)
  done (took 85.589216692 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.399061825 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.394785225 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.3960727 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.3913189 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.394827996 seconds)
  done (took 8.273339129 seconds)
done (took 2086.231722483 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.631567835 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.067256191 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.025165737 seconds)
  done (took 5.39139445 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.531451751 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.575752634 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.696046273 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.72213783 seconds)
  done (took 7.820238597 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.669652797 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.761826658 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.590232985 seconds)
  done (took 6.316613369 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.772098538 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.410305158 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.39673362 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.385472394 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.384376424 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.387060082 seconds)
  done (took 20.451346457 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.390605458 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.392680617 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.390746691 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.392775052 seconds)
  done (took 6.862814916 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.371925648 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.112004314 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.368421987 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.387593235 seconds)
  done (took 18.534139368 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.136728059 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.143865619 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.132970843 seconds)
  done (took 7.709269552 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.398235367 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.325688687 seconds)
  done (took 10.019560917 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.685078736 seconds)
  done (took 2.981282154 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.525944803 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.71587261 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.515833801 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.323316126 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.4832914 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.18252343 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.979974891 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.573864709 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.287440261 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.497258034 seconds)
  done (took 28.381725232 seconds)
done (took 132.978000426 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.166954998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.379594324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.593618887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.139235433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.614248736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.592700315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.808968568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.109835742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.693154808 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.643214613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.139595264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.615402671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.543067402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.627968218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.545077979 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.626248587 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.786493678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.22303699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.863021465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.023875958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.808528701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.777805097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.970296339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.84363841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.747758961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.541436052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.356025008 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.622557316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.036537013 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.427554807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.543491618 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.199307351 seconds)
  done (took 194.906785912 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.387227991 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.396189009 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408777836 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.38191617 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.393568777 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.38831957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.38114682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.382489245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398276709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.383583269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.382282038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.383469943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.382844197 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.389398892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.384725095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.397147774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.382705534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.394387508 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.382130686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.387988828 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.384231602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.395776592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.382772695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.384505253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.383552439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.385488697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.38241676 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.382763402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.381680332 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.384220182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.398555865 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.391428042 seconds)
  done (took 205.702570429 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.388953993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.383903448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.402296854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.390689284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.390166593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.393396597 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.399596876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.401875631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.384152986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.404138673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.384611063 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.399523464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.385049865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.383566715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.386329639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.384043284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.383915227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.402541811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.404537305 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.398863871 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.386501751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.408857956 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.385930366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.385772832 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.406471427 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.385219676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.399469167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.386069238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.390870643 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.385450549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.393636263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.393424986 seconds)
  done (took 205.860378222 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.588675916 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.399119689 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.402251847 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.355657328 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.401992387 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.401075769 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.392029964 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.59428965 seconds)
  done (took 14.837395821 seconds)
done (took 622.603702605 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.672329014 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.375040883 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.5944115 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.422190988 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.209846355 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.436947705 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.417254485 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.590091801 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.326597693 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.587533935 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.635613261 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.410457744 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.775867002 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.413760946 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.671789207 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.519459873 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.275447255 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.392180125 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.733017567 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.966967765 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.681962634 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.894591654 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.586708581 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.326581882 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.799181693 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.894539478 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.126968545 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.274310828 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.422997526 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.741597309 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.082007783 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.415073719 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.461211731 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.457608866 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.514856739 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.512110362 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.36486401 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.468234219 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.605254869 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.663493488 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.965264485 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.146955469 seconds)
  done (took 94.134895152 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.391915572 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.390793248 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.38869034 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.393731427 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.392398371 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.390842082 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.387294114 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.388704022 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.387980858 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.387361075 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.393253374 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.394845108 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.392895259 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.394753826 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.391974055 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.394056234 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.392026095 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.391837595 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.38897707 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.393256219 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.392799311 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.389793548 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.392999495 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.390179203 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.393020512 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.390605578 seconds)
  done (took 37.484103753 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.405070488 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.653824934 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.808465922 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.411888245 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.405970863 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.409546842 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.481886663 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.407494094 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.409735063 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.409432754 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.57548046 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.409100574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438011827 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.841946618 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.410754418 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.409895745 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.408794449 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.407506289 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.663680924 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414574586 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.499905844 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.408109417 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.483254932 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.416216431 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.423328683 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.406724635 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.411228643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.924613065 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.410212999 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.57243941 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.189422665 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.479327996 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.873065184 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.824188805 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.192545534 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.412013644 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.408959821 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.582037012 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.410416181 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.405082017 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.480939765 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.40976589 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.82389135 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.028407142 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.42190752 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.40702737 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.947061617 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.581152558 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.64684031 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417297642 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.848401039 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.413900036 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.41057207 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413344047 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.648482078 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.413254226 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.409696421 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.936268442 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.427240255 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.482904954 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.411531579 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.409888241 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.670498909 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.41065597 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.657497622 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.405951027 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.41574144 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.423227454 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.819492012 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.406563245 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.06042312 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.420633981 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.408742763 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.574786648 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.659247116 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.981329191 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.414262108 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.673410511 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.886543691 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.480766928 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.41317544 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.91545755 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.489033827 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.414641361 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.409050304 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414883781 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.408284208 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.46100236 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.479549827 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.978551504 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.036892663 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.949289394 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.502695925 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419720288 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.409891953 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.934694793 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.420693233 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.41240059 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.822922756 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051831455 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.421984371 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.416690496 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.048969515 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.423608896 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.484710844 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.418753457 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.829874857 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.406895573 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.461662523 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.411815257 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.416374061 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.42830825 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.485821566 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.417362216 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.411070661 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.021126144 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.597708602 seconds)
  done (took 184.433149412 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.402830367 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.400017018 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.404950327 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.414474728 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.402264406 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.412279975 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.404541925 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.403529292 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.408059162 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.403825064 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.40274615 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.404032816 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.403357322 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.414142989 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.409692986 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.408869233 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.01592685 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.407296641 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.403320995 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.402085983 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.195851466 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.408340388 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.411179297 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.400400746 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.408082089 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.409265825 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.416549586 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.40329767 seconds)
  done (took 154.097036248 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.416228483 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.974172496 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.421322469 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.539552283 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.433572842 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.413995027 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.539984123 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.472194312 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.418895293 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.414180118 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.413673205 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.715269175 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.418339729 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.921908673 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.603621456 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.543525024 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.924207724 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.434382482 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.415149495 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.415219946 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.546651225 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.42286873 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.716225318 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.977386751 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.419886564 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.973084964 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.408195575 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.418021589 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.416574294 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.975868583 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.415425052 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.717021588 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.487040619 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.47447329 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.98090884 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.922275383 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.941898742 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.561866275 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.417561772 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.416285944 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.416219774 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.408984724 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.978556024 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.417854059 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.417042687 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.972467501 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.433700672 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.418928508 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.42774659 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.417223511 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.476420988 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.477041043 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.722624911 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.985261448 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.492048013 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.430205208 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.539583315 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.807539469 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.415185125 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.925031427 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.404943556 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.979213126 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.435209482 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404977547 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.416260017 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.42302035 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.561298026 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.54695074 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.931337933 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.434011992 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.930724928 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.577056809 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.418972452 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.417712739 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.422132917 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983912571 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.933506712 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.579303662 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.549412169 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.605010055 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.411203645 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.417259744 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.408348844 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.493596331 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.420183019 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.98348705 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.947943246 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.437499606 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422052163 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421665305 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.419585532 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.590807152 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.986743003 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.49652117 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.92558617 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.732123591 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.724591874 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.421136263 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.474783164 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.434541284 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.725647983 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.42014172 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.473324876 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.872468431 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.719984427 seconds)
  done (took 168.094419973 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.659994877 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.58864311 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.500936412 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.548876633 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.009144049 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.978956482 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.659920001 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.558763701 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.532439876 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.675411701 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.566143842 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.511100684 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.585520719 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.496015054 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.143098911 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.487029104 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.512473102 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.570103226 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.514895849 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.416872211 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.048977184 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.699639855 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.586459286 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.256957653 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.508614612 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.169914954 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.976117091 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.972479053 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.597231998 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.711170505 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.958226962 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.515542485 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.382682148 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.08805583 seconds)
  done (took 67.31165315 seconds)
done (took 706.858522626 seconds)
SAVING RESULT...
DONE!
