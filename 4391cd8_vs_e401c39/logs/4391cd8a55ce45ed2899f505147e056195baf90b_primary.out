cset: moving following pidspec: 14381
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.364015401 seconds)
loading group "string"... done (took 0.564079748 seconds)
loading group "linalg"... done (took 7.75054495 seconds)
loading group "parallel"... done (took 0.17331155 seconds)
loading group "find"... done (took 1.190463292 seconds)
loading group "tuple"... done (took 1.869697823 seconds)
loading group "dates"... done (took 1.272441993 seconds)
loading group "micro"... done (took 0.236342468 seconds)
loading group "io"... done (took 1.108996666 seconds)
loading group "scalar"... done (took 42.524811527 seconds)
loading group "sparse"... done (took 14.221140926 seconds)
loading group "broadcast"... done (took 1.089741648 seconds)
loading group "union"... done (took 15.065299207 seconds)
loading group "simd"... done (took 5.051387815 seconds)
loading group "random"... done (took 10.118649872 seconds)
loading group "problem"... done (took 2.019822625 seconds)
loading group "array"... done (took 23.641205525 seconds)
loading group "misc"... done (took 2.121719076 seconds)
loading group "sort"... done (took 3.510631664 seconds)
loading group "collection"... done (took 19.698876111 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573323259 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141837999 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149842796 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13003292 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203667038 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157191685 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157402068 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099429319 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009311582 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175776021 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153968853 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523883036 seconds)
done (took 5.237246451 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219622444 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094235965 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103665145 seconds)
  done (took 0.900253907 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077494751 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145018013 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094222483 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078131791 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095351329 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077444971 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093816974 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077442493 seconds)
  done (took 1.370798176 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086668662 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097268663 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081745387 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096634723 seconds)
  done (took 1.071206993 seconds)
done (took 4.354620566 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732844766 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27520226 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20422113 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460179962 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195619242 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216499767 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680786466 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353372501 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252588067 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099618739 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142884036 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385564191 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136610007 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683992356 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089523362 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124267139 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177148637 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.459346108 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084800874 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111028812 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.1167494 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142677674 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128675157 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090525796 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.181808978 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082083755 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192575789 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108512046 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080603729 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.2754518 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200852012 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686296631 seconds)
  done (took 10.899332534 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110082084 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134020251 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09855138 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137070046 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134874068 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099285886 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084182709 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095941449 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121854586 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177780063 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113904653 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136221028 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094963426 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081870196 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115636809 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245530607 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119017706 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099452749 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099962682 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087254974 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137647338 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112121006 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108177118 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093705773 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166757233 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222759376 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110437025 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127975213 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099303392 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113720271 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143109974 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145054676 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095700444 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080795892 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173808499 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123813453 seconds)
  done (took 5.163124479 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.083683616 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.125444325 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189711448 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102368422 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18560032 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082029085 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141826618 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093228553 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11193014 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239167074 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.097812341 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164517098 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141942026 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115090349 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080450422 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098581856 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09482167 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.549501767 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159711106 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115006642 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114303914 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101778825 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097962917 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.352804383 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101498455 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095872815 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081352067 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080848544 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159319271 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081199067 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.24218262 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.102076816 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099815437 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098915247 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131345097 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124817087 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116326466 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096220634 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095395833 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174131061 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088128746 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129032588 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097338876 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103023496 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135972388 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134923624 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096853035 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080981535 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.2033349 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096785856 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114368164 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.941615398 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182664983 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091397012 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096661351 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321968725 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101758205 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097009035 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077086127 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.290062595 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18959337 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097640196 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078694427 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096208921 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07914035 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374098583 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081295009 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.887348896 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082670951 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.104991888 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082133989 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096822276 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1210665 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08611751 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104299673 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096759474 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098997866 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07952378 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097181847 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094622924 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081789398 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106511702 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084499601 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097312054 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1593898 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081276197 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116872278 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126025388 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086039462 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095571287 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11455886 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099369859 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096637965 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116394838 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098391273 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076152371 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108248057 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098856173 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142596157 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082826938 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.172299343 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081394768 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125027226 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098654871 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113697016 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11267164 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097837698 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083884588 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095889909 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077038365 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164036837 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082458158 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098542695 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080546798 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095317057 seconds)
  done (took 22.488009034 seconds)
done (took 40.340987452 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318379644 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103703313 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103309564 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102978414 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100746657 seconds)
  done (took 1.510566242 seconds)
done (took 2.264475796 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286835124 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174465305 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095370082 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16497288 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092698708 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163669903 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158282362 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094022413 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218270888 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093899242 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159929514 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075800956 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094645928 seconds)
  done (took 2.653957678 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095628057 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115239075 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082746667 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110354885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077001814 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110982168 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092871064 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116826224 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109639926 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085187176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092810986 seconds)
  done (took 1.838246119 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093843954 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112696554 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082709368 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111345177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076163612 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111072023 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092736644 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116654375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109543829 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086355558 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093778465 seconds)
  done (took 1.835640992 seconds)
done (took 7.07108344 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09075769 seconds)
  done (took 0.835977879 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.934575314 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.802432603 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111903478 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148514235 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297625067 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190156242 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.471765158 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123804949 seconds)
  done (took 11.032773735 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.146245343 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08521164 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.10040173 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08360479 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104379206 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08495284 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100040937 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099739161 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08213498 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102007343 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086041891 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099705809 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100362839 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083121885 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101143476 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086728306 seconds)
  done (took 2.356531703 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119189378 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116800496 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106729957 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107995646 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086111686 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10524555 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104981968 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087167597 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102075796 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102744714 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089960169 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105181047 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103200635 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079759993 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106312381 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10717793 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085996611 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106574115 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106090202 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089846612 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105589783 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094765906 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085984054 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106255885 seconds)
  done (took 3.270908085 seconds)
done (took 18.244469317 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158312406 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107782022 seconds)
  done (took 1.022126977 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095906917 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113068409 seconds)
  done (took 0.96941984 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098636811 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095643614 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121188885 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109231191 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080395272 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097025914 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119072382 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079941501 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097281533 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079881911 seconds)
  done (took 1.742354649 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083234969 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109863647 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100134556 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09497401 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105355998 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093875129 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087837843 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099499911 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109046488 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077213535 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102004269 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11399046 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085524795 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115664007 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103776558 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082690701 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102361406 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098112943 seconds)
  done (took 2.530383838 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080115844 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097053491 seconds)
  done (took 0.940985892 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081785022 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093865901 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080471652 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097080657 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092612582 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076772726 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093590162 seconds)
  done (took 1.378817005 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480962705 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134231401 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260243047 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099985644 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102973166 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299781703 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097493029 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083555697 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103013803 seconds)
  done (took 2.483300625 seconds)
done (took 11.827847095 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093424239 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114086725 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111685942 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4636685 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108051098 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097581893 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145840126 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250289042 seconds)
done (took 2.152527587 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143440439 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.600058213 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.422575948 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230881983 seconds)
  done (took 2.022357775 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.404639127 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098915337 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084676986 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08239063 seconds)
  done (took 1.444725258 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080457942 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098514532 seconds)
  done (took 0.949057682 seconds)
done (took 5.330752062 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081567886 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.130674764 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079986947 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100077859 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076844384 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099290129 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07621357 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097499935 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079064223 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09767253 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095455443 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081093249 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095642891 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078799319 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094333792 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081242816 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094167109 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077725377 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093517107 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080335999 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093578752 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077742827 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094121794 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07796159 seconds)
  done (took 2.940139751 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099799734 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098449887 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101476575 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087680955 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101502278 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085913257 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102855753 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095681712 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086638947 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100439513 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099327064 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085133734 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099168319 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084356971 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099424828 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100415876 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086571013 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097818475 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081323253 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102089196 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101501393 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081077592 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101003232 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085489184 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101535495 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101643205 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081567643 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098011607 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10071999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084896413 seconds)
  done (took 3.607767559 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085493194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0928252 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078576466 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101980703 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07769694 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097179432 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078272317 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095855676 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079076131 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096152798 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079432197 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095681307 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078041737 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097243734 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078149351 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099979963 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11152991 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078960532 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095476352 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079282556 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098067783 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07845325 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09509486 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078692901 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09530282 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078375589 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096145086 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077996456 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096590226 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077438781 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099328122 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082407567 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095985337 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083640045 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099265359 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076635917 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099365626 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076684567 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096093617 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076538945 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09531816 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093680864 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078677424 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100950121 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078964106 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097568924 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078699433 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097049238 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079109983 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098498264 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077761371 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095514005 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078674739 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096640794 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081533728 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095245981 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095119362 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079189593 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095278265 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07922676 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09480459 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079276836 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097473209 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079364298 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11133269 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084402943 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095303438 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079987812 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097148206 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081156448 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098691469 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092291558 seconds)
  done (took 7.177523054 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083750739 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106669247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080819717 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099118557 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076196552 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097992858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098739782 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079701937 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09683901 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085320092 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096440342 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079394253 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09883313 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106939587 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079744296 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09746162 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084725738 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095281751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077922921 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100989733 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077850576 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100477571 seconds)
  done (took 2.783302977 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209312815 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105350551 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142560692 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10670063 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083225436 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107415652 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101431926 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086793283 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102895515 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083008648 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101463048 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101723657 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082994106 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100332112 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099793608 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086111145 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102205987 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.190672908 seconds)
  done (took 2.777742456 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093118178 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099266862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101468652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098465358 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098832679 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083975385 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103766284 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107336667 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083793481 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098524839 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089926286 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101212158 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100870228 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082501398 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100967486 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080874623 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101394354 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079994461 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108257332 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10561951 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086076344 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109015326 seconds)
  done (took 2.901171533 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097454189 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101265603 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118447849 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084990043 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095489613 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080445052 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106269435 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081300993 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107943474 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10055391 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081811433 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097777877 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088052612 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099661293 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103942073 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081843226 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100442157 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08165091 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101138315 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076430922 seconds)
  done (took 2.673482244 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10324673 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101523616 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100009342 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092444346 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100700312 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081803111 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10949655 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100852942 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082266286 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12640166 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101289898 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08194141 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108240873 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106427191 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09855145 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092439065 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109781112 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10912587 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082151245 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10040207 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12444327 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08216597 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109797617 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100202173 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082180989 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100578958 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098875702 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089304634 seconds)
  done (took 3.564705154 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081844542 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098822856 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081054772 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09619392 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079850683 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095958347 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080283458 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095388815 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08193762 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09602752 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081087538 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0990192 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081590593 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098414224 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081625237 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098610773 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081237743 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09618574 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078611132 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096466095 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08058164 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09927591 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080643779 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096563808 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07882831 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10012548 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078398209 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097048004 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080747544 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096962029 seconds)
  done (took 3.460711334 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091875079 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107166785 seconds)
  done (took 0.988099661 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079164212 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114991141 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078248161 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103606596 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085390754 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10134884 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108018707 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085673113 seconds)
  done (took 1.546529035 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097338716 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111312375 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082590246 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113440411 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109737683 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098915269 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173014132 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101625659 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086571376 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099301802 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112629177 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082113382 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105961181 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081588297 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105748754 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087920273 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098090512 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105603192 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085467142 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100449275 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08331294 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109097318 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083956588 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097378246 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101347909 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09142948 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113521007 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082123311 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104201922 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106893209 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08747895 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093981959 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082213732 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10213936 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079585262 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109452989 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116799916 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085351687 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110059394 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083021811 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112297346 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095406471 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086192224 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106468613 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109313071 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083351046 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100717591 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077350032 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098601897 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083988695 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096285015 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081970819 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096034403 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088647115 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104609793 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11096659 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080318715 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10153395 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084097308 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103761613 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088000469 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102251945 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102308955 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081972382 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107243405 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086209337 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110938456 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076408888 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095038794 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097185726 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093195883 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124948137 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087881064 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102271254 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10105744 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081557311 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104719666 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083379941 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107058752 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105516976 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083114641 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107103736 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089338807 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100915436 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084699856 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109667948 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097949844 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084193094 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098485892 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117170431 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081507278 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097807679 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079925259 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11122469 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08532169 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100523986 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078977048 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107658553 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075374793 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101373175 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101110021 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083063714 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11209211 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105791967 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088380771 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11064498 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088397932 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100920096 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102602122 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080334503 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101395797 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084235704 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107401366 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076605029 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103952505 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082628442 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102216459 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108850633 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080998773 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10049937 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090899502 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107174111 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080516156 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097681618 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102358324 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082881021 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104181737 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090179516 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099590604 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076662178 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096464298 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084029009 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100943363 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103574048 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088546937 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104061899 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075863856 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09964486 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104461808 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092380251 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101191685 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082809286 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107713054 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082664564 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100961692 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106751325 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086136181 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099415399 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088565597 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102383644 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077383426 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105373399 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103174742 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081743193 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103696861 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085802787 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103556988 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083131824 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100226027 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106322658 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08410783 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099977035 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081876509 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100072393 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093068294 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103789736 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095592987 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079957497 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109082068 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080035687 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101029232 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081553671 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103955758 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083145954 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099571048 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098991946 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085011579 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113337516 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08697766 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102173152 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105979217 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094611321 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10170217 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084659592 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101774716 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082990882 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103449238 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110046954 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087891657 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107939448 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085058782 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098955338 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106508683 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090853172 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100215318 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080551208 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100596843 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08579599 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108035351 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104209947 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08349986 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099747835 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083133769 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105306087 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085195084 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101095916 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098787996 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088971105 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099886964 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089493873 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102832566 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110514762 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086514305 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097026217 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086392058 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099726199 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088597171 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096956846 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079396733 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100816774 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101808676 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082002483 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103508933 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076791418 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10833757 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089839532 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101792093 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081012491 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10300843 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107568817 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084261788 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104802159 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086114218 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107806607 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111019093 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082726348 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103964946 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093545186 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102078502 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075569688 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107487561 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098245577 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082833069 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099599201 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080831478 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104927521 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092191452 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109094343 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094625293 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085304899 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09939198 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082501315 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097832916 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087072055 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104486229 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082822166 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108759116 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101504508 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087043461 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104860223 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082161526 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102849389 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083286576 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104880499 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101904007 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085881923 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100515475 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086561451 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101723157 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080313225 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103023336 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082127916 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102397596 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106443098 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082852111 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101017923 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08517249 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102762063 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083205583 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102291544 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080834984 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104866468 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10129667 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084328326 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102717113 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078055036 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108910123 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082798397 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11062867 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082089092 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097972957 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107080992 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085946683 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107168747 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082580229 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103247421 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082696982 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102261483 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103454661 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089931392 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099290985 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093244759 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111355645 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101758073 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085935861 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101350288 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08438371 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100481511 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083293142 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102866436 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081948294 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102349772 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106183131 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086137553 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100781653 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084852907 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102777713 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082934876 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103276657 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077133633 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102253448 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081216601 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102854032 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112410929 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083273303 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105162063 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081930661 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103943492 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100200749 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079949001 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110346315 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092368917 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103009365 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108764647 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08197974 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103056913 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093353087 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096582037 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081513258 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100102522 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080169938 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111026154 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101683097 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100958534 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101833121 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081723487 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099715523 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083846345 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10136703 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076005879 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100311462 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104565818 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085316863 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099827057 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083165751 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105626021 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084403883 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112502795 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100176043 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084132908 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101971459 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080089001 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101428939 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082234025 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105649177 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083966029 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100956199 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079726655 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102133662 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101678039 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085497535 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102086072 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085467309 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109647519 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083151549 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106273264 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104341578 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078330135 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10404768 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083049388 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101758483 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081694284 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106093571 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085418593 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104085255 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109797713 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082822622 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102063285 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083757698 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10085549 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082014519 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102549917 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100473617 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083017763 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102833095 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091465381 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099832396 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085375363 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102769436 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083805135 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110576894 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102399958 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085896434 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110204646 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085045065 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103332522 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109115235 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086895239 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105618427 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083480686 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104054445 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106736577 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082848005 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107989444 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08388898 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102721554 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08511548 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100495121 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082608215 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103051015 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081280617 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109215371 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102613028 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083164638 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100950075 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081764466 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10291271 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085997146 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111296 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10374733 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087138911 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096647647 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080556866 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1033755 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080392282 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104807553 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086018381 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108657728 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103102697 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084311832 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101034555 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094004976 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109552139 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085723757 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101312104 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105259562 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0855987 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104112834 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084893441 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102717626 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084901948 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106952858 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083210915 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10190976 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109019335 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08708854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103443349 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08439072 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103427779 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08319818 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098395073 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083825902 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105253521 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106931672 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086268534 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102136151 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095110715 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102723824 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082005857 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10705045 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10112645 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087958797 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097802987 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083826669 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104399231 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083696482 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098325786 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100338082 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082432723 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104092752 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082951151 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097912209 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094928772 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112724825 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104911458 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083592882 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101476849 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0787584 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098913043 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082346013 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104391787 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084754343 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113811742 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100518585 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083350761 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098033375 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083630872 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106419926 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087459333 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100405287 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078446035 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102294663 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085475838 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108057333 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100820776 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083580902 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105540662 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085101239 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100859729 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08704294 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099962499 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086527552 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117410718 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104138824 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083891445 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110036431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109632066 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086023197 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097500153 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084364875 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105965411 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083470956 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104938229 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083882927 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119612405 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106032768 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082409995 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103017489 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085902607 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102934922 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110106846 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085465562 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103327897 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088962653 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105427445 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110827206 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087131512 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111480723 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086064789 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10722639 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081817248 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10379542 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100470505 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083337663 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103814574 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085866943 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108207385 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110678029 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084869289 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113768393 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.0923367 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108109098 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079960348 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103123585 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082502487 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099810616 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105812859 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082623544 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10048908 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081899917 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101371669 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084327028 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109747319 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083836133 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105334425 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101302902 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078470106 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104349483 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08679833 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104133746 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080256136 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103708124 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08469463 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108465527 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105469917 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085071623 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10448732 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08598587 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104009291 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078777694 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10988016 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08249535 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107266419 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082030653 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104085859 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102792351 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088470028 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108861688 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084846973 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105659387 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.1132408 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087346372 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101117152 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081015542 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109525255 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082419436 seconds)
  done (took 57.853368324 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146463091 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080927904 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098462768 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079589581 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112904185 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098243689 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079652003 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099419978 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080344347 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102993225 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079123367 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099022609 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107891248 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124707734 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093314227 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104229277 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078256913 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100859503 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098368681 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080850416 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10905262 seconds)
  done (took 2.897038687 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104398353 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118303639 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114374535 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117966924 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089472073 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115261476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114641662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113816197 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099411761 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1109313 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118765703 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11369442 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091983587 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111845657 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109997016 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09303189 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118638642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108845035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115644833 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095962145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113175998 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11571214 seconds)
  done (took 3.246148251 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084503944 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102030092 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085150787 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097508157 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083812523 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099139684 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087535835 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102170629 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086014223 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.1025425 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080830081 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10249268 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103423507 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079443834 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103860186 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08186278 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151095123 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108419788 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08262081 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105053971 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077577875 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105989494 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098381933 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080553102 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102994413 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087926864 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104128217 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081417394 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104158397 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08159427 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103534978 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07990545 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105841744 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102025704 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083166599 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101446422 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084168242 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103392986 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079519616 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101181154 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084183296 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099955637 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084364493 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105627984 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080277012 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102098317 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084038331 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103740443 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078231341 seconds)
  done (took 5.463201791 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104387682 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161364576 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086761901 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143376525 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121501996 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11175801 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087489302 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142155196 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102820043 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082031411 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123127694 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120515439 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104460667 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089147745 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111349287 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103196893 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08602259 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102324165 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087147116 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103964732 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109088063 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089451883 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119260936 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11845708 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108058183 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083102305 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104226001 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107209202 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098237199 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10945003 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108794588 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089371998 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120977455 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109868359 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082485858 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107970577 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123565623 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103799207 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087671724 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100602744 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086306847 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110450733 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10960436 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102016586 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10625434 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108936468 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083579405 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101443156 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117793239 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08669291 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112441554 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120373381 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087221857 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104995899 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109559016 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119862567 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084765697 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103051027 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086229502 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117688908 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102243866 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088030438 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119235998 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106161284 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110788191 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100843118 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109505607 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107721199 seconds)
  done (took 8.148656452 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093249257 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111046836 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119848216 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12078145 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091266835 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111954209 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110503701 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089121154 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111283554 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116170659 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110138585 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132836932 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086018617 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114428602 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109851474 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090823084 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110799309 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110377146 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089635568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110879615 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110939673 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119056559 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090353171 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120774068 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140769154 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104916207 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090253051 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111395592 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120213874 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110409026 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122272751 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090977836 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111497171 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11946595 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122664526 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090483209 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103877506 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1088331 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091434952 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111130614 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104385584 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100405945 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112638097 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106249155 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091208482 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112019145 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122088432 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125309709 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112829953 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096044514 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112300969 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120289596 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110458049 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090889261 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120818556 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146476141 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120594449 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121105211 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110626744 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101144611 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121240667 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128876923 seconds)
  done (took 7.672200032 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107523583 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115480365 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117992258 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099079069 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084055551 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109453216 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082820752 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10307517 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111932844 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094639233 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117144806 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108295041 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091258041 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117875059 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109411229 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111590105 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088622308 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109697487 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115297087 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0879978 seconds)
  done (took 2.938440429 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094757377 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125665437 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084925255 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11305582 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108217868 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09068332 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10778909 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106676291 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086619517 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108326114 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096277253 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116569354 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105525271 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090317183 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11654847 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112090412 seconds)
  done (took 2.523438855 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099460047 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117717768 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121432758 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084339928 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104776914 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080305856 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106333766 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100221026 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081398277 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121473472 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084420495 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108678968 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10568721 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083356699 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101164349 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087833059 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102170437 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081239231 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105462674 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119337115 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095461976 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105013775 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084329448 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107399733 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105723907 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089391843 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106021971 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102372333 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083113313 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106662839 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084983145 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113198159 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10092728 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085020341 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103106216 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08252953 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105483231 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084397536 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109175765 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103670455 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084234368 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104808505 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085123025 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106924109 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080796484 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106220339 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079637418 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111545555 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103226375 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086157104 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106777267 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086488727 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107084101 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116119211 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088368301 seconds)
  done (took 6.26748935 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099338475 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109167285 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080498859 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103873579 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088396718 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108302253 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107609821 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088737705 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106691022 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082961861 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107190623 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088786102 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108494583 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107954819 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087343314 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10888774 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081558471 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108155489 seconds)
  done (took 2.642407209 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090677442 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105210482 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092076902 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106035216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084320451 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109217711 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079822092 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104401849 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102513942 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087015192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104823661 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087218589 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104628407 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087761178 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106163815 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083506199 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108399225 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102877245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086417429 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101331876 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088010908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104385684 seconds)
  done (took 2.994040056 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118036525 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125643012 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091647061 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231105924 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103256955 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132565715 seconds)
  done (took 1.670451254 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109837364 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121132112 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105450883 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107653648 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115511081 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08594701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10843039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107978153 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11738969 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100732168 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109225507 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118150211 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115957008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097390036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114456737 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115607272 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106486795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0875394 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106186476 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127975771 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087039965 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118375206 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107220928 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086322678 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107965506 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117579177 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117020628 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100950965 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108356294 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118653802 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113796378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087248496 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118579393 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12230457 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08800282 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119025746 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108420346 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128170377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113007378 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097072232 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110038919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113683355 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097843821 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115339738 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118267773 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107011365 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093858972 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108999937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10706537 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135348564 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094634341 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116902496 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115678879 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118198481 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09716751 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134805307 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124569634 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117479709 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115656053 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121639321 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116580535 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094506457 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118208559 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123523623 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114317899 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096532778 seconds)
  done (took 8.142545288 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102152729 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126563514 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10894629 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12208259 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097449509 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109136779 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10708837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087755642 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10835268 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106216581 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152415267 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090135928 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117715675 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117677895 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086712584 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109073753 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108358851 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116433721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086871746 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136066656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109382469 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117375267 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09589906 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118006205 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123455614 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114780344 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107425261 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088036207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108428673 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086373331 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114193652 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10888832 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117982061 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086767615 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118434898 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108671089 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086394738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114899193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108704131 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114283111 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097295156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127878231 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108632508 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107180096 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101862879 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108221554 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1082772 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086725501 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108963334 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105823558 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101744845 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123397924 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122781731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117920679 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10825079 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087858314 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10934124 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107260321 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088174738 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115063897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117837366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086699589 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136086855 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108988911 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108782603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117509193 seconds)
  done (took 8.042119662 seconds)
done (took 155.689730046 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218976478 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.203557645 seconds)
  done (took 1.292566873 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098811053 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137167862 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095317898 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168895992 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105828964 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118883538 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138222485 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09775699 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107440455 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085178135 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108128885 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085882389 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171762805 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.104877524 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087428133 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107571348 seconds)
  done (took 2.693898492 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119143628 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.230876598 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125350006 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105094759 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090157361 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110303673 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084772632 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111906734 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089093783 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106907277 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087246315 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107436699 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083723934 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107966378 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109580701 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088823909 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105187788 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087838986 seconds)
  done (took 2.827524534 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113426396 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147704823 seconds)
  done (took 1.142716385 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242676491 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.167249194 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.228403924 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.468473987 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.273775381 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365775523 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.202489991 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.212594721 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165567005 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.20827896 seconds)
  done (took 3.409868964 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119027249 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179853971 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316546837 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154601826 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106323181 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130619428 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156068652 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130449422 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.12218415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101027937 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123650511 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117572164 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138305878 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094751473 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116107134 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117046516 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120593505 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113890983 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114283228 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095543832 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137995585 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084232378 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117190757 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113608912 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09755961 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.11959258 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105920249 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085567956 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116756534 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092669149 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114472126 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124708668 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117260279 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154932571 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121879104 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156891041 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116759519 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091590799 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115174422 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090782547 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11902943 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119222324 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123627497 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09741995 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105972317 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097159601 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105933014 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084504648 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115683615 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118386676 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.0924771 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113992135 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153552735 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119257394 seconds)
  done (took 7.388081706 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787228792 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15507515 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089153755 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.876153849 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134701088 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10298696 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.768480994 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109772508 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25187188 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.751528969 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13210882 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118914016 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204875247 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25786919 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.013172832 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290472517 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.662005974 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123546363 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148926652 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151751687 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117406582 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135422024 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107678538 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42775506 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115528475 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110478313 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095192594 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118681579 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157848175 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123519571 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112415905 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17464984 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248880403 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201680939 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092753429 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111380068 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109526617 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168800204 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263312623 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191419673 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177803251 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107691637 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087911165 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121335099 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131352819 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08476927 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182036266 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17371029 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167471543 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114133331 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117502355 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096773082 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12030532 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162704989 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120176846 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318717854 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309632972 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088567025 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120690378 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124658164 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259452272 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10113435 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224366911 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13776422 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208208154 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089542658 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80018454 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166718636 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109184753 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094333803 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119515257 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115270402 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097653522 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164437202 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389904066 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123359324 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113615963 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088931089 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224292815 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102088081 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110824387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158708916 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116308675 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118601785 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101289331 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121187378 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165553476 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250890655 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100368288 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118255857 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113236078 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101976202 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115703196 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208127975 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216966032 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160363698 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.225749973 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099524125 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182664368 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167017652 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117628021 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170577341 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117735179 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101109962 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121651531 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214929381 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144589774 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121893645 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094711881 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117523969 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14620653 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125105983 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096481131 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190059516 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457184272 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166470679 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108187491 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126177608 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098148314 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181202808 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095663901 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256291585 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120779729 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169571128 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117195327 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08788917 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119024773 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16067892 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12161512 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118689459 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100927187 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118103476 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234322893 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214912194 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120160802 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219564829 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18279356 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116871103 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168605084 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119949811 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167324284 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118815004 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097894921 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116346099 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785268234 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121762903 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098165828 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116122201 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185487693 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088459424 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123249307 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123973686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085654063 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771495657 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12638955 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119897592 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10236891 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117605016 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120007222 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095886308 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115493554 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159837654 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227586304 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118203622 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09672702 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124773557 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158615785 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116579312 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123999743 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101059273 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124637209 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121442251 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113467822 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102353112 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186266207 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162093249 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.215573457 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566889947 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1114567 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122900519 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202787336 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112138801 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28743163 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096287657 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224243263 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182653951 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098938795 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306147028 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163315142 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18556295 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126479586 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170498353 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108745973 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116928572 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163414544 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088663245 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117909981 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159992233 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124514137 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121574625 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968818886 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08940312 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223323912 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108372288 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169999252 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11612891 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118620274 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.271261616 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111352295 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126608691 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163827882 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113046539 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102190695 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.73293174 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123083607 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098528965 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117859155 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219594838 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162776545 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119253336 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116546844 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097136654 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160805882 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.226647948 seconds)
  done (took 43.667508439 seconds)
done (took 63.295780381 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277129753 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215558541 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267969765 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171129423 seconds)
  done (took 1.913509831 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171199387 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149601875 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121594682 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10819674 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150681317 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08371261 seconds)
  done (took 1.687785381 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361386015 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275886473 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2419529 seconds)
  done (took 1.787820717 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.316416801 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246798448 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471422393 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323447938 seconds)
  done (took 2.366502048 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21000849 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132098131 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110152075 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103392588 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19662939 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245795509 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141552891 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200967126 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097948882 seconds)
  done (took 2.38990035 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196332344 seconds)
done (took 11.251093603 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.135558137 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.250989178 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080953728 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.12044106 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.25119499 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125093235 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098379374 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119466447 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.150464886 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102221433 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.198483042 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116586638 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.15279662 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.241129227 seconds)
    (15/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.168321791 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.192676049 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096292077 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.150243189 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.21695258 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.210074218 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.180670321 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120766453 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.147281238 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130463587 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171729686 seconds)
    (26/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086459103 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.124856414 seconds)
    (28/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133521845 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.132129812 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115729045 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 0.185259001 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.225168813 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094643055 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200131865 seconds)
    (35/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171759314 seconds)
    (36/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.200881783 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095886074 seconds)
    (38/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.20160618 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119031583 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193216866 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086421849 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.199304865 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.202558019 seconds)
    (44/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067082646 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09211348 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.165657075 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094093724 seconds)
    (48/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066071656 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.187936544 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.1345014 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.141921761 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091912613 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121472675 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.174839956 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.166309697 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171507686 seconds)
    (57/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135149251 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.196133995 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.114072701 seconds)
    (60/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.198329382 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.125247999 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134499799 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.193120315 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111584784 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.196019606 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093417917 seconds)
    (67/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116564875 seconds)
    (68/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066577904 seconds)
    (69/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.1384234 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.085896464 seconds)
    (71/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120771501 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.249719435 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180403395 seconds)
    (74/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217485875 seconds)
    (75/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135546954 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111525792 seconds)
    (77/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.098543597 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13048824 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119694296 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085664749 seconds)
    (81/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.172250785 seconds)
    (82/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123689316 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087784856 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109108443 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117470772 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.089363094 seconds)
    (87/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097417765 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184974646 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.085412832 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.1467893 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.072552044 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126812991 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.18593938 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.201126254 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096013567 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110060477 seconds)
    (97/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190388824 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100752685 seconds)
    (99/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113695122 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077620499 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120813299 seconds)
    (102/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112679758 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.140244268 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.133557012 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.183959533 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092674728 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.139851252 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093561646 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126296524 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.190909885 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.185859424 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147994256 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.135037679 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117196262 seconds)
    (115/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085956138 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109244376 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067975019 seconds)
    (118/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.111820037 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111773415 seconds)
    (120/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159699513 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.164720635 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.38209978 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.133878866 seconds)
    (124/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065242483 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.218409654 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171846499 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192982331 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06685023 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090106699 seconds)
    (130/309) benchmarking ("sort", Float64, false)...
    done (took 0.146458223 seconds)
    (131/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.139477876 seconds)
    (132/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127805321 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.107989164 seconds)
    (134/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.099659427 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.114786283 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.178273761 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118310143 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.183023662 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.148960334 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12283441 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066438038 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139363426 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.115185356 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086945325 seconds)
    (145/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116202785 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067890687 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.090026498 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089084487 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095928384 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116317928 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085477063 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090280418 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093294192 seconds)
    (154/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.103627143 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101225559 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117841488 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107545272 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09228107 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.086498636 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119972821 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07197487 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213789601 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108776503 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093419568 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.146939059 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092607237 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120949584 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086744742 seconds)
    (169/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.096181921 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094937397 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.166844256 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.065971156 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.13409172 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.131731366 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091874505 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067179369 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.206345393 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091591328 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194170314 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146108814 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.134874238 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.190775819 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106349 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090892987 seconds)
    (185/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085538597 seconds)
    (186/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.099173147 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.18761372 seconds)
    (188/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.091293695 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091550619 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091901917 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068234278 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132801169 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094287066 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089990671 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093298308 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222057297 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.106624988 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08561863 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135569048 seconds)
    (200/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090118124 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118041911 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084446195 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109478077 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086454001 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109768949 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08692961 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090308085 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096123048 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094845825 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093542122 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.177449986 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115825696 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067641911 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092829025 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120174638 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.152235045 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090035994 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113840065 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067670882 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.198347879 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.110926992 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.11959648 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.13343015 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114399132 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068576953 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084679695 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121086226 seconds)
    (228/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066585909 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091202851 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086069166 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109307549 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086583397 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174739782 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188054681 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088191561 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112181877 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.115676228 seconds)
    (238/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091658856 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094504148 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.090064642 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 0.150215593 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091218625 seconds)
    (243/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068115529 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172738724 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067819048 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067873297 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.140763652 seconds)
    (248/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113142601 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093495685 seconds)
    (250/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077050129 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111816293 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110839719 seconds)
    (253/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069344916 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085617742 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091426507 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085959186 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11334935 seconds)
    (258/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077595159 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161680194 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086176941 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090504983 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087401759 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116483747 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067807736 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092096983 seconds)
    (266/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122414103 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109743915 seconds)
    (268/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105309263 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120506411 seconds)
    (270/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220568117 seconds)
    (271/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115429626 seconds)
    (272/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06928259 seconds)
    (273/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101310644 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117198002 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111559753 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087780216 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107826788 seconds)
    (278/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.122349736 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066296163 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.099454169 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09426781 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109890019 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067302639 seconds)
    (284/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.089501613 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086249398 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221536337 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085514093 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110124251 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066779868 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119442804 seconds)
    (291/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066536171 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137272511 seconds)
    (293/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091673877 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091539241 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.158638918 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116234654 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067196867 seconds)
    (298/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.090947808 seconds)
    (299/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138213206 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092299297 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110486456 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116117171 seconds)
    (303/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085623293 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177983808 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191030123 seconds)
    (306/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067248422 seconds)
    (307/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113321661 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092620981 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091222534 seconds)
  done (took 39.517203681 seconds)
done (took 40.431158613 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101383724 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148337499 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094764549 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136692268 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123361784 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090935518 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118740603 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097061202 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12378555 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124759759 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098204735 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09333437 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096738726 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120523313 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095923076 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140157993 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122423604 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094568171 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118551394 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086156751 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119713576 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086181545 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113119369 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07003027 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122155791 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093818784 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117344767 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118220538 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087620919 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109378244 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09055804 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11728483 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087491512 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123951883 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093325212 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119045785 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096300548 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121076744 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087387579 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111683097 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116425488 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087643629 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115906464 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095335292 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11616763 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093265097 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118335136 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099471478 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140135751 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114572805 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095850976 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120560671 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096427423 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117544129 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090102613 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120202579 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092097256 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142126359 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121525986 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092327706 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121005015 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095010162 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117425642 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094911744 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119546619 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119850511 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099484715 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115463085 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09713894 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116888487 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086147795 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120240285 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089849849 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110747288 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09552274 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122281621 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084807814 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116869124 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116017357 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09319024 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109679169 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089501849 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111998607 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094352336 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112344053 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070771281 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089691175 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116879438 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108875606 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097343667 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115932103 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094332094 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112364291 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098206289 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110403245 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09150512 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11114045 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0872225 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113866242 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090189557 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110838351 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088344975 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120265104 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.086985412 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117236188 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121741752 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088394557 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116007216 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086302165 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11032108 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101627823 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121298483 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087177278 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116700995 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085347605 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119760987 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085735326 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111047296 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085644873 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111654972 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0925317 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111723463 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088421923 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118461521 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123337059 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087899659 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114346517 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090649799 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109602476 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094099705 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110633103 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087896253 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112217441 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078496157 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112298309 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087404768 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117745988 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090517224 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11941698 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08824793 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120020749 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092037634 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11704704 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092442582 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110740126 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07469238 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116286302 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089483923 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11347181 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086458065 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113293908 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086493637 seconds)
done (took 16.943703265 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088060438 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184546659 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150977387 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141873126 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107564486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111915039 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121542151 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119700252 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11373862 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143155189 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109901852 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13251323 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147823981 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086661246 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112021785 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091512437 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113108983 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103010263 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145746025 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131845249 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162783778 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08513122 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146602766 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135541893 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118943542 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115787083 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111394069 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092142128 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11497163 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103196465 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132834168 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.08940701 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112652393 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133640483 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105580193 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120166973 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08666377 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119109899 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086717451 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113809596 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14078895 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108584422 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117218209 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116608142 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092227142 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113219189 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089337691 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120612502 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097658419 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115797101 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125257848 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156055776 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09105884 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122053113 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086230322 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122743127 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120145193 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091049127 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111156959 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090825426 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111029387 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09143255 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126907134 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139822768 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091959346 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12203642 seconds)
  done (took 8.619571717 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105264318 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139461437 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104308593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.147767003 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110662877 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087441832 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112573023 seconds)
  done (took 1.785068222 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089979767 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133301211 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111233172 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13581034 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130536876 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.1097385 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12298201 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087950564 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131124846 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.087985358 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135217397 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151718022 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088640225 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120306673 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136420275 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.0883196 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136701633 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088041099 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116279549 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111110307 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117043699 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134270863 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09156884 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113179038 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102397224 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113476226 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161079521 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093811795 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114816954 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092080187 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111610801 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166159571 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103799048 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124683002 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087345978 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128474035 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127117808 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087107816 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128933148 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094002255 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12757053 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087961165 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115816978 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085581283 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118714951 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122637141 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091462016 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113134005 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093009138 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133083852 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089372319 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129648033 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088643454 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118681429 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089343323 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119898426 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121552668 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09081371 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132587568 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091127564 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130048032 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104644998 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.1281671 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129158246 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091089023 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127312717 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102884196 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11699358 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090230768 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117642529 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128722832 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088456733 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113919874 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100487038 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114160334 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113205849 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13783019 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08997361 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125764212 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113013572 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09061036 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11286901 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112435178 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118273295 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088830092 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119034874 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091533645 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112558238 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086807902 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118849974 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086461424 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115846341 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090693145 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114785819 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114821794 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106501057 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114196745 seconds)
  done (took 11.807097797 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091976098 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113452033 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092692392 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114190865 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090152213 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114078361 seconds)
  done (took 1.608365494 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114331114 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117862485 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102883996 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120668885 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155352748 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102886691 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130640355 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122730949 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107789334 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127990464 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128550518 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104497007 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136319093 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119272581 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104575636 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120089702 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104807223 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12586469 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12669813 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096148269 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137074514 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119760802 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096931374 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132835888 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116205226 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097018687 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125828427 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101895769 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128376781 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122643888 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097347815 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117632939 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095875031 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123814936 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129614793 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095761484 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120527685 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117185336 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101617548 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11782219 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104395877 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121882538 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125608106 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094153624 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123912483 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119598215 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094781348 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124572278 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103622304 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119223425 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117650923 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095933772 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11835796 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093711768 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121307838 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121679376 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095021555 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129746347 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096084511 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121946903 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117031107 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093730105 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124012997 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092695573 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129849549 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118399924 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095588286 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121507773 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119843849 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096431936 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118061315 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093088143 seconds)
  done (took 9.223457481 seconds)
done (took 34.017783285 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689016844 seconds)
  done (took 1.675198012 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.724968145 seconds)
  done (took 1.713088213 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.293917244 seconds)
  done (took 17.285506191 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498134533 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583966936 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.881308872 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180407134 seconds)
  done (took 3.134299595 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.939060037 seconds)
  done (took 1.944205407 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295796455 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255677256 seconds)
  done (took 1.543200709 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.810664722 seconds)
  done (took 1.807449081 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.356465635 seconds)
  done (took 2.343435759 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331821755 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184901945 seconds)
  done (took 1.518485255 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54886607 seconds)
  done (took 1.550659328 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.778991311 seconds)
  done (took 7.784397075 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267134161 seconds)
  done (took 1.277744006 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301417406 seconds)
  done (took 1.296972756 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.400219659 seconds)
  done (took 4.403936924 seconds)
done (took 50.276382818 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100958523 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125466187 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102391811 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123573632 seconds)
  done (took 1.445242728 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101477129 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120408499 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100662077 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120339649 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125089468 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09708555 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122408157 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100362219 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120493458 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096215614 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121907818 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11842006 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098959045 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122520647 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09312075 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12411568 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098650009 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121142909 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123188185 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096605081 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119016475 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096643953 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125098204 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094012866 seconds)
  done (took 3.659055817 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102905707 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117613138 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096530896 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117726659 seconds)
  done (took 1.446958902 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104181064 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141190962 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137733321 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100965258 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142044787 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134751326 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092488839 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116462326 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094369286 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124771817 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090513111 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149673947 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136814843 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099512678 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127208781 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087984588 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117238082 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13654703 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099328404 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125751157 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093616873 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124600376 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090704279 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139433756 seconds)
  done (took 3.815181663 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.1708574 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126922794 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138168448 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095518375 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160284206 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140527742 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08810504 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140643404 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.0870079 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131319055 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117153328 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134163127 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129690905 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088152705 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114031494 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087027586 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12930623 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128387631 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091136963 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127215648 seconds)
  done (took 3.437518093 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09989879 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116279295 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089133333 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115636183 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09919991 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120752343 seconds)
  done (took 1.655422027 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094502435 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113570409 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091618094 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113005489 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095307533 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114053058 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090137453 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114757917 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09058701 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113819871 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090136738 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112329792 seconds)
  done (took 2.25012667 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.461711173 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093780497 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120659302 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11292255 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096705657 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114913133 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10304838 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11857899 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139194166 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090790659 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114233031 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092404289 seconds)
  done (took 2.6719441 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232710549 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125904578 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285330199 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361469725 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155899019 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176538136 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281766571 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164035368 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222091975 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166862134 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203004172 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222729358 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150584441 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18941717 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138321922 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119141746 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232056472 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245975117 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153926051 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208950538 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226637742 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167124895 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180425708 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151052855 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138521421 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17256615 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095196363 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130984048 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234793067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175501928 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187913078 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187188292 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120099267 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235319436 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252987775 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219107585 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285725668 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10994664 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174906804 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169616252 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266205776 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138502214 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204023285 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155885397 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131974717 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191518315 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165789098 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20383934 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152337517 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112829373 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220015987 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237026266 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192817247 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138289807 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299708327 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15287495 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.174802404 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218322707 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224670639 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227226357 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186526858 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121493404 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186753167 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21667164 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186395419 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174965197 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179758456 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147409829 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225528427 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18886896 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165691072 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193493008 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.214502981 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139770153 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169844437 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173502523 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172481433 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254543409 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183415374 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12265173 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16783142 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149281218 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130801789 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169205314 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125324489 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237025853 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117962046 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163081901 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241709855 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15836667 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159967267 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204380587 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227390026 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12098729 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113290374 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15421783 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154933084 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194074955 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140811935 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158603459 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161949814 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128944762 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18535037 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097297699 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210440608 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091417561 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172538369 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208373374 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099863413 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161196284 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150949173 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14920573 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172822381 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222662974 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115566001 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133955845 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207246512 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20248706 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14946156 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177850803 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201723876 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14353952 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149886342 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198232977 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242759655 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139727372 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202625047 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157283311 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134923302 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104450141 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20710758 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153396071 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159138691 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109203251 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.207726826 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206987881 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12511975 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110906721 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220302041 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131148973 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106153149 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162647165 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147655476 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140056013 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152138939 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152939117 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181994933 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175862415 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154047614 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163211375 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151643684 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252243918 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141833417 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151144115 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147084165 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094680862 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.216856846 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199520231 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128617538 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205871845 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171074929 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228769106 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172204486 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133321328 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175923537 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104006497 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119399768 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193460902 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168129309 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160355713 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.221902799 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20046292 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1797048 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.2104527 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172321443 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172259148 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165825684 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157745527 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138359003 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159019873 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172072392 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095929278 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144326459 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133521005 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148328645 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142936275 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106438319 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221362514 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169460751 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191129587 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159423721 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149730062 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18005079 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128741007 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173208214 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20258717 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120520265 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224769188 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194972115 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185488426 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143179801 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226966471 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093775722 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125154473 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142807779 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171079544 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106088661 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135728084 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162500261 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180433846 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20750172 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176700855 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236587304 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174018038 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191174605 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093320085 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169199599 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209449783 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177045675 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167156661 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139035911 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150326685 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177316438 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15745587 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252708467 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167002376 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176010229 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235846924 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149524646 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10456838 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151792578 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219958544 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15340358 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177576949 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146761364 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114082331 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161042453 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133361157 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159387084 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207711114 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161511463 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190215801 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150591624 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184350695 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127663775 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163889226 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159635218 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16527738 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081161312 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173528083 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231750917 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14822828 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167175269 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187992599 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131747575 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306369367 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243669553 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193943703 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138357186 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155493365 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160057765 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164465124 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170537999 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178139826 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158935572 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186579779 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15855004 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136974128 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138645572 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120910616 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149808314 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131947234 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147679201 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175467934 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139763257 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185157387 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163404496 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158946234 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172435435 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151528178 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144969462 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149664516 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215977299 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182297953 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237652337 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.14993184 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179249976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231054231 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098455834 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132449802 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131819635 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177126843 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109041976 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219575226 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187188072 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231752708 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182330478 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19311466 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139962725 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.1191647 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129156797 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200905096 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208897272 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153363873 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159607456 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230989453 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12044279 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132957692 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177990307 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290307871 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144174695 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221289983 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081866419 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2801357 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127357394 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104617217 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164212331 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234108641 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13639881 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18836566 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171879688 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170655296 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164691391 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149092167 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190526559 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242565566 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201413369 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178786743 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132775437 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154821295 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176631919 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217505296 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157860783 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.114219911 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229046408 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196319219 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19607453 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141444685 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169925306 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168115938 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157468198 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213361375 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10760299 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232573066 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105755982 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221656809 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152909535 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14346989 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176050789 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.1890985 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142483947 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186621567 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209459922 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10709496 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133355971 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16915901 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202759098 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157632397 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102425042 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179485281 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125216129 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193009628 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257144072 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135852126 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1545689 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146498425 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108330998 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154152113 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158333479 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140755385 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162897374 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205844574 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134641338 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190771103 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230556188 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169905478 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173727965 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144540601 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691763109 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134998064 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195539324 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160301742 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23148835 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122043121 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171613032 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158003041 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168561007 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223789816 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159556345 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229442157 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192699973 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.203800272 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107004164 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157787218 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161969167 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145249998 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151180238 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168410776 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159809342 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153482638 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177300024 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170177407 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135516861 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138808619 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198549371 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160639843 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180398482 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177881894 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139747307 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172480071 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214819921 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105018527 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.205798639 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207215695 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142191936 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152624364 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132400491 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156785781 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231351941 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125064042 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231326719 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186387057 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160810432 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169820934 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147218543 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198284742 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159952365 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212649116 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146136355 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159455359 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128341371 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139302728 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130436289 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153602168 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167141941 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148708399 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159384128 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137974831 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221024675 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097041907 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145181348 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289536164 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220883563 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213094657 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135957266 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106336735 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162078915 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151847951 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.20340983 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180189099 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134187344 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10970518 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136695818 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131580701 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139168906 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15651464 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197353084 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164883849 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232789098 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109698313 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279750865 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14038332 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153279453 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090298973 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131752527 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149858006 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145395493 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158940928 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192614632 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263812455 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145963522 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107485136 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150656448 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125063655 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108694722 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165639205 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162274844 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202577115 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118456513 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108390915 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155873895 seconds)
  done (took 83.126509973 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.185071187 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.142914766 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150601292 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20279262 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177145328 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269237826 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210972392 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25371366 seconds)
  done (took 2.702096654 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.101206706 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147473527 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159181459 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133460482 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092286831 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11821362 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346588828 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132096435 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117308757 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121809441 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172525726 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09514485 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551535448 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090876818 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118676647 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108606341 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092035801 seconds)
  done (took 3.798586943 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.482406347 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.696269138 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.511693282 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098060371 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.041776647 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113505607 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.493622752 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194629778 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115307506 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.471052383 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.774602515 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159667544 seconds)
  done (took 18.261213556 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099509547 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120764538 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108346218 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134509975 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095622879 seconds)
  done (took 1.671271 seconds)
done (took 130.936933683 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104903827 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.414480794 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071695833 seconds)
  done (took 1.627009481 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.117065246 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145386882 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108737367 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135241103 seconds)
  done (took 1.629631067 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106972871 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131384976 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108984975 seconds)
  done (took 1.466008066 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32202026 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189502595 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.163205932 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.114294536 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128101273 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103164237 seconds)
  done (took 1.467410389 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105748571 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132471294 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097219543 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128906141 seconds)
  done (took 1.583760373 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.103113969 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079158174 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10842828 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075434697 seconds)
  done (took 1.48112222 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121195696 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130969421 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103307134 seconds)
  done (took 1.477253179 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.136673442 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138983624 seconds)
  done (took 1.398124681 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112228308 seconds)
  done (took 1.227580847 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.125824497 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168046278 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189232177 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166630554 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226587617 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163565486 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.138872722 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114547552 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129990411 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143600087 seconds)
  done (took 2.68910001 seconds)
done (took 17.938713656 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110514754 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.412680578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410984664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116727171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.741189464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380204436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.020788277 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145206155 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164487991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093472767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138771696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687986165 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046969212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.368910711 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.003674345 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.460559064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676645259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120624899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117979323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09431175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.003784446 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091806281 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121449532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091311151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701484011 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424258029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096084078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.465381348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091892856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125039933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382678765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12258004 seconds)
  done (took 17.140676239 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103813819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176268419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098077111 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138048826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122488939 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094718361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124047184 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09375317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178867362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122199784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110541062 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120940507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124850486 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095740704 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141157983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09202998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124264831 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092878642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120647058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120354078 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112891357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119858585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094417679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121029621 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093652384 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13470311 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121367847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094208206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119727739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099571035 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127247742 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09459733 seconds)
  done (took 4.851483622 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148823397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181974679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128517695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127406799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169854866 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123756975 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199080712 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118399164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181785591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122663826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138354962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093243724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156008727 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121390924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115024293 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120186006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097912272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12198661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092442072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123008576 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13833868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093824467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121543445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094946211 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122199683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107153816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123846745 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119461187 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094082745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126090547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100298629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122997335 seconds)
  done (took 5.17557602 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106088121 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131581756 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109528585 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137895626 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095232317 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12638951 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097056603 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12447101 seconds)
  done (took 2.054818262 seconds)
done (took 30.337336691 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121464039 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132458381 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106655647 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133194721 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102190302 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131840423 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09184261 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133504748 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132030942 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10324882 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136226075 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091964127 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121388828 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091918637 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134540404 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098014186 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132958381 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102092874 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133819132 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131166251 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09542336 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132595567 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104017165 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132813451 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104125779 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133577006 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136998689 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100700159 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121962614 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095444194 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123382708 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104123218 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123237371 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105635271 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12753195 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096864431 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123818175 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093737559 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132782634 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13106832 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100567328 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132067665 seconds)
  done (took 6.032134944 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.117158722 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.149083458 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105180902 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.085084681 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117343246 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08027622 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137261092 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082935411 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108841499 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108686168 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073749836 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106176808 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078795576 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100466317 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078603257 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075310778 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106985518 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076758165 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076038728 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10516285 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080345863 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072705359 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107957991 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078459445 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074081293 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109661192 seconds)
  done (took 3.623326013 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108798173 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140797339 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111680876 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183060054 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160743516 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099932128 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132163251 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138239366 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109096604 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11883836 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096411497 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148002528 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110456981 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12863249 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090494976 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137185885 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133605848 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095014631 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126519853 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112723867 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138182326 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102180677 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142898811 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131116593 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092320765 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121827855 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097196398 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134032766 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097258989 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131223514 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096497587 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12473257 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121255803 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10522157 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125100332 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094568825 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141345248 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102421212 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130644216 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0919393 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.124847459 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120370714 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114998328 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167572449 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092118807 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130936411 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098882588 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131869482 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120061966 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110864343 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130459752 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092133252 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125200937 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09124972 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121667126 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105889052 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124112807 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094289059 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131830393 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122978035 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105866799 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124595676 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108938894 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121180791 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099950648 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121635186 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093042039 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121036791 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114277815 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123098592 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163297244 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094059411 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124143076 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101349353 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13026056 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12697485 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094482976 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136242924 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102875191 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124844365 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101948359 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125708819 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095857459 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139520033 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095045516 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.1233538 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092819411 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127927668 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122556339 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094888009 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135359186 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092823251 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124365688 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109426682 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12289484 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09305617 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131084613 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124238347 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093224679 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144268709 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097466209 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122884216 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130483096 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093981467 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122820704 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104294293 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125358665 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091875608 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126449215 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099482876 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122000449 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093162013 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124985776 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093835233 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13241688 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098985228 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126422745 seconds)
  done (took 14.827224955 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235086958 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214242411 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.234481036 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26277815 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135025338 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114398366 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211404261 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155258112 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122756092 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15957915 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160364166 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18088518 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140012473 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179180931 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.141023831 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120143092 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111835723 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163704973 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213850895 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.287231553 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112530941 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132316963 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160126185 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159922456 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.10631555 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132811005 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138304723 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105483445 seconds)
  done (took 5.744044035 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116244288 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156255546 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098016958 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144483382 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148442343 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092526119 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127875798 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094766018 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134987504 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13497795 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092290949 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12892582 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098949671 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131939523 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121975732 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103780902 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131514096 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094537697 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124942789 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097355909 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.12933298 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10132109 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126645944 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091054934 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.131684466 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120116865 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086841245 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141829097 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092217205 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144309753 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.1199083 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099585667 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133083289 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093682293 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121969706 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094401106 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124651345 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09492627 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124779764 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092019209 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121030373 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078167258 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121799325 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106224097 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128604145 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079876424 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128706427 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126524232 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095947991 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118666718 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097774804 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124075719 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098821325 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129301276 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099104798 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122985784 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097668333 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114841542 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100473955 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124187348 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08554922 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119568086 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099768577 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11753644 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102320979 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127150217 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09315347 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124661366 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098071784 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12846148 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095886263 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125536095 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091120127 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125370791 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095748202 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127529231 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096864479 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122074813 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091862654 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123166204 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075425959 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122331685 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074025499 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125328212 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091852601 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121800986 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095567557 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129444265 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135883258 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095596276 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130670858 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094420224 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121597576 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096871288 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112258289 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09697754 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138045048 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140382869 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094198957 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119908072 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10818509 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12481634 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092741467 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104784595 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101417383 seconds)
  done (took 12.949856124 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13587985 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152934943 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095316533 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142810458 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15428823 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155968576 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102143456 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13049335 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095834159 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141547274 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093398981 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131190397 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097073452 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137677038 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155391321 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103370377 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125003916 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10742179 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131602466 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168936637 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111482381 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142117465 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107428141 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124077133 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0983338 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140216162 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160546673 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108316913 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136462718 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139859906 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108330356 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161096174 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111425829 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127786641 seconds)
  done (took 5.500189759 seconds)
done (took 49.800552931 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.259063295 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.445827078 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.230122768 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.182077572 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.260960465 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.24915612 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.23481699 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.231766478 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.86025248 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.230745192 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.494999862 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.869415617 seconds)
done (took 60.704287886 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.337604402 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360398361 seconds)
    (2/2) benchmarking "String"...
    done (took 1.494271375 seconds)
  done (took 4.003266144 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.567094802 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.161038449 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.482135555 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.226440937 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.219734355 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.525577179 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.838015428 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.497934865 seconds)
  done (took 28.097028596 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.231788184 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.589221896 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.60406936 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.598370494 seconds)
  done (took 18.169756764 seconds)
done (took 60.327247293 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202786861 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.263013085 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.235222112 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.197601737 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.325355699 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.249888794 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.513503721 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.250426092 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.246198899 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.203339131 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.234624443 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.241001209 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.228924686 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.537573185 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.217473591 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.237662999 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.251495477 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.732843794 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.595917511 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.229537332 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.251104325 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.251906957 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.251359198 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.216370354 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.244583034 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.215508875 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21995236 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.217964655 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.293657986 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.220803426 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.32564965 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.694790284 seconds)
  done (took 190.743560606 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.221306981 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.205591646 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.296217887 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.2872405 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.630713316 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.419210521 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330993653 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.696978284 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.239066661 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.224385202 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.453214959 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.216758059 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.50786332 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.184568169 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229745525 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.224685635 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.440010688 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.50041917 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.232648537 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.496630022 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.24463136 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.349840457 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.274300402 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.404540981 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.253441461 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.250219357 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.240599242 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.232424781 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.409237632 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.378579329 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.233699419 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.229784969 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.763672913 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.07983693 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.23017088 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.249799998 seconds)
  done (took 150.006938872 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.490693433 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.615493379 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.216757084 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.222189773 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.22173907 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.250835176 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.223485678 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.720217826 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719692367 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.7104438 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.433455202 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.364691471 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455555989 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.220559693 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31500617 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.231957561 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.218564429 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.237331538 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.2630779 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216236645 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224611401 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.720375919 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.236595258 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.315813265 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381419468 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.235422131 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250070669 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.610351723 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.219460432 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250668097 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.127697639 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.539471534 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.264515139 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21891937 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.538623554 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335962716 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217790591 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252542671 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.222976764 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.497254496 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21828659 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.222755425 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.223064095 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.225407604 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.825319973 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.22128863 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.724506921 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.22314121 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.103993662 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.219707265 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225184046 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.66874002 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.772879596 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.241835095 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.222838824 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.227459414 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.225560636 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22468759 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.254492182 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.708526089 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.306779423 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.238031435 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.227962199 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25277302 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.226833248 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.324730895 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219974426 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.476554735 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293347053 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.327152158 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.724420515 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224359088 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.226144167 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31768701 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338473811 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.221004548 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224540965 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.225548836 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.226752402 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.333634721 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.221083118 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.602850412 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.386871807 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.23786923 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.365055205 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.320317735 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.222845128 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.554564759 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.228159809 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.224330681 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963734891 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322016106 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.220622103 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.226993018 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226771101 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.225962648 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.603274833 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719956 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.405506704 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.228566508 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.515800944 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.222363642 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.621308271 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.713437482 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.85106394 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.227704907 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336629474 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.39015694 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.23925628 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.225584699 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.355873681 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.225306961 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.28460903 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.222294499 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.226928104 seconds)
  done (took 365.769368271 seconds)
done (took 709.157101174 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.877427894 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.874532523 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.984488578 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.859824927 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.830495344 seconds)
  done (took 10.575172481 seconds)
done (took 11.724546894 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.413782251 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408420804 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277568194 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.4158117 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25158001 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430535991 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390547255 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.245202832 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.330267167 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300473357 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.329267124 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27507365 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254570652 seconds)
  done (took 18.469635994 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541397725 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537370844 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.292279838 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537090385 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26990484 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530625498 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428202773 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.436262721 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44044817 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259227891 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240519036 seconds)
  done (took 16.664376286 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550792892 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536690568 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296401571 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543735103 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269914667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540568391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428571155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.445034162 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447582203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26434155 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24076919 seconds)
  done (took 16.716521305 seconds)
done (took 52.998590705 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.239874784 seconds)
  done (took 2.393265662 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.272221562 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.437276782 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.253369605 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.243685564 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.23968813 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.238779751 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.24503795 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.239153537 seconds)
  done (took 11.322199778 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.23901129 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.236165106 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.234437594 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.235359371 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.241076508 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.239897762 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.237530407 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.236171655 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.237957604 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.238979524 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.238369429 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.235791319 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.237901533 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.236616757 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.238810666 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.238559374 seconds)
  done (took 20.957251377 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.240509696 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.239375641 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.238039271 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.237934098 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.239180011 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.237431452 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.237722681 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.238706865 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.236353274 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.238744121 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.237707513 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.23869195 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.237792625 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.235675635 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.237448149 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.238430645 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.236147141 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.23773751 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.245141821 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.235408186 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.239083605 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.237224889 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.240001711 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.238030961 seconds)
  done (took 30.874577559 seconds)
done (took 66.697647798 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.14775508 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.814111421 seconds)
  done (took 9.115630034 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.238884415 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.237851112 seconds)
  done (took 3.633772925 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.241651042 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.240732977 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.241568636 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.240314296 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.24200155 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.241793942 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.242799702 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.24320534 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.241449745 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.242674431 seconds)
  done (took 13.570434421 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.241001356 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.24121595 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.23982656 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.242588695 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243512537 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.238462246 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.241621066 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.241688973 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.24249215 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.237775325 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.241712258 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.23986398 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.241241969 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23938075 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.239234186 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.241694928 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.240950004 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.240452464 seconds)
  done (took 23.490989242 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.240952545 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244027256 seconds)
  done (took 3.640648071 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.23910277 seconds)
    (2/7) benchmarking "second"...
    done (took 1.238765021 seconds)
    (3/7) benchmarking "month"...
    done (took 1.239651756 seconds)
    (4/7) benchmarking "year"...
    done (took 1.237297574 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.240517082 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.239248276 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.241999382 seconds)
  done (took 9.83170778 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.243310051 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.414166646 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.495896068 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.851389289 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.246059174 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.244653249 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.095849534 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.243871921 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.248635325 seconds)
  done (took 14.24195572 seconds)
done (took 78.676921906 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.214367196 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.249256296 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.301085638 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.255554114 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.252202599 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.535143542 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.255232096 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.357164669 seconds)
done (took 37.576862313 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.248430963 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.955240071 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.961503469 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.242462326 seconds)
  done (took 11.317643243 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.226036664 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.117157931 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.217646996 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.213341144 seconds)
  done (took 17.931482925 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.187733151 seconds)
    (2/2) benchmarking "read"...
    done (took 1.571849374 seconds)
  done (took 4.917559794 seconds)
done (took 41.572289866 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243152288 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.243816835 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.241884611 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.249311801 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.242846744 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.245457649 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.245256513 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.242586584 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.245987949 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.24758442 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.247308996 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.247470223 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248259718 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242856222 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244082704 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24653517 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.242894064 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244916705 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244202924 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244247744 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.245063765 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.243709251 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.242846846 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.244875062 seconds)
  done (took 31.034738252 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.247018312 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.24515088 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.246441214 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.247319006 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.244461256 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.247388433 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.249137043 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.243614757 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.247623489 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.246922474 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244810794 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.242228077 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.243237713 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.245756962 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245881874 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.246050617 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.246397996 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243465596 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246388054 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.243302197 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.247527198 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247070927 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.24644545 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24718896 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.245894692 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242210709 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.247540659 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.243789638 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247915737 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.245039047 seconds)
  done (took 38.535674543 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.251788145 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.253818479 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.247628806 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.249018822 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.249092134 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.247343756 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.248164477 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.247355282 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.246699592 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.245157302 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.246428213 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.246486026 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.246420235 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.242643112 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.240401625 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241700962 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.24212498 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238897545 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239908344 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.240381838 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.240156777 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.239647493 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.239360743 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.236477214 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.236383766 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.236007744 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.234451367 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.235200471 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.240119826 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.236268268 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.236503858 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.238098655 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.234076988 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.237303082 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.238753257 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.235076833 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.239349297 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.244793046 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.233763681 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.236129372 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.237840069 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.236539512 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234321767 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.237358188 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.237025871 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.237376337 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.236090456 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.236729464 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.235397315 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.235272683 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.237617507 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234888034 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.237216345 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23988269 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.237873077 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237604769 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.23713331 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235453514 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.235554526 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235195403 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.236031142 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.237527478 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.235726077 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.234229076 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.238103074 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.236023223 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.235029002 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.236152824 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.238015599 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.235169727 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234552423 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.236182352 seconds)
  done (took 90.386737206 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.235740928 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23465297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232920708 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233716481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235335442 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.236578978 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232925078 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236542151 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231299476 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234865507 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234653102 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232778953 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23404578 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231253109 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234092352 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.228643395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233591066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232597769 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235196422 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237967808 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238415791 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.229867669 seconds)
  done (took 28.297790449 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232532764 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235763518 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.232550634 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233253838 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229344149 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235101958 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232976798 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234149018 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232555098 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233072672 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229901004 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233999994 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231186462 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231497637 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230772771 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231555619 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231054927 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232731462 seconds)
  done (took 23.332416751 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230657384 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229951559 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235276901 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230054911 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228646419 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230548877 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226187424 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231156181 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.22921304 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.228441268 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.228726555 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229547369 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228808406 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228395993 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23251683 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227602861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229433565 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227424208 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229426211 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229499924 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228932282 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231479463 seconds)
  done (took 28.201548248 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23224736 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229165806 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2288286 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22826597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229755427 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229037698 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229306053 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225711197 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228734981 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.230046288 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228104593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228443763 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229171848 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226160492 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.221901441 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220343989 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226181051 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224296445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224541014 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221178868 seconds)
  done (took 25.687685008 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228488228 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22788025 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229170357 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227001318 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22853121 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.227359759 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225483469 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225979445 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227571909 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226164826 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.228066399 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.227959468 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228912985 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228667528 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228169012 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229168554 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227797661 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226152084 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.227039152 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228062273 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225858645 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227409588 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225429433 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227032626 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228578911 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226218227 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2246356 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22570266 seconds)
  done (took 35.508850326 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223073985 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221450249 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220908666 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22073463 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223556647 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222904303 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220421879 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220760778 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223695541 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22115027 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222336456 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224774802 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224199269 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.218272866 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216780859 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.219083919 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21817074 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.21636565 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215708824 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215864192 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.216098307 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21733114 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.216414749 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216017415 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211797544 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.214136596 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213396416 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208796992 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21495367 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211961348 seconds)
  done (took 37.692890222 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.233348457 seconds)
    (2/2) benchmarking "in"...
    done (took 1.231329254 seconds)
  done (took 3.595837785 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.212576744 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213229784 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.21826791 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.207488915 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213731909 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211883214 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21422363 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210573477 seconds)
  done (took 10.838529775 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.215070924 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.214546569 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.208291215 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.209916838 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.213041522 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.212035473 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217945445 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.227510172 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.211968316 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.208782332 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.213052517 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.212226989 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.208554968 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208532721 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.20526506 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211241788 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.207691608 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.213716067 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.208422924 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.211173187 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207913673 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.211268783 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213305626 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.205859931 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.209859353 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.218702989 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.229427249 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.206812928 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201151194 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.207414555 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.205740664 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.200510649 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.209308876 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.210016777 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.209435881 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.214243389 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2125806 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221601652 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.207619272 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223662095 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20512564 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.203795585 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.204767772 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.209123781 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210854549 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.206251417 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.211830273 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.202681719 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.210035669 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.211059511 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.210691945 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206130282 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.207963574 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210904285 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.211781405 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210939864 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.229192924 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.21196625 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.217787791 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.21985367 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.235086828 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.232308741 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209672322 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.21037054 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222013016 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.232284643 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214637694 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.22751013 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.204144322 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.207362706 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.215521561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235724425 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.229134889 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.209279048 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211797732 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.214051495 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207659308 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212605489 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217478208 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.232144326 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.211019742 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21248932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224307456 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229788763 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.209622246 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.20582594 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.21338213 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.213330585 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.215236488 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.214943323 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.227583906 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.21311348 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.212602521 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.212568415 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.212256916 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.210456433 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.210004517 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.208605035 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.207674663 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.214530247 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212298243 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21481947 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.211052477 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209862365 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.214796352 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.221109867 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.230698361 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207927819 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.213757495 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.212578535 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209118749 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.212048612 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.214235201 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.207104451 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218561801 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.217744607 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.214814259 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.2146562 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.211869814 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.215098893 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221061116 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.239936423 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.210104997 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.209222831 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.220553681 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.222011649 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219264889 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.217869914 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.209282846 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.214136711 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.214811609 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.214756286 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.219906707 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.218579827 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216867775 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222556058 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.213426811 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.212530801 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.21670788 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.218176988 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.211155349 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.220141116 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.215540365 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.214846508 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.209859858 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.219762078 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.222083847 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.235246941 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.217768575 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.217409796 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.217055159 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219892831 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.219782399 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.21466153 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.21868183 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218478438 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.22120881 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.223617993 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.217180439 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.220579491 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221417293 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.223127883 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.223728385 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.22347988 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.224549751 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.219257621 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.219657979 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.221313681 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.223348037 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.218472577 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.225116764 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.218636635 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.225088824 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.223378752 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.220034463 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.221426429 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.225293881 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.223020331 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.223047795 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225823836 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.225428048 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.229690445 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.224132255 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.230897073 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.243002982 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223831442 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.226300127 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.225105854 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.223492539 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227956625 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.226922723 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.228399421 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232413544 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2389146 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.225566906 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.225080933 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.224301044 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.227965496 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.225319372 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.221891259 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.22608245 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224000813 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224990092 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.219376354 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.225526459 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.224528603 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.225139295 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.226144839 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226387952 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.227632142 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225701013 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.224115822 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224972912 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.224923518 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224220094 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227186194 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.224448864 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.22241084 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.22430453 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.22548564 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.227904426 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.227517334 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.230151385 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.224747318 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228542819 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225259889 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.229231915 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.226791122 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.229743947 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226231071 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.227846385 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233910156 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.241436649 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.229003319 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.22979041 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.239199869 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.227901446 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.226777665 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.224814638 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.222485346 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.227133198 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234121874 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.226766842 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.228470559 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.229283144 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225865271 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227871353 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.230934357 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.240899077 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.229958896 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.227659324 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.22971899 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.224794001 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.226813149 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.228085584 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.228473771 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230265862 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231768643 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229203176 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227981636 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.229342549 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.228349014 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.230454078 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23295528 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.235662968 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.23590623 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.228861004 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.232531291 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.230891128 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231981907 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227377378 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.230780704 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.229522446 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240354678 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.251827942 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229271595 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.241145863 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.228179031 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234384291 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.244580163 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.229806094 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227430409 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229478571 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.228464452 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.227157787 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.228169969 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.226864367 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.226593681 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231631785 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.229995551 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.230512539 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.23007252 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.226712961 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.230057843 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.22905939 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.230399072 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.230009845 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.230503951 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.230835732 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.22589131 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.226750476 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.228199521 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231746695 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24028228 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.229170567 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.230564669 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.230610079 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.228398911 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.231366854 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.232552692 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.23405591 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.232587743 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.231739091 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.233204641 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.234530043 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23696588 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.230904728 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.2344413 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.234802471 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.226437116 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.229546387 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.229017172 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.227699279 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233620243 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.245281805 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.228441906 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.231861633 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231865892 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.228207271 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.229816579 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.230281062 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231337079 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.230148943 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237457225 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.242438132 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.231584553 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233351811 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.226895232 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.230669315 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.2311537 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.227599076 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231114378 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.22567084 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.231516674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.226985609 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.224597533 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.227828585 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229607676 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.23029096 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.227676634 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.225357919 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233521376 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.242922886 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229395198 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.230762142 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.235720913 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239213852 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234852086 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.24434323 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.228051009 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.229704428 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.230388553 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.228635978 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.231865271 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.231654329 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.22831088 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.226043373 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.226432316 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.224635026 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.227525456 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.224519961 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.221044924 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.22651161 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234909854 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245788643 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.231118947 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231692465 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.224508724 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.229916779 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.22895801 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.229521938 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.230296248 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.226233624 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238556465 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233336543 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.230664412 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.229553179 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230606786 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234246876 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236870927 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.232350582 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.234947336 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.232971417 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.23454487 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.230417514 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233340413 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.233691806 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.23226202 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234812554 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.232389983 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.240054002 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.246332821 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.232757587 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231393446 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.23822863 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.23292611 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.230215023 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.233371478 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233710732 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234270164 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.234311163 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236205819 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.233438057 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.235238025 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.228983697 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.233681557 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.235129837 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.233361607 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235035723 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.230117164 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238795118 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.234699507 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.23388064 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.238312486 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.233905601 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.231825677 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.236151863 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236026492 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237183648 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.240080263 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234751377 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.237910394 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238529204 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239299531 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.236494398 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.23789119 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.246103692 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258731459 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.245262385 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.243029569 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235429335 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.240576164 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237727737 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.243387348 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.235584181 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.237175918 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.236874027 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.239599594 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.241201084 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.240260252 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23965312 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.246943895 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.255388802 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239633412 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248826464 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.257389336 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239670562 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.238978365 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.240602332 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.235185852 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.233135791 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.236428678 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.234412932 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243830911 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.254213615 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238165384 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240575304 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.23854196 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.243661441 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243769182 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239370671 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.240666099 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.235205589 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.233684712 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235927511 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236883695 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.233899143 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.238347422 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23474023 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.237758468 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.245021909 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.239076085 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2388812 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.235360869 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.238924666 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231627301 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23946648 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.235174562 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.235364975 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.240957428 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243548182 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.237308078 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.237819155 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.236125911 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.238276475 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.241460903 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239906877 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240955768 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.244095271 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.245512146 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.233996424 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.233688271 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.239262428 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239009207 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23525019 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.240692797 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238144985 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.24219608 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.239445073 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238181848 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.240918399 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.244055167 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251912323 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.253773851 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239044688 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.238336179 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237542885 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.238011598 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241812585 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.242149383 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245045423 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246196592 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.24814497 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.242053112 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248893915 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256100336 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.241591593 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.244383256 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.243666056 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.246363869 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.237652758 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238264582 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.24138507 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.247313751 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.25575275 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243947244 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249879084 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26772829 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.255998867 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.241929669 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.2429377 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242078954 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.246316277 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.244152555 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.24204349 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.239452716 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239231115 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.243016488 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.243582623 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242354461 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.24236844 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.242972212 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.237966134 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.240781977 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.241890845 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.236576238 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.242595459 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.241560069 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.245023702 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.242712878 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.243483683 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.242771284 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252404764 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.263918628 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.242173739 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.240297062 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.237928318 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.243430127 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.241150049 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249077072 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.249490314 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.243332454 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.24225453 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.244597035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240918215 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.23834432 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.24396321 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.244835756 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244655211 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.242457603 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.253813975 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261870155 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.245456791 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.238000294 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240568526 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.245491183 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244020877 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239440951 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244974198 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.245723663 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.243005574 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248089894 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.244075024 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.244035717 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.247051608 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.251075255 seconds)
  done (took 733.836546844 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24307988 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239981124 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243010653 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238616265 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2384195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241274636 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237274902 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239289923 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.242519363 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237113532 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.243128967 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238589133 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241333124 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239157332 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238795287 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240013116 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239386927 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242830685 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242436511 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243765752 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240298751 seconds)
  done (took 27.209128591 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.243204898 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.238955405 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.24098225 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23996611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239768972 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.245532724 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.242937791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245313497 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.244040132 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241727982 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.24631884 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247648597 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.240800667 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.245601224 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239920107 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242280548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244436872 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241522004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.243585811 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240585021 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242993751 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.241421619 seconds)
  done (took 28.497638239 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.242287315 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.245576733 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.241152872 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.241307616 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.244449891 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.24203424 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.245684921 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.248931853 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.244687171 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.242043212 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.243961151 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.250356732 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.252012614 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.249268134 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.249323249 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.245423598 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.388946637 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.247244011 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.245506958 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.247539697 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.241977968 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.252290208 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.258130772 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.244682166 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.243725881 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.248535232 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.247511067 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.24411283 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.249550729 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.251340784 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.250441405 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.247711591 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.248981525 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.247376515 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.246153765 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.251888324 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.248327806 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.246599973 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.244575979 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.240960981 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.254114832 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.26290509 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.245217725 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.257913667 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.262993315 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.248783441 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.249851386 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.253087675 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.247577757 seconds)
  done (took 62.454113644 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.246431717 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.248338241 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.242302116 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.245759034 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.246506564 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.247020291 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.248116777 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.246707411 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.243609953 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.249136899 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.250856728 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.24862636 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.24599903 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.249641041 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.251689955 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.251648734 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.251708184 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.246187013 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.246393147 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.247465562 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.248951704 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.251557447 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.254597137 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.2483908 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.249996923 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.249719789 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25062733 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.247574671 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.248698707 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.248449987 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.253429541 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.252577923 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.255822765 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.252405312 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.251618593 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.250697733 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.252968028 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.243650056 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.248798671 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.246317754 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.25459603 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.253823617 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.252857387 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.254220775 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.249385989 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.253002849 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2520242 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.249099298 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.253940212 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.254193088 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.253960548 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.253161544 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.254046873 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.253997534 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.256251083 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.256164284 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.250742827 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.253823165 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.256979123 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.254212071 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.253040156 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.2545991 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.253502762 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.255576042 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.255454408 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.254003751 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.24931564 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.256352996 seconds)
  done (took 86.227288441 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253636778 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.255167379 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255496847 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252643753 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254675327 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.255429937 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253847483 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.256405188 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.253742654 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256148036 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254290724 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255161511 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.253144088 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258731197 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256531989 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258213981 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.256150616 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250869869 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255450344 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257305495 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.256773428 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.256342981 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.252025798 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.251819354 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255245559 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.252879743 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252109996 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.249001625 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256672197 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.254156829 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256906899 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.253388647 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255110935 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255885655 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.257749874 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.257609104 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.258533387 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255398821 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.254068407 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257020582 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.252327686 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252010284 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256080218 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.255726325 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25829882 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254025631 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.250225301 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.258917447 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256673361 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257479004 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.256620861 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256571972 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259219776 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249895542 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254183158 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.259442213 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250875051 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258031862 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255410063 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.256053877 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256046568 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.259141509 seconds)
  done (took 78.995861208 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253415255 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258267973 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.252732456 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.247671456 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25487481 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25252793 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253177731 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.250589884 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251185188 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.256125069 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25209293 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253577968 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248624576 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254053133 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253041913 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249157971 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257152248 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25117382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253753914 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253990208 seconds)
  done (took 26.225071972 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.252874673 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.249724391 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.253510381 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254285499 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.253380513 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251227354 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.253090017 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256239571 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253869696 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257383085 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.253756752 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.256200658 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255316038 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255324953 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.258345223 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.258445178 seconds)
  done (took 21.237201916 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.256579241 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.254668435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.25667597 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.261317441 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.253654811 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.252494853 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.254735486 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.253399177 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.251317158 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.256221938 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.253767663 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.252993606 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.255146329 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.255693664 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.254182535 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.257483651 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.252846309 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.254401744 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.257986344 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.255326048 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.251873927 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.252370893 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.260112023 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.257656885 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.251812542 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.254205401 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.255561403 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.249714991 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.253634435 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.260327003 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.254639752 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.254799883 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.251464536 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.255225899 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.257034737 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.2537142 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.259201799 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.258729193 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.258045556 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.255923595 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.259770985 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.251899165 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.254957589 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.259038324 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.250289964 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.260027398 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.258428921 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.259823816 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.257730926 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.25632082 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.260974011 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.257986136 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.256323578 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.260717062 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.258134179 seconds)
  done (took 70.237649878 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257711076 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256165761 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.252523633 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.25997719 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262566679 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.259592529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.26294085 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.258118404 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257375225 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.256644262 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25819243 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.264246163 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260953695 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259027423 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257711844 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25984401 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.255191576 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.258432058 seconds)
  done (took 23.828291331 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25671063 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260230072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.261567966 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.255442104 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.260159987 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259662259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258112058 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.261836534 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262856284 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257888466 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259631367 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.261275741 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256148351 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.259514229 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25742885 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259195518 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.260120713 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256779052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262228577 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260435244 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263014978 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259306407 seconds)
  done (took 28.880237052 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.260743856 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.259927763 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.258988968 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.278357192 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.279651671 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.284019886 seconds)
  done (took 8.795696962 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267607084 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263516247 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260596339 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260418378 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262264347 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256995328 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259513744 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260080399 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258953199 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261927147 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2598514 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262708589 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260716019 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259477445 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263120151 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260911698 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258251558 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262182533 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264602925 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267712937 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262912569 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267201301 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266336552 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263228138 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258228766 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258538794 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26237659 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259123296 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261086986 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263897832 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263182815 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26036158 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260516042 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257944258 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264875639 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264806628 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26234371 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264318391 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261258475 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262205165 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.262633643 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264959232 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262183944 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261232314 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267723892 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260300133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261244683 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258550547 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261612743 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265501694 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264401395 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262513441 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264309889 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26365209 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263229612 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263709139 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263142452 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259773925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265599028 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259355441 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264728067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266292143 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263260518 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260134968 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263716979 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262983998 seconds)
  done (took 84.514736942 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264964768 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262792804 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263426682 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262799588 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262372236 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260531765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263101094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26266398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26188533 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262955471 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264968128 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262477915 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262851004 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263136136 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264953615 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264802976 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264223152 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263996494 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262304224 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266023218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264423231 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262970494 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26240996 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262978987 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260398154 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268030096 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26403603 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261265056 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263381698 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261095084 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260714389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263638229 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265699697 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261689601 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262856888 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263207616 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265884017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260423974 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26452939 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268545439 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262528047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264411917 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262353885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26152952 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263341179 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263190355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264921785 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262379281 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262948198 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263934583 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263813833 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266000216 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264931935 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261933299 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266822745 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263326928 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267575381 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265485831 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264002286 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267469028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267224612 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266510298 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26810051 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262296927 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262952397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266676036 seconds)
  done (took 84.591934926 seconds)
done (took 1719.802511538 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.265258257 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.321552962 seconds)
  done (took 13.768991898 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.43055866 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.38218252 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.268386073 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.278962258 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.264292453 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.288197124 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.286648368 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.269487036 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.268870216 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.268440945 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.270664291 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.451569103 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.322577217 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.267371113 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.268668268 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.362496586 seconds)
  done (took 42.143298872 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.292899208 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.273623886 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.381403396 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.292226819 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.294528964 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.450434456 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.330900018 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.275164662 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.433580262 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.315561856 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.775552247 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.30211306 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.272710349 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.348941934 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.300980791 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.451833688 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.514095433 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.792854873 seconds)
  done (took 29.284107201 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.696649029 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.295976124 seconds)
  done (took 9.183246164 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.279796755 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.298093578 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.299312357 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.311935886 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.278143273 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.26423176 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.344599005 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.336836491 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.297983666 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.294325852 seconds)
  done (took 64.204650055 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.29193892 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.275186447 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.272705238 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.274402519 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.263442566 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.280013155 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.272043833 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.269046946 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.724771856 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.400911637 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.283016716 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.282021798 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.29142483 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.277903727 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.272362522 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.307886783 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.414185109 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.276644195 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.273047512 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.280258914 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.277876778 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.366195548 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.316483908 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.285498681 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.399909836 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.772802143 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.282805777 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.287540776 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.399374957 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.270975235 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.280721475 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.280354661 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.276393015 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.894375962 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.785196118 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.286108276 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.309534718 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.288776804 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.273663755 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44079124 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.278248191 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.282903962 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.279247625 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.770989752 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.414263658 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.393251825 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.457479949 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.292208119 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.281149986 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.338793477 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.278660728 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.27655311 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.30192182 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.025134608 seconds)
  done (took 107.914834673 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.306834429 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.660353948 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.440546545 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.290578893 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.044142964 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013101585 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.283263608 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.543054661 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.306629952 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272850765 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.559892202 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.771340721 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29768784 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.3280541 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829119617 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.296382948 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271152638 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.134268701 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.286422574 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.281199164 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770854052 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271793749 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.289963818 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.434928484 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.31143164 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.715980796 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.592332541 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.731865857 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.289428628 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.274742042 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.731518465 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.291922781 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.280971327 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.280404084 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.531745511 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.613451629 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606283862 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.293505168 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.272560274 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.274777337 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.298431814 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.710227595 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.616640735 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.288839698 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30481681 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.715898522 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.289623608 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.274290377 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.271274427 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.479920642 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.969287093 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.273239913 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.584570477 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.276075719 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.557081069 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.278175005 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.293466863 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.74211407 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290552958 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.362103701 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330619502 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.278350569 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.277668953 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276002858 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.278372279 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.609748666 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.620179064 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.277717521 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.605220955 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.740536544 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.29185897 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.794753584 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.14892665 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.289512878 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.317359315 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.277787209 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.959897783 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751726542 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.310369331 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.276397364 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596412298 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.294319945 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.554001567 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.292629268 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.281971742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.795374734 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.282116433 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.346475895 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.288930209 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.28539169 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.066452851 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.285554161 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.54069752 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.340806711 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.280208883 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.279279056 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.289485422 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279516194 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.281168751 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.279413174 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793286649 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.295880543 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.389670382 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297020616 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.280378008 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.28028934 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.282226437 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.280952846 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504081336 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.799216645 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.301153656 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279963209 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.278655331 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.281081932 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.414870791 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.285524238 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.573455187 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.295305196 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.282124114 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.300333727 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.065962912 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331308097 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276928006 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.282308272 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.161024068 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.485939283 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.300458141 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.278378691 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280895992 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.297246652 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.467376358 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.299047592 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.368906057 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.287182675 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97595083 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307066385 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.316869561 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.637068215 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.286813289 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.096526036 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.297140478 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28059524 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.560292463 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.540316071 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.565075541 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.286156372 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.29159056 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.970506704 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.316233992 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418456338 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.300721287 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.277941082 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.479471226 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.396828213 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.281082187 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.902432938 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.284576995 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49928285 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.28198004 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583029095 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.760930909 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.298805838 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.280906617 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977014379 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.004679271 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.133494369 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.282017191 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.554294295 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.2547019 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.759558485 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.283708798 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.282997302 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.857006351 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285446375 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.288647184 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.28464611 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.285603506 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350009984 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.457012856 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.515889728 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279403635 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721276118 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350715604 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.283136939 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.28706259 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.286926565 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.6297434 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.362726249 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.288225504 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.312323798 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.285490599 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.2854539 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.739080331 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.192224162 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.28664398 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.434849671 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.902180363 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.300020816 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.284200177 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.969399263 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.584544862 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822117553 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.324680311 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.579335276 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.302662622 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.319464241 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.037291528 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315036189 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.740857481 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30197062 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.28416719 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872050721 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.298050218 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.347259248 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.28489161 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.289054616 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.811719449 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.299867514 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.290234811 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.4719519 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306346612 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541209123 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.288033972 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.292545975 seconds)
  done (took 1098.599380357 seconds)
done (took 1366.281316002 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.283391345 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.293567468 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.273259622 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.295284418 seconds)
  done (took 26.351030743 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.296553648 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294588746 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.295298905 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.293658867 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.295750313 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.294399324 seconds)
  done (took 8.978615724 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.357397064 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.294155325 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.294691063 seconds)
  done (took 19.154105741 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.492272259 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.561712394 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.639035104 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.462435272 seconds)
  done (took 10.364367806 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.296409784 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.295743415 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.297228213 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.297497955 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.298872442 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.299402878 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.298015574 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.296708372 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.299753318 seconds)
  done (took 12.888646433 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.101362381 seconds)
done (took 84.044277864 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.530254789 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.077963484 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.269770957 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.335178829 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.118852415 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.529993672 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.344375011 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.315742079 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.3054789 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.29206224 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.358957898 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.00019139 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.291038064 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.664060228 seconds)
    (15/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.007456204 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.499992218 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.416492638 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.270433242 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.270124567 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.493281194 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.712198168 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.290520132 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.180663166 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.358885279 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.215095592 seconds)
    (26/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.043966898 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.751759415 seconds)
    (28/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.572240024 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.407675876 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.420151956 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 4.307703408 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.845222649 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.291398703 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.272232823 seconds)
    (35/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.470766732 seconds)
    (36/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.273629005 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.345285686 seconds)
    (38/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.057146055 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.377463572 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.277662785 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.191112869 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.543313057 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.106134012 seconds)
    (44/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.28474793 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.397542328 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.304432667 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.392362866 seconds)
    (48/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.648862618 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.392048273 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.553602201 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.360420994 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.027062411 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.351907916 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.268441545 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.160407066 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.246497 seconds)
    (57/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.333058489 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.312602503 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.134166471 seconds)
    (60/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.821007657 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.647701037 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.638369248 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.986114584 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.365852379 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.368832144 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.336129686 seconds)
    (67/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.292782606 seconds)
    (68/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.359316563 seconds)
    (69/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.893027531 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.323935537 seconds)
    (71/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.302205811 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.286438728 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.306142394 seconds)
    (74/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.294856547 seconds)
    (75/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.377679907 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.801952197 seconds)
    (77/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.521572445 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.272448466 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.318189672 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.133086277 seconds)
    (81/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.499593556 seconds)
    (82/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.38599251 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.291088835 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.312197305 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.336920468 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.273287153 seconds)
    (87/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.320155587 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.272024666 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.468932115 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.631637738 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.271737959 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.013169341 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.294638747 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.274095647 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.295726744 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.314075966 seconds)
    (97/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.810226773 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.445129427 seconds)
    (99/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.356336979 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.274207956 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.336430411 seconds)
    (102/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.317564291 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.599087719 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.369723803 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.286313401 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.42399963 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.75493018 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.326664826 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.480768682 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.306733483 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.290878958 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.467353173 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.505446792 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.320474515 seconds)
    (115/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.654009686 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.184063775 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.602381368 seconds)
    (118/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.475792928 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.419812588 seconds)
    (120/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.279027226 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.286697449 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.677985166 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.679069785 seconds)
    (124/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.131802707 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.317031561 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.38876827 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.296161548 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.281275136 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.283563184 seconds)
    (130/309) benchmarking ("sort", Float64, false)...
    done (took 5.60480583 seconds)
    (131/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.886844692 seconds)
    (132/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.639798596 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.674926763 seconds)
    (134/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.498141009 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.153082479 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.832265878 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.331904481 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.274689745 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.502225681 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.640627711 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.287959893 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.921863609 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.553644812 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.707904047 seconds)
    (145/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.333219146 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.280332604 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.036770404 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.801208775 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.714570829 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.59112992 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.700508085 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.638783883 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.334359908 seconds)
    (154/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.284163284 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.48835391 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.433698239 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.311278077 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.303702659 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.298397528 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.359728455 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.27756498 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.29543473 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.08150874 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.328482943 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.700545884 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.347714785 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.922879073 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.354922273 seconds)
    (169/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.274161078 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.321559002 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.415828252 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.402749439 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.745544739 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.344988556 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.321980059 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.305863547 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.046736662 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.045396492 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.312150096 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.284801484 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.362800433 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.283634608 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.731240253 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.280368898 seconds)
    (185/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.394394938 seconds)
    (186/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.549588381 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.397564931 seconds)
    (188/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.113716325 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.328325557 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.280402871 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.169989136 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.705856352 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.348435935 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.277162471 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.400572727 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.296227068 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.874010221 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.358968941 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.304023464 seconds)
    (200/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.364980001 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.306566651 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.113800853 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.655296559 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.328102876 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.874674659 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.393883105 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.131636614 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.324828831 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.282683137 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.425991719 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.299187039 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.113558568 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.695963698 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.525143532 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.926881263 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.27888056 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.316683254 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.302620698 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.303882535 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.30066742 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.400985207 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.340147493 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.262377266 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.331740897 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.286091099 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.343041447 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.420142836 seconds)
    (228/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.893386398 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.729852976 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.522004904 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.052955338 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.946398545 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.692827913 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.303000074 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.3032114 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.315324275 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.660777302 seconds)
    (238/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.90942638 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.32751961 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.6635879 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 5.315805638 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.289404933 seconds)
    (243/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.870596194 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.281809335 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.928824732 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.288750992 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.319594184 seconds)
    (248/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.450844612 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.329343851 seconds)
    (250/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.039764776 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.309609248 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.458697413 seconds)
    (253/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.873934633 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.93351728 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.29893585 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.530276197 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378806073 seconds)
    (258/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.684338945 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.323324749 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707145109 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.330651104 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.886528158 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.332661757 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.289613213 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.330025355 seconds)
    (266/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.390731613 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.308135818 seconds)
    (268/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.230824054 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.694732049 seconds)
    (270/309) benchmarking ("sort", BigInt, false)...
    done (took 6.310775956 seconds)
    (271/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.410607799 seconds)
    (272/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.287104277 seconds)
    (273/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.679324783 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.438798592 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.371708857 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.210578692 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.743694035 seconds)
    (278/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.664838713 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.076130761 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.665712096 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.403451283 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.309291583 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.488746463 seconds)
    (284/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.92975517 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.390668896 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.303552518 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.078840168 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.420113716 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.285913292 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.140414958 seconds)
    (291/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.284341735 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.634735993 seconds)
    (293/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.332457299 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.296042045 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.329603038 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.346663692 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.298355376 seconds)
    (298/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.086591521 seconds)
    (299/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.312067064 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.856831 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.248948895 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.336326086 seconds)
    (303/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.38975862 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.405349658 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.305566955 seconds)
    (306/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.284710951 seconds)
    (307/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.413092772 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.391261426 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.55910647 seconds)
  done (took 1021.746624286 seconds)
done (took 1022.957223698 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.343039524 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338412719 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.316358831 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.341794283 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.42762174 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.343194767 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.331111662 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.3189613 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.365212016 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.369047228 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.317976256 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.338220638 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.316102834 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.322909751 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.316196669 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335046387 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349917523 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.327007993 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.333264572 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.33028129 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.333339479 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.3161985 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.366699681 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.342422172 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.319729761 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.320521289 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.32298356 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.344456873 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.429103256 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.320388783 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.327033228 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.33233069 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.351969537 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326334909 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.313946206 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.334814288 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.329325099 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.326698373 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.322227478 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.350553226 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.738094865 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.33036682 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.322361121 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.32742453 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.320771222 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.322913555 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.321832129 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.330944355 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336501856 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336559075 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.721162256 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.348645499 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.321973116 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.326992681 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.331208664 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.320646329 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.320793548 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336628693 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.341979931 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337706486 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.339654241 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.332393934 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.322566641 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.336125165 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.327764572 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.760192634 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.330724529 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.324276539 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.735236716 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.337523662 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.757826388 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.340437431 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.322459396 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.333729938 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.351974944 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.33427264 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.316821206 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.320548216 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.326823312 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.321840967 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.331930813 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334164155 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.327057756 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.322631349 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.336335297 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.346869884 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.332958439 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.321790456 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.332382148 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.340903698 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.330790884 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.336080902 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.326383274 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.3168485 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.33562713 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.324664286 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.327881582 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.325394732 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.327708541 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.332968938 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.730548252 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357391043 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.316772903 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.322131931 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.323244764 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.337459039 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.732960137 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.334402188 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.346051987 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.369792405 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.327386875 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.324113081 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.325448453 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34487144 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.331117804 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.329079142 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.318103779 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.326773876 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.725944172 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.353853864 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.327851088 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.324341753 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342506298 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.324773034 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.320543771 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.339668845 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.325247019 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34272613 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.44509675 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.338793362 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.35556003 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.326436947 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.327417272 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.344955481 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343414823 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.357835586 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.331151707 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341766226 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.342195224 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.320999455 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.337298031 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.33570212 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.326477445 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.331475434 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.321928732 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.35228611 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344197873 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340954853 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.348578712 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.444187859 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.324082065 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.332130655 seconds)
done (took 223.460369854 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.387778709 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.313466608 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.418387367 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321531667 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.423965221 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.432179483 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.321892235 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.322120293 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.322684408 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.704101338 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.323659773 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.324253238 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.316717985 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.32417527 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.409467802 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.322452606 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.32044213 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.666067362 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.324870881 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.396913231 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.325227266 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.322670012 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.327197392 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.709765371 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.325853343 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.325462493 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.395135814 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.324845245 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.673149174 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.324369926 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.326665549 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.673141147 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.414426243 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.343720564 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.336880387 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.332789655 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.428807145 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.350304092 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.404651433 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.409455627 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.419501441 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.362209119 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.324784541 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.328717602 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.332565492 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.328764951 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.326102821 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.352141041 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.326924741 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.32577735 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.665056985 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.338490387 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.323557819 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.322763511 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.322408614 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.356933179 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.322822209 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.325484946 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.419677961 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.326871177 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.389958085 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.711716162 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.707941926 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.327955656 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.325652212 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.325759496 seconds)
  done (took 147.942493606 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.393240275 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.398362365 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.438795718 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.351127561 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.376972788 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.442855294 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.347566031 seconds)
  done (took 10.985747735 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.331706761 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327495925 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37477073 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.377439591 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.328298409 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.477338234 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.324683401 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.338188219 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.323115936 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.383624699 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.328681206 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.327795358 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.333715247 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.320674261 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37474908 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.33992217 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.439636435 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.331344519 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.32898324 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478663178 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.325997204 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.335568455 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.378466454 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.342954391 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.327607586 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.331113998 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.899310776 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328532224 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325855377 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.326197546 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326939882 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.36544444 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328582065 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.324016457 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325507708 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447899297 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.328995774 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32386066 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.327067966 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.327868426 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.329132824 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.328028452 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.329337562 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327925844 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.331222231 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.355406994 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.326513689 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.328071877 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.330724524 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.333319634 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.377161962 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331288921 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.325269549 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.326231775 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.381870943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337316526 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.33079696 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.329715354 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.328437068 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326445435 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.481281971 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381357273 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.332261184 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37511549 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331524712 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331996618 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.332349064 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.329492825 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386108693 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.332086709 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.382252408 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.329254239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.486428993 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355294254 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.334246988 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.335396974 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.334192633 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331343893 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.328015236 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.337600614 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.32889758 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.331902736 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.336825451 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32736646 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331820431 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.431200685 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438074555 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.330441521 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.346360758 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.339148179 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.331123883 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.385612566 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.331429181 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.329992832 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384089012 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.446647534 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.384650603 seconds)
  done (took 152.795326612 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.338064912 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.33990106 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.335556133 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.349832708 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.335320635 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.331937742 seconds)
  done (took 9.271574602 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.336915839 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.333351792 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.332910633 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.32952865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.335919751 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332317815 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.335331221 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333621055 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.338024562 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.331793554 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336295879 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.334397334 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.335542823 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.334127196 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335742218 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.333890756 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.334376869 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33514135 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.334199723 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337029809 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.433177835 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.334846946 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334922814 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.336414456 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.338341119 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.333197058 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.343127871 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.334027926 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.334849855 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.341927096 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.351247433 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.338440936 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.336987946 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.344041957 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.343052509 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.336546292 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337515349 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.335369554 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335889969 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.33856081 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.336725404 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335436433 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.336484342 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.336165413 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.339069764 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.342492089 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.34329204 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342585294 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.337582377 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.337804801 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.338589787 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.339544012 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.338004993 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.336091679 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.336080495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360807193 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.341983961 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.337801909 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.339020635 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.336390611 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.337743787 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.338805518 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.337521254 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.341439096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.344847063 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.337390143 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.340898336 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.347141164 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339348679 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.335987444 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.338630643 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.338651605 seconds)
  done (took 98.665101324 seconds)
done (took 420.891311576 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.651288257 seconds)
  done (took 7.893910422 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.415579972 seconds)
  done (took 7.661931108 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.718712863 seconds)
  done (took 21.972191096 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.430525104 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.409875674 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.355457248 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.334284273 seconds)
  done (took 26.778715542 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.566210053 seconds)
  done (took 7.808726185 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.347765746 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.34671821 seconds)
  done (took 13.94472286 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.89458886 seconds)
  done (took 8.139504345 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.929420308 seconds)
  done (took 8.179398828 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.338245176 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.35265073 seconds)
  done (took 14.199402909 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.319547451 seconds)
  done (took 7.568670494 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.13751236 seconds)
  done (took 8.384620714 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.338802244 seconds)
  done (took 7.589924674 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.400710288 seconds)
  done (took 7.64917503 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.262121883 seconds)
  done (took 9.511761438 seconds)
done (took 158.52725447 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.334282286 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.344236204 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.34301689 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.341844454 seconds)
  done (took 26.608871788 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.38221733 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.395370125 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.376077847 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.386485763 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.377992623 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.375673038 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.367102183 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.365031522 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.38614904 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.378836209 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.379311206 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.38175038 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.373199798 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.369708974 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.378969271 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.374855904 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.385243158 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.372768248 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.368277147 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.379048426 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.344241372 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.386972912 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.377184617 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.339729815 seconds)
  done (took 34.251866964 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.871348847 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.411948406 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.498783723 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.398428072 seconds)
  done (took 7.426261118 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.398942393 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.394660495 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.414699214 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.447967652 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.472357337 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.407239142 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.370153901 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.363901705 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.352004676 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.397335768 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.473698154 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.412571514 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.479514776 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.339781579 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.527368445 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.344065501 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.341040075 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.396452521 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.444818176 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.472258026 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.343719521 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.395550545 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.401885294 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.412869902 seconds)
  done (took 35.050550859 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.346751469 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.360267569 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.339808652 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.34437091 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.351769114 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.345126996 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.343447025 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.344430631 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.341506489 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.34718903 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.341837851 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.357833824 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.343473662 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.343155553 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.346129718 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.344188615 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.348628137 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.342516492 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.344540571 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.349968389 seconds)
  done (took 28.177570409 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.340567094 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.192066571 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.688285384 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.594382655 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.338891725 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.345663184 seconds)
  done (took 27.749602018 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.41305107 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.566120314 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.341689188 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.699869943 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.797697576 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.367358395 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.344248184 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.583100307 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.902010558 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.890449676 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.40792592 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.422862333 seconds)
  done (took 19.991338942 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.343228315 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.350617348 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.346373426 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.363748493 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.398983478 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.374586935 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.35295526 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.340444021 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.408866157 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.417626304 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.366789208 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.399432168 seconds)
  done (took 37.720969485 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433784147 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381860949 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.228928993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386106757 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.079548974 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551105884 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336515224 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.820832231 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.343107731 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614356218 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345515215 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431911604 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597995639 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354338893 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349013012 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.323056639 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58503133 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819227406 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344799356 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.40955956 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374057295 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353982569 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.505452126 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.37939066 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554126008 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476159297 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.603867802 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.117356418 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635512156 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365231149 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352951229 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341012794 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617352897 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002128925 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454427596 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353037084 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360333238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.88702815 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.339791602 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.413236512 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363317276 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348201726 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35667481 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345844247 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.278448292 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345826034 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824181845 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.352366663 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.056175567 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345960378 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355557666 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439459092 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350114876 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.913384074 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347540132 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349759074 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.345614559 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43634043 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933164625 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.824682045 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355213863 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.284430129 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347743296 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.328096136 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987435705 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.465911534 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.352190923 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351453351 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281118938 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.339219293 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3707298 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489905177 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.365165189 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97472846 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052311137 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382530882 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286928543 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888493775 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355217948 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.292538121 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574848419 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122093349 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28400299 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.293965098 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280264681 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038260709 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356694065 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.719573875 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368825538 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.821979863 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.355188852 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36654067 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370792058 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569292508 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.228547851 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348744942 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.348520241 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503033741 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369330626 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.810295983 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282850102 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.353140873 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60220539 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.560361343 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359868181 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341677265 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578756029 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352654884 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.371548281 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351196873 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.368392507 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.922485709 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383439368 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.829904625 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373804533 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.127116631 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071335971 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349653692 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.456376273 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351938729 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600509054 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.097505456 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.508533445 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414719217 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350997741 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352491957 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.428672091 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954029798 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.509480838 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.344934324 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361416747 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.36668061 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.350696921 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301876457 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.358602091 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364643038 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.136355123 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570947195 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349548648 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632013442 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279961117 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493775056 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359029059 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.57399471 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.538018175 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.365973229 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608228755 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363632213 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362369081 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369469037 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368995901 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454210733 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374145539 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.353977027 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614972145 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.357792531 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.354571406 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.456959681 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.13585765 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354684943 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.361049574 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368736399 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941356405 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35623029 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3600163 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242308656 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.367238673 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418044228 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357176159 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.359512957 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.154156487 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380937199 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.360668627 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.362362401 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582876042 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36271497 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.364759726 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437473359 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.563743018 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933524147 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390248026 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.289321912 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.063426328 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.047491946 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353609222 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.543697641 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355585706 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367190024 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365142403 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360137838 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932502056 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382824803 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.358688929 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.368207191 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366429077 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.358532259 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35469051 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.156820356 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.871021127 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369029596 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.375696522 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497170648 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.36776104 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287649984 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.873901584 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36193102 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355943378 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.13545672 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385458325 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.367006947 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847924037 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616189952 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362927641 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368729997 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.546752042 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.394978599 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.359824323 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358262517 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365627513 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.382598713 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364517306 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.368584761 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.42631481 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.727987662 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924938819 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081294434 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915092744 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303641424 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.370039387 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.263306706 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.821437583 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288671212 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.01417125 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546938347 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835890853 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301707098 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569858513 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.554849095 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132908978 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375567719 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585846692 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270938645 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.36492397 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368144999 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568673696 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390949423 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364751557 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295941971 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.871420404 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619370803 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368033566 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436711723 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824989392 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372108461 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.135775854 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.432064983 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.682780216 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54996114 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.902050913 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.743512827 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360204159 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376833101 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841683202 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366751566 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.884047874 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981708238 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384044768 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.578587106 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295851009 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.372335153 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.369710758 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.355797768 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.657818098 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.376299523 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.624107368 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370433733 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295676984 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375060126 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900363212 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.233900891 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.367104647 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363308314 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085992167 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370281615 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661525351 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.374024479 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.139984392 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389889575 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29569687 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297798329 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.052431872 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362668309 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335722054 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854800506 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.384292782 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362407749 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380979354 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213883072 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617308098 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.376090324 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939069099 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607707271 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377024662 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381924688 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.463755756 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361788239 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.342876103 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.246477646 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597333339 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404914666 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588235626 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.273508568 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.263591283 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.464305199 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576664747 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.243446948 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373433563 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618211186 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.090843609 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.367690613 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053360592 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407440522 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369219494 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374984294 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384069433 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383927204 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448756103 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372466257 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.373023224 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.374719185 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539293109 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372716457 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361900937 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.376072015 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459107709 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.882095093 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.158351377 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.139088735 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953852419 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102749543 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.966326846 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393541266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3667977 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370312321 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300833403 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51506035 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.890050342 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63811898 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493949694 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.368756811 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407294942 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377246573 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367243368 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582481868 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642093291 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.338656035 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363291896 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159652882 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.524917354 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379020107 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.575198469 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857902367 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921578743 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615163956 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376370795 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.838886757 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640543407 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.45820226 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366685207 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96030015 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.381496411 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.683904529 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.389988836 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381258307 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512148015 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374718112 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040744398 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.395678219 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.523709438 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.141363649 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.394456362 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630764282 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.767085337 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.379874184 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958271903 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083257683 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636525969 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437951284 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380263329 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.489674894 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512381878 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.375977148 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.28009637 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3670653 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211361778 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.077475078 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.377582754 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961535705 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649438305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.36774708 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.379808733 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397886467 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.378956677 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59216857 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061061369 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593396636 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38039395 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369724206 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.938067974 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957042186 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397158325 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297662336 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.374446146 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617181764 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.620464366 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391084978 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.822892033 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.080862493 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915589585 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.338899716 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389642989 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376814742 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070969738 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969875835 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.166481454 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871650835 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.026964901 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381422537 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654474537 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.375792448 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376379656 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656159103 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.376736616 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382588898 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391027098 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.955678824 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150572806 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.395829351 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.510926722 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.315384055 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.597202925 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421286557 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327198201 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381078446 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.554374904 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370470781 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504706663 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383941153 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.368715873 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406748054 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.131207534 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65625646 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.375562953 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.366393983 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.374532154 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38310396 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471820663 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633669122 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378914412 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.048947358 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.720115067 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627902696 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371060706 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.361653816 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.376631277 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370627167 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091786614 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381491901 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370137445 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945054894 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.38162221 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.388243737 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374646779 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.59032092 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584327175 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381090218 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394064298 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371807804 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39282921 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.28102408 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.140037088 seconds)
  done (took 1653.917024388 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.398990453 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.403286924 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.392115378 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.390769021 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.419181516 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.475968614 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.425870319 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.484331111 seconds)
  done (took 52.674355407 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.381747841 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.533462208 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.404521453 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.386708372 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.390436521 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.385788004 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.832114036 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.394758542 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.391772101 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.381666483 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.373410466 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.386746757 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.042060822 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.38409686 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.378584828 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.376472735 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.387824959 seconds)
  done (took 66.107138724 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.376940485 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.372644507 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.47150907 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.379196385 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.471828299 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.389589607 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.255997451 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.406755059 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.374246012 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.780385459 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.045339562 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.405839642 seconds)
  done (took 85.015553396 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.3798406 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.38332767 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.383587606 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.383239873 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.385373219 seconds)
  done (took 8.20025965 seconds)
done (took 2084.141766406 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.620723377 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.074670718 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.991320842 seconds)
  done (took 5.349593076 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.52452027 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.574473105 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.693344766 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712123833 seconds)
  done (took 7.794584388 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.657118831 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.756677346 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.560168361 seconds)
  done (took 6.264216354 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.779580062 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.398516364 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.400838807 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.377517898 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.38504129 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.384099065 seconds)
  done (took 20.437604043 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.381380653 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.383241236 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.380788696 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.382464567 seconds)
  done (took 6.817600525 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.35734054 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.075461863 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.357641374 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.379929875 seconds)
  done (took 18.461469023 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.127416296 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.140461148 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.124039464 seconds)
  done (took 7.683904799 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.382911137 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.23785984 seconds)
  done (took 9.912083298 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.66664741 seconds)
  done (took 2.958406268 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.514270817 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.708547635 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.410949112 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.331843403 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.445948757 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.194774344 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.014574291 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.610828089 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.294119982 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.5375784 seconds)
  done (took 28.354828152 seconds)
done (took 132.519908413 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.206706726 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.624449695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.585671511 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.215184675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.768336318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.583934449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.592317581 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.183675441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.73780755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.685675184 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.177485759 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.787080792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.7489699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.629345276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.749138976 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.75413785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.608480394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.337225366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.863346843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.092155901 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.586591981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.814855716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.006888161 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.839807449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.614636795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.533109507 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.396537801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.751885783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.037634904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.423481208 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.534863478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.275185644 seconds)
  done (took 195.039662874 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392454746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.380078848 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.38046042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.381500493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.394408625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.380239068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.381179164 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.403675655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.381571284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.398535744 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.381370204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400024941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.399465267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381732138 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.383148194 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382911109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.388376699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.381971468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.381981322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.381804814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.39835297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.398966972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.381601932 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.398876132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.389577083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.383151605 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.381758446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.383078033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405506167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.38721595 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.382901685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.38228478 seconds)
  done (took 205.705549445 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392719902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.39780769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.38507934 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.383286933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.400188638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.383853584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.38536007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.387019864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.382492383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.383639267 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.39963514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400665408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.385624675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.400029308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.399492992 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382815426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.398287149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.382599979 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.400757548 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.38370043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.399556843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.383617347 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.383979797 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.401035749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.40318111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.401816038 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.390288255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.384783418 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.384395986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.400538359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.389125137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.398006096 seconds)
  done (took 205.832415347 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.578957068 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.391545467 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.391964288 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.327926357 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.391341452 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.390090576 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.382442217 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.606025367 seconds)
  done (took 14.758838133 seconds)
done (took 622.62737814 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.701579865 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.410207944 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.593390384 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.425171409 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.151741193 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.432272137 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416110711 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.583365571 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.340904136 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.598937914 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.690420934 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.436235415 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.830552956 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.418959687 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.6667481 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.521512026 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.275940565 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.39549709 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.73140056 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.927414037 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.673914311 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.871728877 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.603786881 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.324610674 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.829418411 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.85523979 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.137293378 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.260650021 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.429091117 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.731645628 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.051764837 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.372529773 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.474703227 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.482797827 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.537980863 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.519945323 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.368340506 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.471227736 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.62185921 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.636437457 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.91837351 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.14168061 seconds)
  done (took 94.163302761 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.376631049 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.37710114 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.376211346 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.377805326 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.378401524 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.377225796 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.376233342 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.376640188 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.376901432 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.376816631 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.376102157 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.37829469 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.376861653 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.379152867 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.377381318 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.378305602 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.377940713 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.378748159 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.378292986 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.377425223 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.37885017 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.378334776 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.378502637 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.37846924 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.379633579 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.377401193 seconds)
  done (took 37.121898032 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.397049335 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.652496795 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.822010202 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.410739471 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.396190347 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.400536029 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.474560016 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.407712779 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.400058898 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.400767977 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.569852 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.408997943 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.42990227 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.838063306 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.408413015 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.399844912 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.398793923 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.397031832 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.655338651 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.415028271 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.494590628 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.407740777 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.476439448 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.412795492 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.419047896 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.398260111 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.40247274 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.91877064 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.426714546 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.568367074 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.205741873 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.482450632 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.883071532 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.853481674 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.197074943 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.408582015 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.398148789 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.572822088 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.401612533 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.397813048 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.476094833 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.407760208 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.818191959 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.025031964 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.418640352 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.40075328 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.939610744 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.590841143 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.643639341 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.415761787 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.844418594 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.403706322 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.401327668 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.400524338 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.644302235 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.416518873 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.400679589 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.927912418 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.42593277 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.477822171 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.408861101 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.401061139 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.663432481 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.410456356 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.651038237 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.412327958 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.408448484 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.421150862 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.821088549 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.413285052 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.047986136 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.428802329 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.400815837 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.57016891 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.659153651 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.984165159 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.431946898 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.670383592 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.898302687 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.50032042 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.406772998 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.916600421 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.502907892 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.40644893 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.404211801 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.403579916 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.403439663 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.453604377 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.475871823 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.971307424 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.059390365 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.957406774 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.500892944 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.416070331 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.402069711 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.931985545 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.423096102 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.40401789 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.817927605 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.060402604 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.431032375 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.410467275 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.051632274 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.432049046 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.481702442 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.408879716 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.828904983 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.413107294 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.455961349 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.4025927 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.41081932 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.425828468 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.483426236 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.408412517 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.40439327 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.029910567 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.599826702 seconds)
  done (took 184.196780258 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.399567644 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.416651014 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.397389663 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.398627101 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.397987061 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.406814954 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.398623848 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.398030455 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.404576544 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.398595592 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.39839133 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.399388948 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.400332049 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.399155021 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.411231781 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.406553205 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.008391114 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.401217105 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.397947703 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.398984013 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.192322289 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.407389038 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.402097867 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.400543851 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.399233345 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.399825291 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.407039601 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.402372622 seconds)
  done (took 153.95977687 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.407729431 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.967611234 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.425270983 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.53688103 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.433291181 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.403030603 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.536111171 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.465079158 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.433664041 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.404500405 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.404450036 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.706304149 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.408121905 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.919130142 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.600599721 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.558641458 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.918122852 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.425053787 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.406267585 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.40562532 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.541173476 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.418529917 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.706914321 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.968692045 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.425420427 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.969192657 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.392108559 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.409295823 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.407105583 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.969704319 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.424721872 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.709888005 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.485539669 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.472415537 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.997254312 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.942633217 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.953525493 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.565590304 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.416724608 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.406136954 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.407767928 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.391659181 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.973180074 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.427774095 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.410318318 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96442332 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.428216247 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.410032627 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.412899224 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.407157836 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.470017676 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.496223505 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.740137712 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.978746523 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.504723566 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.427069847 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.539603632 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.802477289 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.413683156 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.927372447 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.400213828 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.979093051 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.428714958 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.392011943 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.408798639 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.41501393 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.560867937 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.549736524 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.936766382 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437478767 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.928169768 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.587291243 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.416762008 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.41013877 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.411732035 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.977171596 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.948153246 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.586638032 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.554076338 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.613061099 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.403327893 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.409252479 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.395157456 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.487574024 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.408789688 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.982455686 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.949784766 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.43818017 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.411853643 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.411976428 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.412124261 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.585360907 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.006770316 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.507533738 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.918946796 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.742636362 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.716228335 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.41433494 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.471434374 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.436133951 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.717066258 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.415024766 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.470292633 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.870069678 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.719142351 seconds)
  done (took 167.840276989 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.654786992 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.624152007 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.50226609 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.554572728 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.998233805 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.98978277 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.689660945 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.558964538 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.524424095 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.679913521 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.550759393 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.501600252 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.581500976 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.500780506 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.137788404 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.504605063 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.533293529 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.563411345 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.533888425 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.429008753 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.069637715 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.705709046 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.591179649 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.264097784 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.506773687 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.181388961 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.989346886 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.947437145 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.594591357 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.72987279 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.944404157 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.542018367 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.363746982 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.100895378 seconds)
  done (took 67.464681512 seconds)
done (took 706.044416628 seconds)
SAVING RESULT...
DONE!
