cset: moving following pidspec: 19612
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.258100805 seconds)
loading group "string"... done (took 0.466751109 seconds)
loading group "linalg"... done (took 7.646776911 seconds)
loading group "parallel"... done (took 0.174060566 seconds)
loading group "find"... done (took 1.190165774 seconds)
loading group "tuple"... done (took 2.123452909 seconds)
loading group "dates"... done (took 1.336353441 seconds)
loading group "micro"... done (took 0.246878374 seconds)
loading group "io"... done (took 0.70666972 seconds)
loading group "scalar"... done (took 41.888685855 seconds)
loading group "sparse"... done (took 13.051801103 seconds)
loading group "broadcast"... done (took 1.14148655 seconds)
loading group "union"... done (took 14.249609641 seconds)
loading group "simd"... done (took 5.183301946 seconds)
loading group "random"... done (took 10.056445681 seconds)
loading group "problem"... done (took 2.011841169 seconds)
loading group "array"... done (took 22.598812346 seconds)
loading group "misc"... done (took 1.425661346 seconds)
loading group "sort"... done (took 3.573114248 seconds)
loading group "collection"... done (took 19.553408522 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539280097 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140949647 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132593528 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151586252 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207684845 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144815106 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16034843 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116302295 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.969211681 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180846231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156308177 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.496076277 seconds)
done (took 5.120073366 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262793469 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09538496 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104230405 seconds)
  done (took 0.87407435 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078017739 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145566024 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094170666 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079007318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096094934 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078935732 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09586242 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079141366 seconds)
  done (took 1.343006675 seconds)
done (took 3.238924046 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731909296 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.282761378 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204066979 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462375622 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198283866 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215283803 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.730262048 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.370089134 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.260899254 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100188024 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143220389 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386273405 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135497739 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.729256192 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089503798 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124924738 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.189823085 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.476033758 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084534131 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112443614 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11849976 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146110481 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131805436 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09323433 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18714399 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083193907 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199885974 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110348209 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080348531 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287653523 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20082459 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.732789773 seconds)
  done (took 11.110284761 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111647801 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134942965 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099082844 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140899517 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136253564 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101184521 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085294903 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098579728 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123358664 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178609357 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115508397 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139504022 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096461831 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083332736 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118533048 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247545519 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123881341 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105448425 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10379453 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107006351 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123803198 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116604169 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110962794 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093619327 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169765944 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225040755 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113124831 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128455264 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09926118 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1137109 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144764121 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146034002 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096474672 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081652125 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175582411 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127288949 seconds)
  done (took 5.205203882 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187385133 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119973838 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169112465 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163471635 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140288877 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161417332 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112477335 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257502544 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.120239563 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16559336 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144387092 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118312576 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081610707 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101256883 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098284414 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156627508 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.63777384 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118492507 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166003647 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119819394 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106070174 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087366299 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106786727 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081972333 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102491581 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.110151972 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.681581409 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165374142 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102499464 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.156740843 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126111628 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082561856 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135242963 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208544357 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110185153 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134563908 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096550414 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079711814 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175263442 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105982468 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079771879 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122332948 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136429568 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13859706 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099613496 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083060685 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.210795962 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098319141 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080327603 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118859694 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.959106303 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095900929 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183966404 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092228623 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097889061 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326353282 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115461042 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081139036 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095429569 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.254828158 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.200203317 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082398558 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100630101 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096853533 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08208148 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.734630087 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097637083 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.075493837 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08698366 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107860742 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082647541 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097163703 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105128102 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087740705 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094169492 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097031193 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097715668 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081371745 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097781821 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07853015 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099230997 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107031973 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08579309 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097926445 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149563455 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096020565 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100022921 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129837597 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102765439 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079887631 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134795963 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102107973 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082545791 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135234772 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100130766 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092543931 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100497756 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146587897 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100217496 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170921975 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095798023 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126884554 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099588783 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116749589 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117096072 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101660168 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086271565 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096183284 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078406776 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165784323 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082193237 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100352698 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083798125 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112150084 seconds)
  done (took 23.845044493 seconds)
done (took 40.835803536 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.320735779 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104509017 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103364587 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102273958 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100345018 seconds)
  done (took 1.476688314 seconds)
done (took 2.198159773 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287758277 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.213785294 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077384002 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166828783 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094300118 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173737345 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162016214 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112846654 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220470334 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077302209 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183369873 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078492325 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096907889 seconds)
  done (took 2.691824879 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094849306 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117857643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084152135 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113430543 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078309528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114175387 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094963272 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119574261 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112193668 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086391905 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095974927 seconds)
  done (took 1.827391494 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094383082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113222534 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082680482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112666991 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078517081 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113761547 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094457544 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119658543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112541586 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087788281 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096966002 seconds)
  done (took 1.825069983 seconds)
done (took 7.055038251 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091281012 seconds)
  done (took 0.805081673 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.940111685 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.041676909 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113807427 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149836596 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.302241916 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192902101 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.487431432 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.1267681 seconds)
  done (took 11.274265715 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.117796419 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10546982 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10391875 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084620256 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.117676493 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089294789 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103317414 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102229211 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085123387 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104641415 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085509495 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104184349 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104364801 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087497284 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105853795 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087742733 seconds)
  done (took 2.371096652 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120928319 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120863654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11066079 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110864286 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089502126 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108701517 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10887786 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092506929 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103716125 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105778304 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092775867 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108445933 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106001121 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082668666 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109153237 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110282137 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088044683 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108872834 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109488764 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092485407 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109705419 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098689099 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089916011 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109256293 seconds)
  done (took 3.319114594 seconds)
done (took 18.488586566 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160202746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109102942 seconds)
  done (took 0.991708119 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096749742 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116158116 seconds)
  done (took 0.941679657 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097556814 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096745853 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125901843 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112534788 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081359968 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098583896 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120869009 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081933073 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099477069 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083066046 seconds)
  done (took 1.730762417 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082914631 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110771894 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104572206 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097465772 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107761578 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098693378 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090263212 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101452506 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113816748 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079759013 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104739678 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117061113 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088289559 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119336747 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107824632 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085819096 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105530082 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101213563 seconds)
  done (took 2.549911943 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080567652 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100331083 seconds)
  done (took 0.914177285 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081439006 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096467681 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082789133 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100898772 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096645105 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077968184 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096891274 seconds)
  done (took 1.365174669 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.523170346 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140867431 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262661901 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088008123 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12353408 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.310250306 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100903327 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087799424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107124752 seconds)
  done (took 2.539854581 seconds)
done (took 11.761992724 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094497848 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119672681 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115164662 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.478939758 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110298578 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.101288525 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.16437448 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.259169796 seconds)
done (took 2.180490149 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144063643 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328903926 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117065148 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069031003 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098970771 seconds)
  done (took 1.351018863 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079911936 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102908349 seconds)
  done (took 0.923334575 seconds)
done (took 3.157803245 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081136649 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099842793 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081119923 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.135845684 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082612046 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101840198 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080032774 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099780472 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079864333 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.10167112 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099410668 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080319487 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.099820315 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.082780177 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099662685 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079830874 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097206238 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082095701 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096980427 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080278535 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098041252 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082625646 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097353882 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079882775 seconds)
  done (took 2.976668122 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101054814 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0993709 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106308906 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088417186 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104442461 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088833642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106422005 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101178386 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088237479 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102377424 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103418168 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086665549 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10261047 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086540202 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102658155 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104119891 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089030876 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100299544 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085515537 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10450519 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105052948 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08337434 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104683521 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105079679 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087053099 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10424604 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085578962 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100710021 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106222282 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08760769 seconds)
  done (took 3.665268221 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085048785 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096291938 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079755471 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106310234 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080192388 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100432679 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.08013832 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098888065 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081810309 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098505781 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081672227 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097895084 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080311758 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099548417 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081193461 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102611306 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111039489 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081104996 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098632107 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080956144 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.1009951 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080131184 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098364313 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080941682 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098761669 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079982025 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098624863 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080743226 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098623569 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079957027 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101579053 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083869001 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098047586 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086776811 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101880365 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080412862 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102030884 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080078429 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09970159 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097508139 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080680382 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098495978 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080868252 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104446734 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080995409 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100697308 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081049577 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100369913 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080838862 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10232159 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08028912 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097889152 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082478823 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099258047 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084916324 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097841418 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098645486 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080200186 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099807655 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08097522 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098390051 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079807822 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100589057 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081112356 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114523935 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087725683 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097817453 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082461729 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099180701 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08300642 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099606035 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113070856 seconds)
  done (took 7.348877539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083927247 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108764913 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082740063 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.1005096 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079057017 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099596506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101983991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081120042 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100500431 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088103866 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099377625 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082873909 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100671519 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111381029 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081285157 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100567232 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088806273 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096633133 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08159133 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102891236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08158754 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10206828 seconds)
  done (took 2.803990157 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212255272 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106860751 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146374154 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111563745 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085867489 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110204602 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105907664 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090099401 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106310047 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086818488 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103940516 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106277117 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085441161 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104052886 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103439714 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088103811 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105528625 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088248689 seconds)
  done (took 2.699563016 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094131333 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100145276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106296182 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10251166 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102951467 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086800643 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107488193 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111555324 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086400046 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101537007 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093591014 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103759275 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104276017 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083859848 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104122512 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084603027 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105045775 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083977337 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111356969 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107904322 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.1073091 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09373759 seconds)
  done (took 2.937369989 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096867044 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102891951 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12193422 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086867185 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098040089 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082014592 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109185831 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084035974 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110413345 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103296572 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08430526 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100295203 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090664415 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101172074 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107420897 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084223206 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103958947 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083567417 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103934153 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080050544 seconds)
  done (took 2.691398832 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103812156 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1036078 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103195019 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094330988 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103552608 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0851211 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114259799 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103244557 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085692135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129272956 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103634964 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086109141 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113235979 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109298513 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103697865 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094841626 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112798453 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113367374 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086090982 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103023903 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13036871 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086275013 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112349296 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104038269 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.200728284 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103645061 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10408293 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091262966 seconds)
  done (took 3.743240786 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082132578 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099902134 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079376676 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09974605 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080821442 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100230519 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081438419 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099574736 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083948231 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100498017 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084430902 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.104755601 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084316123 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102458672 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083910963 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102161636 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083612181 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09940944 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081070896 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099945278 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084384091 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102565183 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084538365 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09985988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082072364 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101927357 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081554644 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100060266 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084452974 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098942043 seconds)
  done (took 3.514001338 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091660168 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108830014 seconds)
  done (took 0.960355107 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079487534 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11685862 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08164011 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10676835 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089433485 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104087403 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111593625 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090308423 seconds)
  done (took 1.538630682 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097983713 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114398732 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086769975 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116611018 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.114719465 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098593579 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170727228 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105082548 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091017077 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101927136 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117710008 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083825576 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110186203 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084676007 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109596364 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090522309 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100905066 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090548916 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.106244631 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101777787 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086758297 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114099442 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08773854 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100291761 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086261607 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114443034 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112926994 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086181518 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106228393 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113039594 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09066334 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097334312 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084599488 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104545475 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082770386 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113675161 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116582712 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087675566 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112558939 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086525809 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115613909 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099184994 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090421351 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109578224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094945873 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.1046363 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086573478 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098623578 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101318102 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087638809 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099472478 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085323359 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097622702 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092258189 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107961677 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117311339 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083428774 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104892003 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089029786 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106831704 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09188932 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105675366 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087647278 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103146038 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110907947 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0895717 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110775684 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080348604 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097382425 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083431867 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112912222 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127905857 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093220815 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105001554 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086856383 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100635526 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107539332 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087004443 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11141206 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094097207 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103924987 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111991957 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094050878 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104881864 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088409944 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112865799 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102065347 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087660059 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101140472 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10025458 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102617636 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083082724 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101561097 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112965922 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088142031 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10388891 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083029338 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111593214 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079320931 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105445909 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086956078 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104736274 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112719986 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094159695 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11040721 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111798934 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092749942 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1040847 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088717252 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101089388 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087431288 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10682436 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092085849 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097710429 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106838689 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087319931 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105303439 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092704392 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101892548 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086921191 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112352485 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111027424 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084323649 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100463151 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088697613 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104506621 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089502617 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111286055 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103644237 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080054204 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099657025 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089227351 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104142168 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089910959 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110490445 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107637109 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079913745 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10228049 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090464114 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112052592 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085785467 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104097616 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108626111 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086311087 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.1044451 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090992394 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106832667 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084277716 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108555751 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087501978 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099731291 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10822586 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088427546 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10314496 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089354424 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109216157 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088359058 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105803648 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10286464 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091230425 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105908843 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084522516 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104421914 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084734099 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113240392 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106714094 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081062876 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101555442 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093726395 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102231443 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085793722 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103514989 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087986972 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106240667 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102337903 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085314406 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106222413 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098802873 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109719878 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10701919 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091515952 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11479561 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085933247 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10698763 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085225854 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105728057 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105604917 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092970158 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109820937 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091274622 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107828189 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082448127 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111607403 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113109238 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084968861 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102639441 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085386731 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.108517669 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111542796 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089571548 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106188481 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084582783 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105184491 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090448474 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108289135 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104462107 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084574581 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109979355 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085273806 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113287419 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105766447 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095420349 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108298307 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081109906 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109765635 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084411794 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110673266 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080750613 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102886647 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10370086 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086979653 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103914308 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088720047 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099245802 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093271996 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113722966 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085723738 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104608589 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104622267 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094863533 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107399784 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089069146 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108675051 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091811498 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118482089 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103956805 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090334531 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114772263 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087308361 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099279602 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110879547 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084344172 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104772677 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085192431 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103073748 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089540592 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114512395 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110276503 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079940364 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10822704 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084333948 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103645787 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08179641 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112456933 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089690522 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10765539 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114042709 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087785409 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105795004 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090917091 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105015011 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086935316 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106967105 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108336048 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086767387 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10811284 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085456105 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107747532 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088470379 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.10283295 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088055373 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105712363 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105779467 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09254277 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104949166 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086723719 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107977997 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087569497 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106668943 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086419579 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10535386 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109081443 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087287535 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106261401 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088813442 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101192308 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094203645 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105827267 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093897816 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106618489 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10223618 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092142712 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108077472 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.092411744 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107070091 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108692409 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087948017 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105485673 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089729719 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115163853 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084619388 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115245958 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112959682 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087499918 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108563593 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086406678 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107199123 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085659515 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108280661 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087306111 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106738018 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105726372 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092338072 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109090618 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086931051 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107438773 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087647408 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106395801 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087541208 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099917895 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085792871 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106005395 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10605169 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093563024 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106823682 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090050468 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104780552 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088237021 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104507205 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102542055 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095650244 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115684544 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087830073 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115072301 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105518681 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087906754 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116490467 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08013874 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104273182 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084264498 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103081734 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114150642 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087675042 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115464908 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08652565 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105444028 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084335234 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107148343 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08532282 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100668377 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083798949 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109850467 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108976272 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085501416 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106540775 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090194599 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107824701 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094641526 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105513091 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.108990253 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087630071 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103496942 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085791298 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105548302 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090184904 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107454934 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084834701 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103125673 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087332523 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108568409 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08770414 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107002298 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108620776 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104664988 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106921709 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089619308 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111208252 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080388494 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109289145 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106456335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086319703 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10536398 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090889864 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110083902 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088759611 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114013387 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106304796 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087725314 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107550821 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084960217 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106781969 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087063991 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106918001 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086282221 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107960721 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115797261 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085738331 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108682918 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087434981 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106841328 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091977289 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108131744 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108729781 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095915723 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109744808 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088443894 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113342262 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091262216 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111408774 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108303547 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08943654 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113244018 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086050172 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115434948 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087699281 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108896044 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108757596 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085135687 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106856806 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087351739 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105762189 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091655509 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107763021 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085988977 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106577934 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085157834 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109028094 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110910882 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095442337 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110471431 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090406424 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101975957 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083860535 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109583409 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104586815 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089286217 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110086024 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093844224 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109244523 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08811857 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106329069 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114558765 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094466072 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112440919 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085790923 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112365925 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088898049 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109806959 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107935124 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088437331 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109079705 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092914107 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108642202 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086970538 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115853488 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111556524 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088610275 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108945582 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088496417 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107360239 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08258394 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108945366 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089638237 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114710205 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109246264 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087348161 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11707058 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087382008 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107489396 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092057394 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107165309 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114482166 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082944325 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108047819 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089915283 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109216606 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08337829 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10664542 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084447539 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110243175 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106168802 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083241119 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117236021 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09587367 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109282397 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08682799 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10643845 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082428055 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102422191 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106106223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088605112 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109093526 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09724643 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106160311 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086702516 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102619281 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087504654 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111256149 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110398813 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085385779 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103271945 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087080267 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110012507 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094611633 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106415858 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087171669 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111211351 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109703247 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085704952 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111545296 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084074368 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111369367 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097603109 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108892567 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10803291 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093490757 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116213949 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089121078 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102336563 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087837166 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109796938 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108419954 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088520063 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109160137 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102035329 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112275854 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086668077 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107188373 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110659729 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08787299 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114989021 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088957608 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108999951 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093352208 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110311486 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117681211 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090962217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114872555 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090212151 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110315371 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106560688 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088388218 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105970931 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086379129 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109908775 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089414949 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113933443 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.1171703 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086973771 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117898103 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095822233 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113925767 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083246592 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107466557 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087755138 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103579553 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109689464 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08664963 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106311805 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086141774 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106784249 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088545181 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114563481 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089637462 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109694255 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107746361 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084985107 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109831488 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091174985 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108015444 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084557991 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108296264 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088553668 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114710096 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1126837 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088724289 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109888561 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090574881 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109302304 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083091515 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115005184 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087705068 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111397087 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087365469 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109249728 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109509539 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09192132 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114635119 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089296546 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111580177 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.120338759 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090294021 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105526089 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.085390679 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11344859 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086234084 seconds)
  done (took 60.181164377 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1473007 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081335978 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100074615 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080489303 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117877817 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104476961 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082284245 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105009006 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084546181 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107305786 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083436707 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104505592 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114741968 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129689852 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097804896 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109687704 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083112292 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105359871 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103325515 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084411647 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113467238 seconds)
  done (took 2.953906486 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105364475 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118067601 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115591569 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120909803 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090551101 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117549805 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116000741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116530815 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100376773 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112149322 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120188255 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117589422 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09217482 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115262855 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114705711 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096990157 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.124433469 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11541053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121513723 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096219062 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116355715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120340057 seconds)
  done (took 3.27631406 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08526708 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106130375 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086364176 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103378885 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088055973 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102923216 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092578665 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105867266 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.092363257 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.107448215 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086469516 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.108175547 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.1098996 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08310791 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.108122892 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086304052 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158535907 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112166751 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088619516 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11033194 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.082176737 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110710245 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.103434347 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082830073 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107481894 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092007464 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109926477 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086426005 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107978124 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086728015 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108936005 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085300364 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109693415 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108262567 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087034082 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.107124372 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088463346 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108814915 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082755655 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.106106827 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088084364 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104060372 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088039364 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110520737 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08610129 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105862617 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08880151 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109227227 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.103713486 seconds)
  done (took 5.681402777 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104832388 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163862759 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086486933 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14437015 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122329073 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115851603 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08911777 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144470563 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104318923 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083556955 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123577692 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12122211 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104845217 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090694576 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111979602 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10499372 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086906755 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.1032112 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108726036 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083786372 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109734623 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091022023 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121008503 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117995274 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109156577 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084041023 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106104418 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111775023 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099613539 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114635216 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11518237 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094761391 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126629265 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115053776 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087203049 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109863479 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126287613 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108399012 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088296989 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102398746 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088821581 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114509615 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115146417 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106882536 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109979066 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114554357 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08805002 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106590956 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123260062 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0916002 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119440202 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126117295 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114430002 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088971945 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114684397 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126457105 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088666309 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107857499 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091829021 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122830194 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107172132 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092739654 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124262059 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111968047 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11787977 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103696718 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115393099 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113929766 seconds)
  done (took 8.349505814 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093723364 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11251704 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126625325 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127374997 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095700737 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117506533 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115733885 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095706561 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11709458 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122941805 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116995114 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140534497 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090841085 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12132881 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1171402 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095925111 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117145969 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117178114 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095438897 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116952432 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11647054 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12577274 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096154234 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126771591 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149753914 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111644729 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095371582 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117046416 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126818925 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117070343 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130216764 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096072848 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117676592 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12638152 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128986213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095846364 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108648171 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116759617 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096539056 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117742855 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111524324 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105915616 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117745314 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111397886 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09534258 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11782952 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126763154 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130496485 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120298037 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101619449 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116796548 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127137707 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116292063 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096736025 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126790684 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153555418 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127931789 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127801478 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1175718 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104867034 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126864254 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135616129 seconds)
  done (took 8.018346432 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108590866 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116409308 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123371116 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105479817 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086803112 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114315411 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086785273 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107984148 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121107934 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098873359 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122841535 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115309071 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097079521 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123270683 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115525936 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118648131 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093890635 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115213023 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119777406 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114647821 seconds)
  done (took 3.03875594 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093909867 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125468694 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089198261 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11828036 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11411379 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095802316 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113490271 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112444399 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090803741 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113560901 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101202546 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123178196 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1111297 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096196412 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122202336 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117947939 seconds)
  done (took 2.57162399 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096857499 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11870977 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121154202 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088790696 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108952063 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085276133 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110903889 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10464893 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081972956 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.127232462 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.09202586 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115000211 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.11024827 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086504987 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.1068644 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092086436 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107226606 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086368329 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111106987 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126749404 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100746143 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109437813 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111150374 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090802925 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110322606 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094370166 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110763362 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105285153 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084626749 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109849826 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08703378 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119312099 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10715106 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087595352 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108076184 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086553909 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110383421 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089767902 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114603552 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111194575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088650493 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11111321 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08984884 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112392603 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085035167 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112081584 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106613526 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096170994 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109290442 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089842613 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111125247 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091221861 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112543804 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121705603 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093127401 seconds)
  done (took 6.495416508 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100237769 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110013998 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083924784 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10904143 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092188089 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113705679 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11515407 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090910446 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112546884 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087964653 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113501977 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093732168 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113336247 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11457471 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091574945 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114632211 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085224728 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112083696 seconds)
  done (took 2.697048956 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091855986 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10639516 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097113873 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111563031 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089907722 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114989805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084616163 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.111409897 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109255788 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090184667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111454655 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092099154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109089038 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092008498 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111182502 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090303163 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113651774 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109191163 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090130781 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106805389 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091701335 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109377117 seconds)
  done (took 3.075028174 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11899084 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129729772 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097242545 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.235516841 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104386542 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133855862 seconds)
  done (took 1.661501012 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10930792 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12266047 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106573762 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107633905 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115901071 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089528878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1098212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108115447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120604928 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102103807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109172371 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119564154 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118413004 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097079279 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116786219 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115878775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111087124 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089785489 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110445544 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133212005 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090240288 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124288806 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113688711 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090894013 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114866703 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123637874 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124165274 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128589264 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092042772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124203178 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120693633 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093217997 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125388617 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129406723 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114323794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102705414 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115006394 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135770799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12050047 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102402476 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116067243 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121969361 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102505291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119602857 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124889603 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115453905 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097945261 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114500477 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113567538 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141986768 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098727088 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123522322 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121649166 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1252066 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102090967 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159665712 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102299535 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118685653 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11619441 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122735447 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118624029 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095220568 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119271063 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128110317 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120242502 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124105683 seconds)
  done (took 8.405289613 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102257985 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1272148 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109392978 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124192199 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097974738 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112737196 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114631502 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092718344 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114835829 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112880601 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160203139 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093496611 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1245063 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124561674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092294303 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114835519 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114681402 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12440262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091770746 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141628124 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114642328 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122962775 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123742212 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101800771 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129651405 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120847054 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114782195 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092874374 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114271961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114032985 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097453882 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114759736 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124991228 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091479085 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124867952 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115341684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091968209 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121976707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114391431 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121394335 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102422101 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136099051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114930844 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11392135 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105589511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11067011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113826986 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091549114 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115021825 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113660778 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106586377 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131331221 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129840239 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124158437 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113965951 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092715207 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11505802 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115184083 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092822209 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121374999 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124476415 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092363773 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164898309 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093338489 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11455155 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124987329 seconds)
  done (took 8.380070332 seconds)
done (took 160.401870558 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098367233 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14231993 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102686645 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.206111661 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106395546 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.131454026 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148103675 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097887917 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.11126233 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091085584 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.1137967 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092322896 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.218453005 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085336299 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107533561 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109094664 seconds)
  done (took 2.805644162 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200776638 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256886564 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103513789 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10874697 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093385204 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114128543 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.111524496 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09692317 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.116770884 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.09059407 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115654631 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092094197 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.111934574 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090847623 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117255327 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092670101 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.112871454 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093757112 seconds)
  done (took 2.969018617 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113560616 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155277294 seconds)
  done (took 1.125131625 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119619237 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18212892 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.32118006 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157109815 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106774066 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128427104 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157658584 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131319127 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198569305 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124620063 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125184016 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098822683 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147674 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118706539 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099534806 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124205141 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147122556 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.096578759 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119963008 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120574837 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117781505 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107842993 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116264969 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093235659 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18239013 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12100721 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085556893 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108522622 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121001316 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097306136 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120271437 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132889353 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103053167 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.18610229 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.108696889 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.181366351 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098042959 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113110574 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115337696 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091385343 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120929514 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119103767 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104522116 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119892019 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085231242 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121501751 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108415427 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086988292 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12051799 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102958145 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.119419711 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.117674085 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161009294 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123788229 seconds)
  done (took 7.689383889 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799713225 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157678078 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091013627 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.89143865 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139772743 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104260083 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.788392688 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136550375 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235839417 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766098515 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136125466 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123545234 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231775328 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238120787 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960877535 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31506671 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.679120645 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103515974 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152390982 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155463854 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120442758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138175199 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131395447 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.46179784 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096190259 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113611357 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096137095 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122984659 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161252712 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127016497 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114960143 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181863389 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250299213 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209314455 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117425789 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090628359 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112751783 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171189295 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270693758 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215617317 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181820523 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088030649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1126804 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100406158 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13340567 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109082485 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166723239 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175689182 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195156225 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092835912 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123111704 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124043959 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100869448 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189430006 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100684132 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319859808 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313845273 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112430789 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099543767 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129852687 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267257836 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123202888 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22506554 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117341855 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215955146 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111705138 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785949159 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192822777 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091171949 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119404301 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098212472 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119609485 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124770197 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171874621 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395865076 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125093246 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094827306 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113753157 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209074497 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126772049 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1127025 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163358107 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094804795 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123191985 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126018567 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123184188 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.1709444 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.237152215 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125413156 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120593493 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094549829 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126575515 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116460432 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213513742 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223223677 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16553341 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213774849 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123919557 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.166022692 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191477132 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100085844 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19640117 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09966566 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127282255 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125248056 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219907368 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14607213 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102301957 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116892055 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122364575 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151103853 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106030629 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120435571 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.1729339 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.511791359 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171497819 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109775618 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107578187 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121138628 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163695737 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122117473 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260616276 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100891339 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192425083 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099073884 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110862563 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121727452 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167795089 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124692418 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100830219 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12521736 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121385436 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23845614 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22273633 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102184544 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248097497 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186502703 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120578288 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17556895 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121711704 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171772506 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124345299 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10041169 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118397281 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799790985 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101472326 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123174209 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117373082 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201404931 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090736178 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125687131 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126259058 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087862587 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808575548 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128792318 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099427116 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126382734 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120371952 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121630194 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097387126 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118124875 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169973198 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237517908 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124639533 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098463822 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.128989188 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168114784 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123947756 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.134366367 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.133560076 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110990278 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131256603 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121977691 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109700234 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199127821 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164449312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227539334 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57127514 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11401507 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126309161 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23088081 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091165688 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291429972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120352853 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206786319 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189840282 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101107057 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311696852 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190085787 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202556871 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107189345 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197330767 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088363374 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11923894 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166790948 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113166089 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096581246 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185304435 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105079245 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12510699 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960829539 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090671629 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249409743 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089141245 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171554335 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118434217 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123016346 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299313775 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090970419 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130324832 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165020018 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117425484 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125849135 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698389071 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12720571 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122893357 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097832075 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225019713 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.1652946 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122104341 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121391682 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099108219 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187827282 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210302993 seconds)
  done (took 44.61726244 seconds)
done (took 60.054769405 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279702741 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21722822 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.25978606 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169547822 seconds)
  done (took 1.879871443 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172396354 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149759332 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12140525 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109711701 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157917099 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091519201 seconds)
  done (took 1.680503679 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.356286064 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272277857 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241127531 seconds)
  done (took 1.751160209 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289450722 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252745828 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358701153 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42188824 seconds)
  done (took 2.324127906 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210883813 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133109429 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113039663 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104365876 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.20085294 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252054453 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141878399 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204071223 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123757049 seconds)
  done (took 2.410371851 seconds)
done (took 10.929503458 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.138483052 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.305875979 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228491096 seconds)
    (4/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.202860177 seconds)
    (5/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.108958238 seconds)
    (6/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.104062457 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.115603884 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.185969474 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128019817 seconds)
    (10/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.229963845 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.15605449 seconds)
    (12/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.214888159 seconds)
    (13/286) benchmarking ("sort", Int8, false)...
    done (took 0.199342376 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095061756 seconds)
    (15/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122978267 seconds)
    (16/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.249715542 seconds)
    (17/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.220866865 seconds)
    (18/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.221156336 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.140191808 seconds)
    (20/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.198907219 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124610223 seconds)
    (22/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113000265 seconds)
    (23/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115370461 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175737101 seconds)
    (25/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.106420706 seconds)
    (26/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.107251888 seconds)
    (27/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.141246215 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.231997434 seconds)
    (29/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.220497253 seconds)
    (30/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099998537 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.123899508 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099485053 seconds)
    (33/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125351315 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.224516778 seconds)
    (35/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.192669467 seconds)
    (36/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.103619307 seconds)
    (37/286) benchmarking ("sort", Float64, false)...
    done (took 0.178788827 seconds)
    (38/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.155667446 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087809277 seconds)
    (40/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109162153 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112583355 seconds)
    (42/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.089955269 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088697101 seconds)
    (44/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089922814 seconds)
    (45/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096783482 seconds)
    (46/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184886061 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094172845 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109617555 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133220997 seconds)
    (50/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098435729 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183532263 seconds)
    (52/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119062455 seconds)
    (53/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097053105 seconds)
    (54/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.217350686 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112203958 seconds)
    (56/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09822263 seconds)
    (57/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114734701 seconds)
    (58/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.17556022 seconds)
    (59/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097400935 seconds)
    (60/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.175312668 seconds)
    (61/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176078413 seconds)
    (62/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103565525 seconds)
    (63/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114956138 seconds)
    (64/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.08988251 seconds)
    (65/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.142860643 seconds)
    (66/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093914398 seconds)
    (67/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194315803 seconds)
    (68/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.21461905 seconds)
    (69/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19592381 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102247279 seconds)
    (71/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.200986228 seconds)
    (72/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.123354105 seconds)
    (73/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.123948582 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 0.117365938 seconds)
    (75/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.101589687 seconds)
    (76/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.106480764 seconds)
    (77/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.194036982 seconds)
    (78/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074265947 seconds)
    (79/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09646316 seconds)
    (80/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.148895404 seconds)
    (81/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111759408 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066991909 seconds)
    (83/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.176193176 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11562149 seconds)
    (85/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179141202 seconds)
    (86/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126964984 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.191969868 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082420934 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.199727375 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087027973 seconds)
    (91/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.12287686 seconds)
    (92/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092620086 seconds)
    (93/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109326385 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.173414703 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095497273 seconds)
    (96/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119377344 seconds)
    (97/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.118920141 seconds)
    (98/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167974376 seconds)
    (99/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11517072 seconds)
    (100/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232476227 seconds)
    (101/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095872503 seconds)
    (102/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121470303 seconds)
    (103/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.129267814 seconds)
    (104/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111592003 seconds)
    (105/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.22875718 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067013885 seconds)
    (107/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.10258449 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 0.182613813 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096074674 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171917486 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09472563 seconds)
    (112/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159750111 seconds)
    (113/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118190132 seconds)
    (114/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092658771 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132825044 seconds)
    (116/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.152348019 seconds)
    (117/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113873256 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066909536 seconds)
    (119/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137209124 seconds)
    (120/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087712946 seconds)
    (121/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169883648 seconds)
    (122/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.144639897 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.151366284 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11856091 seconds)
    (125/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078462036 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110951253 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186667156 seconds)
    (128/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096108426 seconds)
    (129/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120522748 seconds)
    (130/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066488334 seconds)
    (131/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066899657 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118183238 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086133392 seconds)
    (134/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139400006 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.13706196 seconds)
    (136/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098622228 seconds)
    (137/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.191851519 seconds)
    (138/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135953983 seconds)
    (139/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067576783 seconds)
    (140/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067024333 seconds)
    (141/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120404762 seconds)
    (142/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117615718 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093831151 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111656955 seconds)
    (145/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084240743 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118998844 seconds)
    (147/286) benchmarking ("sort", Int8, true)...
    done (took 0.219952702 seconds)
    (148/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088090266 seconds)
    (149/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075602727 seconds)
    (150/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091084032 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086449254 seconds)
    (152/286) benchmarking ("sort", Float32, false)...
    done (took 0.175027033 seconds)
    (153/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137130718 seconds)
    (154/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150644358 seconds)
    (155/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066221333 seconds)
    (156/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067289336 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110349218 seconds)
    (158/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113786092 seconds)
    (159/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.092930127 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068553521 seconds)
    (161/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090284125 seconds)
    (162/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230771915 seconds)
    (163/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076366881 seconds)
    (164/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095061011 seconds)
    (165/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192660777 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118164214 seconds)
    (167/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103172622 seconds)
    (168/286) benchmarking ("sort", BigInt, false)...
    done (took 0.245227042 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096265174 seconds)
    (170/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125050796 seconds)
    (171/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.11556268 seconds)
    (172/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090553266 seconds)
    (173/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086857111 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09086987 seconds)
    (175/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113809381 seconds)
    (176/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.144632542 seconds)
    (177/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093213644 seconds)
    (178/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092168805 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067658913 seconds)
    (180/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17472168 seconds)
    (181/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.151593844 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.221068851 seconds)
    (183/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.155403288 seconds)
    (184/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121154395 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085645824 seconds)
    (186/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115107192 seconds)
    (187/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093278441 seconds)
    (188/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109919631 seconds)
    (189/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068291329 seconds)
    (190/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111799067 seconds)
    (191/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076501148 seconds)
    (192/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.126492614 seconds)
    (193/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067533767 seconds)
    (194/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.162201383 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097289615 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118800768 seconds)
    (197/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095387215 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110906104 seconds)
    (199/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090850797 seconds)
    (200/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.104268526 seconds)
    (201/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090750223 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067394191 seconds)
    (203/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090575186 seconds)
    (204/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169031499 seconds)
    (205/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075793146 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086889543 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118709613 seconds)
    (208/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164826643 seconds)
    (209/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067724971 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088766758 seconds)
    (211/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.142622091 seconds)
    (212/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121229183 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085457996 seconds)
    (214/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118419561 seconds)
    (215/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067642249 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.327187314 seconds)
    (217/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118944379 seconds)
    (218/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158792221 seconds)
    (219/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068019699 seconds)
    (220/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.114489135 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097522807 seconds)
    (222/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067337567 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110922886 seconds)
    (224/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076164322 seconds)
    (225/286) benchmarking ("sort", Float64, true)...
    done (took 0.232848303 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.092344439 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068889958 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118156224 seconds)
    (229/286) benchmarking ("sort", Float32, true)...
    done (took 0.230443422 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068933773 seconds)
    (231/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067864604 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.092898675 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087709309 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136838684 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068334959 seconds)
    (236/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.135746887 seconds)
    (237/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095245323 seconds)
    (238/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118697556 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067559724 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110377844 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088628224 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138014905 seconds)
    (243/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067831863 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111255734 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094274588 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110996028 seconds)
    (247/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06877184 seconds)
    (248/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158717566 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095811956 seconds)
    (250/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141619033 seconds)
    (251/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078523063 seconds)
    (252/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093432947 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067172291 seconds)
    (254/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119617279 seconds)
    (255/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08971604 seconds)
    (256/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112437657 seconds)
    (257/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06900667 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113041496 seconds)
    (259/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.114425537 seconds)
    (260/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174079086 seconds)
    (261/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068523733 seconds)
    (262/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127789461 seconds)
    (263/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.069080136 seconds)
    (264/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116802868 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086714654 seconds)
    (266/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094118521 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096183064 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091000658 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087709504 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109889961 seconds)
    (271/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111003992 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109557472 seconds)
    (273/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159289223 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119436359 seconds)
    (275/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068277296 seconds)
    (276/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117413494 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09284518 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111391213 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08729984 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.091225121 seconds)
    (281/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100763482 seconds)
    (282/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113393873 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09297867 seconds)
    (284/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11344165 seconds)
    (285/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067518837 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.093960834 seconds)
  done (took 36.473012082 seconds)
done (took 37.357091349 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099997786 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149882679 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096482589 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138425734 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125433333 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092019165 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119784461 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098293122 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124034755 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127115471 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098506999 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094109466 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097160109 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122055935 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097646257 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139717658 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12723037 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094571528 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119632962 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086637192 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119887509 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087165797 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112958517 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070834388 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12273921 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094263917 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117574938 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121519759 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086903916 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112056625 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090224787 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118959438 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086895289 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125714884 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09435801 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120460104 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098348743 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121029978 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08920961 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112551045 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120010545 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087797746 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119116434 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09585523 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116924048 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092954861 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119473746 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100432306 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14001586 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117054537 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095257603 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120883578 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096249113 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118925877 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093750957 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119990147 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092123443 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142707395 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120420662 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093050341 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119068958 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095730565 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117284069 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095747829 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120514661 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122282757 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099395435 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116787286 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097751475 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117255552 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086934831 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120227356 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091093302 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111499274 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09690947 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12301042 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086612778 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117514706 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11902167 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092892909 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111349504 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089715634 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113440976 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093590073 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113879296 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070144795 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.09036733 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117967177 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111204106 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096477264 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117085023 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094126418 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113120083 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099195952 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110832175 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092400765 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.1120668 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087735859 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114020573 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091162622 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112093989 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089783728 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120954499 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089592092 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117584283 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124340845 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087445681 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118750289 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086702433 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111203163 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102451145 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122044944 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087585646 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11752089 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086758334 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119806001 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0871062 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111822979 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087716331 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112152501 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093918149 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111576986 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09024647 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119479645 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126832903 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086738902 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115261739 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090360476 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111999868 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093180269 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112621052 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087306098 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11368791 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078019039 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11509591 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087152577 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120480234 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090843275 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119998968 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089078219 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12116523 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091660329 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118095947 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093559423 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11214112 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074339854 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116982296 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090649597 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113440725 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0879556 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114251608 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08725155 seconds)
done (took 17.051053391 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088216965 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185515503 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151644954 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14302902 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108140733 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112096102 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123560842 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118730908 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115110179 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144032034 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11145389 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132759197 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149451189 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086978905 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112557927 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091958404 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114093618 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102670311 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146612671 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133843451 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166097284 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087413605 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147523046 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136293363 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121647519 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105650713 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112794907 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091999696 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116650909 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112580508 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132817077 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091149896 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113321832 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134483946 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105240536 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120400142 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087563634 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120131808 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087403005 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112656512 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142150889 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133343469 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093471093 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118617284 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091978183 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114250724 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089586354 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12212125 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09842755 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117237664 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12732257 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157159409 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090975853 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12325983 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08756973 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124032824 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122359848 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090051189 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11344436 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090614129 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112858789 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091635173 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127976205 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143770777 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091313948 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12235557 seconds)
  done (took 8.652557873 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105774667 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141437513 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10583543 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131994439 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112418581 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089197652 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113706288 seconds)
  done (took 1.745961492 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088659118 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13538075 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11117303 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136239477 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133463489 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.113089048 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12463492 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089301306 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133036549 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089652289 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135360914 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15164203 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091384448 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12184261 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138323395 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088881657 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13897115 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088551305 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117492477 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112363727 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117951337 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136066861 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091231934 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115209745 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10354288 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11500676 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163872276 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094648444 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115717519 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092326829 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113801176 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152172199 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103241758 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126144736 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089524741 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129111741 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.131305513 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086819505 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127004729 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094241623 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128942113 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090725086 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115416226 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088103974 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119572546 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099409851 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119066573 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09023223 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118179245 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135190402 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089352069 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128922398 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.108623537 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119935672 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090966964 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121052471 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098411627 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114854121 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134290481 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089903596 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132364522 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1064388 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128865738 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131773958 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091853935 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.1282675 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103667293 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122450352 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091405866 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119010827 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105708285 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112953523 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091650401 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125184668 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116938325 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113239361 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138603121 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090723923 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125499632 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089167414 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115263029 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089632847 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137545901 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119669675 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089342462 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119311343 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092729979 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115666088 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088554249 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118514968 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087927546 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115903699 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092635883 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116079839 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092353991 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131834606 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116369591 seconds)
  done (took 11.89432832 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089831256 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116144101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092376465 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115338218 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090622274 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116104008 seconds)
  done (took 1.574316877 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115066138 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117925686 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105334041 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122078635 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15676912 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103591404 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130818005 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125623786 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108190808 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129126995 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130560546 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105214824 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136256274 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121954817 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104256821 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121493083 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104237635 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125539537 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128247084 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097491388 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13780289 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122673072 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097127916 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132607793 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119042954 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095391527 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1269135 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103546879 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127951447 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125182051 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096830589 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118925095 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096318195 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125955732 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130846533 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096955244 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121593359 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119556599 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100723978 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121800612 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104746805 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123892209 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130234911 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094487178 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125474104 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122910523 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094181799 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126327071 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.13080962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094881047 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120258661 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096781817 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118897979 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093500498 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122000512 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124645254 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095156335 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130941004 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122064848 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096365533 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119363323 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094547277 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124957153 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119312034 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104663802 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119735902 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096202209 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123417352 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122961041 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096620941 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120571359 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093042355 seconds)
  done (took 9.269788901 seconds)
done (took 34.085090797 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693445912 seconds)
  done (took 1.648386492 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.837173794 seconds)
  done (took 1.793624457 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.055582477 seconds)
  done (took 19.040653466 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498972673 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.591211096 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.002112287 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179762982 seconds)
  done (took 3.228909876 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.963005736 seconds)
  done (took 1.939677718 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284209678 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236338729 seconds)
  done (took 1.484426308 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.785936544 seconds)
  done (took 1.760467238 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.37479265 seconds)
  done (took 2.341868822 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327232828 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185406801 seconds)
  done (took 1.489404329 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553398186 seconds)
  done (took 1.531046952 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.592522178 seconds)
  done (took 11.574195827 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26741427 seconds)
  done (took 1.255190765 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302431689 seconds)
  done (took 1.28059434 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.66307284 seconds)
  done (took 4.647299313 seconds)
done (took 55.983579651 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09905196 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128686376 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102914089 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125360962 seconds)
  done (took 1.434363015 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100927034 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.1222054 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10133326 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12181474 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128323572 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096596088 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123916913 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101039472 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121864729 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09714007 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121373942 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120852669 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099799834 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123916454 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094071726 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125194748 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09978139 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121807562 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12489987 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096717732 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120167196 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098143278 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125933545 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093843621 seconds)
  done (took 3.668632381 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100450266 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119864032 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097316829 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120081284 seconds)
  done (took 1.42712722 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100776069 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131716496 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105886601 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12624852 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131951813 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10569269 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118470444 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09230584 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120842623 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099678536 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117448785 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.11430676 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132200132 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126213372 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101676696 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114913601 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09100875 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132267111 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125956601 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101260207 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119182735 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099649254 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116509514 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108445341 seconds)
  done (took 3.719935256 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170794485 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128385715 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140386769 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095955931 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161858361 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142059561 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088310341 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141718583 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088900789 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132169633 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118904329 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134322466 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131195794 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08797812 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115057991 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088079986 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130110766 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129360103 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091526012 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128689134 seconds)
  done (took 3.438718417 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098638044 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118870497 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088302885 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116965725 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099578536 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122174999 seconds)
  done (took 1.634462306 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09087457 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115331797 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09043243 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115249627 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094944132 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115611418 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088799065 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115873933 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089541475 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115491344 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089699588 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114856956 seconds)
  done (took 2.22736182 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508905656 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122540888 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120881944 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089852351 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122459023 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090457288 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131091425 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092645555 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141799626 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089548278 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116805226 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091536229 seconds)
  done (took 2.70811616 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234748366 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126457999 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284173226 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373808608 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157597308 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178814011 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283071569 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160737101 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.227290313 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168863233 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203417483 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225174941 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152954396 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192432561 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14032326 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119796076 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233586539 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250059999 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15554052 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210334517 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23046395 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170251714 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181771344 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152620817 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139667812 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173203308 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095640311 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13186428 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23607677 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178028119 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217577815 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163354122 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147884423 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210828642 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257476237 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22433574 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285848017 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134759446 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.152193597 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169822135 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263690286 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139572179 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205578328 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156525137 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133482452 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192626479 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192170953 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178263432 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153782242 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113092063 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225341463 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240522365 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195080565 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139963224 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3051665 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149904089 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175641217 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221720631 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252814692 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200601747 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188826992 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121799789 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189566558 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219483164 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187704928 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.176112662 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182755145 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148976791 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227700035 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190139674 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16651763 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223022933 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186604363 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142224102 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171422332 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172486282 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172716924 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259633438 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214082376 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096378108 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170090674 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152037921 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13527782 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195945651 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099426958 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242424759 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145709414 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136290187 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243357218 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159203593 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16249763 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205806984 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232415188 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149987864 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084295375 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155663161 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156289932 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194790031 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141979008 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158698118 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164338674 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13193725 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186609613 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124979227 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18578643 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117812536 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175051774 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185993679 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127891954 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161439112 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125262136 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151509717 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178481365 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227553336 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143258635 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106673813 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238542403 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180486173 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15240826 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178923893 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203048762 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146003237 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151817826 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228304364 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218685429 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142306969 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203421562 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15812385 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136942876 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133358237 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184070907 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155417669 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163139073 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135163765 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184514285 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204425035 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127495517 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139818344 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195762439 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135425418 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133118806 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165370597 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149267006 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113593402 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154400162 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154542393 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182678837 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207233636 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154976383 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166763239 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154154826 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256800282 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116110967 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152630333 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15046511 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093072525 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.222857809 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201139762 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132628739 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207311756 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198917341 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205229443 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170808998 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136399247 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179411352 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131484153 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094621128 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22314542 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169384559 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162445791 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198844224 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226875788 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183234502 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1858508 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174574769 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202305996 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139180083 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158095922 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138932618 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16299385 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172949488 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124828995 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145832034 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108015733 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149614113 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145141184 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135162131 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198734958 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17060411 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218261305 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161004897 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151512614 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183068339 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10252062 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203738967 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180272469 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149667673 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201713534 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22338049 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18760511 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144255583 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204373209 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121522883 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098236495 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143976483 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169796203 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135769823 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135983427 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165151506 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18289777 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180749588 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177999187 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241498494 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173613569 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191481981 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123100203 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169601841 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187360408 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180060667 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.192606826 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144061652 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150921277 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180534467 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15882872 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228267274 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1982301 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177692755 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206548193 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153095277 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132897102 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151632317 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196039171 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156108782 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177878195 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149085221 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143124002 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161936975 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105962083 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190307398 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186554522 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164438015 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188295381 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150691904 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215091275 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100811868 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163942072 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162392269 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166158974 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111033908 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175746275 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203713691 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150118275 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167615979 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21867529 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104114738 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311776246 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241951551 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223019448 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11029991 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156675989 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162585776 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164743472 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171639502 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179775617 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160880423 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217969437 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159301727 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108691812 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143125135 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151062812 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151890027 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104072663 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14973518 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.206142985 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112313062 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214949872 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165279366 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160087203 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175324509 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123256227 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146998977 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153449252 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215588251 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215901885 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24103206 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.124731103 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178375588 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236613722 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127048074 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104756845 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136096028 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181450207 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137100132 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197103364 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18865345 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23337779 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183528674 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224177766 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111704647 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121976924 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159324246 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175861403 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235610856 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152551858 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161082665 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203219036 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148621213 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104699314 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178639094 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32232428 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146434516 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198104978 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079177701 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307705519 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101377478 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134013865 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163852352 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209341689 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138151997 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.19183407 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17261372 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171714295 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165193684 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151328859 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192067565 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244854436 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201063925 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21135915 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105224229 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156702093 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175135459 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221715713 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159990276 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140763592 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206672658 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197822683 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224091428 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114074021 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19895166 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170118122 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158727871 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189044859 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135697225 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209955367 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137791288 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196033057 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15468058 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146021315 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177973917 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.21826471 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141745145 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188996505 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185461137 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137072964 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134702666 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172145364 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181596607 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161993486 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098974111 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212595463 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096942462 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226384256 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262788191 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107563043 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157498309 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148549521 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136725407 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156732747 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160132149 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141426009 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138641394 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230819973 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107655909 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220319852 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205373339 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171771145 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202925711 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117724027 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694615372 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132826028 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195955456 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161471441 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238494443 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151506813 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175076342 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160632473 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16988912 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197151555 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16249765 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23089024 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224053388 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181807506 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13338403 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161027484 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166640077 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145509862 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123343038 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197491307 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132406156 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155866604 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.209364656 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17370781 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135672876 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112764707 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229151319 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161216836 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18673879 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181712055 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138888143 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174988497 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189853403 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135875558 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181196078 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241035863 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143257815 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123581778 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134507146 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158369778 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266468975 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125438135 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208062695 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18687659 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160047399 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169877257 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147740867 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225543627 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159290976 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188235158 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148416333 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160556923 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157980248 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13912435 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102227238 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157452177 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16923939 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151516761 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161478224 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167765778 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196476808 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12466095 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117377373 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31987247 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194729909 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24825185 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105609766 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137585631 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163770003 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153168729 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179402624 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179350366 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137609976 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137319604 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138161841 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13220104 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139161697 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130048449 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224991651 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165574762 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209866092 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138283186 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278255581 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111963088 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157683747 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117360079 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103798881 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150937886 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148022944 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160045532 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220901811 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239705851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148583045 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135527943 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151694792 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098083239 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13814401 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164380818 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166456952 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180739273 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145920001 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080253918 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158095027 seconds)
  done (took 83.980701742 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173434093 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147092599 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166408081 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223665937 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190609977 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291500327 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22495249 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27459201 seconds)
  done (took 2.776818038 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096076708 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.150238209 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158247645 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134293079 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091881114 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120750576 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345940627 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13363273 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117371617 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121694237 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175840161 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094951951 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.552944896 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091222461 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120324914 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108673875 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092568652 seconds)
  done (took 3.788862895 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.327159436 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.515210036 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.284046983 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197888411 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161291524 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.119242687 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.736863865 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095023765 seconds)
  done (took 12.524390437 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115648961 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13810746 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124285831 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154471084 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142434022 seconds)
  done (took 1.772453683 seconds)
done (took 126.082132913 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098140197 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129194536 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097914972 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131838075 seconds)
  done (took 1.53453867 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095007679 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070451045 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101481918 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075069326 seconds)
  done (took 1.428389897 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191028258 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170001945 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409959011 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071367136 seconds)
  done (took 1.602973391 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115195355 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133313114 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105162503 seconds)
  done (took 1.453063057 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107257696 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130984509 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103661068 seconds)
  done (took 1.438376783 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105798782 seconds)
  done (took 1.201388102 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107793737 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138845405 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109004555 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13796025 seconds)
  done (took 1.588816554 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098599932 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128087299 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10966085 seconds)
  done (took 1.430704354 seconds)
done (took 13.128329504 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104041995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423261632 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385004563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146117176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723834936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380310481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034402809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147461307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166513032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093647525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140293218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673569762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.0613721 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378123156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018889391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376583828 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678301972 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122493447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120031184 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094540326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018104958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091724396 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123127091 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092200919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.712353842 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42569608 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095694247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3753691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092934184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127495373 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382748726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123843069 seconds)
  done (took 17.014420542 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095460933 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176869923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09812303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138063654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124296792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094871649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125051082 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09319129 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181052325 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123672989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111992622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121516729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126390781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095093579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14343381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09266818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126186714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09270866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122671041 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122597067 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112439239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12126394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094639785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122076382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093588599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13712941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094800429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122169438 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121805587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09891437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127993388 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09464014 seconds)
  done (took 4.841801346 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140808985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185062547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129469632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127201872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169363774 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125049749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200294043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118144168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184016137 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123853298 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140898591 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092697291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15829755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095194334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144538492 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121223397 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097639346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122579487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093350584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124656895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140756846 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093408198 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123121063 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093410114 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123399578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108224933 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12529535 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121001146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093631273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12779819 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100401651 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124752701 seconds)
  done (took 5.170773661 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0975972 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126581075 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109678199 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139483432 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095690759 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126535337 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097244708 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125214896 seconds)
  done (took 2.015687542 seconds)
done (took 30.140447076 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111587028 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127906311 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107775184 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135406915 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10332675 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133159002 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091826324 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134564637 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135116757 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102601777 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138593107 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092225836 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124021467 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092728251 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136536283 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097573973 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133885746 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102482425 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134863771 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132606874 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095770153 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134529394 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103039383 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133861784 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10392381 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134168666 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138390887 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100352912 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122694632 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094133927 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125146548 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104013289 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124477045 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105192647 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127348704 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097652279 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.1245562 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094306114 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133573996 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133765689 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100371507 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133164156 seconds)
  done (took 6.024791037 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108305921 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140519167 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10526518 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081572118 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117380243 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080457355 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138663602 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.0791636 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110487931 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108116861 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074310051 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106838234 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07871342 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102343763 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077462983 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075246289 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108806728 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075957883 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076294994 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106538439 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080419261 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072371415 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109119048 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078722284 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074879242 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110993898 seconds)
  done (took 3.581392957 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100515561 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135994737 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113835935 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185779854 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161263928 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100116304 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133051611 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.111937227 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139033134 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120690334 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096685052 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150596406 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110191148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130847553 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092166956 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137613574 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136633545 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094302122 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128292236 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113001935 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139172305 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10287071 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142361206 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133120176 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09283985 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123969852 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097410059 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135797038 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097906185 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132127747 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097337763 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126354017 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124637764 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105409901 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127023905 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09485705 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14304748 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10341103 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131701465 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093070213 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130583374 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122864626 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114947609 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162969395 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092110683 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130071012 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095925419 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132879416 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121791651 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111727061 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132093832 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092027554 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12632172 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092276445 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122878819 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107163853 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124524277 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09427621 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132749394 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127848668 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106134456 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125413993 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109951434 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123581074 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100352421 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122737855 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09255952 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121756037 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115397204 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124175565 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162807373 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093696995 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124995435 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10201921 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130166678 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129175111 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094879081 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138905329 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103430968 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126374439 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103699803 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126773022 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09591072 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141680933 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09553501 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124645859 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093827999 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129683835 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125265432 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094929673 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137315756 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092636124 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12610009 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110614312 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122677846 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094247706 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129289995 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127221503 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092268017 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136137213 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099082866 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124010218 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103583769 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123298362 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097069329 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133553651 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128659849 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092174087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126801754 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099789262 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123819415 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093988466 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126662852 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094737681 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134610311 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100168159 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128271669 seconds)
  done (took 14.897721677 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231385945 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217176103 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209218122 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295215249 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137138566 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115000162 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213440913 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156601926 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125143537 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16098376 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175138888 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183222697 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170522916 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183078246 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172218023 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093320806 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143762011 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135021666 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.248770229 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260085187 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145789076 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101980402 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162786451 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161523173 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139192661 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103486002 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141428076 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135521321 seconds)
  done (took 5.840844647 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108977507 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157113217 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098848947 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145976522 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150329711 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093217496 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.13035788 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095020149 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13689096 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137073564 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093090245 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131147407 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10031141 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133164172 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124244171 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103570094 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133759117 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095122434 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127706029 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098250975 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13551844 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102558143 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127762883 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092953884 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134570827 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122806402 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086308954 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144128504 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093213199 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146917123 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122049896 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102543189 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13881393 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09467208 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124204346 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096292354 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126879484 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095149016 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126164629 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091581759 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123861873 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078552685 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12351059 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108375174 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130315157 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080576982 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131380009 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129393253 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095626071 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121465859 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09724308 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126971794 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097162612 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131788033 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096613941 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12515201 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097164589 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116988997 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100502147 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126266576 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085303656 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122037735 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099022381 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11904578 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102130378 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129128995 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092709865 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126875644 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098677516 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130482072 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095035328 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131264033 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091439502 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12718992 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095792772 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130198033 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096698564 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123705227 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09404273 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12471066 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075098354 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124795896 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074410632 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127553627 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092387789 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122871092 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095912254 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131108132 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138586699 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095716694 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133010848 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094770057 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123403232 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097423764 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114049522 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096631018 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14052927 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142604854 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094540856 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122229547 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108979558 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12665957 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093371475 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106959133 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10303224 seconds)
  done (took 13.05913506 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127975971 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155375554 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095895039 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142982033 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158200579 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159195169 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101721952 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131884832 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096150097 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143149996 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094460248 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133555132 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094956609 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139472409 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157915793 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104878558 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126259706 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108149895 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128896239 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170871707 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112508765 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143822435 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111053928 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126451044 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099458574 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142200122 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16291202 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107995816 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138212474 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143318897 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108434544 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161971517 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113887513 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129960687 seconds)
  done (took 5.513407384 seconds)
done (took 50.016046703 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.225312429 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430129772 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.202236876 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.17646895 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.255227321 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.239622812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217088186 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.201617613 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.364217017 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206411084 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.463151552 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.808591504 seconds)
done (took 58.919154944 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.319329735 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333000357 seconds)
    (2/2) benchmarking "String"...
    done (took 1.465475002 seconds)
  done (took 3.94058022 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.560851882 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.142849085 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462087243 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.202115327 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202433569 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492963935 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.925365628 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.624065359 seconds)
  done (took 28.184829877 seconds)
done (took 42.13659945 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.195213012 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.258133604 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.234267588 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181680765 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.34099892 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235688791 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.351438633 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.361038017 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.228792022 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183650732 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.225711265 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.231903598 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.215286049 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.343171556 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.219272542 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.209645308 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.285767081 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.895521928 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.631179969 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.218790646 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22695292 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.226053608 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.210322557 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.204608395 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.216776688 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.209415262 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.203615878 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.234464081 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.115255389 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209089918 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.236621746 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.493690694 seconds)
  done (took 190.967852648 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.206244434 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.492551428 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.621173979 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.274401848 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.905196488 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408016875 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.351916232 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.992244117 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.229582845 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.219525474 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.719231567 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.205468444 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.807984683 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.217214803 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.234175815 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.315245019 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.655071287 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.723949437 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.243080025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.365941731 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.218595715 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.724399508 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.612333559 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.601417799 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.245523274 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.310658951 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218660174 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.238293384 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.418326717 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.557749412 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.222054972 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.229350191 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.877777295 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.059679622 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.221599135 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219252055 seconds)
  done (took 153.298403443 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205200614 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206075534 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207236904 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.241030625 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.207151154 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.805016938 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.838769451 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.757035731 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.537850524 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.775525805 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574071961 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21201819 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30430571 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2204726 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.208688327 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.207015092 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.222926989 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226270595 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235121466 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208304646 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.835928885 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.224931973 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.391019374 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.225536928 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24219357 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599934784 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.221395044 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207036749 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242551667 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546841368 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.259960403 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206738424 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.671879616 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.966825387 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325173761 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209641398 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243599387 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207962291 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495219398 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.209109469 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.209850077 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212054526 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950465139 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.21470287 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.81168682 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208843375 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.26765537 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214537289 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.210187497 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209767849 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.103203843 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.214810411 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.064990239 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232926738 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209602604 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.211601859 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.208843141 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209750033 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.245024405 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.123779709 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311855832 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.228966267 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.213517702 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244093468 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210028301 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.588615618 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210874716 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.222446909 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.288108712 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32024201 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838657698 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216057553 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311301453 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335221432 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.21130457 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.21127907 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.210897451 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210490416 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.211372286 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324939265 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.211568056 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.668923869 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.394395966 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.229372434 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.783287195 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.316395262 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211517498 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.675023936 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216284915 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210733868 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.07956017 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317931012 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.212104733 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.212240629 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211196895 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.670243487 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.846217506 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.546122064 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.218294316 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.064066097 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219406539 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.692324233 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804465181 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.968921692 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.218856885 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32734284 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.395785293 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.231128853 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.212233036 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.777264689 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217518045 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.270911966 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212056863 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.613035949 seconds)
  done (took 370.788975075 seconds)
done (took 716.187675934 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.815059363 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.809217704 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.926510266 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.796010082 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.761001828 seconds)
  done (took 10.25051001 seconds)
done (took 11.389381354 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408881681 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408528881 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276704364 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411970666 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245903013 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426955034 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390121176 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.233945815 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318365947 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.301000805 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318755129 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.269058592 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.250550201 seconds)
  done (took 18.404126264 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538998257 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532087317 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277667209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550924032 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254222165 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549920681 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418292671 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429804414 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455354381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250459069 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227786146 seconds)
  done (took 16.630121468 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550104053 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.555805529 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282910163 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546830368 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255798925 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543789046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42197814 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.440010551 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43779435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248846079 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228441313 seconds)
  done (took 16.656569328 seconds)
done (took 52.830586481 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.225207516 seconds)
  done (took 2.370174989 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.261751037 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.428779597 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243891626 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.232004653 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.225374725 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.226681408 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.231128295 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.225161714 seconds)
  done (took 11.221338096 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.22235827 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.222757768 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222211247 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221326779 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.224546869 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.225070043 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.22187394 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.222299588 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.222486866 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.224813033 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.221600818 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.224888356 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.224866069 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225118505 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225611516 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.225689018 seconds)
  done (took 20.724229779 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.224645352 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.222245796 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.22265132 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.222125261 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.222898047 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.223197016 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.223434869 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.222556794 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222487501 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.223000769 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.224488216 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.222977624 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.223467042 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.223155883 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.223239223 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.224501976 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.223818137 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.224363743 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22869634 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.224237912 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.224084843 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.223450589 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.224073937 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.223672244 seconds)
  done (took 30.5166611 seconds)
done (took 65.975123317 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.864116764 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.950360814 seconds)
  done (took 6.961909699 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.226667365 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.227533474 seconds)
  done (took 3.603324515 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.227492811 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226558279 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.227747442 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.226878027 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.228119214 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.226736049 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.226468043 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.227865102 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.227648297 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.227663913 seconds)
  done (took 13.422172319 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.227284928 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.228360982 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.225511802 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227466222 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.227869387 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.224891251 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.228071907 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.227633982 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.227743037 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.225699871 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.228701078 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.226078405 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.228213356 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.226168416 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.228529832 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.227164388 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.22561233 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.226185384 seconds)
  done (took 23.237362353 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.229960435 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226902882 seconds)
  done (took 3.606657828 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.22574194 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225327623 seconds)
    (3/7) benchmarking "month"...
    done (took 1.225181535 seconds)
    (4/7) benchmarking "year"...
    done (took 1.226159639 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.225694129 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.22592133 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.225678721 seconds)
  done (took 9.729136495 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.230499295 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404180825 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.483667322 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.840033855 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.230418631 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.232629802 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.091643673 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232932974 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234823329 seconds)
  done (took 14.130729325 seconds)
done (took 75.83620606 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.273877764 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.242922618 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.635024185 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.244055479 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.24142774 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.525469969 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.253496897 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.356832864 seconds)
done (took 37.921209369 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.231181436 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203311875 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.08995076 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.218028931 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.298585132 seconds)
  done (took 18.962027448 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.317281654 seconds)
    (2/2) benchmarking "read"...
    done (took 1.560615647 seconds)
  done (took 5.030216665 seconds)
done (took 31.371561212 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231142554 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23150133 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.228068749 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.231258506 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.231379788 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.230890834 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.228892878 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.228035969 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.228960225 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.230815986 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230870306 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228068824 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.232239043 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.231290138 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231455438 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227544219 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228205147 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230976847 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228547947 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228616743 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228211737 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230961769 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.228980464 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229032301 seconds)
  done (took 30.669248053 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.231636755 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.231477458 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.232712402 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.232511637 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.229238196 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.231781023 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231989262 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229740325 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.232287959 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232712648 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229346672 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.230690186 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.232656442 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229700645 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232810664 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.230376882 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.231784662 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230082787 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233031068 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.230454444 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.233233186 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229974818 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.230389132 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231889204 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.230594958 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231063005 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.23296495 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.231931713 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23337976 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.231242318 seconds)
  done (took 38.098301326 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.238756681 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.242173031 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.233709179 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.233391634 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.233323922 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.233092893 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.234674457 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.234171189 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.234105167 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233931307 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.23404908 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.233966033 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.234440479 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.234955744 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.234255716 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.234712775 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.235390217 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.234454144 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.2349557 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.2347756 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234627943 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.234094318 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235325252 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.236061826 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.235276655 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234869575 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23443065 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.235895242 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.235602301 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.235120995 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.235692451 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.234875725 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.235712133 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.236926086 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235319619 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.235632728 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.240910801 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.245112101 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.236008439 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.236746465 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.235376302 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.235718788 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.236165691 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.236883475 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.235620061 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.235459991 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.236860007 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.236317026 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.236393521 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.23597694 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.236960644 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.23628769 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.237451038 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23617407 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.237293187 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237457892 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.237586875 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236537585 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.237059257 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.237107807 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.237131528 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.236400942 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236743504 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.238016389 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237898056 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.238013442 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.237615074 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23866583 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.237064917 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.238336307 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.237424016 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.237264803 seconds)
  done (took 90.160164018 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.237841104 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.236411293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.23457744 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234642172 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234867782 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238229911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23565664 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238127507 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235312839 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.238669765 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237988627 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.236119148 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235265726 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.239268584 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238682299 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235532733 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238333821 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235806639 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.239286101 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239558461 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239328504 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.236266956 seconds)
  done (took 28.374906061 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240464112 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241594816 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.236788274 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240175288 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237726331 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239811236 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.239906919 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241137002 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240952952 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237326174 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237233527 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239953992 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237448521 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237338804 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23706319 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239652521 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240810863 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238668208 seconds)
  done (took 23.464829649 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.238638478 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.238404135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.240564847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237928658 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.238497126 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23987477 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238957725 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241568811 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.24079439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.238801254 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.240735579 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24154826 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.241385613 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238575374 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241313566 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239350142 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.241326292 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238786729 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241245048 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238827995 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239524119 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241320097 seconds)
  done (took 28.439555787 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242050924 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.242337232 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.239059654 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.239572419 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.238666367 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.242599934 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.242128941 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.239087889 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.243149355 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.241340549 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239143166 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.243102981 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.24202223 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240932562 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.240348906 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240782737 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.242732405 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.242179538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244051692 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.241080755 seconds)
  done (took 25.989516093 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24358478 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244385123 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244775267 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245023208 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244991639 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.245382885 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244498902 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.244706711 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244730531 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245322576 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246644864 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24498293 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245871891 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246513807 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244892176 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244760953 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246134991 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246635998 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246339973 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245899376 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246391331 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246875289 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246050506 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245462176 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.247665696 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245778101 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246636922 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.245930704 seconds)
  done (took 36.040632225 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246398549 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244590749 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.243014488 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.242536388 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.243653169 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.243267645 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.242958316 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.243310502 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24510811 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242747316 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.245684392 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.246127665 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24533393 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.245719507 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246186326 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.246900176 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245114697 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.244192642 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245056173 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243416447 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.245487212 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246385461 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.246848072 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244637406 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244108391 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.24648707 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243911151 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245370106 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2462406 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245152262 seconds)
  done (took 38.512561891 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.26474045 seconds)
    (2/2) benchmarking "in"...
    done (took 1.265917874 seconds)
  done (took 3.697126844 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.244802161 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246966403 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.247301818 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244925381 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24461545 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247170584 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247498853 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246073402 seconds)
  done (took 11.136161123 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247878513 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.247966706 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.248275171 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.247801407 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.249155228 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.248587666 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254835784 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.269551637 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.248587257 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.249553863 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.257343188 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.256907585 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.251708819 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248719635 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.249856855 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249765432 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248811862 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.249699237 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.250506471 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.248917963 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248816455 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251976807 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25189572 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.247118662 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251028138 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.261017962 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.273973556 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.249793536 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250513883 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.253383722 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.250527205 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.248508372 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.251577465 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.251868068 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250651782 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.250620832 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258459466 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270427945 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.257638854 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272877429 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251908163 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.248511862 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.250801621 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250759782 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253233002 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250508939 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.252460296 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.249353399 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250764858 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.255534361 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.258696925 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250500097 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.250142552 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254774986 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.251910912 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257152027 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.272412577 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.256263748 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.26180297 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.2632271 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287218853 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.279264146 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253709832 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.252648708 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264417061 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278853593 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259960502 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.270938958 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.25009475 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.252784386 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.259850177 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287983233 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.281526359 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.253265434 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253773399 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.253872764 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254306671 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253640604 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260332007 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277236141 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.253824035 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254363704 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264654467 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278769091 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.253463466 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.254544542 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.254754448 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25391712 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255518782 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265008641 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.275542889 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.255996708 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.254499623 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.254003632 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.255478048 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.255646771 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.255551102 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255039238 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.252676791 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.255278601 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256212099 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258562495 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.265380134 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254946057 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257021837 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26175925 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.277827399 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255290254 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260477143 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.255043456 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255561236 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.257828513 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.2625116 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.253144131 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259430998 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.264944058 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.256350296 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.256205423 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25701252 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.256511031 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267484646 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.285393715 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256761551 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.256941376 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261048437 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.269864265 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257167325 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.259031971 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.256724812 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.255003796 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.261080123 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.257960139 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.256682298 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.256897016 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257628544 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258213652 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.254371827 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.257375521 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.257149259 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.258477827 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.257669692 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.258474046 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.257263903 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.260048621 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.258698838 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.259743265 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.263400789 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.27858718 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.259269194 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.25823326 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.256268763 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257478733 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.259419169 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.258218837 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25790833 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257543649 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.258841101 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.259361908 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258810052 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.25860292 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258456202 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.260043986 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263226238 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.259281122 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.262704793 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.258586082 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.257263601 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.258900952 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.258901278 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260043369 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.260495591 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.25857404 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.263466715 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.268983697 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.26041926 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.259881298 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262275683 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260577513 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260736588 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260499983 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.264712702 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.268778471 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.2604916 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.266697353 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.282756619 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260977017 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260764626 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.261244587 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.259884889 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261190853 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.264723277 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.270264624 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275222211 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288808854 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.261804266 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.265848008 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.262645198 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.266193616 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.264658648 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.262097066 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.262003599 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262027308 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261393849 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260965127 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.263200749 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.261404891 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.261556967 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.262820033 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.262110604 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.26230429 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26258674 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.261911412 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262751219 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.259953748 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262835826 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262774887 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.261678892 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.260385639 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.261928043 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26197644 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.263214766 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.263109352 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.268421291 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260135317 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264412519 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265008613 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.26373053 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.262252332 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.264105295 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26458407 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.262834688 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270237421 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28422185 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265192701 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269340289 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.284178642 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.262412762 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.26652758 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.264013144 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.261764935 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.267635735 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.273260085 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.26472339 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.264739535 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264678976 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263743422 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26423652 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.270075603 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.283926396 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.26387409 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.264946211 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.266095938 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.262150453 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.265293767 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.26507859 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.265580023 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267071316 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265024808 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.264971541 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26637216 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.266033598 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.265534723 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.266707857 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268751152 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.274717718 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.270803181 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.266150627 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.267914413 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26748827 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.271274704 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.26556403 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266311386 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.265906411 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279877167 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.29505548 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273702825 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.289520982 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.267617795 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27266464 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.289258758 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.270768267 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266922291 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26646293 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.266131382 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268167923 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.264547824 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267940204 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.267303371 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268410588 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.268424822 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.272489656 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.268058428 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.26663281 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.268261412 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.268218822 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.267754592 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.266774828 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.268123575 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.270469235 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27016909 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.266456624 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.267480182 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274413491 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290556272 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.269442784 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268190434 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.268336792 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.269716884 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.269630712 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.268141852 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.272678523 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.277832876 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.271560879 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.27863532 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.270613988 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279117561 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.26896938 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.272069205 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.278647027 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.267062992 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.267956907 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.269110916 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.270533774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27601569 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.292112926 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.272206287 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.275390158 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26988853 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.269320921 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.269626847 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.270047881 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270170141 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.269643569 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279004802 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290948348 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.274264212 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272728906 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.268090962 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.270979794 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.270387905 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.270226282 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273568804 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.270796382 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.271609864 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.270750174 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.271003539 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.270949361 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.272052717 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.272329194 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.268037324 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.271614783 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278772886 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.294980876 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277062051 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.27165929 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.278226047 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29324742 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278531462 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294151886 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.272162882 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.272269942 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.272787715 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.273579435 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271325675 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.272667519 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272664399 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.273203925 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.27654644 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271387005 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.273583547 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.272980126 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.27245952 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27194569 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282782399 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298866144 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.274318351 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278344276 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.270588537 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.274642573 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.277927826 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.273973041 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.271496059 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.276831036 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284413288 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282763987 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.273528159 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.274345074 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275615934 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275315065 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.273294902 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.274047147 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.274116701 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.273106301 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.273693957 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.273904854 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275943958 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.273544072 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.273358503 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275949091 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.275073894 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.285165697 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.296812738 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.275085228 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275176634 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.275920668 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.274290823 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.274553795 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.274527572 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274958979 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275492511 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.276606592 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282720721 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.282880056 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.278145708 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.275004972 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.275797738 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.275916747 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.275406394 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275579186 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.275360109 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276596262 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.27679583 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.275825666 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.275864389 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.275294016 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27601621 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.275414848 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276516762 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279167227 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.285243506 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277006465 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.274914606 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.276956733 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277565741 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.275959258 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.274794207 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.28330363 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30244688 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.288470667 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.28676927 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.282224103 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.276451744 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27981551 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286455573 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.275334798 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.279007935 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.278031032 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.278368005 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.278973971 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.281661644 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279067442 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.284343967 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.299387729 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.278073716 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286275287 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.298929233 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277697114 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.279926153 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.283232474 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.278125727 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.276902644 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.279080832 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.278992876 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285344168 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.300803581 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279912989 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280221461 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.278020475 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.281120406 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28345268 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278803776 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.280100166 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.277972328 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.279705206 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280382354 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278931457 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27741865 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.27926433 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.280044418 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.283244921 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.287919641 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.277151481 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281640086 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.279576641 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.281291483 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280333558 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278950007 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.277025411 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.278730544 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.279901245 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280457963 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28059678 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.28260538 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.279622111 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.282540048 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.282716983 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281513253 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283989229 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.293027855 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.289807674 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27935118 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.280516961 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.281219089 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.283539081 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281752348 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.282598321 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281279638 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282856209 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.282413226 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28257504 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28281285 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.285244615 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298698097 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304940964 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281790194 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.283316013 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285827589 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.281762675 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.279968129 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.282749466 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282902112 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.286119594 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.290577535 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.283409941 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288742191 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302949025 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.283793937 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.287690891 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.286705611 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.290257807 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.284891404 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282096432 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.282434227 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.288259316 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.300829502 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284145637 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294549557 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316554062 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.305094298 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.284456203 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.284301317 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282795438 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.285119111 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.28448539 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.284424221 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.284304436 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284711872 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.284658988 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.285756586 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290816344 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285302692 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.285925988 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.284679847 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.283327036 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.285865829 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.282147206 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.285073748 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.284515108 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.285681331 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.284798156 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.287064616 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284929242 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299321059 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.314001774 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.285584029 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.285304666 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.282849352 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.288338161 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.288831254 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297902547 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.294860184 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.286286467 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.286349899 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.287379818 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285914283 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.286156894 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.286467478 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.285322042 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28679923 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.284812172 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.299666303 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316103057 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.290337142 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.286532631 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288019382 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.287232937 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286503112 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286939208 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287492606 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.288681319 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.289950507 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292462133 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.286800414 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.288322474 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.291529851 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.297119635 seconds)
  done (took 758.821979199 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284878058 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284691313 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284724191 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284833871 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285413697 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284850465 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285539896 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285730079 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28490452 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285101818 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285721533 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285917474 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285419302 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285368744 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286194957 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285211361 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286536464 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286751192 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28592182 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286863312 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2858379 seconds)
  done (took 28.20201676 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.288198441 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.286226592 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286286022 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288893258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286427658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28906218 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.287708583 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288600491 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289730886 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287587942 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.289330161 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288862724 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.287399042 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.286606872 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286870542 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290350247 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.290066684 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287711152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.289743004 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287626561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289159265 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.287610074 seconds)
  done (took 29.546321415 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.289936373 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.288924942 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.290063883 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.28722115 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.290441124 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.288163482 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.291285515 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.290843909 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.290841028 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.290523989 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.289674981 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.291947937 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.298884318 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.296927928 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.292267986 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.291451866 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.436040937 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.291837719 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.290270233 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.290815298 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.289595798 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.2970193 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.31171051 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.289372088 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.290379833 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.292355759 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.29299602 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.291659125 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.291913114 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.293952931 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.297263162 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.292357055 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.292042065 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.293233644 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.29134302 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.293784957 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.29715881 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.293411591 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.289020899 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.292596459 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303282433 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.3153123 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.292071639 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.299149374 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.316182254 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.292939388 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.297682044 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.302675345 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.291383453 seconds)
  done (took 64.760518848 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.293190393 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.293719186 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.291640299 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.293360979 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.292747507 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.293666397 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.294256966 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.293507165 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.291435902 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.291077272 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.293959532 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.291970497 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.292716944 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.293102655 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.294242252 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292348773 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.292147386 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29199333 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.292656616 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291052544 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.293446677 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293415595 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.295327031 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.292038098 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294650039 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.291674473 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291802114 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.294751145 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.292398911 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.292530337 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.295133551 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29524683 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.294726711 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.292251725 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.292739579 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.296019026 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.295399552 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.292138072 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.296425147 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.292783408 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.296866201 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29646605 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.296438989 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.297002993 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.293439464 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.294173291 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293282883 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.294612548 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.293438446 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.296415985 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.29558571 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.294372518 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.297827392 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.293831123 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.297093368 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.297007256 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.294396737 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.295349196 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.298557103 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.296645772 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.29459249 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.296735171 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.295310342 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.297442215 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.295757549 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.294596749 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.294429239 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.29713817 seconds)
  done (took 89.220913024 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297080766 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.297475169 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297417942 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297560873 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297524295 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.297241179 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296894429 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.298418176 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297468835 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29747983 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298139263 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.296741487 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.297432409 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.298323537 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.298359472 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297491056 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.297872911 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298517311 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297707539 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298032985 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.298565648 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.2977651 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.297790918 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297394289 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298841093 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298490402 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297663645 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297723827 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298487409 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298479614 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299043391 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.298500987 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299260848 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.298046225 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.299546635 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.298921575 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299792105 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298800813 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.298730686 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.299260926 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.299427048 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298874147 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299123388 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.299853513 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299236068 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.299342661 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.300415145 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.300708347 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.3001899 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30037543 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.300316062 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300304536 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299968039 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300889553 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299926501 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.300804618 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300826557 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300493368 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30075343 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301108624 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301908862 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.300581728 seconds)
  done (took 81.745935834 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301707277 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302406109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.298193236 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298525772 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.302035482 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298899546 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302340178 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.302474952 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302110154 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.301656258 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302349404 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299438398 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299372919 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302326643 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29973431 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299097792 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300381734 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299473711 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302905631 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.299647632 seconds)
  done (took 27.233467282 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.300246571 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302702349 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299910521 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301173425 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.303332739 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300747842 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.30321041 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303581379 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300594073 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303382834 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303247579 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302328073 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300171884 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301400234 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303759626 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300426055 seconds)
  done (took 22.050083916 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.30200783 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.305086773 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.304263548 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.304024346 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.302091759 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.300799067 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.304420127 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.301053421 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.301153698 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30514395 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.303897997 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.304346987 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.303857022 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.303542825 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.300288636 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.304243874 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.302607435 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.302955479 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.304966091 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304919601 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.303019849 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.302013149 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.305649227 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.305248787 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.303095319 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.30319076 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.303013468 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.301919169 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.303251882 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.305674137 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.302522287 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.303202916 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.302614775 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.303796666 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304886923 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.303495662 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.3067796 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.305291723 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.305997423 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.307477675 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.305496208 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.303414672 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.306903824 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.305628941 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.303975607 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.306257809 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.302850948 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.304553975 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.303924724 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303280725 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.306196361 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305964603 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.306664812 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.307261223 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.306935357 seconds)
  done (took 72.94859008 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30678645 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306382518 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.304074102 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.307442913 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307101351 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.304225146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306950013 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306327242 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305671155 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.306451973 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305295447 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309223187 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304914245 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307585109 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305626919 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307282936 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.305356622 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305115622 seconds)
  done (took 24.734703431 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305658354 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305764108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.308946478 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.305751858 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.306170797 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309280333 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306613022 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.308202367 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309241929 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.306418966 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306241676 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.30937361 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309128846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.309912005 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307355388 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307560138 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.311759944 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309883455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.307426463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30615146 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309595408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309709319 seconds)
  done (took 30.000452797 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.308517169 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.309251107 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.309045296 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.32580837 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.330602375 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.332696875 seconds)
  done (took 9.141027101 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317306927 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310319477 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307579654 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311040106 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309780969 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307900801 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307874467 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308026135 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310225322 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308197355 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308074879 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311032039 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310587993 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309259058 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310547213 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310499639 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30827163 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308102515 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309284504 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31098449 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309017049 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310996675 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308028988 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307603088 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3087581 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30916492 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311485117 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308246107 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308472382 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311829253 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312147256 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308931751 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311503075 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309491612 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31224347 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312631429 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309292982 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313659709 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312945274 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310272426 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312696359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311565442 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312237769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309717396 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31319422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308473974 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310003244 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309421762 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310563231 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312494784 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312660568 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309863053 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31351702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312486299 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312359794 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315000923 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310301813 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310358785 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313581964 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310138022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311141232 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313178294 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311455966 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311013045 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313238498 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311300986 seconds)
  done (took 87.756033785 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311311394 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311161368 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311916181 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312449514 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311989285 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311829821 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311599101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310666626 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311858786 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311668266 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31452225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312895884 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312295981 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312738775 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313196563 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311440908 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311930625 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312797786 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312455821 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314662458 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312577522 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313520478 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31270172 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312623366 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313580559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314614095 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3120694 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313377034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312280456 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312662485 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313114974 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313097395 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312603553 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313685079 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312675533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313129854 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313518855 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312884126 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31316929 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317813526 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313567036 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316810171 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314033824 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31392427 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314478049 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313573628 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31441673 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313691741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314396445 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314237356 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314305506 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31475018 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314702089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314526554 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314498177 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314985307 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313578283 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315334025 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316137179 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316974439 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316079146 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316217181 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319086135 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31617213 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314733631 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314212271 seconds)
  done (took 87.932906859 seconds)
done (took 1769.827720194 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.475961946 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.442700295 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.315319194 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.384225149 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.315398345 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.342318057 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.31540953 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.317173729 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.316142739 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.315429634 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.316788219 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.52154399 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.330380369 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.317252906 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.316078365 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.412910992 seconds)
  done (took 42.989382503 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.347720799 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.323151781 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.448827583 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.342898301 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.345704567 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.529536884 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.38244655 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.321357439 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.517993001 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.369612431 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.093671688 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.346685095 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.322691207 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.57970105 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.34190443 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.52950314 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.604033146 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.099848062 seconds)
  done (took 31.081799519 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.841855686 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.354237115 seconds)
  done (took 9.431658094 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341748451 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.323225829 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3224711 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.322103547 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.314187824 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.314635094 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.320686051 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.31403903 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.579441017 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.464773631 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323150398 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329105702 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.344979075 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.322674085 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.320553782 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359497244 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.489826307 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.319769246 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.320631847 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.328130075 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.32355952 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.414871516 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.368010541 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.320950095 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.46690358 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.664739903 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.331088543 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.330052988 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.469441709 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.321936588 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.322481354 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.321178234 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.323524964 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.954669375 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.877377059 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.349257563 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.34934193 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.332658032 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.320730337 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.484654707 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.324225745 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.32975386 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.316641763 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.886535541 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.461491936 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.451923178 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.735893854 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.345834195 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.323856345 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.389237567 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.324495639 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323911633 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.355268889 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.13127668 seconds)
  done (took 112.668131936 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.335701231 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.707319462 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487760337 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.338983887 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.207205114 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.134330121 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.33953346 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.652313906 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.356472348 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319222131 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.665871398 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.873931217 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.338569122 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.393569398 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.768848499 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.330179256 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318355944 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.240867172 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.337619447 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.32113258 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84107951 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323590646 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318639031 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.418731799 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.359423903 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819471093 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.946208935 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.882376318 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.339431659 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.3192421 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832722483 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.344486621 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.369299793 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.319909564 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.601904393 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725217492 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715519789 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.34042557 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326470065 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319783668 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.338411282 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814289747 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.725032423 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.340835018 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.339553317 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838694295 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.339110368 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.326180348 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.322334317 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534650935 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.184599877 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.321082923 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.933749435 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.321221492 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.643059614 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.402448907 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.342764773 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.849347971 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.341242982 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.539457244 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37848372 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.320896305 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.328648887 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32629196 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.322874834 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.71160588 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.718533721 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324304872 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711204632 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84867702 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.342123565 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905446859 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.276731237 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335777534 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.385522406 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.322696966 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.044617282 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.862308089 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.357058178 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322307605 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699103118 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.342869241 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.665413796 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.340695259 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32260412 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852068418 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.329012428 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.339869464 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.32260824 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.344452702 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.108116033 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323230183 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.613501597 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.369061686 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.323718546 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.322589507 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.35677193 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323845455 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.34484542 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.328220293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898899056 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.35216912 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.309655447 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.34502387 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323310416 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.324437589 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.324281249 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.322871365 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.557431126 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.764921935 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.344870677 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325492169 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.33173894 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.346628909 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34899692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.328547397 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.675295915 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.344602428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329711924 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.329298502 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.130000516 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346355477 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32475567 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.328865703 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.267635101 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.532557281 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.356185038 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.325073482 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324679967 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.359590061 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.719905678 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349205745 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.412399295 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325592431 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08618498 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.351001987 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.350442092 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.837260409 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330197688 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325740135 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.326791606 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327154105 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620092527 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.615401361 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.648042862 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.343088529 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.327042829 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068848623 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.374110398 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476146881 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.349347388 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331905147 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527501964 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.475373072 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.32716026 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.92479186 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.329031258 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553617965 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.327845884 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.653028486 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870799009 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.351553159 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330514773 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.090420377 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.057649239 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.977487926 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.330918055 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.676886852 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.315666473 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.805778298 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.328565948 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.329426461 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.907660942 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.33104584 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.343147909 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.328199219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.327852477 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.389109892 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503877089 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.725647552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33373412 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.825177317 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.417131039 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328163832 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.351423706 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.331047274 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.678463381 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347220885 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.332461604 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.36949203 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.330756511 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.335350515 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846494529 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.301135091 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.331159452 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484983027 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010984546 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.3490196 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.331078506 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.994475016 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.592375343 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88425899 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.383402 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.683672663 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.356820073 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.370428422 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.106804227 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.429502397 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848130917 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.352772884 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.330488678 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975746322 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.350383748 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.3808582 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.330752415 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.331525837 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911324978 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.350683694 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.331271861 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.733998747 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.353476761 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.611991344 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.332388007 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.380487052 seconds)
  done (took 1113.299492251 seconds)
done (took 1310.700143482 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.331815692 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.338052456 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.318473826 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.33773928 seconds)
  done (took 26.578247627 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.34107789 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.336199265 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.339098046 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.337494683 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.339487234 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.33876084 seconds)
  done (took 9.285312356 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.463029929 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.338653729 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.337391764 seconds)
  done (took 19.393411924 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.568058218 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.807127086 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.738795998 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.834798717 seconds)
  done (took 11.203618616 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.341299226 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.340012104 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.340216815 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.342224134 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.342889591 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.34490332 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.34244719 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342067238 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.344685485 seconds)
  done (took 13.332534776 seconds)
done (took 81.041758501 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.192979352 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.314231819 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.354948375 seconds)
    (4/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.577926729 seconds)
    (5/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.890500749 seconds)
    (6/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.488937597 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.609503633 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.361542803 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.380872059 seconds)
    (10/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.752487634 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.221066422 seconds)
    (12/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.731669473 seconds)
    (13/286) benchmarking ("sort", Int8, false)...
    done (took 4.402342916 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.361981117 seconds)
    (15/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.347430315 seconds)
    (16/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.315355619 seconds)
    (17/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.368868959 seconds)
    (18/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.446350021 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.351814805 seconds)
    (20/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.314622019 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.029424123 seconds)
    (22/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.354480839 seconds)
    (23/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.569843273 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.676136926 seconds)
    (25/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.373295674 seconds)
    (26/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.441539797 seconds)
    (27/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.345524983 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.335066172 seconds)
    (29/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.33544196 seconds)
    (30/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.362835794 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.885633909 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.469559016 seconds)
    (33/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.346758378 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.318893757 seconds)
    (35/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.338121047 seconds)
    (36/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.465931918 seconds)
    (37/286) benchmarking ("sort", Float64, false)...
    done (took 5.742127745 seconds)
    (38/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.247113605 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.349771027 seconds)
    (40/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.607188337 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.392939727 seconds)
    (42/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.528827218 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.441863542 seconds)
    (44/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.880236254 seconds)
    (45/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.347890517 seconds)
    (46/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.317545443 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.466892261 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.145423362 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.598906892 seconds)
    (50/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.477927125 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.451812469 seconds)
    (52/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.421668134 seconds)
    (53/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.385687515 seconds)
    (54/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.286247454 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.400627634 seconds)
    (56/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.392580242 seconds)
    (57/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.403608295 seconds)
    (58/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.054157162 seconds)
    (59/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.363400728 seconds)
    (60/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.582707847 seconds)
    (61/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.318389352 seconds)
    (62/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.075983849 seconds)
    (63/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.402368177 seconds)
    (64/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.220147921 seconds)
    (65/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.771361245 seconds)
    (66/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.390085833 seconds)
    (67/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.600160807 seconds)
    (68/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.835693233 seconds)
    (69/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.85342093 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.714104861 seconds)
    (71/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.536354139 seconds)
    (72/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.43117623 seconds)
    (73/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.993898738 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 5.632077727 seconds)
    (75/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421511968 seconds)
    (76/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.210091176 seconds)
    (77/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.907735958 seconds)
    (78/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.318181539 seconds)
    (79/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.46536946 seconds)
    (80/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.064810254 seconds)
    (81/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.448705427 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.320076652 seconds)
    (83/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.358360854 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.373060411 seconds)
    (85/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.322568532 seconds)
    (86/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.092359945 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.338832906 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894831777 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.319577013 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.047369596 seconds)
    (91/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.340190439 seconds)
    (92/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.21082976 seconds)
    (93/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.44374712 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.333044579 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.578925603 seconds)
    (96/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.366201909 seconds)
    (97/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.558001953 seconds)
    (98/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.320135034 seconds)
    (99/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.443998944 seconds)
    (100/286) benchmarking ("sort", BigInt, true)...
    done (took 6.340362356 seconds)
    (101/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.364615187 seconds)
    (102/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.351219815 seconds)
    (103/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.860958082 seconds)
    (104/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.344371361 seconds)
    (105/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.550111757 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.688086455 seconds)
    (107/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.335111971 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 1.869630976 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.385106391 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.12475762 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.619192601 seconds)
    (112/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.240113069 seconds)
    (113/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.386802112 seconds)
    (114/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.214013147 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.598381499 seconds)
    (116/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.319620316 seconds)
    (117/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.486737471 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.32113967 seconds)
    (119/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.002370552 seconds)
    (120/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.437586587 seconds)
    (121/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.342418199 seconds)
    (122/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.293962374 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.32094328 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.443260025 seconds)
    (125/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.04151535 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.414289253 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.322918197 seconds)
    (128/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.445202955 seconds)
    (129/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.426870666 seconds)
    (130/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.830732317 seconds)
    (131/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.132752385 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.389052422 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.222671259 seconds)
    (134/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.05765731 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.376173693 seconds)
    (136/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.427773219 seconds)
    (137/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.09889824 seconds)
    (138/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.341634351 seconds)
    (139/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.708890557 seconds)
    (140/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.341567432 seconds)
    (141/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.369749678 seconds)
    (142/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.369768372 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.186853242 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.346564911 seconds)
    (145/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.115567149 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.366057963 seconds)
    (147/286) benchmarking ("sort", Int8, true)...
    done (took 6.342541874 seconds)
    (148/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.379964346 seconds)
    (149/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.755008384 seconds)
    (150/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.016061948 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.317850842 seconds)
    (152/286) benchmarking ("sort", Float32, false)...
    done (took 5.402050629 seconds)
    (153/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.446251936 seconds)
    (154/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.275322505 seconds)
    (155/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.848167774 seconds)
    (156/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.322375867 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.879052792 seconds)
    (158/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.381373492 seconds)
    (159/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.327016121 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323264182 seconds)
    (161/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.292573527 seconds)
    (162/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.365718738 seconds)
    (163/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.986131522 seconds)
    (164/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.365997793 seconds)
    (165/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.50483622 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.371050656 seconds)
    (167/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.932120872 seconds)
    (168/286) benchmarking ("sort", BigInt, false)...
    done (took 6.345439206 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.387255381 seconds)
    (170/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.88394509 seconds)
    (171/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.242612936 seconds)
    (172/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.715608053 seconds)
    (173/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.464602161 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.609295724 seconds)
    (175/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.393973275 seconds)
    (176/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.539279499 seconds)
    (177/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.392288219 seconds)
    (178/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.326712589 seconds)
    (179/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.325283015 seconds)
    (180/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.350683423 seconds)
    (181/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.329881158 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.4778961 seconds)
    (183/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.872490373 seconds)
    (184/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.448091395 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.401916379 seconds)
    (186/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.410535366 seconds)
    (187/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.975478922 seconds)
    (188/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.974534222 seconds)
    (189/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.32548334 seconds)
    (190/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.365756392 seconds)
    (191/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.01843928 seconds)
    (192/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.478246068 seconds)
    (193/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.902355161 seconds)
    (194/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.344433353 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.010835352 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.549545201 seconds)
    (197/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356941305 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.383181732 seconds)
    (199/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.396622478 seconds)
    (200/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.858783997 seconds)
    (201/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.412377766 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.325559985 seconds)
    (203/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.190245325 seconds)
    (204/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.347667063 seconds)
    (205/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.74990953 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.236828345 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370524249 seconds)
    (208/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.347507171 seconds)
    (209/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.080581753 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.405760317 seconds)
    (211/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.540810699 seconds)
    (212/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.368200079 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.440427979 seconds)
    (214/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.454490276 seconds)
    (215/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.341526348 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.787503963 seconds)
    (217/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.394558772 seconds)
    (218/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.371631553 seconds)
    (219/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.563685221 seconds)
    (220/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.378854038 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.780533347 seconds)
    (222/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.494624982 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.246415264 seconds)
    (224/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.741595417 seconds)
    (225/286) benchmarking ("sort", Float64, true)...
    done (took 6.348162336 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.328053674 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.332533535 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.392898142 seconds)
    (229/286) benchmarking ("sort", Float32, true)...
    done (took 6.349496003 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.35444841 seconds)
    (231/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.334025091 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.330087921 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.41852506 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.365882417 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.12688292 seconds)
    (236/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.185285839 seconds)
    (237/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.359773361 seconds)
    (238/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.365918958 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.368029811 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.605487026 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.369060227 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.169767388 seconds)
    (243/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.089635493 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.063814285 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375798324 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.279409023 seconds)
    (247/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.330124986 seconds)
    (248/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.475188848 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.731591993 seconds)
    (250/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.174507616 seconds)
    (251/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.347578785 seconds)
    (252/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.35192359 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.699331618 seconds)
    (254/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.377082732 seconds)
    (255/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.45940404 seconds)
    (256/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.407351111 seconds)
    (257/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.341812407 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.758220674 seconds)
    (259/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.262407571 seconds)
    (260/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.351193729 seconds)
    (261/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.352037367 seconds)
    (262/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.128971059 seconds)
    (263/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.117694203 seconds)
    (264/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.357863797 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.84108452 seconds)
    (266/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.367686846 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.435324519 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.679729834 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.341276833 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.434622065 seconds)
    (271/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.319424329 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.489398832 seconds)
    (273/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.368091065 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.203776906 seconds)
    (275/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.122651332 seconds)
    (276/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.378265963 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.393696286 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.787401483 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.356880394 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.172341318 seconds)
    (281/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.978821531 seconds)
    (282/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.462425678 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.376061969 seconds)
    (284/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.470524312 seconds)
    (285/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.370776834 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.351368909 seconds)
  done (took 958.551034395 seconds)
done (took 959.803307714 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.388324793 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382721919 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.367422281 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.388763162 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.477216682 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.392126991 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.376565826 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.368015865 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.414503202 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.415793909 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.364593781 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.391614091 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.365842861 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.364254258 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.36586612 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38077507 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.559433008 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.365646114 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.381446346 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.377128038 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.382811883 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.364475975 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.417225292 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.392628789 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.372299219 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.369960603 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.369431953 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.385661425 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.478011177 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.36880787 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.370550406 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.377271193 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.559735278 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.367319176 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.362475705 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.386696249 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.378709476 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.378507479 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.371290828 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.398960097 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.031565885 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.386983479 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.368272932 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.369393096 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.370042387 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.373762728 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.3694401 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.37690945 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382420346 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383720871 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.018817387 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.402198209 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.371196916 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.370338063 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.380119588 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.368026091 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.373987643 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386946291 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.387753365 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386916374 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.54438612 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.375233185 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.373012739 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.385410799 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.376636575 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.058711154 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.386971626 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375278169 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.034930609 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.396312913 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.060305472 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.397881632 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.37271563 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.384238167 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.401301811 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.5626778 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.366372218 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.370810755 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.377296917 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.367211007 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.381771209 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383770601 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.37660881 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.371829639 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385649946 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.396566185 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.382733119 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.371045638 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.381060935 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.38820207 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.376707688 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.38168842 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.375475769 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367876662 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.38196238 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.376209973 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.374374064 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.374454242 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.377491196 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.384837624 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.035558963 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41046749 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.369745612 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.369888156 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.372107252 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.384189182 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.036538138 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.393623357 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.394417727 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.419529197 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.375514464 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.550127019 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.375155574 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39067255 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.382878664 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.375827137 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.369146999 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.552325098 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.031823318 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.408653367 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.375848339 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.370492935 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392120643 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.375915999 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.372117333 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.571757361 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.375490907 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38845646 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.494383432 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.384952856 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.405341832 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.371313381 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.378281301 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.395810702 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391165123 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.404658883 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.378605886 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390994871 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.389711846 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.373030941 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.384498493 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.387033288 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.37699454 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.380103965 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.37129223 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.397439807 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387149118 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388812131 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.396464806 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.494869248 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.374471394 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.55574513 seconds)
done (took 234.308658453 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431544936 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.361559549 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.461812845 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.369240154 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.471382227 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.472391249 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.367651729 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.367724019 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.36756183 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.747483741 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.367350051 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.367344705 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.36298873 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.368726671 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.452342209 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.371404008 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.368137675 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.709896269 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.371646245 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.439921199 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.364856566 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.370304642 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370639764 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.751093615 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.372623534 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.369099345 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.44237045 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.372221826 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.717425614 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.370161326 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.372936656 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.717031958 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.461259129 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.388614573 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.380754221 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.379294633 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.475091331 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.392891059 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.45178124 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.452065987 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464647437 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.412108666 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.368994758 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.365651854 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.373350617 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.374118468 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.370390974 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.399212273 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.3713298 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.370208182 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.713928844 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.382438197 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.381627081 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.372006282 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.372116891 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.393789283 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.371408085 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373814453 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461834948 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.375000696 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.435145927 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.753617115 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.754270125 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.374739176 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.375528987 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.37304823 seconds)
  done (took 150.988125282 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.439317892 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.448377244 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.496749928 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.395508153 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.4255516 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.498793412 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.39556442 seconds)
  done (took 11.386220046 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.379320951 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.37607608 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424258467 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.42437015 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.37673445 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.553198667 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375385804 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.386597936 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.371199261 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.428098116 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.376467654 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375955384 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.381113882 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.367727086 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.423042529 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.386456443 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.488695151 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.375623012 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375735116 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.531620717 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373387441 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.382698855 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.426883129 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.387210644 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.377632884 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.38137421 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.206401938 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376748861 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37325637 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.375272484 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373945895 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.450253177 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376322988 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.373985612 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37389504 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.490967309 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.377536383 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373219777 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.377424384 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.371188818 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.37707776 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.377586162 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.376512472 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.37449313 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.377674811 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.400237874 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.377649294 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.377707574 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.378305855 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378434818 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.427528491 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37817677 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.375628531 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.375060132 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.433383532 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38523257 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.379016566 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.375012976 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378951665 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3765891 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.535247113 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.426493179 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.37848662 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425431384 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37909172 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3794839 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.378266237 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.378169714 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.432527388 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.378465941 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.42710554 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.376795311 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.565698024 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.401018249 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381491079 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.381905525 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.381919386 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380026788 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.378101566 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.3850428 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.378722816 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.379858352 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.385927809 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37674462 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377732612 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.544350748 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.488615231 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.378527243 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.391509107 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.386780176 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.377175683 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.431879898 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.381367198 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.377643417 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433070097 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.495061867 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.434037164 seconds)
  done (took 157.917869334 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.385275217 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.388869666 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.382918026 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.397675276 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.381617609 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.380884214 seconds)
  done (took 9.608481376 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.383998314 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.384408559 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.381391109 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.382612233 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.382194231 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382126251 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.38223431 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383550295 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.38819325 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.380933181 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383040429 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.382863824 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.383475264 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.383248464 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.382874668 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.382217852 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384244279 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378931741 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.382468154 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382963994 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.47751051 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.383684292 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383061226 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.38532103 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.387938457 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.383010613 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391209092 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.383543688 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.3831917 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387557679 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.405903016 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.383542312 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.384949569 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.390736003 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.389393819 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.383740652 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389011979 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.385403141 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382255044 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.384047048 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.384309059 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382791677 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.384102197 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.384997726 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.385449013 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38993046 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.390426384 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.39192051 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.384703061 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.384828993 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.385414456 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.384866234 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.38533576 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.385050826 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.386861755 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410447611 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.390550143 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.38549473 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.385083128 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.386830624 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.388103294 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.386458475 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386999626 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.391434642 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.392984042 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.387462338 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.387145292 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.391860982 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38706468 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.386477639 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.387016921 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.384003232 seconds)
  done (took 102.184447115 seconds)
done (took 433.363226957 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.546803973 seconds)
  done (took 7.843448453 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.628238359 seconds)
  done (took 7.927068363 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.002504828 seconds)
  done (took 25.302805127 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.462837869 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.436865214 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.387990403 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.387605118 seconds)
  done (took 26.972989276 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.577635511 seconds)
  done (took 7.873170356 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.37960188 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.378546824 seconds)
  done (took 14.056178304 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.628131244 seconds)
  done (took 7.925177819 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.416575506 seconds)
  done (took 7.717606035 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.386312637 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.401807457 seconds)
  done (took 14.098109344 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.359180316 seconds)
  done (took 7.656122128 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.744883666 seconds)
  done (took 13.042178666 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.390015291 seconds)
  done (took 7.689297299 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.406934695 seconds)
  done (took 7.704626947 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.587393502 seconds)
  done (took 10.883368953 seconds)
done (took 167.986438136 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.378281826 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.387503202 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.386117938 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.386487411 seconds)
  done (took 26.834493054 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.419391885 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419359669 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.421272812 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.431149429 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.423928931 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.421130986 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411845203 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411597478 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.431811593 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.422916694 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.422963075 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.423423213 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.421575351 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.413602066 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.422824342 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.422231445 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.43283146 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.425019223 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.413875702 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.424439622 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.389178634 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.433520798 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.425133057 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387854443 seconds)
  done (took 35.373546604 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.909423827 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.458935923 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.542048786 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.440458403 seconds)
  done (took 7.650166149 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.440683372 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.44206262 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.453446867 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492345604 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.519696218 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.451534854 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.415186813 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.4112438 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.397160081 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.442258833 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.517748279 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.457405258 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.533900888 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.388095552 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.571101133 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38931093 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.390312822 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441933966 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.494296415 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.507331874 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.389611275 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.441354923 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.447913329 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.459064329 seconds)
  done (took 36.194543182 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.389086156 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.406735799 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388906981 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.38817708 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.397441206 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.389035784 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.389899611 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.390868293 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.389494386 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.397446616 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.388527537 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.402000407 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.389297524 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388980798 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.395255604 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390460869 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.395381117 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.389439827 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.389218827 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.396454185 seconds)
  done (took 29.153056351 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.383194018 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.237783878 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.735039084 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.639561952 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.383715444 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.39064255 seconds)
  done (took 28.07200306 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.474387828 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.646002097 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.390204473 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.819732978 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.915445419 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.411568565 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.391633311 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.67617729 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.084956579 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.075657964 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.466573321 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.46937605 seconds)
  done (took 21.127287926 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.402380606 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.391935875 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.394630918 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.408951653 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.456605439 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.415349868 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.397154728 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.385958013 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.464234207 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.482113582 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.41487222 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.458292947 seconds)
  done (took 38.376355342 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474233416 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441307089 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.497448573 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47513509 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168934451 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598416504 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.387184892 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.867148964 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391311168 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661602584 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402418674 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483109202 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645341404 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39005719 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394001875 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.545917103 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643291162 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939139214 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388743447 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048924206 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419488252 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398371642 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.178451804 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.427670648 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598095105 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.506381074 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648117976 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.163147493 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735142311 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398212903 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397937895 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388215715 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662483997 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113325386 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507715994 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399480845 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391247868 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.047978184 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.373788727 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.968475518 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396733977 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397261604 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399908037 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389867437 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324460078 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391307292 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849206513 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395125872 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.100577679 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389349447 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400519341 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493987682 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392021142 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.382884739 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454908048 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402821805 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.388284491 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48915748 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980039497 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.665712026 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414864321 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.331756462 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392557504 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977577188 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117033317 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.514202651 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.394025687 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394551158 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33594824 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.074678272 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413480633 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53458283 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.411843576 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.083758797 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240247311 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418719264 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340334684 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004709616 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410939248 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.331989109 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62046328 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168719002 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331456352 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.350434235 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327270166 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186057365 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401587885 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.897808366 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413217111 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.865220702 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402154055 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40922004 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415460964 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615720548 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.270433779 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393315276 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.403669799 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509053321 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414073709 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.851845229 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338126014 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396234837 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650972226 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60375649 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393195877 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.56612957 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642551607 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397129448 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.419606887 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.41002537 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411848534 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.086758858 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43345959 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.6636542 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417529389 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.171268502 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214375547 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402751006 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.501057631 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412821187 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678913989 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.23385308 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290593857 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462031894 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398316377 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393781517 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.094042612 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996985713 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.289350565 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.392033687 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397942745 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.410853736 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.395808411 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39366506 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.398211015 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396520593 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.181092753 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618163429 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412945725 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677072074 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329800902 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538278514 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439711882 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.618092681 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.85507864 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.422832689 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658472263 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406523155 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401839818 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435035336 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413957773 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498220486 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418395062 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.39638012 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660433173 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.399613848 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401067208 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.113726597 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.183871282 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397264101 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.402470865 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405575094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105484789 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409202085 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402390573 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.291141127 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.410112234 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463502823 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403704176 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.407582705 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.59572348 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446560559 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.410904994 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.394649015 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640476034 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408595598 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.085167398 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485230405 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.614944864 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096620236 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439143695 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.331766861 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.111326022 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.092828699 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397804168 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.589149603 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398565076 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409642033 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409922607 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402796391 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103444299 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428969441 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.022048039 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.412421331 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410046277 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.405386537 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398068325 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.620735709 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.735545825 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416677193 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.417835063 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544430272 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.414283907 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333496478 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917031816 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405292479 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400076811 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.178445681 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434481886 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.017524904 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918278963 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66301759 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403616523 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42122298 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.166109854 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.444288976 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.400666389 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400165716 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416565296 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.42215515 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437419666 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.410105447 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.081384641 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.813320775 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967097774 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261045869 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069764476 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550256307 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.409548885 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.293217561 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.860406635 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336479349 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060175224 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625238966 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877846449 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397068311 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620906881 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.860794666 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327064561 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414134229 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631376078 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521270161 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.430959103 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421414634 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613616855 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436794607 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406860807 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.349845542 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.683374586 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662375443 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420656262 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488493697 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859494993 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40854784 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.189023009 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.408779876 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.925307276 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633127222 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.957454968 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.831117255 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412310435 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410472596 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957054329 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408364744 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931785393 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110916414 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430593681 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.632089305 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344640811 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.415335042 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.415525872 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.399584037 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.12815243 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.409065199 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.66164331 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416534568 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33881421 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405545788 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034399031 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.282356288 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40943718 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404872049 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240616945 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412022189 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757437989 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.408850254 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.537684342 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425217676 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338477852 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340549361 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.098104314 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414315029 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389416671 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97355461 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.424022123 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425521724 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425985756 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764651097 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664251073 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.420518553 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106491341 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660927104 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405562194 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437475203 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.506957168 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404761124 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.407681289 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288512513 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642437293 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475095271 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639601518 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.546045787 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.307693235 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411566743 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626086887 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288850592 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42158174 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701392073 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.139457762 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.421436489 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263903906 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453235782 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425041744 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453873445 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42291277 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436340062 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499879783 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419676622 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.418741223 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.419628968 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603316761 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427379858 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411510048 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.423345685 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507949023 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449753132 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.539450887 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.181403217 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112858975 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300690382 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.133822604 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449815789 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409221789 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409577531 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352660506 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561456295 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937142479 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682579662 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535652502 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.41754338 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439779027 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409779202 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418247636 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630086602 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68580864 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388292387 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426926616 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206910988 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.303999533 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422482921 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.621517896 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984879671 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052924704 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527249424 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410549413 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.874688151 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685307785 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.502163636 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409720087 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005309429 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.438891996 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.938505428 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.447271276 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427077106 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558816389 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421060991 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140140949 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.443721174 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.568154987 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.185483799 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.065861708 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676127489 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.998002645 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.423638793 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10927109 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293343667 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684476312 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482735668 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422049653 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.522933881 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559116185 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.425270611 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311260339 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41296722 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265398713 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.121323679 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.429521134 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125745881 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705036334 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.410703701 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.425426167 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435295417 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.422705834 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637389838 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212648515 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638740009 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424743539 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.42229343 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.98797808 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122979254 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453672995 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357764499 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.417372254 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702567756 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67313012 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436404063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.866940101 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.126189707 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035216937 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.389873211 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436700638 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415757947 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279439771 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13208476 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.584208283 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992288061 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075590396 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413607333 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717792361 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.420757487 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4228208 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698247552 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.418560263 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.432428887 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433533586 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.117562413 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.344331766 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.417049037 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182207048 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.359036925 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.6439676 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452018162 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391164313 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418068051 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.613388169 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415967534 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541687253 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427159794 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.426367352 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420272964 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.156695296 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728961565 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.422420479 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.414923328 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.409151942 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424373031 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52092211 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680888863 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422067347 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.092052633 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.768925358 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675907209 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417129827 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.40503932 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.42079947 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41764678 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173932936 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.468373933 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422321454 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090187703 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.419518206 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.435948864 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421468889 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.634629554 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6307665 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422291706 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432098072 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430043403 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440204595 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.318901836 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.219687086 seconds)
  done (took 1697.194182214 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.452098401 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.443234978 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.474464204 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.475067883 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481016067 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.55706792 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.515501198 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.440570566 seconds)
  done (took 53.173145689 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.428527069 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.579661648 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.452494871 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.420947122 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.428019349 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.437328203 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.955559689 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.448318009 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.426917568 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.428803903 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.438217223 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.429655974 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.166938136 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.428886869 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.419123847 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.426808229 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.427332757 seconds)
  done (took 67.084200593 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.512519683 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.786929612 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.386747308 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.497858882 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.451505417 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.457827122 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.558774484 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.442862304 seconds)
  done (took 56.431254879 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43785778 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.438180007 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.43730845 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.437639701 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.438206953 seconds)
  done (took 8.52503355 seconds)
done (took 2106.485128863 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.423753407 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427304975 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.424233824 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.428537942 seconds)
  done (took 7.038729429 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.400162834 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.135026728 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.409429218 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.423887935 seconds)
  done (took 18.703352448 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.435394521 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.439405632 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.267224983 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.169366503 seconds)
  done (took 5.773060066 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.171057999 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.184885655 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.169300409 seconds)
  done (took 7.861057296 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.418486748 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.426704245 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.427630781 seconds)
  done (took 20.608621032 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.730900872 seconds)
  done (took 3.068126869 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.569190637 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.618177612 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.763674549 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.774826965 seconds)
  done (took 8.062149942 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.807759249 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.812391478 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.61386512 seconds)
  done (took 6.569194584 seconds)
done (took 91.890572031 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.894171906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.440992635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.622628571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.867988533 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.652935634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.62340865 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.704818703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.832631785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.369047776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.362864277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.869206133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.654922088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.875019355 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.440903448 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.871683458 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.441200435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.659319865 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.931279368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.433341395 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42105984 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.727752435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.504042885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.699124685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.524283998 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.659946266 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.570896794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.098854791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.440654611 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.422567161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.112738816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.571313914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422207998 seconds)
  done (took 202.060654956 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.422492445 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.430304703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.422105859 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.421541447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.422582771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.444542559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.423754928 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.463147685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.42377769 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.435494625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.423512496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.460852088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.424043244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.42314299 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.424571416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.423159794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.423294963 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.434591334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.423679511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.439563137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.424945948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.447416841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.424026339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.42477751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.429230151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.424298167 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.424489109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.445431405 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445617384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.425351765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.445169721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425532098 seconds)
  done (took 207.135291023 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.424133516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443820614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.425947432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.464752284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431377681 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.434847342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.42725766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.425026662 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.431369644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.434518702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.427687503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.425865263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.428750254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.425548589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.442832516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425934262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.425798396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.452851305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.450880276 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.426322293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.426331143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.427214646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.441020216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426533563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.448747554 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.426595987 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.44236685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.429755426 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.426162621 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.436468346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435445417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.455632372 seconds)
  done (took 207.239170358 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.631722741 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.434288545 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.435470351 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.395082713 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436052373 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.434885272 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.432709799 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.626643342 seconds)
  done (took 15.168654359 seconds)
done (took 632.936786084 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.046090203 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.738914472 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654007397 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.456523451 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.413063077 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.486757105 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.455145551 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.651938469 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.44435657 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.668923487 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.808907559 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.473205849 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.961277866 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.45315355 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.736747 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.565489949 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.429262988 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.565873086 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.808569518 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.160074675 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.752700731 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.039706558 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.675614826 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.45729655 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.987167068 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.038287166 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.391524573 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.424709343 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.475849739 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.812801481 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.419991292 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.672420609 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.541506766 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.529711118 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.588847429 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.567197736 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.569228255 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.530133112 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.675242901 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.79554943 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.129059581 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.233354027 seconds)
  done (took 99.629540848 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.419510095 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.421174642 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.419921012 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.419723418 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.420966186 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.420044769 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.419505468 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.41964568 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.420678206 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.420105946 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.420119544 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.422484384 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.419824719 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.422387893 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.419626758 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.419716252 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.420629092 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.422424949 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.419777913 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.420502981 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.422580883 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.420764676 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.421155067 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.42142726 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.422088377 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.421554783 seconds)
  done (took 38.287549677 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.44049663 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.710139297 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.896262032 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.446115376 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.440167862 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.445272378 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.536416113 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.442848667 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.444007481 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.443830826 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.625722339 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443262417 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.48024372 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.927581507 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.442506597 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442799185 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.441333193 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.441379814 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.720053069 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45096061 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.558371155 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443890293 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.535512559 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452154895 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.465518813 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442929625 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.446736718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.018549701 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.465565421 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.628150911 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.425455103 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.539339341 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.960755971 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.931021827 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.426426328 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.45047705 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.443133779 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.632549057 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.44384628 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.443214635 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.536282968 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442387528 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.90751547 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.128987629 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.465952003 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.443749921 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.04268102 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.654276327 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.750234501 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458703514 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.934712969 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446651798 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447322147 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.443999543 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.750493273 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.458354258 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.444261574 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.045573964 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.471126283 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.541422708 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.452716568 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.44397254 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.72639409 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.444790051 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.714505581 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.446911116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.453977293 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.468072249 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.912228116 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.448285231 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.156219447 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.466827533 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.445771405 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.632379237 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.72119401 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.080373229 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471789101 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.732694203 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.974337206 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.556442007 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449496111 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.01012732 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.562162325 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.450251947 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.450016769 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.448495816 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.447316266 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.498871257 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.537455497 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.103008156 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.17325396 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.077592175 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.563643292 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.458648918 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.448085393 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.050786346 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.471129145 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.448223427 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.907647877 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.154898453 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.467798998 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.455495386 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.1613804 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469612431 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.541469239 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.452711892 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.918010544 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.448772324 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.500978277 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.447232008 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.454131381 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.473179638 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.542100524 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.45010118 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.449520609 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.128854528 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.660160175 seconds)
  done (took 191.464278591 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.443132999 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.441807091 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.441384255 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.440814729 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.442087546 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.449802703 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.44192752 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.44170258 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.447176459 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.441909403 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.44199611 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.443104127 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.445720205 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.45204052 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.453447278 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.449017697 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.05619268 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.442941583 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.443009175 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.46365298 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.280472295 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.442690793 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.441612608 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.443052509 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.441721973 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.444358188 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.445305694 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.44551825 seconds)
  done (took 155.263468709 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.450698801 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.12695221 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.472031834 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.608756155 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.475689991 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.447055689 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.606323175 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.518847823 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.473749134 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.449613888 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.44786864 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.811974067 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.451198354 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.070806189 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.690822693 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.636524794 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.070166286 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.472423387 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.44801327 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.449373212 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.611093992 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457458433 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.812592092 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.12858714 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.47242028 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.126775947 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.435329891 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.452417174 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.450223884 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.131275698 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.472252305 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.815367401 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.545438809 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.524337857 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.154674687 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.091647707 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.092740273 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.630178712 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.451585159 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.450383883 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.450913252 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.43426977 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.131173235 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.475213497 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.452758808 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.123336818 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.47576211 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.45424269 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.458209592 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.45153665 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.525869135 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.550708463 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.843029773 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.138925101 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.564995766 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.464560622 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.609900949 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.840049819 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.455096148 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.074410126 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435586244 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.138245055 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.476791145 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.436365078 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.45263863 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.458327023 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.633963484 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.611165559 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.07511517 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.475616679 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.07503099 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.654852438 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.45162374 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.453890833 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.455780991 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.137972544 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.096664063 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.65563045 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.616755094 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.696307288 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.446103535 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.45289506 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.438389027 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.54765225 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.453721651 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.14081718 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.097143063 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.477012263 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.455689817 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.456150129 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.457328212 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.677087643 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.169020487 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.569687969 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.06524926 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.842120876 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.823564795 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.457101379 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.527836957 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.483268328 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.825921373 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.457799386 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.527780216 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916988717 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.824497674 seconds)
  done (took 175.901254635 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.740728789 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.793863348 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.559268431 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.628229271 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.114228691 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.054770085 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.859555497 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.606973735 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.580806574 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.750833973 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.766325538 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.547287804 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.699397024 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.543671741 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.276746162 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.566142376 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.58154812 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.615927522 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.629926396 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.543651014 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.198039654 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.782071831 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.679412637 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.507127897 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.560452335 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.325958869 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.09025631 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.063149667 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.659091158 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.905372398 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.049485498 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.678139075 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.530961016 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.282969632 seconds)
  done (took 71.137062096 seconds)
done (took 733.022788124 seconds)
SAVING RESULT...
DONE!
