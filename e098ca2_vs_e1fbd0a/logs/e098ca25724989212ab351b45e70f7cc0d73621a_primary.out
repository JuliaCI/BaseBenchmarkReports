cset: moving following pidspec: 26804
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.238119386 seconds)
loading group "string"... done (took 0.464560459 seconds)
loading group "linalg"... done (took 7.598449488 seconds)
loading group "parallel"... done (took 0.173349666 seconds)
loading group "find"... done (took 1.180198476 seconds)
loading group "tuple"... done (took 2.101820314 seconds)
loading group "dates"... done (took 1.339013249 seconds)
loading group "micro"... done (took 0.245164382 seconds)
loading group "io"... done (took 0.701043275 seconds)
loading group "scalar"... done (took 41.878671159 seconds)
loading group "sparse"... done (took 12.497716716 seconds)
loading group "broadcast"... done (took 1.112234644 seconds)
loading group "union"... done (took 13.556880981 seconds)
loading group "simd"... done (took 4.789845722 seconds)
loading group "random"... done (took 9.683310692 seconds)
loading group "problem"... done (took 1.992753663 seconds)
loading group "array"... done (took 22.483674681 seconds)
loading group "misc"... done (took 1.42949084 seconds)
loading group "sort"... done (took 3.579272821 seconds)
loading group "collection"... done (took 19.445087281 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.538847261 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141553655 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132430444 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148440366 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20369944 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143245701 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156664904 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114141584 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.953246658 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175627117 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154020408 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.493476399 seconds)
done (took 5.083197712 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.264815585 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095010664 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103988514 seconds)
  done (took 0.87685991 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077742889 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144954168 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094595706 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078433181 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094728875 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079742221 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09583565 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078987896 seconds)
  done (took 1.343299796 seconds)
done (took 3.248320583 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733836965 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.281470743 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202480338 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462337726 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195151504 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21504355 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.748575065 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.380592648 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.260310077 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10021607 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143430092 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38717272 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137002878 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.733954127 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08971592 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123100999 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.185785998 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.510287321 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084857092 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111235869 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116369136 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145108415 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128557563 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090684845 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184838812 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084171458 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198251179 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108910002 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081214706 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288804893 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200787738 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.746044056 seconds)
  done (took 11.172888631 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111471434 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133566585 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097160902 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138581422 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134232883 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099497879 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084635896 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096083183 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121335141 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175933602 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114421456 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136183455 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095248842 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08191537 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11540244 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244631308 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123593684 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106551266 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102283464 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105923833 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12132313 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114651345 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110519854 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092784827 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166323417 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222359513 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113229734 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126370659 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095918522 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111800843 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143215313 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141649243 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094321667 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080298062 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173198041 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125018874 seconds)
  done (took 5.138141551 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189130215 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120953262 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168484598 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163565591 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140989701 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.12893376 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113689559 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245021059 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.177873701 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183688165 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16423677 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142433193 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093382894 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098752539 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097732822 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097609175 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081745442 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.621270962 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.167538721 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137354307 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098293539 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10685771 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100224604 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.726212934 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087914806 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096975447 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082373374 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082996836 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160699961 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082320436 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.170624618 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102848774 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101697831 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13961198 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193776718 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128711262 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121983961 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100077252 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079811749 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.197677961 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090927004 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099846215 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105636662 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139997844 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138037808 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099708812 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082405095 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222284376 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080580427 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114986113 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.939963787 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18184522 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090140178 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097034995 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323940499 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100341593 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098891009 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078856023 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270341595 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187826898 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098848708 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080878349 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09796308 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081657427 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.752546001 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083939936 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.086224437 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08569624 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109308002 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110717319 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100219173 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097891292 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087470481 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105103518 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09838412 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099137995 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08148713 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097887971 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096661823 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083662576 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108844134 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086130647 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09872241 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161082998 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.08009142 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116339779 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127307136 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084465182 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096085762 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115142598 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09892754 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098388496 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117082385 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100046398 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077195247 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109954782 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100511278 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144129382 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081458173 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169607049 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09602823 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127214215 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101972899 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115289152 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113570906 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100147916 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085455086 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097044331 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077869622 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165872064 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080293088 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09842841 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08193301 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11098457 seconds)
  done (took 23.812231829 seconds)
done (took 40.800008735 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319468806 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103514531 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10366995 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102813874 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101381295 seconds)
  done (took 1.479469958 seconds)
done (took 2.203830386 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288898011 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.213521852 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07761381 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169119071 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094765692 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173647371 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162491534 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11185433 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.22037659 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077969635 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182529251 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078134285 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094192981 seconds)
  done (took 2.694212935 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096020911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115683264 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082605354 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112685778 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077291072 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113056765 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09331231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117186575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110711454 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085282638 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093953663 seconds)
  done (took 1.812864898 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094866672 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113866069 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083640773 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111325176 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077283711 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111093567 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09378702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116681561 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110463449 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085564493 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094315038 seconds)
  done (took 1.810928235 seconds)
done (took 7.031581698 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091798194 seconds)
  done (took 0.806716956 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.931967442 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.978829997 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113592058 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.15173052 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.302247526 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19354999 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.490012678 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130231871 seconds)
  done (took 11.21508801 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.14700909 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083031544 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103358116 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08477387 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105014693 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087673949 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100506316 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09977133 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083899965 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100179219 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083794949 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101288354 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103083569 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085521295 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103498348 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085077101 seconds)
  done (took 2.340935422 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120183659 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118857722 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106679004 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109652588 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087682883 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106028038 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107209382 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090386678 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102327298 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103702643 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091466754 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105808695 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105143637 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081672572 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106231283 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107700674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086604036 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107500341 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107913919 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090838343 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106552878 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096342377 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087789081 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107775332 seconds)
  done (took 3.2720661 seconds)
done (took 18.356071706 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161402617 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109283223 seconds)
  done (took 0.996200228 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095535869 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113571574 seconds)
  done (took 0.936383779 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097838846 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095991673 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123248763 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110118607 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080653566 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097386583 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12015979 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081052995 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096707713 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080923889 seconds)
  done (took 1.714755553 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083395148 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110084605 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102710813 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095762779 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105843598 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09517631 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088515966 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099469601 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110835759 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078260015 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103716096 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115896813 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085941326 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118240162 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104994761 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083826809 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103951757 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099165951 seconds)
  done (took 2.518354186 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080392601 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097826951 seconds)
  done (took 0.909478231 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082614954 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094575853 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081821441 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097292482 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094284675 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078346933 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095001818 seconds)
  done (took 1.354469794 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.527643801 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.141363706 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26276819 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085544568 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120159614 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30406761 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099107279 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086164167 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103701799 seconds)
  done (took 2.518547137 seconds)
done (took 11.679370344 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094463299 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119136236 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113122579 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469897779 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107004445 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098245691 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161595392 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257874379 seconds)
done (took 2.156956176 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144346689 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329100324 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115710157 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067348038 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096707753 seconds)
  done (took 1.346878468 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080598753 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10049741 seconds)
  done (took 0.918143086 seconds)
done (took 3.149757475 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081233952 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.133169404 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081423823 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099814472 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078467882 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.097452876 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080949062 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.096219979 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078256329 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098226504 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096709496 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081284899 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097873564 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081525913 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095043191 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07836041 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097892083 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07848171 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095378909 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077911923 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094482137 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080942657 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095465984 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078313502 seconds)
  done (took 2.928139483 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100183651 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098495811 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103896383 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086641249 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102929553 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086707493 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103105407 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097844336 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086569319 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100125982 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085224524 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101324815 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100419763 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085585292 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100731977 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102066686 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087611091 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100386857 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085497447 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104587392 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106479001 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083766216 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10447702 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10773037 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086647999 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104149194 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085784667 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101056501 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106887465 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087259081 seconds)
  done (took 3.636686544 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085555125 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095710367 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079225533 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102477915 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078508139 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098416742 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07855365 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096297086 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080282871 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095947272 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081128249 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096302583 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078536157 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09740656 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079631351 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100423712 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108513455 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07822532 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09577755 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079229252 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098819417 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078811804 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096394008 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078317426 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096225285 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078155477 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09598206 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078778392 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096929 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080032818 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10185264 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084412404 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098375424 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085100009 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100304887 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078564408 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099926962 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079550809 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096505022 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095176692 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077892162 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096573983 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078894491 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102577985 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078369844 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098000746 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078345971 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098064308 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078961032 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099045012 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078890974 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096159559 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081288358 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097329173 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082435938 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095223143 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096542875 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078960613 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097299114 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079364491 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095397295 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078890885 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098649494 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079811113 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.1114761 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086173227 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095909683 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080942922 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096901659 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082496425 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097961627 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110253961 seconds)
  done (took 7.21654903 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083987813 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107068743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080269514 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099103285 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076899418 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097296572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100763402 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079644787 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098038922 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086119137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096506759 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080954028 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097729574 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109127942 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079662838 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098496282 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08651384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094838129 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080403365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100690246 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08003626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100945063 seconds)
  done (took 2.764144254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210357526 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105807999 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144310137 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107551615 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08391136 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108268169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103449304 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087882797 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103904248 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08435945 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100820972 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103315162 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083298158 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10207183 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102088286 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085231602 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103554704 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086589506 seconds)
  done (took 2.660067008 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095072118 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099397793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10364482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099029232 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099402204 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084527984 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105584533 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10894619 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084480448 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099413328 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092195955 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101680729 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10164348 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081988507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102234538 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08270537 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102023197 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082604001 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108529748 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1049583 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10488912 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091894774 seconds)
  done (took 2.892140773 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09811136 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101921761 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118953806 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084318432 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095503396 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080327048 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107278153 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081882297 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108053674 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101314823 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08157881 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09880107 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088775641 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099023571 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104146267 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081979249 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101725733 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082542979 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101827957 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077846621 seconds)
  done (took 2.650658791 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103518993 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101176689 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100201195 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093145259 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1016628 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084252637 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110608211 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100739804 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083639274 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124669014 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100928917 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083664658 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110567138 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106930141 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100459119 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092947471 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110250342 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110768456 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083606492 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100743079 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127062864 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084223019 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110558885 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101313671 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.197830303 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100737595 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100550008 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089298418 seconds)
  done (took 3.67327558 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081920997 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100205994 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079046117 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097335474 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079121826 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097256534 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079813692 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097571581 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081689601 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097103323 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081590985 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102741087 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081883721 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09934373 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081503694 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099159113 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082618049 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097043779 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079509173 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097309074 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082162228 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100056043 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082244098 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097659505 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079975694 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100353308 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079366995 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09671788 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082305328 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097028291 seconds)
  done (took 3.451954385 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091690593 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107421404 seconds)
  done (took 0.9578044 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079683944 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116277026 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079690602 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103979471 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088040651 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100853956 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109003895 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088310728 seconds)
  done (took 1.525883916 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096622806 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111675423 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084155448 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11353575 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112037206 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096954334 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167259338 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101967922 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088683973 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098560316 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113761909 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081194418 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106385978 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083262658 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105837629 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088987564 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099111532 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088991544 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103328227 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099217529 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084628054 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111068059 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085647617 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096917759 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084289743 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111217296 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110709975 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084341456 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103575924 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109705245 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088008947 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094420294 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083039982 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101811684 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080874068 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109562026 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113024291 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085506663 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109358981 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084054644 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111806231 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096316707 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087389838 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106635951 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092783189 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100764041 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084008006 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095291951 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098520191 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086513931 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096280971 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082767831 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095232582 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090300432 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105235205 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113657222 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081129535 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102902434 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086151371 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104452876 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089623622 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102626677 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085157389 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099854762 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108142095 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086135779 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108335514 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078076702 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094465793 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080585192 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109146872 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123950932 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09094202 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102281893 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084438514 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0982939 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104488988 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084582005 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109842051 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090644747 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101861543 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107568822 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091742446 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102183638 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085556104 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109230761 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099661524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085080958 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098073999 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098234637 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099364234 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080724906 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0990122 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110026094 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086807476 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100371794 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080875348 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108822524 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077416679 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102685443 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084671688 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101500397 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110216069 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093067212 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107482711 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108331346 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090388249 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101272946 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086001339 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09785556 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084332973 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103799893 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090301952 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09471845 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104165047 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08424132 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101695504 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090640675 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099894891 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083772498 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108510094 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108245352 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082186885 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097966031 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085919225 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101221893 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08728997 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108777572 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099627012 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078368048 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09647198 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08783625 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101535076 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088251342 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107673745 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10488264 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078090299 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099663515 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088022147 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109506612 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082473 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10137721 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106438988 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084180419 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100251077 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088799089 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103195376 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08219562 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105333032 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084368938 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096939304 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105841933 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086121173 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100037311 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087795015 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105370987 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085894977 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103447917 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101059631 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08859403 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103246794 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082035749 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101608834 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081976645 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110219879 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10389798 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078350263 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098320514 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091115142 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099492059 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083140132 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101015077 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086371594 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103190969 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099233819 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083651608 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102871757 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095357575 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107268191 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103418145 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089252617 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111627629 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083673913 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103672641 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083298113 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10344829 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103366663 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090434637 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106959703 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088652351 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104741961 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07955342 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107789501 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109475986 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083034167 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099410166 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082912678 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106107267 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108396846 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087391762 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102589963 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08223828 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102410804 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087716998 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104531652 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100722477 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082489381 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106178921 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083402309 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108651604 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103357864 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092534967 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105001085 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078233289 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105254566 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081195247 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109169132 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078599611 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099219848 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101263273 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085321387 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100826366 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086067929 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096320086 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091044442 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110219819 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083705815 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100871723 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.1020703 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092454184 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103516483 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086716657 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105528244 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089074659 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115152613 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101653814 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086740281 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111258552 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083869802 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096237304 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107433442 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082011519 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101653421 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08347543 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099727998 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086715582 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111042088 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106966061 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07730449 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104790822 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081979771 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100815628 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078944603 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109213195 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087282341 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103747229 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110704402 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085332843 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103093059 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087675536 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102513245 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084783811 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104014544 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105607787 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084507154 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104709628 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084311202 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104542919 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085377707 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099964637 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085316645 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102527672 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101656026 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090311056 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101576346 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084211914 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105275609 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085228809 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102635512 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084415841 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10115376 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105924825 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084675137 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102348009 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086037509 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098400434 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091715149 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102396719 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091509202 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102780513 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099038881 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089700898 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105353367 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090958517 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104994184 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103656522 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085196207 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101954749 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086780465 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11137675 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081920374 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111611821 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108808224 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084322769 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106582312 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084456147 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104564201 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082713797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104826018 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084600425 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101705299 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102305195 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088577525 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105397888 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084378734 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104796962 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08453717 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10262613 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085516493 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09662488 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082505233 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102465654 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102641614 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090952246 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104071381 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087254277 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101429927 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085332369 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101346308 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08064974 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11115693 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112264141 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085043406 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111160334 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101942046 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086306871 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112769946 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078324465 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101467003 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082170085 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101418004 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110453255 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084990568 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110640034 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08467401 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102625281 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081938112 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104493085 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082928033 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097427124 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08224437 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106550609 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104821852 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082854169 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103346933 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086799137 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104586564 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091242938 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102521308 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104687212 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085477908 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10032151 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083092875 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102228073 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088671238 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10386909 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08151584 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100383642 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083367677 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105202775 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085994731 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.1028408 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104844605 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100690793 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103155297 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087446533 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107774874 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078677051 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106151375 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102641028 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084877414 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102375849 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08871134 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106864033 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085603059 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109908857 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104096424 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085544181 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103316836 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082496257 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102373362 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084641289 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103332419 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08360218 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105225391 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111182083 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081956883 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105296438 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084494689 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103929938 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089041848 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105970082 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086314615 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111389158 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106234866 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085815381 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109492567 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088291179 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106731528 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104170575 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085764146 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110037865 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084355698 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111546946 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084036162 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104031237 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104552703 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081781789 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103320134 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084143445 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102120001 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089625468 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104653049 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083279821 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102403499 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081768757 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104905959 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107340222 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092426931 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10606264 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087725851 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09820043 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081390533 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104474007 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101906598 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086594867 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10553123 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090803295 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105912377 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085322117 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10210566 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111245132 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090854321 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107881027 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082053272 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10780902 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085247957 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10565778 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104312504 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08472785 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105481855 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089568911 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105273467 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083962615 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111505753 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107197919 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085695113 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10465548 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084550336 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10416466 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079771265 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104521929 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086105302 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11044653 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106852254 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084579074 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113207292 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084980022 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103707689 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088652318 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103423008 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110207862 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079573939 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10458793 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08557571 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10578163 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080018122 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102893449 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082501051 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106208036 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083863772 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098951201 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111978567 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092292682 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105706596 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084176655 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102205198 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079809954 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099162037 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083493879 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1046346 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105337327 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093204857 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103550928 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084423929 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099765039 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085088087 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106664548 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106935209 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082259414 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099351751 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082937822 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107143826 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092111037 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102261358 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085227656 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108352232 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105709245 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083033522 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10771457 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081760122 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108086714 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095344434 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.1048913 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103852124 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091052248 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111966109 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085917604 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099918334 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086118527 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105867882 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104379469 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086173781 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105010638 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09900929 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107095547 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084046619 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103322431 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106399164 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083446852 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111311343 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086635197 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105071288 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090020445 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105730239 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113000149 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087441157 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109644213 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087502815 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10704817 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102854406 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085510342 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102736703 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083364659 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105675462 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08611952 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109085698 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113503534 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084240352 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114563953 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093518162 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10943341 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081303545 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103718926 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084248502 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099395895 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105395486 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082591225 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102971176 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083854365 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10280051 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085195288 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110665356 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086624886 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106710824 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103910776 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081490816 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106084549 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088083374 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104997083 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08163769 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104972885 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086291424 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110399654 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108442231 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086636377 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105991533 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087437271 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105790909 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080460971 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111763917 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083661705 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107446702 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084243649 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104959344 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.1055096 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089010717 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110601369 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085742991 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106988818 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116862106 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088140805 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101650697 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082216551 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110020779 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083311466 seconds)
  done (took 58.362254486 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150182149 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081900625 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099860161 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080449444 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114931246 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100648736 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080750231 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100516943 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08141131 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103455658 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080226803 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10002495 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111028291 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127076232 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093287327 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10511585 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079892099 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101474123 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099583552 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081809424 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110329899 seconds)
  done (took 2.897028268 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106919948 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.1191212 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116304525 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120339041 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09104981 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117275902 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115008727 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116809216 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101340733 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112875545 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120424113 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116721781 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092025179 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112543046 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111806453 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09455122 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120680237 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110659142 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117258555 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096464352 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114548306 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116157811 seconds)
  done (took 3.251866461 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086351278 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104146872 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086384745 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099582417 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083927323 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099870521 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088367508 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101296964 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087606548 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103303631 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08285643 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103163597 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10582105 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080004291 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104499631 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082480095 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154030726 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108481697 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084722765 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106099102 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079170591 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107418232 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100198682 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080316982 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10377082 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089886567 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105393271 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083082076 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104407802 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083915765 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104571113 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082099844 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105298513 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104288013 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08461756 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103540458 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084612755 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10461202 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080905647 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102922481 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085443323 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099867308 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085210969 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106176102 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082399453 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102976003 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086052781 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105168232 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09852876 seconds)
  done (took 5.513826509 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10564279 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163327657 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086777555 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144506894 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121860718 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113719018 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088106092 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144503356 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104091924 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083423348 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124245683 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122295078 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105525808 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091056563 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11255412 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104277205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086702598 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103785689 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10939848 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085395615 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110515153 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09144579 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120927595 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118729417 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109179186 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084047203 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104725005 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10989824 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099516501 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110687108 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110048769 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092542257 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122878696 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112507685 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086764872 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110774542 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124100911 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10975326 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091633758 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106821599 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090507452 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110842437 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112615973 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103196731 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106231353 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10933814 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085032407 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102377006 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118398742 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088004657 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114246801 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121531319 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10964886 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085915124 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110454819 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122584735 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08585448 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103758667 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089534744 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118846085 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102522218 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089334677 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119774322 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106906564 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114286129 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100443717 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110531822 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109593331 seconds)
  done (took 8.227952737 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094051733 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112736137 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121979753 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123384662 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092771519 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114178475 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116401246 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095791469 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11706048 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123612796 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116920176 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140335881 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090724868 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11577765 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112561598 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091540526 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112895241 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112567097 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092261607 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112641859 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113010723 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122028995 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092379219 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122567772 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144692391 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107029155 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092711515 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112329194 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122368157 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112450796 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12531363 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09384349 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111925295 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122819639 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124949135 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091127648 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105134748 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111270564 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092993092 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113687181 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109576426 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103659144 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113687438 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107874317 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092973499 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113382539 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122294413 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124574948 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116104912 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098569595 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113435742 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122588988 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111809362 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092751605 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122188334 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150699548 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124356541 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12435305 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112464609 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102895684 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121527442 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129987435 seconds)
  done (took 7.801691635 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109285779 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116220072 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119309339 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101095787 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083775406 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109694392 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082889613 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103906765 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11508434 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095011896 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118871726 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110160747 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092331698 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118431761 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10997166 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113379725 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089540793 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11027196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116311047 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109673282 seconds)
  done (took 2.953529258 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094373496 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125606394 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086208388 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118098838 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112681799 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095329266 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112351939 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113904818 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090211413 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113467667 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100910985 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123688425 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109102963 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095279543 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119955822 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112906912 seconds)
  done (took 2.55252124 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096777817 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119022546 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12136507 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0852839 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104997661 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080961232 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106540796 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101793643 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08226436 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122039192 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088463884 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111396372 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105827266 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08425724 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102051709 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088565216 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102308169 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082760004 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106541281 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120786647 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096887115 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105716572 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10678567 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087927651 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106144737 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090950793 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107208322 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104622775 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085752391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110068168 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090025899 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119076088 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106309237 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088395448 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103883018 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083920091 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105704972 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085872358 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109178096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105806378 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084646587 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106580679 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086888055 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108000442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081853149 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107458831 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101836404 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092373975 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104627113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088013629 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108770244 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091233395 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113578597 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122070056 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093479455 seconds)
  done (took 6.338638599 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099157511 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110259274 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081458057 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104971064 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088739195 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111960269 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114755167 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093036147 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113222247 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087109568 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113696299 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094592345 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113735302 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115493472 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092153017 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115460903 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085636751 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112735185 seconds)
  done (took 2.687639619 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091943817 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10663179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09396783 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107404797 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088667234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115576905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085384044 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110646812 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109553321 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090126917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111607889 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092856061 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109835954 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092377143 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111629078 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089124332 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113972764 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108945054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090846779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107983942 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093051866 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110183706 seconds)
  done (took 3.069518321 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119484527 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126193961 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095652889 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236264326 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104651612 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134917156 seconds)
  done (took 1.655660433 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109769335 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121820184 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107419026 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108491162 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116656633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087824364 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110741185 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10849525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120544142 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103740285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109250563 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120016343 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120015208 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097963139 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116444331 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115004392 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109146483 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08823212 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107387333 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12946662 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088545517 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119487383 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108831115 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087672909 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109685893 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119087484 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119567285 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123385795 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088126613 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119694095 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116149248 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088110425 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119299249 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124481757 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110043974 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098743324 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109496086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129500386 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115732575 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097559667 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110703824 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115286292 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099639432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115272658 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118368824 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109395202 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094255971 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109595991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109501798 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137540159 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095059947 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118742393 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116524454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119849314 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098297694 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158015623 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102718471 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118703026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116485936 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1238525 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119255031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095260304 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118802882 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124808861 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116864747 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119130318 seconds)
  done (took 8.227562627 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102834319 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128160566 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109856319 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123957623 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097722774 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109906637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109589668 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088335144 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109184866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108052825 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153753885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088552767 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120449329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119347147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087790531 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109454218 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109261112 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118819362 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087611238 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137324708 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109478497 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119283698 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119333075 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097919702 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124471781 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115778002 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109327842 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089293011 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109507912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109501116 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095014274 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109633459 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119547313 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087614089 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119723157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110243426 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087978051 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116862992 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109364307 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116064379 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098682533 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130095862 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109498022 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109438942 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10398695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109314725 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10962044 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087640283 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109762266 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108000809 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103533966 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124642453 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124402544 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119583939 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110899598 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0892794 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110148543 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109277024 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088666585 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117398617 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119390582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088400549 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15798093 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089151473 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109639203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119866447 seconds)
  done (took 8.101129945 seconds)
done (took 156.736173607 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099086444 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137906861 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097549516 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170766562 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107560393 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125747488 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1392092 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098957094 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107580412 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086602502 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107878329 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087603146 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17918521 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085722274 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10755465 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109084051 seconds)
  done (took 2.695296332 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201354951 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257177097 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103184181 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106735585 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089998934 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111808095 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105725057 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092099804 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111664911 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086153229 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11029006 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086710066 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10664353 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086648787 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111704162 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088732458 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107374168 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088571028 seconds)
  done (took 2.899028597 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114314279 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157509299 seconds)
  done (took 1.12484093 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119618585 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182584535 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321562977 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157742955 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107437598 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128256443 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157491657 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131923261 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198496892 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123957805 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122917117 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099342347 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141357032 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117072186 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096111449 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119547285 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143519555 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094339227 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117211365 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116938453 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117702324 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107607491 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117068583 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094042922 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183780685 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120339746 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086410366 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108160133 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116920613 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094861348 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114685787 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125779948 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098896035 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177773423 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105421534 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178983818 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098283463 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113623888 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115804865 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09208242 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120946324 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119825769 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105331104 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119241752 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085819315 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120038004 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107660292 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085881543 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11613889 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098717607 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116371319 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115026026 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156296341 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119948497 seconds)
  done (took 7.601924957 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800643429 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157331026 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09245655 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.895589222 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139998865 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104233084 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.791377399 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136876745 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235830857 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.770553466 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136154261 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1238595 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231213254 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.242409033 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963165352 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315968974 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.681222335 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104501217 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15402831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15550207 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120755557 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139029935 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132319506 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.461566366 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096747266 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113786787 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097186535 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123214954 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161562161 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127694906 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115788691 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180960519 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250144371 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209351572 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116980051 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090861525 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112956516 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171910214 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270643741 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217318811 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18241702 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088102848 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111878517 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100948051 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134969236 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109876575 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166861645 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175988208 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195764617 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093759002 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12293409 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120687504 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101283896 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187545169 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100439666 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321096533 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312990793 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113136888 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100471886 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129003309 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266008052 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124266516 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227011417 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11802791 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215748898 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11276235 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784169862 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.193166906 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090535777 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119990539 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099204124 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118298221 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123702322 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172100891 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394977408 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126055443 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094652784 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112934384 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20765438 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127139709 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112799166 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163853331 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095283972 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1233243 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126072015 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123658408 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171813501 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.235716723 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125032809 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120810255 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094716416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126599591 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118181321 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214048817 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222775699 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164988068 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210598732 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125149349 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.167245047 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191891411 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10036035 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196497569 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099423406 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127711895 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123771386 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218903188 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146429855 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102732426 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118582676 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120505735 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149957399 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106760597 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120544321 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17205306 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.51041879 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170989275 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11050219 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107580952 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121899663 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162623698 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119032144 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263410086 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101586152 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193421029 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098534438 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110465201 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122008495 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166953395 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124151222 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101538258 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124932901 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120370176 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237811636 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220319135 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102031852 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24656088 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187431845 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120010003 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175856998 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122280599 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170685072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121086972 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101033542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118747972 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797712523 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102317712 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122827723 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11690012 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201584759 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091389902 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126046727 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125628893 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087777433 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779224513 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128658487 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099072749 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12668855 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120267902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122297063 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097814436 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117844896 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1652345 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233191338 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12255879 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098974538 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127274657 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16195045 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118816871 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127644614 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125753046 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105733768 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124561915 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116343013 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104495681 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193711456 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164974617 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222498837 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569619532 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114625474 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125577186 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230858201 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092480577 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292212365 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121297346 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207244376 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190054213 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099981185 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311021732 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191301085 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201795536 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106810822 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.198498849 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089491208 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120067492 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167567457 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112582946 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097530936 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.186365974 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105156995 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126170205 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.977517013 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090608123 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249749345 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088265293 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171922364 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119156311 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123384694 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.300428076 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092172803 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131643517 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166065042 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117083861 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126602837 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701515548 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127193038 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123331067 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097815448 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226018116 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165810618 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122416881 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121735181 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10018641 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187946203 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210324318 seconds)
  done (took 44.573972909 seconds)
done (took 59.746129895 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278336305 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215796178 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260070491 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169812069 seconds)
  done (took 1.877276123 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173515334 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149635288 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123198389 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109658226 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152511451 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085829414 seconds)
  done (took 1.674670146 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.331660136 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2987277 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241148361 seconds)
  done (took 1.756047058 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290298528 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248972825 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.359284755 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.399752027 seconds)
  done (took 2.29989492 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211195107 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13312016 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112736851 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105580682 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202252689 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250611575 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143778463 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206261455 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105880997 seconds)
  done (took 2.400482781 seconds)
done (took 10.89067829 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.267601522 seconds)
    (2/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.235884146 seconds)
    (3/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.160487111 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.170346896 seconds)
    (5/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.231403452 seconds)
    (6/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.095370731 seconds)
    (7/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.20435351 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127801801 seconds)
    (9/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.232051539 seconds)
    (10/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.100087193 seconds)
    (11/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.134024152 seconds)
    (12/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100256055 seconds)
    (13/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.246238131 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122779789 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.182547242 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11847787 seconds)
    (17/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11405955 seconds)
    (18/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17409961 seconds)
    (19/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.220180182 seconds)
    (20/286) benchmarking ("sort", Float32, true)...
    done (took 0.231217474 seconds)
    (21/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.219126167 seconds)
    (22/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.207522476 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.173143014 seconds)
    (24/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093807649 seconds)
    (25/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.227911616 seconds)
    (26/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139350776 seconds)
    (27/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093102081 seconds)
    (28/286) benchmarking ("sort", Int8, false)...
    done (took 0.190801525 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090486362 seconds)
    (30/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.165664443 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.223476207 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125545294 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118979657 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113090112 seconds)
    (35/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.211784873 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117144192 seconds)
    (37/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139865632 seconds)
    (38/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.219119123 seconds)
    (39/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096715034 seconds)
    (40/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.188705735 seconds)
    (41/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.185089018 seconds)
    (42/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134037144 seconds)
    (43/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.201749849 seconds)
    (44/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.200674216 seconds)
    (45/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068423135 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117780056 seconds)
    (47/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.225087384 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.112029164 seconds)
    (49/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185696978 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185976975 seconds)
    (51/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094500723 seconds)
    (52/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.165852995 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138881503 seconds)
    (54/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07085685 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111191488 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.154018159 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.139790644 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109640631 seconds)
    (59/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067436015 seconds)
    (60/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077707405 seconds)
    (61/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138597484 seconds)
    (62/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11353223 seconds)
    (63/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.1494771 seconds)
    (64/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122057964 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067782681 seconds)
    (66/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125163587 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067447092 seconds)
    (68/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125561791 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113285921 seconds)
    (70/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.195555489 seconds)
    (71/286) benchmarking ("sort", Int64, false)...
    done (took 0.110919398 seconds)
    (72/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.219049564 seconds)
    (73/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185487903 seconds)
    (74/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094576821 seconds)
    (75/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124184624 seconds)
    (76/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.132588472 seconds)
    (77/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120822222 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139869527 seconds)
    (79/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087499308 seconds)
    (80/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066480482 seconds)
    (81/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110139637 seconds)
    (82/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082836344 seconds)
    (83/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.124568341 seconds)
    (84/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.163037594 seconds)
    (85/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087343639 seconds)
    (86/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.121237531 seconds)
    (87/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.187697278 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102709599 seconds)
    (89/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119528345 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094001006 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09054965 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095492492 seconds)
    (93/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.09023088 seconds)
    (94/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.152396051 seconds)
    (95/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117862725 seconds)
    (96/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067110167 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.142912016 seconds)
    (98/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087635108 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.191699333 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11672271 seconds)
    (101/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094721246 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111011722 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086610675 seconds)
    (104/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118097062 seconds)
    (105/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.120120493 seconds)
    (106/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098773864 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110050221 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 0.182238356 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096190677 seconds)
    (110/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090602719 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094955837 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110674947 seconds)
    (113/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067280972 seconds)
    (114/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120186894 seconds)
    (115/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.132426771 seconds)
    (116/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143866591 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.188212061 seconds)
    (118/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066492444 seconds)
    (119/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13045649 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093681165 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117444434 seconds)
    (122/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09854545 seconds)
    (123/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119868229 seconds)
    (124/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094597906 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118291687 seconds)
    (126/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068259563 seconds)
    (127/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.141923753 seconds)
    (128/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088864561 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.144358781 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110145517 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094875544 seconds)
    (132/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066776386 seconds)
    (133/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.144132242 seconds)
    (134/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084283126 seconds)
    (135/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090836163 seconds)
    (136/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067355243 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068085499 seconds)
    (138/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122405125 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119149393 seconds)
    (140/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231752095 seconds)
    (141/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066890988 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138605124 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088103807 seconds)
    (144/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091086186 seconds)
    (145/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105565271 seconds)
    (146/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137087812 seconds)
    (147/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.120740217 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120248612 seconds)
    (149/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116163953 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067061567 seconds)
    (151/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091542427 seconds)
    (152/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.143014365 seconds)
    (153/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119880677 seconds)
    (154/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.088450923 seconds)
    (155/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.122813523 seconds)
    (156/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.149977102 seconds)
    (157/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.091765435 seconds)
    (158/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093730267 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136101675 seconds)
    (160/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.119444316 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.140774694 seconds)
    (162/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120760454 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098006335 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148068845 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096626164 seconds)
    (166/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124643318 seconds)
    (167/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097127117 seconds)
    (168/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118229195 seconds)
    (169/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067880058 seconds)
    (170/286) benchmarking ("sort", Float64, false)...
    done (took 0.173548113 seconds)
    (171/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068498098 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112823145 seconds)
    (173/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117349367 seconds)
    (174/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093237357 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.119525638 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 0.221921154 seconds)
    (177/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086692611 seconds)
    (178/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110256689 seconds)
    (179/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.141752078 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165229906 seconds)
    (181/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076879021 seconds)
    (182/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117110137 seconds)
    (183/286) benchmarking ("sort", Int8, true)...
    done (took 0.221916559 seconds)
    (184/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.144443125 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067153203 seconds)
    (186/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.19385713 seconds)
    (187/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087879318 seconds)
    (188/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092645207 seconds)
    (189/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159356339 seconds)
    (190/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.093101142 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097111008 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120319936 seconds)
    (193/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10333224 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112798234 seconds)
    (195/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186258855 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087905509 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110465402 seconds)
    (198/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093238054 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118757049 seconds)
    (200/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086584494 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115785678 seconds)
    (202/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068318792 seconds)
    (203/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076725817 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.112147096 seconds)
    (205/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067932253 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099658906 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087038891 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182528052 seconds)
    (209/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088396468 seconds)
    (210/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091911388 seconds)
    (211/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067646331 seconds)
    (212/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068715367 seconds)
    (213/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.102082206 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083269369 seconds)
    (215/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232396493 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111765119 seconds)
    (217/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.090262387 seconds)
    (218/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092474972 seconds)
    (219/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094155397 seconds)
    (220/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.398719769 seconds)
    (221/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077070236 seconds)
    (222/286) benchmarking ("sort", BigInt, false)...
    done (took 0.224034487 seconds)
    (223/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.113230261 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068190016 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111413998 seconds)
    (226/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102783753 seconds)
    (227/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.101549962 seconds)
    (228/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.161412079 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11085681 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087750687 seconds)
    (231/286) benchmarking ("sort", Float64, true)...
    done (took 0.231083673 seconds)
    (232/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092594159 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087391237 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117913331 seconds)
    (235/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115739942 seconds)
    (236/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.113374484 seconds)
    (237/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12104633 seconds)
    (238/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067009059 seconds)
    (239/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095295914 seconds)
    (240/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172971044 seconds)
    (241/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176228333 seconds)
    (242/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067169337 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067494548 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111296359 seconds)
    (245/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112687605 seconds)
    (246/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068183667 seconds)
    (247/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068186045 seconds)
    (248/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119424318 seconds)
    (249/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068033817 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111743872 seconds)
    (251/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.143237831 seconds)
    (252/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12038357 seconds)
    (253/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078637297 seconds)
    (254/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115589079 seconds)
    (255/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086505614 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.135469225 seconds)
    (257/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067525685 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11094267 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158150427 seconds)
    (260/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164642284 seconds)
    (261/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092230118 seconds)
    (262/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076413418 seconds)
    (263/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116019861 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096127717 seconds)
    (265/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067816023 seconds)
    (266/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113456811 seconds)
    (267/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092609566 seconds)
    (268/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.11024656 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092469445 seconds)
    (270/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11331059 seconds)
    (271/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11192566 seconds)
    (272/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068485644 seconds)
    (273/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091352907 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.096870183 seconds)
    (275/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.11392777 seconds)
    (276/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.092121338 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088233512 seconds)
    (278/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114098594 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087794875 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116793631 seconds)
    (281/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094492875 seconds)
    (282/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091197116 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0888593 seconds)
    (284/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.092429745 seconds)
    (285/286) benchmarking ("sort", Float32, false)...
    done (took 0.151961464 seconds)
    (286/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091342384 seconds)
  done (took 36.342881354 seconds)
done (took 37.236004967 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100587295 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150428792 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096519104 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137036304 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125165757 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092400307 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.12015941 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099014043 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124166573 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127235638 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09918147 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093998706 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097470519 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121388348 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097047762 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141203664 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127149985 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094993035 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120695617 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087311221 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120561092 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087919899 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113298387 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070592017 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123145006 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094931157 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117678359 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122102859 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087566437 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112283875 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09071778 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118776706 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088085136 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125240027 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094248578 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121473961 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098136438 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122076555 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089608246 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111435016 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120259215 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086888273 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118961006 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095543128 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11832714 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09292344 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120304441 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099036549 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140621822 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117280286 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096529226 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121338734 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097138658 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119212071 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093587742 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120809775 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092594109 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141232631 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120165387 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093148683 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120240858 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096133965 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117483729 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096401982 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120892495 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122691525 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098846843 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118036139 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098157196 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117598348 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087283152 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120544211 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091917782 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112241143 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097103364 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122594575 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086131083 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117541336 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.094341974 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116911172 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111645467 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090260371 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113497825 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095043191 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114255602 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070870667 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090958666 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118486111 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08686801 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121551552 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118573938 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094537229 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113701516 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099349511 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111493516 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092756842 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112569242 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087800481 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114061782 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092219379 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111245981 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091143083 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121207733 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088860053 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118552137 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099797792 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111920123 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118642612 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086624484 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111917791 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103082245 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122505929 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087271728 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118088841 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086256833 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119495779 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087431485 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112525894 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088092636 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112503112 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094044908 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112043008 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090273797 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118990899 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127155582 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087138812 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11583643 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08981392 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112217453 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092627473 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112326495 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087818258 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113842788 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078130061 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114501773 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087466316 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119483641 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089838854 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120074878 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089330362 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121863559 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092716339 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117890469 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094030759 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111775906 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074779536 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118464711 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089812424 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114217351 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087152103 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113985728 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08772251 seconds)
done (took 17.085218146 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088689614 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186273289 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153595267 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144856666 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108014732 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113824893 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123143434 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118773623 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114257969 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144421283 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111503955 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132852691 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150029414 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08765137 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113491017 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09224504 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114510602 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103095743 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147262071 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133737574 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165752433 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087175681 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149809079 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137007891 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123332824 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114496227 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113579555 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091749071 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116698885 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103315353 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133376324 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091178545 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113149982 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136244767 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105773563 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121247314 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087714384 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119999255 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088071675 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112978448 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142678062 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134509518 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09300954 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119335137 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092498333 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114788401 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089981746 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121635517 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098475677 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117104459 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12739314 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156421055 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091560952 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122757005 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087001745 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124080481 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122578965 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090520535 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113504977 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090432586 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112960527 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090846127 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128391041 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1432716 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092057206 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123238205 seconds)
  done (took 8.672953944 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106189509 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140984739 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106581024 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132399425 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112980628 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088514814 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113824996 seconds)
  done (took 1.749358338 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089091966 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136086393 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112839886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136995585 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134306637 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112828014 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124584117 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089346435 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132453634 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090267418 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13538749 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152049201 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090647557 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121938879 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139284013 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088668163 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139453139 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089379355 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117596562 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113591782 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118409999 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136929219 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092145179 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115269842 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103812692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115498829 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163991224 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094490703 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115965549 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093012924 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113584207 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152440261 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104471974 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126567834 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089219566 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130177639 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.104339123 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112945525 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127513523 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094729076 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129370134 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090480107 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116668637 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088175304 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119007214 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099780822 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118907984 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090346129 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118150616 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135164117 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089682838 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12886438 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.108186885 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119368651 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091451618 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121888788 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099436936 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11573052 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134587175 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091019837 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132611117 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106564659 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128846138 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10573286 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117383047 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129069585 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103783123 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118186964 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091941086 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11859755 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106189206 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113012452 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091192912 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125914583 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117720394 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112512398 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139079907 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091680218 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125618531 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088973197 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11545071 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090131653 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137661577 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11902307 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090733011 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118904055 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09336364 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115753653 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089379711 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118136549 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088463762 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116471505 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093408857 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115592117 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092146141 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131623295 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11611089 seconds)
  done (took 11.91692529 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091383136 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116245992 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09229642 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116466323 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091472963 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116575886 seconds)
  done (took 1.583550703 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115264027 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118758689 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104947217 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121169855 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156995518 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104307007 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131696315 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125183879 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109318462 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128899904 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130563743 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105744564 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136834646 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122839519 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104846212 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121804561 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105124307 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126989565 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128593207 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096616313 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139205586 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122899422 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097642528 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13310077 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119491602 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096081704 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127169604 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103284803 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128751119 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124676564 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096884203 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118933311 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099001101 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125305718 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131980215 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096558854 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122678263 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120896687 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101217599 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11891168 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106088121 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123752318 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128882911 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094504465 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125645825 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121388161 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094476417 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128377937 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132147927 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09474035 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122042404 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095437794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119856742 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094522342 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122732604 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125095752 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094649889 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131208117 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122788734 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097214042 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119543373 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093472163 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124905932 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119995885 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106003905 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119633529 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096602535 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123241429 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122728901 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096757193 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120617256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09396458 seconds)
  done (took 9.297031625 seconds)
done (took 34.165839359 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.696479106 seconds)
  done (took 1.655740118 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.841276835 seconds)
  done (took 1.801836207 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.340325748 seconds)
  done (took 18.330293375 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.495243859 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.586860653 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.000536717 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18157833 seconds)
  done (took 3.226263933 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.970129628 seconds)
  done (took 1.952580413 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283884638 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236731018 seconds)
  done (took 1.487575466 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.781902421 seconds)
  done (took 1.760466903 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.367021769 seconds)
  done (took 2.33731961 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326906707 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185242535 seconds)
  done (took 1.48759778 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553751037 seconds)
  done (took 1.529374908 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.494360514 seconds)
  done (took 11.475048369 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267376599 seconds)
  done (took 1.254656792 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302924448 seconds)
  done (took 1.280770214 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.590443943 seconds)
  done (took 4.570173484 seconds)
done (took 55.121037413 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099611969 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127657944 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102504384 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125670158 seconds)
  done (took 1.428383867 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101597538 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122548198 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100618009 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122112501 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127915373 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095996819 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124503812 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101663578 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121536217 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096719553 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122424037 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120979608 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099773682 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124095803 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094786608 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125287867 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099835579 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122490769 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125398941 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096960346 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119917544 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098538034 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126125316 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094932114 seconds)
  done (took 3.668923912 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101152485 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12002136 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096759894 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.1197004 seconds)
  done (took 1.425778005 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100765023 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133601015 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106520354 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126382844 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13190856 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106084118 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119155775 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092168753 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121458353 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100069461 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116754451 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.114956915 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132838275 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125263448 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102293641 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115103376 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091888869 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132445002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126415432 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100940396 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119749901 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099947968 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116565296 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110234963 seconds)
  done (took 3.725874914 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171167119 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128189634 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140305741 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09536506 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162056205 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141925091 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0885257 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142109686 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088302905 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132703871 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119299196 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134175671 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130606653 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088618368 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114419403 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088729693 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130029507 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129559499 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091095575 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129101497 seconds)
  done (took 3.436774371 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098041372 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118689705 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088730064 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117858412 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099463985 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121858836 seconds)
  done (took 1.632648299 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091269432 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115627364 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091231017 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115780757 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094658433 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115982578 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088732645 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116351914 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090282848 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115846927 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090301213 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114693673 seconds)
  done (took 2.229172987 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.504789395 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121183053 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121493989 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089102531 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122781592 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090051109 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131600095 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092664319 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142013704 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089727242 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11687075 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091732164 seconds)
  done (took 2.701139341 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236027052 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126777001 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283496797 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373841046 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15515079 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178515625 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285084863 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161808753 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226775133 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167774913 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20359129 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226486812 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15470231 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191989174 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14066364 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119698308 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233442838 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249861495 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15508398 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210840596 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229917524 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170754082 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181967542 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15287966 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140994859 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172881972 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094804709 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13156517 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239774977 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179267939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217035962 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164297306 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148167912 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209806813 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256321567 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223980157 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286940806 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135495225 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151886565 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171956789 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264365749 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14043391 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205073767 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157406905 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133801504 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219265241 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165764562 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178731805 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15393037 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113351671 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224613403 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240060886 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194308956 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140058633 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30363295 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14982871 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176028413 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223508792 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253262563 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199829957 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188654594 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122258078 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190058488 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221796717 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18723163 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.176107239 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180863887 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149123043 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229279265 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190524977 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165958289 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223406428 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186832928 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140818141 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17284256 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172332285 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174285444 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260473806 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213002395 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09643368 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170207923 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151958814 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134706612 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197092918 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099058589 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242411444 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144961381 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13718763 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243396554 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160048819 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161924483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205470563 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232271758 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150101607 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083904033 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155941932 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155746859 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194481978 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141691019 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158282668 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163865984 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131906473 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185847062 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125348725 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186524747 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119258031 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173309643 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185084818 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127291376 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162417213 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125677298 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152501841 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206773 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199995171 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143948406 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107533772 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240182639 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180723041 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15265893 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177459088 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230445443 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11945475 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15135661 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229581444 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217648054 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141974273 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229586217 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130056602 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135473092 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133707601 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183896001 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15572934 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162422345 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135319479 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185811385 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235568027 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099388415 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140123166 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194996541 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134917508 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133207945 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164647421 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150598101 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112763241 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152866881 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154656493 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183680268 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210967216 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155079589 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166277748 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152976291 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256114285 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115658151 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15282671 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151455992 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121946839 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19417349 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199716812 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132807255 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206679591 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198953975 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205739145 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171071738 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137881936 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182353515 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131953603 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094288227 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223243824 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169983674 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163186146 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199459656 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230354198 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183789679 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185939828 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177917523 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20541661 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139821302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186736174 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111434765 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163514516 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171740245 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124973245 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146189768 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107622217 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152227851 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145168398 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135530872 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200881937 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202760275 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193044639 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161475426 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152433466 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188878288 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130588869 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178381791 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181703714 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151977616 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199737482 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223843471 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188853279 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145769404 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205266559 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122945432 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098278203 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14571398 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16937004 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136937472 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137249661 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166230563 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183384045 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181284844 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180271747 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243807272 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17365059 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194388181 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123534916 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170927711 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1861825 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179817635 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.194971111 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144934819 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152375764 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181160964 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159763745 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259486151 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172200973 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178009378 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20722245 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152830625 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134484117 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154554378 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199527162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157746979 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183499319 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15162455 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14266317 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163027915 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134801457 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164801028 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190734209 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168280633 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220199531 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122669982 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216543825 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100395331 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165491305 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16107653 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169256231 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113634234 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176195308 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233196578 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121363171 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196603375 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191358631 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103958736 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.339017532 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217523002 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226116808 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111295131 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159094007 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165665484 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164456946 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172265742 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179799856 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163477719 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219582462 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160655521 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109233145 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143668662 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153122339 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152875988 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104644919 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152843431 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.210898004 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113206963 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218022311 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167725002 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161612694 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177560665 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123522131 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14933047 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155171521 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249025027 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187432529 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243079733 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125908984 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.21012854 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211406217 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127100405 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106057785 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136350323 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182484832 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138340483 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19766357 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215646714 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206688446 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186123436 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231002659 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142660824 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09418978 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159858562 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17708799 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240773046 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155200387 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16185063 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204952678 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.150652013 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104220418 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208045848 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301684234 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146360873 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200607875 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.0832189 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313907124 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100877082 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134218968 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163949473 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21177598 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140588006 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.194263908 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17535074 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173795903 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16727534 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151648158 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221129805 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219003363 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230948798 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18400462 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104755122 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156763735 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206773982 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193052256 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161551819 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142062183 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208001193 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196750649 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226396285 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143606936 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170706085 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170817876 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15888856 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189767576 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136637591 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210063729 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137087134 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1960674 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155071889 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146339254 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17744963 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.218094832 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143554078 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189033445 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185031435 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137282258 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135071722 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171432844 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181276552 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160379428 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127606656 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184889733 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097435801 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226813975 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2604504 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107851434 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156771993 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149162292 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138173026 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158011512 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160950956 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141667678 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.13957808 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232195272 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107780074 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222662276 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204476521 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17262851 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203777289 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117535347 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.723708592 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103514354 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225451767 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132560837 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239922254 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152096011 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175792874 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160903004 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170413229 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197435654 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162410731 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232778303 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228634376 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181796826 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133550104 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161128899 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165775641 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146054244 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152769272 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169955339 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160699669 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156305577 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180700427 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174645603 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135961129 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112108611 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229899973 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16071704 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184690518 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182084331 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139631365 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175591922 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188801875 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136223851 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180507753 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244209509 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146531154 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152120084 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106312324 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.160309969 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273344049 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127140558 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205796124 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216946742 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132187897 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19894579 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118598605 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226175146 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159896505 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187399232 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149374011 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160832647 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158960433 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14014394 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130282146 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128841374 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196257631 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122805036 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1611275 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170035712 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196232414 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124836499 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145506952 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30028353 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194661518 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246775676 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134659988 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107972069 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164243884 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153202382 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177614269 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18138553 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139956866 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13949747 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143456673 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132480781 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143239953 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155676359 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199351565 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166835994 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208972565 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141000854 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279579953 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139958401 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128728795 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118131193 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132615009 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123654481 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148325271 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160482026 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220199988 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236573245 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148990333 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135940605 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152508586 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098996758 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138736499 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165030406 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166485122 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179599884 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147485654 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080091177 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158012953 seconds)
  done (took 84.327600142 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174284166 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15543796 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166119271 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221527892 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195854084 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286789564 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232257176 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27493749 seconds)
  done (took 2.792506751 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094673521 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147025678 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158530021 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134237946 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092283507 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120769617 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345747006 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134047726 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118536772 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121794585 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17605296 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095029585 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554519742 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09085617 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121031946 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10826044 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093834777 seconds)
  done (took 3.786288921 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.278860968 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.510838045 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.178839944 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198530847 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161566771 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.119015942 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.736770032 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09507956 seconds)
  done (took 12.363208492 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116477575 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138611518 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124536327 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154951688 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.144352498 seconds)
  done (took 1.774392851 seconds)
done (took 126.267968369 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097713311 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129367837 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098435146 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132295517 seconds)
  done (took 1.533044376 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095212937 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070726733 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102008231 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075190468 seconds)
  done (took 1.427245935 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191356533 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169920768 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.410465491 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071397405 seconds)
  done (took 1.602223157 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11486533 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133613585 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105394231 seconds)
  done (took 1.44888253 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106727654 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131394307 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103688127 seconds)
  done (took 1.433806919 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106755874 seconds)
  done (took 1.198468267 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108452055 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138658676 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109601664 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137623399 seconds)
  done (took 1.586344749 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098664577 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129307685 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111406379 seconds)
  done (took 1.430202389 seconds)
done (took 13.107708527 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103887193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518080326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384645432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145925762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723952326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382738195 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036534251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149690646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169330792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093740799 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141495069 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676828489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025696516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.475135727 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983394667 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376024622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678765634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123755649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120336079 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094456522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017795349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093539971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124045686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09388346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705522399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429491267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096396264 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376182512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092813312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128028726 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383132908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124456497 seconds)
  done (took 17.150018123 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095462952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177228616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100415391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139951174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125674744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095341621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125756549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094238565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182686424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125960274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111009949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122155627 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126954903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095889427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142932728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095350587 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1268248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095416178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122663192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122034508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112273509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121312478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094032114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123090219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094080319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137566771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098566496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122042261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12186638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099644267 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128429011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095302178 seconds)
  done (took 4.869767642 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142217269 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18438652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129492115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12748769 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169842868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125099843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200330586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119054592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184533744 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124253024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140551974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094076427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158880625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094674539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14545878 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121894865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09742117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123274828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093313024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124350653 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140825699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093858916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123178315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095936353 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123724036 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108376022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125174184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121970386 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093984055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127642524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100108611 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125131783 seconds)
  done (took 5.185276714 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097381784 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127416596 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110001605 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139259882 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095994836 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126857838 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097370318 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125580833 seconds)
  done (took 2.02149872 seconds)
done (took 30.319973261 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112192684 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128051161 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107937552 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135215178 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103008525 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132939047 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092365292 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135926878 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13687646 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103589779 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14039512 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.095689308 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124156548 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092741006 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136563936 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09818706 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133406803 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.1027526 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134691755 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134005664 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095426214 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134890145 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103407504 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13452172 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104483977 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135140208 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138274491 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100398584 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12370031 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095048772 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125956079 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.106563113 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12432586 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105398173 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127541987 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097929308 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125005637 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095220187 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134108779 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133760745 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100293053 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134763148 seconds)
  done (took 6.051445952 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107493257 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14545328 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10490863 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081187534 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117278166 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080411538 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138525529 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.084278532 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11088471 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10791857 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074916292 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107333305 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078271031 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10191479 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077714914 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075862669 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108909981 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076910499 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076483142 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106849042 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080236552 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072930047 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108936413 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078889191 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075260266 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111002609 seconds)
  done (took 3.591301154 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100805191 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135356084 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11340386 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185338519 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162176372 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100342877 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132662611 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.111102822 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139512774 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121483997 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097166784 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150873597 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110523391 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130749737 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093011944 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139249831 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137340588 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095014813 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128934626 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113027987 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139797567 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103957687 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142260816 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133309519 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092857087 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123381498 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098264839 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136125153 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098686909 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13205051 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097743852 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126165201 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.1236919 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105577407 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127016487 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095090469 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142578563 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103141843 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131866622 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093530097 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.13062222 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123233746 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114476364 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162567704 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093079696 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13080351 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095912328 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133245452 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122842655 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111623103 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132381095 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092680145 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126085094 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092301182 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122561758 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107614371 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125038075 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095552111 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132948818 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127682612 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106182882 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12622059 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109692596 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122647608 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101645586 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12317069 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093985583 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122852326 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115118867 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124537479 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162336411 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095845427 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124849228 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102543749 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131554728 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128742654 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093955971 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138778888 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103854871 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126372581 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101962716 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127624065 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095096179 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142188034 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095641092 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125756069 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095052113 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130829337 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125151457 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094598154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137047113 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093167497 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127103651 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111429942 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123953939 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094121592 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13020467 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128112546 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093810687 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135791384 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099050799 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12489087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103547267 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123299962 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096025239 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133923386 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127214795 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093298372 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127707111 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099931208 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.1244062 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094108836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126920667 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094471962 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13415907 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100410402 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129461436 seconds)
  done (took 14.926821571 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230530649 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216896489 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209772566 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29513998 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136665014 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115513929 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214862592 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156980781 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125117421 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162273161 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175041637 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182996036 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170482727 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183538383 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171812839 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094134472 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143899651 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135043148 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.249196535 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259799197 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14609932 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10175824 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164247294 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161376866 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138414169 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133878936 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11135573 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136397987 seconds)
  done (took 5.842860306 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109439666 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157656718 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099774598 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147110441 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149811606 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093574573 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129252743 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094708827 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137227594 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13749625 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094477215 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130574711 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100594897 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134211417 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124036274 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103954945 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133791161 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095998616 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127844651 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09775057 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135786011 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102555422 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12803473 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092466956 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134047588 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124201143 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087681625 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144710206 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093748936 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146676967 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122564435 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102475839 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137907454 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094076483 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124723259 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096146555 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126710497 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096104916 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126867357 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09277078 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124328258 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077586544 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123095227 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108767033 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.13086016 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080860835 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131697151 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12929618 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095419084 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121977791 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097338832 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127323892 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097333219 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131822793 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096712272 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12439564 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097386629 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116521936 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100889168 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126519792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08528174 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122095409 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099874478 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120188455 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102006975 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128845525 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092933296 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126361975 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098674741 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130005529 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096327806 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131125509 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091510853 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127790588 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096405592 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13025974 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097354688 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123501641 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093565605 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125410206 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075273934 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125053731 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074742915 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127389392 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091681967 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123727427 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096187807 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13127791 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140021769 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095983559 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133539867 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09486614 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12369403 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097102492 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114319818 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097304171 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141028933 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142136529 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094267592 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122073112 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109566455 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127512536 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093600207 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107147785 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102601274 seconds)
  done (took 13.076635213 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128385559 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155811937 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095773275 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143478296 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158018455 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159342221 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101883122 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132254559 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095575189 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142865432 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09368801 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133038366 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095086223 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139000832 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158050332 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104106969 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12737481 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108979158 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129110803 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171110025 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112558002 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144144275 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111269626 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125774738 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099685327 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141745872 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162873266 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10818278 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13813443 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143737835 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108719787 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163711308 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113974317 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129200021 seconds)
  done (took 5.514101798 seconds)
done (took 50.105567776 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.218377217 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.4424201 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.196776117 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.174061689 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.241443545 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.229531715 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.226063159 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.209193215 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.26108811 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196104158 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.43709259 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.761659462 seconds)
done (took 58.721124076 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.327005463 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.32992534 seconds)
    (2/2) benchmarking "String"...
    done (took 1.459755006 seconds)
  done (took 3.926556428 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.558334058 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.157785889 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457322599 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.196989377 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.205440546 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485014819 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.984149966 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.614796979 seconds)
  done (took 28.229695841 seconds)
done (took 42.167861707 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.192197241 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.213855627 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.219380409 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.194031841 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.319158482 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.224616066 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.361160318 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.364749708 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.228925768 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184374126 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.220325992 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.220333943 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.211721019 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.368910542 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.208385234 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.197816001 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.276582359 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.86629186 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622787161 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.21525735 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.200845529 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.248990643 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.2058881 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.217299568 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.204266813 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.204413733 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198766203 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.229625951 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.988644758 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198054062 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.228371162 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.597462108 seconds)
  done (took 190.762810931 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198782824 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.312014577 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.407945874 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.23908026 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.657326358 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397328519 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.344532313 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.880276811 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.218119664 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.202510536 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.417043276 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.204361211 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.526844724 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.178976216 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229601695 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.306758492 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.405047024 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.529987528 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.242877059 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.332873008 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.205887848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.602234734 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.517173262 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.361153702 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234501338 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.297489745 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.249811771 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.230641865 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.412875911 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.303516796 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.242752069 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.224506871 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.871651212 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.057564376 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.217071097 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233349244 seconds)
  done (took 150.624656934 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20166068 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202478703 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202191447 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.236723576 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201574962 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.200567559 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.8295511 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.751273152 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.571952978 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.824757082 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.755776617 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.520596002 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.202408233 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202230338 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299274781 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215197581 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.20328438 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217435186 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.245714792 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208275681 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204288746 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825027855 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220634463 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.194663725 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.385594908 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.218715818 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237821163 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.594070916 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201952014 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238020284 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540454294 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254707559 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202814622 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.660083382 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.756795901 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320102806 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205042772 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238403133 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204590284 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.488562587 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203142914 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204014585 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207231998 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951484169 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.2071613 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.813392672 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208017034 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.203710587 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203478027 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204049762 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.880364414 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.040393867 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226956799 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.203876757 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206014321 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205301798 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204775561 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.239627589 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.798936274 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304017683 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.222882262 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207490473 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241094984 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205173736 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.547066049 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209323718 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.177948339 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266795825 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.420695105 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204958434 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829252248 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209804263 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306130626 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328772684 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205826279 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205307159 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206205765 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206058346 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.318951851 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205707467 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.661471916 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.389850253 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223692262 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.767903982 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.310385182 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206166169 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.670255571 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211812812 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205193423 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.055698343 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310805052 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.206774672 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206198077 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206430212 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206708732 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.663368805 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.838133765 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.540480267 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.212275254 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.988060176 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211760655 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.681281755 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.799397557 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.908616051 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208458535 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322027812 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.390630914 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225325968 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207395008 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.76952381 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.212473539 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.267151483 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206890925 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608359491 seconds)
  done (took 370.167005383 seconds)
done (took 712.680318732 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.80567533 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.796853724 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.903618952 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.787068317 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.756295653 seconds)
  done (took 10.188520289 seconds)
done (took 11.323921896 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.405017033 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.406434556 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272780891 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.407865012 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246945635 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42655123 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392228692 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234879963 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.312832335 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.295094782 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312575496 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263871681 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244629457 seconds)
  done (took 18.359888671 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5415435 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534401386 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273159275 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533806686 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249380502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5348441 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418935499 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.427097182 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430246664 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244691063 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223834827 seconds)
  done (took 16.553225402 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553457929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536301197 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27569726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.534648758 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250314645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.590232989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422005732 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431624088 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432044076 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223775126 seconds)
  done (took 16.634405918 seconds)
done (took 52.683654787 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.21874544 seconds)
  done (took 2.36050239 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255212933 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.424261654 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24350321 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227013728 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220373894 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221432771 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.225911066 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.219905785 seconds)
  done (took 11.179651178 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.219398402 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216580567 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219777157 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216372059 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.219919517 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219670743 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217911929 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216537007 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.217268176 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218076992 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216321855 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219980911 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220824291 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220766169 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219073467 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217022092 seconds)
  done (took 20.638278263 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218891516 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.21791603 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.216565891 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21825158 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217117161 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218600677 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219500062 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.21940082 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217917738 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.219296324 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218570717 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218646807 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21838971 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.21796953 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218449499 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219716924 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218230622 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217925009 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221420981 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218006362 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219364678 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217605759 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219150822 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21953822 seconds)
  done (took 30.391764 seconds)
done (took 65.707610996 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.858678801 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.970268043 seconds)
  done (took 6.97316527 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.221181122 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.221003653 seconds)
  done (took 3.58879813 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.22143384 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220667919 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221016294 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22113117 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221024491 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220467255 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221423033 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221849024 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220869891 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221178883 seconds)
  done (took 13.355540831 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222338271 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220611599 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.218360084 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222074558 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221996872 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219734162 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221503701 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.221319988 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222684996 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219742221 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222560596 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219973523 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.222796995 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220549593 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223305819 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220352216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219581909 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.220461616 seconds)
  done (took 23.125434271 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.222144133 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.223024298 seconds)
  done (took 3.590598384 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.220703552 seconds)
    (2/7) benchmarking "second"...
    done (took 1.219773032 seconds)
    (3/7) benchmarking "month"...
    done (took 1.220781012 seconds)
    (4/7) benchmarking "year"...
    done (took 1.220624603 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221326701 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220192603 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.221398755 seconds)
  done (took 9.69113088 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.223955927 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.410420645 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.491811646 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.847030353 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.223902717 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22819235 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.08118573 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227951566 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22997542 seconds)
  done (took 14.11140957 seconds)
done (took 75.576700529 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.267990939 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.238474411 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.505820337 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.222274773 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.242904791 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.518957445 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.239800101 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.351858124 seconds)
done (took 37.73220142 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.229779219 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.200650838 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.008024297 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.211254894 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.294366035 seconds)
  done (took 18.863324175 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.30767898 seconds)
    (2/2) benchmarking "read"...
    done (took 1.555145663 seconds)
  done (took 5.011004415 seconds)
done (took 31.248210529 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225015914 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225943843 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.226307291 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.225136502 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.222774407 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.22303252 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.225665466 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.223985725 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223571577 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226888134 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226931261 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.225459378 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.225826347 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226420875 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222922336 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223045876 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227363828 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223361508 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223959515 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223808318 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223895951 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225497642 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223042956 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223290504 seconds)
  done (took 30.541679582 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22747635 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224177724 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226811961 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225848341 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223064749 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226750866 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225971312 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.224360013 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226411625 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.226651377 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224185418 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.225515522 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.227070618 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.225155655 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228222201 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224744333 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.228171216 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22549043 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22790052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.225932564 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.22694527 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226071937 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.225265309 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229005595 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224281788 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225991386 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.228807537 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.225635095 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228906482 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226495065 seconds)
  done (took 37.938400057 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235047366 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.235797885 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.227981248 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228694669 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.228687947 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.22840902 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.229453862 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227773599 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.228252492 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228185483 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229852535 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.228581866 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228285428 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228085734 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228637092 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.229002879 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228627332 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228846802 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.22936454 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.229805867 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.229727486 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229104382 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228882758 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.230302952 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.229570125 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.230710583 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.230082638 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229741699 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.230906549 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231100252 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.230404038 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230148847 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.228956962 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.230429574 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231610092 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.230087448 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.235932754 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.23924617 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231098421 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.231437927 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229409602 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.230471693 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.23078524 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.230781857 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.231395981 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229842811 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.230890451 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.231510651 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.231259128 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.231830609 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231224771 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.23174185 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.231367941 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23050788 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232428889 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.231740946 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.231299596 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.231271435 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.231117448 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.23267898 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.231849706 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231718577 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231325281 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23108759 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233434364 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233402142 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232727429 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232125866 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232266938 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233034625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.2335968 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23369174 seconds)
  done (took 89.774140041 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.232691129 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230117622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.230388715 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229661477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230800811 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233598943 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230913976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233558586 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231743334 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233592726 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233138018 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231508538 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231135082 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235283419 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23456025 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232073263 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233928414 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232039624 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.23496014 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234302775 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234406175 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231140104 seconds)
  done (took 28.27195738 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234183255 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236827322 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231466404 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234532836 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23155155 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234574815 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234330846 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236823806 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234065491 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231869169 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232262833 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235967066 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232107906 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232615922 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232989654 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234373666 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235018367 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234968014 seconds)
  done (took 23.368159126 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.232813252 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232932661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235476158 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232685 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.233608278 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235753884 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233435527 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235126606 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235807732 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233513004 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.23599998 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236978429 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.235298248 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233116443 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236889822 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234124748 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236308036 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233855689 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237391233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235034759 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234171352 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236849068 seconds)
  done (took 28.325715741 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235763123 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236743504 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234398696 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234497861 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.23387297 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236448643 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236988031 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.235463223 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237966023 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.237831454 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236091826 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.238534245 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23777946 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234881806 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23539582 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235681353 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237626316 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236312297 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238469995 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23461215 seconds)
  done (took 25.884550293 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238844632 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239307484 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240417719 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239751735 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239592245 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239758062 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239710533 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.239648239 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24005856 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239962865 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239036764 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239728882 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239554348 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240366739 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240468745 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240122676 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240260956 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239719997 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239584246 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240715629 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241111062 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239508989 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240280334 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.240512888 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241092444 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240449194 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241606594 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24074389 seconds)
  done (took 35.882963886 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242147496 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240663607 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238169543 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.236978271 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237770785 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.238817798 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238443667 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238043566 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240177722 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237547231 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240623688 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.241725401 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24127984 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240826461 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240798575 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241158055 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240909381 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.238683978 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23925787 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238630742 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241430869 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241109749 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.242328637 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239725875 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238928842 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241239218 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240362536 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240050788 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241816629 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239747066 seconds)
  done (took 38.361405194 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.26058465 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260014508 seconds)
  done (took 3.683423131 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.239906231 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241991205 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243070704 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239967795 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240997085 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243628508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242767015 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239856293 seconds)
  done (took 11.095786094 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242610171 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243608466 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243754465 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243793897 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244188783 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.244397511 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24972035 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.265051648 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.245210484 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.246108772 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251385504 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.252588485 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.246193716 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24424569 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242637559 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245076389 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.24461869 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245120506 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244940316 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.244890174 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243834068 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24607437 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246156706 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241993228 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246368973 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255751061 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.268932912 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245035581 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244422719 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.248172407 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243916463 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241894357 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245336153 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245941186 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.244846138 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.245449369 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25469099 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266691885 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.251118974 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266601029 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246614118 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.243682504 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.245438867 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246301649 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246827157 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245571227 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.24601106 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242047192 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245991215 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250399583 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.250992521 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24543398 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.243588519 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250229248 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.248056439 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252332547 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266944262 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.250495955 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.256973729 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258282785 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.281787555 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.274783497 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24896612 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.247303642 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258768809 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.274372026 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253974472 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.266411815 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.245855585 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.248380321 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.254042244 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281722605 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.275675333 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247197321 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248695894 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.249194685 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249127124 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248972603 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255867652 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.271415018 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.2478835 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249476342 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259721692 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274104621 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249247232 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.248080252 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250418531 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249456104 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251094818 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260313902 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268503235 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250134631 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249350251 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.249503012 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.250885431 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250531892 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25001049 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250710042 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.247495552 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.250520545 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249156276 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254896224 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259583899 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250111148 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25157576 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.256289289 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.271801267 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250043868 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.25646618 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.25146875 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250469279 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.253654316 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256711593 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248961507 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253411767 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259485719 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.251092463 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.251598845 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.250437554 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251739083 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261646421 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.278843249 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.251998237 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.252414048 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.256355648 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265126703 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252272909 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254370973 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.252313915 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249077218 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.256486168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252552003 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.252424401 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.252278469 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252180838 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252967661 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249760308 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.252671354 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252258492 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.253675317 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.253167384 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.251688909 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252016295 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254797581 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.253044494 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.254112975 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258924922 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273373615 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.254414615 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.253644521 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.250143911 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25402809 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.2532437 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252857917 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254106687 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254017844 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254052635 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.253393747 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254542976 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.254388617 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253999645 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.254944429 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25863044 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.254941753 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25877445 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.254652768 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.25102118 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.255337484 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.253390692 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253314981 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.254210223 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254125489 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259346982 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262735899 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255523074 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255464331 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257852497 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255669115 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255232742 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255471597 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.258843737 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263271784 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254435713 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.262662731 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.276840856 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255885894 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255797466 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254827702 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255873914 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256348179 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259190518 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265277423 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267752289 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28231831 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257513755 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.261322819 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256577609 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.261667709 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259629407 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256631 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.257170183 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257329713 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256606858 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256581825 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25712764 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.256007409 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256115774 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256508959 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256907665 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.257460102 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258057965 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257096498 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257380906 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255893046 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257315841 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257985958 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.257269045 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255322803 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.256328901 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257448323 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258539528 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.258233087 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263029179 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256939792 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260460625 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258246398 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.258081926 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256252855 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.258498273 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260439633 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258098998 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265115043 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.279495683 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.259562812 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264415823 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.278027981 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.25880789 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.260417726 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257457327 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257103368 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261501396 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268148484 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260272229 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.261080433 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25972379 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259141389 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259573805 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.265338528 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.279862126 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.260042235 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260229009 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260260356 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256881937 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260129133 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260164135 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.261103568 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261593633 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26027827 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260443945 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260922304 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260420821 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26088667 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260904121 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264652811 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269069699 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.265608839 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260086252 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262976361 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.263125508 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265837436 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261629389 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.261464535 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261734223 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273350748 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.289481193 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265518262 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.28251298 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261345472 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266756353 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284360985 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266383858 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261184274 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261308759 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.262107753 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261049835 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.259369833 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262527716 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261855344 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262711663 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.263060999 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.26707732 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.261767855 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263143928 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.26289744 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.261594078 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262116325 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.261837184 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263854412 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.265230846 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264459903 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.262855037 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26248083 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269494549 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284538394 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.263187825 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262589648 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262449495 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262762718 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.263523181 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.263992937 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267702519 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.273247147 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266811338 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272748481 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265943614 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273128559 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263537899 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267918359 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.273994515 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.262974494 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.263957098 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264333755 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264649991 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270562749 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.285925455 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.266917994 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270093111 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266155205 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.26482518 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264763792 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.264539151 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265394761 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.266065193 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272489798 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.287622258 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269338732 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26705121 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.263977957 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.267201659 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.266870843 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.265607342 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267896096 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.266380359 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.265831804 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.265388738 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265415675 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.266345742 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.266524155 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26701436 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.264000901 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265942846 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273280116 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28987714 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270041599 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.266431789 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.272895704 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288791024 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272218221 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.287980416 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266617561 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266337249 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266100956 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26768042 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.267489392 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.270246548 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267818583 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.268520892 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.271954162 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267577598 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268767554 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.267656905 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268014685 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.266964002 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280222834 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293784124 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269240581 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272538437 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26579328 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.270239486 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272981581 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267979265 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265903803 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.271629718 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27984466 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278164257 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267913918 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268896684 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26861755 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268637353 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.267657474 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.269679254 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.269441605 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.268652627 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.269265818 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270652242 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271376268 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.268351228 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269620023 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269821806 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270940493 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280998278 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.292229476 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27056111 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271174829 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.271582988 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.270601721 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.269327138 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.270124117 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270638908 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270140309 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.273197938 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278403251 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.278771529 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27230462 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.27113164 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271512805 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270482868 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271919928 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271186958 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271864686 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272396576 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.27217349 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.272018946 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270537855 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270504423 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.271614637 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272410922 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272371336 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274426522 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.279599322 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270715694 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269836574 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271427931 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272428257 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.270667974 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.271779796 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.277979518 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297097094 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.28424893 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.282200822 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276346919 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.271233703 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275859938 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280565204 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270736519 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273412455 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.271793407 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272206384 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274126723 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276615691 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273651794 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279927961 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.294909115 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.272620568 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281678294 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.294993645 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273979207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.275806115 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.277103921 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273348347 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.271165286 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.274372881 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273852495 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281826617 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.295906907 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274592968 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275283877 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273350799 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.275216836 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278182636 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274297389 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274922106 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271635643 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276267624 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274695457 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274557756 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.273201152 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273551804 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.275126348 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278636172 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282174487 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.274160529 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276807654 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274132026 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.276491413 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275408996 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276002613 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.272502182 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274359065 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.275282637 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276192235 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275917271 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.277244946 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.274537392 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27865386 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.277776266 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276568134 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279539987 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.288949224 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.286211326 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.274628973 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.27581788 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.277763826 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278659619 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277066424 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.277778026 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276339542 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277339759 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.276390758 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276983437 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276265666 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.28100771 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293001288 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29848998 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277530933 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277003094 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279450725 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.277002194 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274951714 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.276779248 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.279319874 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.281698923 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.286617853 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.278056122 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283268132 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299578089 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.278892972 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282918968 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.282741994 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284429119 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.280804736 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277717089 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277575893 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283610432 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.295435542 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279333729 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290482467 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310524235 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299908055 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278829329 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.278904166 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277541955 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.279337319 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.280377522 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279857783 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279879661 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279371446 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.278985269 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.279577603 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285090614 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281045623 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281553055 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.280128997 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279393392 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280930709 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277622631 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280083277 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280112528 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279784274 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27990904 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.279731042 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.279970146 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293646355 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.310164185 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.281258139 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.281307202 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278303528 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.283092919 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.284018798 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292777657 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.289931812 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282390959 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.281526512 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282938408 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281816492 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281623303 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281812461 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.281423082 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282528941 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.28048079 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.29497469 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310092689 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.287018243 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.282118971 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282122893 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282507338 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282321459 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282602814 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282434308 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.283168511 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284591079 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285860346 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.28246346 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.282502379 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.2859885 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29117858 seconds)
  done (took 755.826403222 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280946052 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281282053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280033542 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280964221 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280325505 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281234062 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280470681 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281080082 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281646531 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281331801 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281982088 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281177871 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281204051 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281681885 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281782903 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281215651 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281471668 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282263376 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282299176 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281895955 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281877896 seconds)
  done (took 28.109826888 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284248596 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282423961 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282706515 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28524572 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283040646 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.286482373 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284048212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285271291 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285872491 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282079484 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284423115 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285845966 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282868299 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282770718 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282642778 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285751136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28584995 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283461632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.287955863 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284262175 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286469827 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28304111 seconds)
  done (took 29.460892199 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.286027489 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.286156776 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.285571649 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.284870127 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.287859257 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.284004776 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.287187397 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.286032611 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.286195263 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.286746328 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285486755 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.288195554 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.296352139 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292863912 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.28870466 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.288326791 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.43149154 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.287601902 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286221742 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286679488 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.283579159 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.292163784 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.309116772 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.28539111 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.285995866 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287715843 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288814378 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.287856735 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.287782463 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.288605611 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.29248651 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.286825031 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287432294 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288566242 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.286180666 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289589405 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292958336 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.288469633 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.285337594 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288838679 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.299989505 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.312155376 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28844786 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.294200013 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.310785534 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.28901274 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291682045 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.297504208 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.285860638 seconds)
  done (took 64.553047995 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.288929471 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.290358981 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287307055 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289656747 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290164077 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289934044 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289548805 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289165757 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.286833625 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.288359797 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.290549564 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.287759564 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288713014 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.290192613 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.29109296 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287319816 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28805709 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288140363 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288098213 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287524195 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.288025357 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.2917912 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.292373668 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289411288 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291654513 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289196439 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288246703 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.291308055 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.287794915 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.28837385 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291769704 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292462102 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.293588052 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.289407261 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289326402 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.292138718 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.29175379 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28867652 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291888348 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289570342 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292221974 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292833371 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.291612675 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292392563 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289932633 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290281479 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288721395 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289527514 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.290523791 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.291671417 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.291900389 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290007801 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292922728 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.289573288 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292750529 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.292296823 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290269551 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.289954348 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292724539 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290456325 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.290414717 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293557328 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291991134 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292444922 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.293933435 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29022335 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.291163839 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292435752 seconds)
  done (took 88.954672222 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293303081 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.293241855 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293594 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292244563 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293240123 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.292644522 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292897095 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.293419782 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29402109 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293201135 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293917886 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292214493 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294113867 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292819941 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293686133 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293835485 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29357062 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294611759 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293660151 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292074651 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.293898245 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.294878844 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29359534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292874691 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2940367 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294396643 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293503081 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293363352 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293769807 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294771144 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29519805 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.295555743 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294557861 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294764476 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.294465369 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295780531 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294059698 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295323519 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.295822591 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296755817 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293729188 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295618324 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295259145 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.295132013 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294780281 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296248189 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295457268 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.296044004 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29661131 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295809755 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.29537388 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296419224 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295449914 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295738765 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296558373 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.295754065 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296897139 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29602004 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29761186 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296879708 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297385123 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.297174558 seconds)
  done (took 81.48313816 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296991551 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.296362745 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.294811536 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295453551 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296044868 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294305931 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297688987 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.298013243 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298049831 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.297957552 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297945983 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29515835 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295280324 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299229029 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295516266 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296256895 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294100726 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.296128505 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298388135 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295674991 seconds)
  done (took 27.14493536 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.295254594 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29928872 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296694376 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296667489 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298284125 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297169259 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.299646968 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298011435 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295985268 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299425245 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299506928 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299989325 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296058161 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295972255 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299431989 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297234051 seconds)
  done (took 21.981758113 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.297479872 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.300208717 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.298962221 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.299183419 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296544133 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.298034086 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.299927913 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.296484489 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.296874114 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.300847741 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.299567281 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.300152309 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.300560882 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.299532665 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297334079 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.301977992 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297518447 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.298257394 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.300922573 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.299419709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.299502658 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.297684379 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300232626 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.300214278 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.297755438 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.298996436 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29877374 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297667891 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.298121316 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.302126408 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.298268644 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.300047673 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29924603 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.297927534 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.300595936 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.297677125 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.299198821 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.301454892 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.301979143 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301658071 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.30093014 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.299449278 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.302193252 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.302059056 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29964463 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302094834 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299732693 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.300384744 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.300029782 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.300260935 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.303228068 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.301836651 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.303559749 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.304740246 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.302263004 seconds)
  done (took 72.710354229 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30288255 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303062482 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298771241 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.302881406 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.303882124 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.301641628 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.303571666 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302888611 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300326366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.303720927 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301847261 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304517847 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302243962 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303239031 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302509434 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302637584 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.300682107 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300800042 seconds)
  done (took 24.66232422 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300906922 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.301809541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.30337983 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301611745 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.301308788 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304490415 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302753903 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304118544 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305108426 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302690366 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303395986 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.304560052 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305035441 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.304317845 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302261314 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301369533 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305104877 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306373386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.30154435 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302612673 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306622598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30575319 seconds)
  done (took 29.899647545 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.304581036 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.303308682 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.30460419 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.322168125 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.325895697 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.327658075 seconds)
  done (took 9.111575686 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313856754 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305579353 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303612782 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307032905 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306261505 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302958091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302451863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304267399 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305742495 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303431537 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304466743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30673564 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307034894 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303839876 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306385038 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305659161 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304013031 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304669739 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305096994 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307460226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304183329 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307018852 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304547943 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303947836 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304058978 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304301228 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307748072 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305145129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303832753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306972242 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307160966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30469067 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308220298 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305418624 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308876924 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307149564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305566965 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307397723 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30868116 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305890445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307932893 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308288458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307922295 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306509822 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307357947 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305634265 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305880872 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305200314 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305720394 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308189591 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30803017 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305613395 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309691043 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308828993 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309461608 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310714066 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307096434 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308335602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310140534 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307568412 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307980826 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30944078 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30691705 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307674895 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309202807 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306285552 seconds)
  done (took 87.481375812 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307610435 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307878242 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307639752 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309388859 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307535866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307899385 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308278445 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307822474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308161203 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307725033 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310540466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307742885 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30744667 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308547958 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307303532 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308383008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308029485 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308469107 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309442077 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310716436 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308337151 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309158848 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30816678 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308122058 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309546838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311647107 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309374906 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30867979 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309562327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308543981 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308524121 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30917871 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309254332 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30853965 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309330202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309282565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309109 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308849813 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309297277 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312356016 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310609154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312725659 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309028272 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309546278 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310503463 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309206344 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309354452 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309328045 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30940896 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310263263 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310795131 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31042295 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310625605 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310673502 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309426092 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310144447 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310350418 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310371884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310957204 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312676945 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311234648 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311001059 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314428843 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310862061 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31246946 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310963965 seconds)
  done (took 87.658403309 seconds)
done (took 1763.310996233 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.485797567 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.429325201 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312554272 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.336873072 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.311889656 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.31192665 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309655081 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312038495 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.312187267 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311004176 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312232793 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.508683545 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.3635187 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.312836176 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312000663 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.405692543 seconds)
  done (took 42.880897218 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.342148507 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318708362 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.444240867 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.338437524 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.342757781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.525933476 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.379058288 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.318197389 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.519211531 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.370661734 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.090432354 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.343015795 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.317789881 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.576637158 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.337409304 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.52618405 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.59967324 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.095364762 seconds)
  done (took 31.017796781 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.853188459 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.336828616 seconds)
  done (took 9.423059996 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.3387356 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318163629 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319127334 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317421277 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.309562007 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.337334323 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.31658901 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.313348778 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.679455431 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.466940769 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319504304 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.325513038 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.339641713 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.318891494 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.316517596 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.356425936 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.482715423 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.3164231 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315465436 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324403941 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.319196091 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.431821389 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.365233323 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317217372 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.461992751 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.65721677 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.327350325 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.324848398 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.463762067 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318458644 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319331573 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.319210638 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318606748 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.949771683 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.875369028 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.331034648 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.364325458 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327969957 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.317422574 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.480493517 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.320978393 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.327402509 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.312717551 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.865191894 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457874116 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449871571 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.683585154 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.340440727 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.321463732 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.389139372 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.32087032 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.320403382 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.351058357 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.12390385 seconds)
  done (took 112.548739261 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.360829057 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.711070002 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483435327 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.333611708 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.167925652 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.13080136 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340290997 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.656357188 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.355129295 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315164705 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.66172399 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880773641 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.341657868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.370195199 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.840741322 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.338540486 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313187192 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.230053462 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339916523 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.320472588 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839096389 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315419963 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315744873 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.402361434 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.355672313 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815126388 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.954240026 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.917913903 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.343607516 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.315152083 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841928188 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.350609686 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.370928375 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.316180589 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.599558123 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721678328 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.710987994 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.337744041 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.341557714 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.318244892 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.33274988 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809852553 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.720734956 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.336734629 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.351536363 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816345051 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.335538865 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.316367357 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.324201644 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531107347 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.193350108 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.317922567 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.936114211 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.317942513 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.645127023 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.365682916 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.385007631 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.844012667 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338010117 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.574659754 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37248544 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317452833 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32429087 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323410249 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319655292 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.709505881 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71653634 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.317965319 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.706525848 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84638695 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.337410096 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.900132656 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.272276213 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.344283484 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.390610435 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.31871046 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.096585842 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.862761475 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.371436757 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31836119 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.694826532 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.338899361 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.662681115 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.337019193 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32049352 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850154923 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.323463971 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.341696938 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319958122 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.339913655 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.118322051 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322040394 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.630689893 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.383146066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319483898 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.318399135 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.350138048 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32044815 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.33959253 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.333355426 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.902868751 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.352305861 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.309137735 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.341340589 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319546877 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.320288288 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.320524468 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.319890579 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552584473 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.766535651 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.351926052 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320866833 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.321070663 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.340753167 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.400063878 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.327754575 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.682638706 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.348395113 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329401505 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.332071706 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.101300239 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363382343 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321811889 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.325221395 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.26169353 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.52822413 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.34263294 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.342262705 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323927459 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.343311411 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.748108026 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.34407988 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.352896511 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325875601 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088317019 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.354513156 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.35120035 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.844386202 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.329898592 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.323534016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.349486097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324688304 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621578428 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.610985426 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.587052177 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324318747 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.342591313 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.067741708 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.388740985 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472761295 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342840358 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.31648793 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526319663 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.549202286 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324044816 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.941995597 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324036276 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550790425 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.324787977 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.637889367 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.879903886 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.350448405 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330324412 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.095207244 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.052050167 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.971258261 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.324882376 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.673073639 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.304250281 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.795129273 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.324413275 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322330391 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.921659341 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326421731 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331648888 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.325930099 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.325906341 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.385608499 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50383709 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.652346287 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.331003646 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820333524 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.35633773 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324556985 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.332439473 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.326339583 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.676099269 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372808449 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.328089545 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.369447751 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.326744122 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.327893274 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845043581 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.302110345 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.329260742 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481351498 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024335051 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.351879894 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.327911895 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.94471013 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.579136075 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883455636 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.386257816 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.698746187 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.360171306 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.367857141 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.142400344 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357568196 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.855081982 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.356390001 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.33563068 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.991954628 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.354124181 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.42170316 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.327621986 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.326244196 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926531448 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.355142998 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.329515945 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.734411254 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.349757383 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.608584366 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.327389106 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.337660319 seconds)
  done (took 1113.05865625 seconds)
done (took 1310.156450314 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.327556127 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.335505635 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.314212261 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334222024 seconds)
  done (took 26.563566386 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.339593215 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334169942 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.336199219 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33327564 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.337253912 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.334010475 seconds)
  done (took 9.267355363 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.690177313 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.341771279 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.33586813 seconds)
  done (took 19.619252588 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.56999551 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.801218622 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.739514978 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.849174512 seconds)
  done (took 11.213271357 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.337245778 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337345927 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.335795667 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.338075478 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.338448895 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.339814478 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.338522679 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337871041 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.341351293 seconds)
  done (took 13.294349957 seconds)
done (took 81.205775763 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.310387033 seconds)
    (2/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.521467652 seconds)
    (3/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.366635448 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349116247 seconds)
    (5/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.310371298 seconds)
    (6/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.230092136 seconds)
    (7/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.721477418 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.635008796 seconds)
    (9/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.594824553 seconds)
    (10/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.719229094 seconds)
    (11/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.389731524 seconds)
    (12/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.417791094 seconds)
    (13/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.322678427 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.373307103 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.363000581 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.358965599 seconds)
    (17/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.417637504 seconds)
    (18/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.311422614 seconds)
    (19/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.318485828 seconds)
    (20/286) benchmarking ("sort", Float32, true)...
    done (took 6.351388845 seconds)
    (21/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.310220104 seconds)
    (22/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.844289893 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.005191868 seconds)
    (24/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.435773205 seconds)
    (25/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.537685442 seconds)
    (26/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.377899291 seconds)
    (27/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.628458497 seconds)
    (28/286) benchmarking ("sort", Int8, false)...
    done (took 4.375903869 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.313343479 seconds)
    (30/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.884866694 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.332340189 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.106337907 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.456668658 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.754914828 seconds)
    (35/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.355499731 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.352672082 seconds)
    (37/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.982766316 seconds)
    (38/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.708395812 seconds)
    (39/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.340504138 seconds)
    (40/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.359725358 seconds)
    (41/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.315858289 seconds)
    (42/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.355019455 seconds)
    (43/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.400484981 seconds)
    (44/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.314300547 seconds)
    (45/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.320245279 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.445058051 seconds)
    (47/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.491439345 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.602343131 seconds)
    (49/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.313075184 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.625163251 seconds)
    (51/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.300934365 seconds)
    (52/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.720351272 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.042404942 seconds)
    (54/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.312860959 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.412266553 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.352217586 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.142534936 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.767596728 seconds)
    (59/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.488257276 seconds)
    (60/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.218564749 seconds)
    (61/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.389355525 seconds)
    (62/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.421488682 seconds)
    (63/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.312446514 seconds)
    (64/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.4822054 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.538860661 seconds)
    (66/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.480260726 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.313736827 seconds)
    (68/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.88234454 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.312450108 seconds)
    (70/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.314403688 seconds)
    (71/286) benchmarking ("sort", Int64, false)...
    done (took 5.638249141 seconds)
    (72/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.321131311 seconds)
    (73/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.314140917 seconds)
    (74/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.976497691 seconds)
    (75/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.44507364 seconds)
    (76/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.289359625 seconds)
    (77/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.3571757 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.216388878 seconds)
    (79/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.221742645 seconds)
    (80/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.31555325 seconds)
    (81/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.96921624 seconds)
    (82/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.315926292 seconds)
    (83/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.419989737 seconds)
    (84/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.354404271 seconds)
    (85/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.335021483 seconds)
    (86/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.351869573 seconds)
    (87/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.858632548 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.073999163 seconds)
    (89/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.421882 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.182338041 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.322827771 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.551529228 seconds)
    (93/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.77185282 seconds)
    (94/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.323329038 seconds)
    (95/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364043562 seconds)
    (96/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.826005379 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.341625147 seconds)
    (98/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.336837697 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.599780995 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.383397328 seconds)
    (101/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.363846247 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.346838165 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.380684915 seconds)
    (104/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.363375172 seconds)
    (105/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.35130669 seconds)
    (106/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.362661348 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.366028642 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 1.865139673 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.380737758 seconds)
    (110/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.316596556 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.644872903 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.153490543 seconds)
    (113/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.041199847 seconds)
    (114/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.47521778 seconds)
    (115/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.875656294 seconds)
    (116/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.345927774 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.323999955 seconds)
    (118/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.716059368 seconds)
    (119/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.203384627 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.217659803 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.619657521 seconds)
    (122/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347704966 seconds)
    (123/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.364759768 seconds)
    (124/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.362950157 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.440240639 seconds)
    (126/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.317670954 seconds)
    (127/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.531009862 seconds)
    (128/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.443095472 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.284341659 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.215088933 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365620436 seconds)
    (132/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.276415349 seconds)
    (133/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.794183077 seconds)
    (134/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.10745545 seconds)
    (135/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.3311537 seconds)
    (136/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.133889206 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.334806608 seconds)
    (138/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.429358086 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.362369774 seconds)
    (140/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.339361574 seconds)
    (141/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.407929979 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.379460864 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.989516336 seconds)
    (144/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.333032662 seconds)
    (145/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.229301931 seconds)
    (146/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.238981378 seconds)
    (147/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.085859109 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.392799285 seconds)
    (149/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.405784751 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.874305209 seconds)
    (151/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405002335 seconds)
    (152/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.065711835 seconds)
    (153/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.345568699 seconds)
    (154/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.503047069 seconds)
    (155/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.372958786 seconds)
    (156/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.326302555 seconds)
    (157/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.183439202 seconds)
    (158/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.389664873 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.356955892 seconds)
    (160/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.259929879 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.342240004 seconds)
    (162/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.370245577 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.777880846 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.347534468 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.383827437 seconds)
    (166/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.925382996 seconds)
    (167/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.442385258 seconds)
    (168/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.36929512 seconds)
    (169/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.32151949 seconds)
    (170/286) benchmarking ("sort", Float64, false)...
    done (took 5.776476152 seconds)
    (171/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.351422078 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.34787196 seconds)
    (173/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.453918136 seconds)
    (174/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.461253541 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.440377893 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 5.467887612 seconds)
    (177/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.444537534 seconds)
    (178/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.4005431 seconds)
    (179/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.343313689 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.321991836 seconds)
    (181/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.215868232 seconds)
    (182/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.859216973 seconds)
    (183/286) benchmarking ("sort", Int8, true)...
    done (took 6.342987419 seconds)
    (184/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.580901382 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.385063866 seconds)
    (186/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.146751455 seconds)
    (187/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.3619995 seconds)
    (188/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.322706391 seconds)
    (189/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.463161237 seconds)
    (190/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.106624529 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.989883926 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.567267269 seconds)
    (193/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.927756327 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.429065055 seconds)
    (195/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.163888122 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.743818702 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.406235545 seconds)
    (198/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36987453 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.353190666 seconds)
    (200/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.579747032 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.386618005 seconds)
    (202/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.347444704 seconds)
    (203/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.772053685 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.285980673 seconds)
    (205/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.323706971 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.991302327 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.406550291 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.457668602 seconds)
    (209/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.350100671 seconds)
    (210/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.118697848 seconds)
    (211/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.338732819 seconds)
    (212/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.326831463 seconds)
    (213/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.048727036 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.923443668 seconds)
    (215/286) benchmarking ("sort", BigInt, true)...
    done (took 6.3446667 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.276914296 seconds)
    (217/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.494266326 seconds)
    (218/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.879937527 seconds)
    (219/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.371768793 seconds)
    (220/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.325023288 seconds)
    (221/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.848590631 seconds)
    (222/286) benchmarking ("sort", BigInt, false)...
    done (took 6.344191155 seconds)
    (223/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.479861196 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.351931154 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.227854215 seconds)
    (226/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.103666396 seconds)
    (227/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.874908564 seconds)
    (228/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.363036445 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.579830192 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.395501934 seconds)
    (231/286) benchmarking ("sort", Float64, true)...
    done (took 6.348849622 seconds)
    (232/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.33527588 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.890157144 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.371646539 seconds)
    (235/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.24299927 seconds)
    (236/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.368739954 seconds)
    (237/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.76270299 seconds)
    (238/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.138827537 seconds)
    (239/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.376389991 seconds)
    (240/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.70130911 seconds)
    (241/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.343936254 seconds)
    (242/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.917957408 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.326011632 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.052194713 seconds)
    (245/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.34562296 seconds)
    (246/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.666598307 seconds)
    (247/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.327499715 seconds)
    (248/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.451065468 seconds)
    (249/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.959354762 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.353316337 seconds)
    (251/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.334351099 seconds)
    (252/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.431314608 seconds)
    (253/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.326389207 seconds)
    (254/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.367619552 seconds)
    (255/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.429826161 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.298583224 seconds)
    (257/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.710593403 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.470294563 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.44500108 seconds)
    (260/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.454693485 seconds)
    (261/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.327235259 seconds)
    (262/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.76822543 seconds)
    (263/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.411622464 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.202445116 seconds)
    (265/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.542185885 seconds)
    (266/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.456221804 seconds)
    (267/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.48475581 seconds)
    (268/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.456127626 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.391169444 seconds)
    (270/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.397558948 seconds)
    (271/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.347980242 seconds)
    (272/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.882375711 seconds)
    (273/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.411429531 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.324007583 seconds)
    (275/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.190852068 seconds)
    (276/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.098187401 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.794251262 seconds)
    (278/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.432650275 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.727066023 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.39236703 seconds)
    (281/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.374675656 seconds)
    (282/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.73416248 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.373322026 seconds)
    (284/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.078598386 seconds)
    (285/286) benchmarking ("sort", Float32, false)...
    done (took 5.39976115 seconds)
    (286/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.276058731 seconds)
  done (took 958.321477639 seconds)
done (took 959.570994887 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.384704644 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380597545 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.363333661 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.384851564 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.471725318 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387822886 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.372229534 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.363404985 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.409865326 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.411832338 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.360894624 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.387635218 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.363268586 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.361623699 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.362853055 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377531241 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.553569602 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.362690069 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.378538469 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372891027 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.378259744 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.359948481 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.410945144 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.389252888 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.367523798 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.366896825 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.366251323 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.381691941 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.473552439 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.366235655 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.366336985 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.375211508 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.552730855 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.361685779 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.35951515 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.382270801 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374795086 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.375912161 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368454996 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.395239185 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.025704146 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.38393221 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.365561223 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.365590653 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.366335494 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369408636 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364830994 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.372859573 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378251782 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380496596 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.012221741 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.399761065 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.36828718 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.365830819 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.376653761 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.364914542 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.370601795 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382746195 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.384102793 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38383337 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.538129626 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.372707918 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.368409716 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.380989966 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372520848 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.0483541 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.382711964 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.371489003 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.021708289 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.391472887 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.046227446 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.392769041 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.368020893 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.380547202 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.39701099 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.54992901 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.362529175 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.367677626 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.373118355 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.3649921 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.376986405 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380499123 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.37360012 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.367916894 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381753397 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.393495471 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.377996173 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.367681737 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.378397009 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.384705579 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.373872117 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.378363795 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.372588087 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363945343 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377149727 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372568479 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.370498071 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.369756979 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.37390161 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379699409 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.024778057 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406381805 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.365956179 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.36565856 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.368898565 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380508262 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.026373218 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.3893105 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.391904585 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.416604228 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.371128739 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.542478712 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372020258 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386701836 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.379504318 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373688443 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.365935743 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.542936316 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.020589629 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.402675813 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.372672058 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.368128245 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386862905 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.374072843 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.367508871 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.555824135 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.372898082 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383870436 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.490559286 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.381986872 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.401181653 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.367828423 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.374373668 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.393329875 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387774502 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.401696877 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.374555333 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38667816 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.385299398 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369456462 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.382774386 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.381692949 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.371918023 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.37983295 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.36558606 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39322194 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383992605 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384424674 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.393788902 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491530419 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.370164965 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.545831951 seconds)
done (took 233.642227194 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.428642123 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.364998795 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.457058406 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.365531635 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469542584 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.46785965 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.363586249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365227114 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.364216747 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.745801604 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364039769 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.365312679 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.367183879 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.364401563 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.447541499 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.367189088 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364380248 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.707641926 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.367550615 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437766696 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.368533158 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.365972831 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.367945854 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.771322028 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.367654896 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.362907159 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438583502 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368271024 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.713129545 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.363362036 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.368168588 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.711986133 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.457058512 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385453571 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.378485593 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376721189 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.471423394 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.390758841 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.448279486 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.447994314 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.460301692 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406060574 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.362894509 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.363079612 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370205876 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.368853377 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366913445 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.395968095 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.362383986 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368004974 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709617425 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.379653127 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.377587156 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.36712232 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368254727 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.38955824 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.3664454 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.369994721 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457606505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.371496511 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.431181014 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.770592067 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.747515679 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370707522 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.369285082 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.368616094 seconds)
  done (took 150.791174235 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438742766 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.443394369 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.490443692 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.390937506 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.420176978 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.496059627 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.390299593 seconds)
  done (took 11.35359628 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.376425799 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372390959 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420396243 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.419934021 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.37074047 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.549254767 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372540963 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383803773 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368404219 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.424504324 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.37243477 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372469182 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.378651344 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.365292877 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.419184027 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.382563057 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48374209 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.371572478 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.372072432 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.528153822 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369960243 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.380026684 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.422743163 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.383408819 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.373255428 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.377708319 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.193395794 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371229104 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370228227 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373080776 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370227182 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.455457425 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373499615 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.369929893 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369806131 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487394216 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.373597526 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370782408 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.374268968 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.370319406 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374070356 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.373204701 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.373733793 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371711346 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.372419706 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.396376365 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374060398 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.373908472 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.373757624 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374862139 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.424254357 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375822493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.37154041 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.371752149 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430393129 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381080178 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.37536961 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.370746032 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37429246 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372710404 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.530435953 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.422850415 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375326518 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422456048 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374805911 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375246463 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.374349667 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.375315282 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428858175 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.37533003 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.422265106 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373339571 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.56060874 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397544847 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377110957 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377424898 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.375968728 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375285587 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.371254522 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.38058298 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.373591276 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.376851577 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.380854115 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373908697 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373943174 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.54827981 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484130425 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.372544692 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.388208751 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.382721708 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374689924 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.42800236 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376991591 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.374447399 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427119593 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.490837664 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.429574453 seconds)
  done (took 157.551087559 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.38046813 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384485636 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.378166501 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392653445 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377237347 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.376684408 seconds)
  done (took 9.579124714 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379915328 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380031532 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37831136 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.376932754 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.376464553 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.378899141 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378164684 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379783799 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.382599146 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378337818 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.37726881 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.378406959 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.37867371 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.378216975 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.378237792 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.379212394 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378941135 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375969595 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.378883651 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379485635 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473657928 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37880732 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378110946 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.379893146 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.383551487 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379227808 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385836978 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.378464016 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.380047153 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387594399 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.401119435 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.379585332 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380409191 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.387204024 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.384501882 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.38010034 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384829732 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.381012766 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377803032 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.380710895 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.382237581 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379615003 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.378854953 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380795312 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.382983648 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386029717 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.387296265 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387409318 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382116016 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.381565956 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.381271983 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380565055 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.380491647 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.382911546 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.382572956 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405434402 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.386363544 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.382310899 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.382226174 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.382637695 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384654724 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.382522278 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383399983 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386736799 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.390590533 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.384568068 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383334159 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387540174 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382556197 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.381625405 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.38377757 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379760849 seconds)
  done (took 101.893749283 seconds)
done (took 432.445167306 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.531733309 seconds)
  done (took 7.828316355 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.622954799 seconds)
  done (took 7.919243684 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.347144199 seconds)
  done (took 26.647753705 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.457025902 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.43413955 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.400443663 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.382402589 seconds)
  done (took 26.970378855 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.550150199 seconds)
  done (took 7.84638751 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.37520499 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.376013009 seconds)
  done (took 14.04834696 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.656403387 seconds)
  done (took 7.951990684 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.410831498 seconds)
  done (took 7.712657268 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.388712542 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.400459441 seconds)
  done (took 14.099854079 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.35486503 seconds)
  done (took 7.651188694 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.564357123 seconds)
  done (took 12.860578362 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.38674159 seconds)
  done (took 7.684789731 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.403230492 seconds)
  done (took 7.699593103 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.771713424 seconds)
  done (took 11.067042211 seconds)
done (took 169.280614085 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.376370692 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.378977775 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.377977759 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.376564284 seconds)
  done (took 26.805849034 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418871236 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419128084 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419930256 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427871057 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.421385022 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.417848169 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.410412001 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.412500318 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.430880163 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420725096 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.421581866 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.421543311 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419831367 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411328288 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.422404314 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421720037 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.430020272 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.421461094 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.411070535 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423056239 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.387096156 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.430962728 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.422550195 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386803037 seconds)
  done (took 35.327841841 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.906354271 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.455504647 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540903841 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.438304343 seconds)
  done (took 7.639063124 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438577367 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440329163 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.452155935 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.491727931 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.516689874 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.449020376 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.41361196 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.408642257 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.394048976 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.44180941 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.515441532 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.455347669 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.525685255 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386978291 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.574417136 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.386559847 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386986564 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.440049631 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.491156431 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.508662477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.387741877 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.438979917 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.443061825 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.457065226 seconds)
  done (took 36.144583234 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38812792 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.405467972 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.386592381 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.385698697 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.395673319 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.388323968 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.388702494 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.388707278 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.387643174 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.394634223 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.387648004 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.399225952 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.387746366 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.38727762 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.393142639 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.387573296 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393884721 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.386662229 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.387949593 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.395078988 seconds)
  done (took 29.116604876 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.380504176 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.279095165 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.732955812 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.640432676 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.381731516 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.389655474 seconds)
  done (took 29.106555697 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.474304061 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.648485047 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.390484509 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.836910827 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.932121521 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.4169668 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.388395607 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.666366304 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.053014481 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.063042748 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.45755399 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.469922959 seconds)
  done (took 21.102259116 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.38712088 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.389858581 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.390027717 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.405314365 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.456372096 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.415713808 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.39645142 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.382975513 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.463040813 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.484576485 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.418191527 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.456055869 seconds)
  done (took 38.348888823 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471730706 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434399577 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.503818167 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403626287 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174200627 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598133638 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.49080363 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838278616 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.388931142 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657446041 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399673087 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484057824 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645897491 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392147204 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393143099 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.558691779 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640298081 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939991672 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386175967 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079629261 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417655471 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400800817 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.104838958 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.427267861 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597496975 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.532427703 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.649820144 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.163356706 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732427786 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397756583 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39666311 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387735753 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659844495 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106671548 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506189343 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398003672 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406426395 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.935813482 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.390364293 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.083775483 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399103903 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397590782 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396856075 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386870502 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321373735 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404323209 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849029587 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.393554825 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.098889886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387757513 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398403607 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481709821 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.391174361 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.96123224 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418454227 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394121995 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.385820825 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490136856 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97886667 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.682442362 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415123601 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.329800501 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398808089 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073060622 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111196646 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.512149573 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393908867 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392463432 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341391348 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.047773305 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412834955 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569949273 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41086708 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.109292103 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302448316 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.435019018 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351493286 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016147446 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398891646 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.331387899 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619112495 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165255887 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329510927 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.335997481 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.3241252 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228660762 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404995288 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.898104481 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411069457 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.86411676 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.401851888 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410980324 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414741834 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61628546 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.269211625 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389688324 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.390157354 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577160035 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412421531 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.845347867 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344290795 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394767879 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649447621 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603484188 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403619265 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.55969685 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641217434 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392323058 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.433519305 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.402762822 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.409682303 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.061961974 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425201704 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.682188283 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416557851 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.168547949 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262803266 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413750436 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.49899849 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394410639 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676491558 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.283136922 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.302909443 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460786581 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398223399 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394237101 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091101735 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996008748 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.291000258 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.388624596 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408560296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.410017727 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.393237632 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400553718 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.389891833 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399598973 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.180488165 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618044824 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3990438 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675396038 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32889614 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574009708 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.473170767 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.617166295 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.776518889 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.413554451 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656343914 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396854066 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407939428 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414518721 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413057723 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496512764 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417351654 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.400194369 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660705956 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.39779878 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39964698 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.113672121 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.18198924 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40165659 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.401598249 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399026635 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072426032 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432134781 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399362217 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290309571 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.409620823 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463493219 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401365033 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.406133133 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.560256251 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417508816 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.401932544 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.403987237 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620930816 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407488924 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.106973342 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484311566 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.615079027 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091288876 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437722289 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.331102726 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.108170117 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.091058219 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396839236 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.588410588 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396776211 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408003698 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407721717 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395185149 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106369816 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420909222 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.033696245 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.409965239 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408634529 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.402822497 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397867062 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.535885654 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.739817541 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412986243 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.4160946 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541980926 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41192466 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331829607 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914224094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404117817 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398122612 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.17709537 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432720085 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.028838043 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92429595 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660944122 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421080948 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411462908 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.149479835 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.442957237 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.403875613 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416267005 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41565645 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.415918968 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408370797 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.411600517 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.088117219 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.836627452 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965419164 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274780426 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056612735 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47375242 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.415603224 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290031919 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.855865538 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335548253 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05954888 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631764165 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881856875 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409408074 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619785887 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.789693379 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316948181 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413157687 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629319425 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510653174 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.409793564 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419798576 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612366652 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434812466 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412869409 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.357711904 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.680242975 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663496536 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418123459 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486654562 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858189036 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41526018 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.18691638 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.410507582 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.888954875 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616914463 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950828685 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.837742941 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401398862 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429432816 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948038888 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406762928 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930788503 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117269054 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425962207 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.629136386 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343162988 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.41453079 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.416575006 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.398576438 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.043293276 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.409390295 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.661473916 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414182564 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337273344 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411180968 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03803038 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.28403256 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408703092 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403387299 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286440381 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412128007 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761633801 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.424123703 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.533335461 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430148849 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342036385 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33877064 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.097809991 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414234579 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417327649 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973780354 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.409491659 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414440296 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422736255 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262463922 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661893673 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.913478626 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097878597 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66038214 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420568533 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428721331 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.505350736 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412979688 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.393491401 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.287807013 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641023559 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447023223 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655535631 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.545505669 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.305690606 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.436951123 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618589958 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288554915 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.415592392 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705485983 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.140753943 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.422405503 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267971294 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451876508 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427040461 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485199755 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421343557 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427322596 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50046315 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418398196 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.418785628 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.418157872 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598419015 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417562923 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415853066 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.42165741 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501075222 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.747117069 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.542534796 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.181314255 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11210485 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380750999 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145599444 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45000969 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409333279 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407155519 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358160203 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561888301 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937592044 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681878813 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.570766102 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.415154331 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431869551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414917524 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434215498 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626403783 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683389028 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384446675 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420865564 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2048602 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.568221473 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421032417 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.620408867 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985478695 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053094372 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524757186 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418150705 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873461386 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685336035 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.504833595 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407877773 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003490107 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.41101864 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.882300394 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.439271795 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409505409 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586459366 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419835059 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137334788 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.443312643 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.566195012 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.183900129 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085960547 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679801669 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.999443399 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.423101697 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121034928 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254859397 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681846328 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480105984 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421426311 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.530139719 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55901562 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.413175906 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.308017638 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411495216 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261147238 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.12346439 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.422281268 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120350239 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712202563 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.409534731 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.416263702 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435291324 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.422224747 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637300644 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259681013 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645029993 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424639596 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41230374 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.985981358 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121545588 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455086327 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364700789 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.416494214 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700027415 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673227093 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436762024 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.864945153 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.126618746 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037168257 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.389745174 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43586541 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421544018 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237711174 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127613601 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.580644641 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994192638 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.076088871 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430299101 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69411636 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.419725491 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.429285329 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698502469 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.418466684 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42155096 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433405008 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.117612234 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.348723773 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.419575849 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19408472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.359857605 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.643493943 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.500406397 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373608267 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416142865 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.614699909 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417295843 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.574174463 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427598915 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.418283245 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428774009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.155683416 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.765817865 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.422043483 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.415598795 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.409294562 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432153457 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520100292 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684731624 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422129598 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.089687322 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.769433231 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673357157 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.415213251 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.402732914 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.420542407 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417396513 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18374064 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.478426939 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438266338 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058437671 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.427605203 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.435188251 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421493864 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632322667 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628581347 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424163642 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436553428 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430141419 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439269394 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.318668006 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.244100701 seconds)
  done (took 1697.295195034 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.419707616 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.470714074 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.432790978 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.458053986 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.444641778 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.556720217 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.435764997 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.453711589 seconds)
  done (took 53.006304441 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.425263991 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.586536195 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.452719655 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.438201097 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.434002243 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.42382302 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.947489126 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.45549028 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.434190486 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.427825857 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.428515147 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.42239522 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.169586094 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.42840259 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.434402605 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.419705679 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.425689732 seconds)
  done (took 67.094440848 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.283513788 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.731153083 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.15705342 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.492309756 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.418657446 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.459452748 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.557318648 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.452747184 seconds)
  done (took 55.888437653 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436137612 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.438162878 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.437185 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.437630443 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.436758295 seconds)
  done (took 8.521362064 seconds)
done (took 2106.691431656 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.425371653 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.425686699 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.424251413 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42665643 seconds)
  done (took 7.039199128 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.397894004 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.123266806 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.400455377 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.422246021 seconds)
  done (took 18.680858234 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.431675543 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.423855324 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.26590078 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.160824331 seconds)
  done (took 5.76516292 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.175038625 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.18386874 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.16888861 seconds)
  done (took 7.865062541 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.419498374 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.426347632 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.428291298 seconds)
  done (took 20.611092469 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.723910765 seconds)
  done (took 3.063152372 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.568736471 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.619041022 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.748956257 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.753279581 seconds)
  done (took 8.027675928 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.806655612 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.81201616 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.611589376 seconds)
  done (took 6.568477332 seconds)
done (took 91.808941461 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.89234363 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.817408508 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.62388602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.864190013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.654977231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.627217789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.708977463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.833830508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.364457019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.353343804 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.912996212 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.656816087 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.656831161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.819779305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.657704216 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439278654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.657559898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.924300972 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.433069883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.44024464 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.708975035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.502516303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.742759313 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.515183586 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.656071058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.576454898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.083397729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.440420717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.423957739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.095108957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.574715823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422907338 seconds)
  done (took 202.420695198 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.422693914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433721723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.421343518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.423398713 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.441974661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.445024123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.422887725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.436458614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.438983976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.422441524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.424622723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.441496689 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.427020048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.444667008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.422906875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.424041017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.423870636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.455051576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.423262563 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.426823746 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.425965542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423951297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.430655001 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.424818934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.429669398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.426619342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.431566625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.424070539 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.448314227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.434103685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.425623943 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.427024972 seconds)
  done (took 207.115569693 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.440013173 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.424579179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.425944181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.424369845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.424138948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.446521696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426790106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.425844669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.44796728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.425925367 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.438419962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.425449504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.449858165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.425383361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.427595824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425467601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435684375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.425594686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.440610803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.425409429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.448409269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.426387823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.445866572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426338995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434424219 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.428206507 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.442574088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425259566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427579642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.426582618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.448726737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428843139 seconds)
  done (took 207.184692555 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630717474 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.435813151 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.436408833 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.394508683 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436111645 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.434923051 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.433032553 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.626475344 seconds)
  done (took 15.171792469 seconds)
done (took 633.226726649 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.937054052 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.639912537 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.649975533 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.45467331 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.349338472 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.478539259 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.455419345 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.651477228 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.415630262 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.660948641 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.807878376 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.474244932 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.964141056 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.454576575 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.737688581 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.567457448 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.432855191 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.574279056 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.804259038 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.112573326 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.741567646 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.046261761 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.675486998 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.422046309 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.992106489 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.045302954 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.33410693 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.423572878 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.475231237 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.813246804 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.3033184 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.604233511 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.531233535 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.530350813 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.587307872 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.567848079 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.57116786 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.528501139 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.670843178 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.800283142 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.104051646 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.223821074 seconds)
  done (took 98.961153591 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.419587058 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.418996306 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.419408022 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.418826329 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.420586067 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.419649006 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.418523391 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.419185559 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.420530133 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.41955477 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.420027949 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.420182429 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.419165515 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.421351571 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.41981668 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.41906397 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.420868557 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.422083464 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.42000215 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.420642727 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.421446965 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.420915089 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.420894599 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.420602424 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.421393975 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.42191379 seconds)
  done (took 38.273615003 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.441036612 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.712393304 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.905117055 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.447441245 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.441760795 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.444354614 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.533785238 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.442168232 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.442044262 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.444763565 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.625843067 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443847243 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479405197 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.931623766 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.442426974 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442703286 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.441907556 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.439963629 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.722140978 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.450846468 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.557837793 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.442994883 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.535401361 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.453308602 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.46494589 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443801475 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.44628984 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.017080404 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.465227876 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.62670381 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.419916855 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.539204528 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.958338832 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.933801649 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.426521062 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.450801385 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442887813 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.630666245 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.44314588 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.442420788 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.537711941 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442716091 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.911128913 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.129567189 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.465270366 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.444039586 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.041555039 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.653110447 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.740198215 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449869371 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.938336551 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446729624 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.446162995 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.444155491 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.742483059 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449090219 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.444379686 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.042529417 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.469959666 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.538770363 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.444856554 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.444512515 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.730935554 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.444903719 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.718910029 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.446484208 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.453923391 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.467270954 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.916078935 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.446397927 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.157950445 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.466969106 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.445609007 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.629921043 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.717849653 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.079231888 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.470139619 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.735248629 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.973992264 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.557536774 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449004733 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.017096654 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.560942016 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.448573187 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448541431 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.447457324 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.446438831 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496331739 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.535996843 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.100944366 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.179302888 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.092131306 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.569371346 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.459073148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.446269456 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.04467382 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.470927803 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447378995 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.913035881 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.155677551 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.468550887 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.45387899 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.160808877 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469437388 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.541919179 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.4528472 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.922481207 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.447037314 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.498469925 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.447394793 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.453232942 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.472268761 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.541169456 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.451408342 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.44982101 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.128211144 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.662214952 seconds)
  done (took 191.446131866 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.440944025 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.462996483 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.456909108 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.441048607 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.441698026 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.447087788 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.440675364 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.441994411 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.446164089 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.440419353 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.442505643 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.442138581 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.442782691 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.465369498 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.451946419 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.447893077 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.057222348 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.443975011 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.460874067 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.443023983 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.281164522 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.44450763 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.45785661 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.442687966 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.441811813 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.444103594 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.453172618 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.444099186 seconds)
  done (took 155.324349901 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.450369236 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.12448433 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.472307236 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.607603424 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.475805641 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.447130554 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.61054518 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.521163695 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471101987 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.44953226 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449120426 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.812435747 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.452649627 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.070190189 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.683711914 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.628128069 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.067415705 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.472315615 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.448625893 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.449069084 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.610691152 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457380061 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.812473444 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.128618293 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.473399437 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.126766014 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43435557 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.452104222 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.450052603 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.129871178 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.470454312 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.816320809 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.544074775 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.521818691 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.150686607 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.092003047 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.092296257 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.636930794 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.458640805 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.451097403 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.449101424 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.434201268 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.130727035 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.475257273 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.452266228 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.120872055 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.474403774 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.45387775 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.458335929 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.45022664 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.523478737 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.545295431 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.839656112 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.137797807 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.5651351 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.464657749 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.620144515 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.849394901 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.455141346 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.07152165 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435216963 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.138397205 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.476327217 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.435888542 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452668534 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.45813358 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.632677584 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.622713918 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.07997229 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.473196343 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.073862697 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.654031456 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.451310707 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.452711908 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.456945763 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.136951584 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.096571717 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.654676166 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.615274097 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.690039528 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.435751785 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.453685809 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.435668686 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.546487365 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.454481569 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.14091558 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.096806047 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.475339692 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.455335643 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.456701672 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.456543798 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.66885628 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.160550195 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.568094339 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.065319548 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.841311875 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.822819297 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.457823086 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.526094051 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.476124414 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.823856915 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.456959259 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.524562662 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.909169353 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.824833636 seconds)
  done (took 175.828586656 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.737998708 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.808892866 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.555858039 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.62380882 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.117303418 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.085188265 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.895872734 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.608947955 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.579223484 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.748780564 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.844157307 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.553014549 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.69858226 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.54205001 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.239514984 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.557923136 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.581350879 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.61563481 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.632375722 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.552400474 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.183624297 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.779176607 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.676813274 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.502367552 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.561628951 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.32810101 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.077342509 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.055914836 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.662008362 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.023916409 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.058849513 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.669864916 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.5335361 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.247482596 seconds)
  done (took 71.306477886 seconds)
done (took 732.480938629 seconds)
SAVING RESULT...
DONE!
