cset: moving following pidspec: 14123
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343304998 seconds)
loading group "string"... done (took 0.595187011 seconds)
loading group "linalg"... done (took 7.541112797 seconds)
loading group "parallel"... done (took 0.178972498 seconds)
loading group "find"... done (took 1.230705183 seconds)
loading group "tuple"... done (took 1.911872824 seconds)
loading group "dates"... done (took 1.293937006 seconds)
loading group "micro"... done (took 0.240619009 seconds)
loading group "io"... done (took 0.985179579 seconds)
loading group "scalar"... done (took 40.242924392 seconds)
loading group "sparse"... done (took 12.710048539 seconds)
loading group "broadcast"... done (took 1.002904448 seconds)
loading group "union"... done (took 13.889523498 seconds)
loading group "simd"... done (took 4.659603608 seconds)
loading group "random"... done (took 9.415298469 seconds)
loading group "problem"... done (took 1.94413732 seconds)
loading group "array"... done (took 22.181829686 seconds)
loading group "misc"... done (took 1.987988326 seconds)
loading group "sort"... done (took 3.388659942 seconds)
loading group "collection"... done (took 19.190469632 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.557533765 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144288447 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119995608 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14260748 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186144987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130550299 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140725848 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086641243 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.878108231 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15953586 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140152977 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.515860747 seconds)
done (took 4.915196939 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.19620417 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089074884 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098720421 seconds)
  done (took 0.848890941 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065906073 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129479678 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08179152 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068693561 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067633775 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081849614 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066965325 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067376287 seconds)
  done (took 1.228551388 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074761295 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070942573 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085405758 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070471053 seconds)
  done (took 0.97067617 seconds)
done (took 3.980174547 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.935072624 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.254699481 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194613222 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.485002137 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133600526 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191255994 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668950345 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.375920902 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.215421798 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103563389 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107242318 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391308897 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108829722 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674475714 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076691474 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106052742 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.172510794 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.461534054 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080473743 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083543692 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104605282 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14168718 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.099657567 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078194041 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169045079 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071981055 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154240199 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095422804 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067774022 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250868484 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188717212 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690226225 seconds)
  done (took 10.640818385 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099150977 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120827428 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070184886 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141423953 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12054236 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071551414 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074308662 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082667944 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093828952 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162757929 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117251898 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126217138 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067301392 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071161476 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102647898 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231804574 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.093898429 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102152333 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072169136 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092280781 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108213728 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099373306 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080915598 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096169606 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.149452504 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19195615 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100074803 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110365328 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06983213 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097271276 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130708763 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132599487 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06694869 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082611082 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158112692 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096605788 seconds)
  done (took 4.561775707 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.102088434 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176884389 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095437329 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156576451 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087040574 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130537177 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067332955 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100143361 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252779155 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110252471 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.490853623 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131083791 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.087690156 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070338362 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087377555 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069425623 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.610135873 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147363507 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124196292 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086304735 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092623218 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072843495 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360840148 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069493348 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068682444 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087369231 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060791285 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150243256 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071005609 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.272636891 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110774656 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070668494 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122560465 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185587876 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111078482 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128317435 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068343104 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066972529 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174279287 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092121046 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068800188 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109477484 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11921694 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.108661738 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085600326 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06924166 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186545286 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068546645 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100375113 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.958813484 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.163936228 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126862499 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084871203 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301589787 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086503662 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085141115 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066388735 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276768187 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183158687 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085945564 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071637331 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084353711 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070513366 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370672966 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068995592 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.85058046 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072407026 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077107232 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086808979 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068666022 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090270514 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073913207 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10343538 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068934242 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070068591 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083591715 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067104158 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087098933 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095004138 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1051589 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208453753 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068963031 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08611999 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06790632 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082524497 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087460206 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112861129 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071057662 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067911279 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11859864 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070987242 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083605551 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065369744 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.121837344 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068590845 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105393573 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084713497 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11543688 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082266774 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065379495 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.128363097 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080536191 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099072305 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088580825 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119953333 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095771858 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070658336 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157555587 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066371061 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066730915 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084643339 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066608835 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086780549 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069429253 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099751593 seconds)
  done (took 21.567346478 seconds)
done (took 38.538840927 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.310603488 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094261086 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094330445 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.093126467 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07741773 seconds)
  done (took 1.418143025 seconds)
done (took 2.136180847 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149261215 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10394573 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080967273 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098163023 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082015952 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103119627 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116720448 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08324563 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11998018 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065583531 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113235385 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065614293 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080869041 seconds)
  done (took 2.010254939 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082958949 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086096101 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085563287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082004086 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079598527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082887917 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080969442 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104941529 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081912574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087786688 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065271408 seconds)
  done (took 1.63576367 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081900786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085294307 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085713712 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081803632 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080238467 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081372613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08064607 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101788382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081179944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089116066 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065295146 seconds)
  done (took 1.632220085 seconds)
done (took 5.988186854 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079089816 seconds)
  done (took 0.788539203 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.741330397 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.348987017 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.0849997 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136725919 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223881009 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159685736 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.461585069 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113142836 seconds)
  done (took 10.190326781 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114697137 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08633958 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071169011 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08409139 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072568876 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087863898 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069764437 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070321 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083713026 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07306156 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086539836 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070669076 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086535907 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072991273 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083273403 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073104409 seconds)
  done (took 2.067997229 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106252938 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103961241 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089990781 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077277737 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089294358 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074666031 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090995594 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075474796 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086108215 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074924947 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091034903 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076117915 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087954329 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066682195 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09008846 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078066418 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086509462 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075940372 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089726152 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077874971 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089289877 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066880489 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087595093 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076770829 seconds)
  done (took 2.837093837 seconds)
done (took 16.598945626 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132969714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078006931 seconds)
  done (took 0.929487046 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083303977 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098223802 seconds)
  done (took 0.907327578 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084949995 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081025281 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092812914 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093491264 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081529709 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068087104 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101974015 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06758834 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081398246 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068423263 seconds)
  done (took 1.546572639 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070289739 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093713241 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072220376 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096319463 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074666429 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079888567 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075015159 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083858129 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07952831 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07890471 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072671629 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098714909 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073079312 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099143203 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089436811 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069278544 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086530964 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068885578 seconds)
  done (took 2.189574429 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06733031 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069039823 seconds)
  done (took 0.86472582 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068426719 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065314796 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081392971 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068049197 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078255421 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064861306 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079381753 seconds)
  done (took 1.233740819 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410374541 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10976647 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262747931 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07260814 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104806991 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.294713611 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067029815 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072397998 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087592155 seconds)
  done (took 2.248554287 seconds)
done (took 10.643305263 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080872142 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086872681 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110337314 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.436667361 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105053275 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067808772 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143349278 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.212435702 seconds)
done (took 1.971784624 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127228936 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.624835777 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.411184867 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.229603255 seconds)
  done (took 2.001724943 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.383819602 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09214386 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072959571 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067919383 seconds)
  done (took 1.352941576 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06734136 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070436444 seconds)
  done (took 0.873896052 seconds)
done (took 5.089729409 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067268522 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113354499 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065638583 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067136934 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083566886 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.065221178 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068339869 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.080820116 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064486719 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082943386 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067475519 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067690616 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.082005988 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.067556127 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06764486 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078830725 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064347852 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068251901 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078993709 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064914473 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078931872 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066774855 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065400121 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079721125 seconds)
  done (took 2.528665197 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086607895 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082703588 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072884421 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088283406 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071990058 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088431748 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073676387 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067375384 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086964293 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070488821 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08558387 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071783242 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083259785 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072373395 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083675102 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072207013 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087379893 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068039194 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083607536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072030091 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073879553 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082179039 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072126504 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087028058 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071270219 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085159383 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071163826 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082240547 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073339219 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085912617 seconds)
  done (took 3.088809559 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07250844 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065601371 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080605134 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072503453 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064949272 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080923872 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065187881 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080031185 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0659343 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065159844 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080742933 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065006472 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066477142 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080734937 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06541054 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083175687 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082364474 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065012195 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079883988 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065112753 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082848246 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066125995 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064699177 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079994372 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065192139 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06500292 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080131204 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065072627 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080897031 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064937866 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067974892 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083234218 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065525999 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07186607 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082665725 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064632017 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083319882 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065607347 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06641914 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079666078 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064871048 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064548281 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079074529 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071373023 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065690749 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082463326 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065608839 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081792196 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065510851 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067861947 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079449375 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065618007 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081382526 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066789523 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069133115 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078806476 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066216177 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06489441 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079747598 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065176135 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079616333 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065059417 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067568891 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079878941 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080985373 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08700125 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065344057 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067739908 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080629543 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067946729 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066821381 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094726259 seconds)
  done (took 5.961988658 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118674176 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094283747 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083147619 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066807327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079143795 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065693919 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069757243 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079884562 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067211113 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086140717 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065396734 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081169963 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067071766 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081505118 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080621129 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06719102 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086605646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063595437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065476206 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084164852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066277316 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083185011 seconds)
  done (took 2.447595632 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189412028 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087817993 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113436825 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090996282 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083995887 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075384907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086737705 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072128746 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071532829 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084144448 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070432658 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086816029 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069782251 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083877675 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070727183 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084598371 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072226767 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084455162 seconds)
  done (took 2.322627298 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07964064 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067776746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104535347 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068164041 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082481435 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070263428 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088831175 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077536184 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085260784 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069170809 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09167468 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070406826 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.194493149 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068614291 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084848798 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06799422 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070692974 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082240886 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077550675 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087081797 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073936282 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090961355 seconds)
  done (took 2.599610229 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08385232 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069473261 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101108617 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0859967 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063956134 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065581697 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089121696 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068047402 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090259391 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06943684 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08287542 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068272291 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073261293 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082518549 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072285331 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082787155 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070407816 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083826966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070129719 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06464666 seconds)
  done (took 2.286337077 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08898198 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084182822 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068299902 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093190933 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070242319 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08411972 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077934311 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083809563 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070225304 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107827155 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069300966 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083846492 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078638188 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089812501 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06948022 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09293946 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092529294 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077432467 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084002498 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069885395 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110147461 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069084373 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092613856 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070051106 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084501424 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068722633 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084041907 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075294519 seconds)
  done (took 3.044336928 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067820293 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068076613 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080325125 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065135863 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065400883 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080436878 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065031693 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065116849 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082575108 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065997151 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082866334 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068445122 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067621196 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082120497 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067623941 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068339254 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083257721 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065584576 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065358236 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080145122 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068779588 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082211774 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06944718 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066183073 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080547541 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06823222 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065892395 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079720532 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067816381 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066906951 seconds)
  done (took 2.908486691 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077834796 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090666157 seconds)
  done (took 0.924587643 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066305155 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084014684 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080806866 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071504633 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088314203 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068932246 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091654785 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073046497 seconds)
  done (took 1.377503427 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083073452 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079698389 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084095514 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.095971848 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080524792 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085156538 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157960597 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084363501 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075567861 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08185561 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081438105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082554009 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073931472 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067822879 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089656877 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074703607 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080599152 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074429643 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070304826 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082581756 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069605585 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095080392 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070648653 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079998351 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072075383 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078066329 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094587213 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069573986 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086260834 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075251355 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08811016 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062678434 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082831813 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068370945 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066166107 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094188177 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084791167 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086943828 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078054837 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085366426 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078940435 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078591468 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072431402 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090303767 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079485249 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068605964 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084447634 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063831127 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081246617 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071059866 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064132764 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084094796 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063361312 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091535539 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073042097 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094655214 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067394789 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070451389 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086970651 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071993506 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090036274 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070084685 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071340677 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083526201 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076614647 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088683441 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078931591 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079191834 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062797973 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06635129 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092940963 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092638511 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090418687 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069153319 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085155964 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066081465 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086558221 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069625033 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075143692 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089991648 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069179918 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089553126 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077986696 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083537761 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070742478 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092014777 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066725565 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070675696 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081048372 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084975084 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082536009 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066152905 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081886131 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079376779 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072170804 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083436207 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066230322 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09067946 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062937841 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069778848 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084127393 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068662992 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094411193 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074700558 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089070793 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077455398 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091810911 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068456731 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087938269 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065783949 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069748468 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.082445749 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075382764 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077911459 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071000001 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068808008 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084779035 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077427426 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081564292 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068439305 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091273518 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073725105 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067101635 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080458413 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071575833 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083331885 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072099849 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09218251 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067171263 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063778796 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079015143 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072128807 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083732473 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071586523 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089187667 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071335877 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062765269 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081604335 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072273433 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092580749 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068316008 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08444759 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073829451 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069841966 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083300837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074878044 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085727871 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067918851 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073914854 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084238865 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063160086 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087217297 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070708836 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082334548 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07175956 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072421599 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086795124 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070002629 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083145471 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074251096 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084274867 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067067338 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067958908 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082280667 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079348565 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086654906 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063126264 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065277887 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091651005 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066587063 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083755686 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068790547 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070748029 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085178509 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067206436 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083644736 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07045079 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095980745 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073445643 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084941301 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074519608 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095368686 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068089616 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072452525 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083708029 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070451212 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085442251 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078065825 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074531822 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089605049 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070884194 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080659107 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075566773 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09250084 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067574121 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066406629 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083354801 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072757384 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089773013 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072193597 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085688913 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066584292 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0684602 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087590372 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071125434 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08434757 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067071018 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089031282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068249357 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091242653 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070776455 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07933146 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086886379 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063689091 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087377752 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067140461 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090446808 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063707746 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066397351 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084032335 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070475864 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067462395 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086989681 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062954422 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091397072 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07629638 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08451375 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067405254 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067765222 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09092081 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069034125 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088069035 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071498875 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089612779 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078437424 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067809369 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086992596 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079380102 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083882714 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063014131 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090349096 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066572493 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067817256 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083358339 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067220508 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087785068 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078025207 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091934803 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062689693 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071185774 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082372408 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067532727 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078900679 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073595485 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071922919 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084278778 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076282761 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084688264 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069405098 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072138105 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084012137 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069391674 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084517837 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072549972 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084850045 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071504818 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068232821 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086924743 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067900695 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082072958 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070445577 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06944975 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084081546 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074420429 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083393496 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069257252 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071811638 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08558267 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069714611 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0847944 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068591482 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087735058 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069214843 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068986434 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08631866 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063354471 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091806869 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068707338 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076708885 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083937389 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066307045 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089116561 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072171182 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088576454 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070254836 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06960535 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085922063 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067607229 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087476101 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075358553 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065543254 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094544983 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077017311 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085178504 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072702837 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085189908 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070521057 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067908814 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084848289 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068957993 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084374674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069216895 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08867089 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072005966 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069156171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086080929 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069791042 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084440847 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069876071 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063062518 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084083767 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068080683 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084360253 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079371681 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069283054 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085148557 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068564318 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085117793 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068140202 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065662596 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09216677 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095056652 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068965959 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07705857 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084210511 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070337482 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0950652 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066277881 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082419683 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067091962 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066360899 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091920766 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070514615 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094539187 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069384006 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067833299 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083113581 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070341983 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083452007 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06312222 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066666076 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08868384 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068151402 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083690298 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069726972 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071992465 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085817542 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078930352 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084443442 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069740741 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084415553 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066193346 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067779656 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084321189 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071732852 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086081662 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067668747 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066371114 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084770721 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069465684 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069163036 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084542632 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069826619 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092585059 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069695121 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088158563 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071977852 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063911652 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087909457 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06838977 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084818169 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068332429 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07158853 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087627468 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069257387 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093999728 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068568873 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085689738 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069640966 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066947792 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08514953 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068416272 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084538229 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067991549 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07067736 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093463931 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066924067 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087566111 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069370265 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084452641 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075819706 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070103542 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088883315 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075496961 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085171544 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070379036 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093564728 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072733125 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088148108 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069864027 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069927439 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090047133 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067911624 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09088219 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069382677 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069134904 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086827133 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066376731 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084566237 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068824844 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067706253 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090781297 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070281657 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084358686 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068635907 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065895447 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085626165 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072056918 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092346693 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071024623 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088693138 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063868037 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065884527 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086725475 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066985736 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08729756 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071506769 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075213165 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088092288 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069489186 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084344469 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078182131 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090932342 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073380691 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066317322 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089304392 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069712847 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087779958 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069990329 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068307144 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086377709 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072230176 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087028894 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068771184 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092837258 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072083263 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069695504 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08612209 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069901885 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085367886 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064106296 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06901125 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08787889 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074595325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088439266 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068527921 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095783121 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066824325 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069173294 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088507062 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068155863 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090196632 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064235772 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070441404 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087167523 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070655385 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081626737 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068174821 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067176634 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087998371 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067428265 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080753803 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079359028 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094552743 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071928304 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066943136 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084244826 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064115224 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081540814 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069081293 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069331087 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087294673 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079885218 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084320251 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067912555 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080508875 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069020203 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071962618 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089446856 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066776184 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081497613 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067181235 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071065909 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090760658 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067048084 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086157934 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072832982 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070583113 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084321153 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07313641 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082457096 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072114423 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100008262 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069232803 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069044275 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091902832 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076334752 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085769637 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063988861 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087318064 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071894443 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069142829 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086038848 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070465298 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102300925 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07198822 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085292271 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067333409 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071336886 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085136477 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077727098 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087961121 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070354428 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090890184 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07151413 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095473733 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071396559 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077018675 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088654769 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.0714528 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085132844 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069414619 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084477279 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068477493 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070151748 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086606682 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074080105 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094317623 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068418098 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097945106 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078277313 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087739786 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065507202 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067936637 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086635372 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064634325 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068738684 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084164604 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066473598 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084280687 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067776646 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069671321 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091464301 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070128527 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087384926 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069693688 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06400364 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08747773 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071773871 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087150616 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065864571 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068534894 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086553469 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073282281 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089665748 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067267213 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087085957 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070390028 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068547155 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081308169 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076647319 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085345685 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071557065 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067465277 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086094365 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069191468 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089829535 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074420894 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087588879 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071528757 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076857262 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089033804 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066054125 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083722745 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0752195 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066615677 seconds)
  done (took 46.976963385 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110642461 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08214906 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063870516 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081473863 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07675219 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083795324 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065248985 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064692446 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082897041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067613228 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081942263 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064224897 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091909188 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089207999 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095285665 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085893507 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064522304 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064589734 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081866488 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066006342 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091883032 seconds)
  done (took 2.456667589 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089514934 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102705163 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080817794 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101378197 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093068302 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080075404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098160919 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080976336 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101034234 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09371019 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083028244 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098180082 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076493585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093380366 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07667728 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096119803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100700726 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074903953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097589424 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080027858 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094508146 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097454346 seconds)
  done (took 2.786391008 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069686173 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0673527 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088155517 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063098549 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06792884 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080743477 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072009957 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083878573 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072304084 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067031378 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08520687 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.075854905 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08722899 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067090115 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068576023 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08346079 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132153587 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071355182 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086269534 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069107763 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064012572 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088185899 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063309651 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081883322 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066643996 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072069922 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087609436 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066900963 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085687981 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06832254 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067642448 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084295161 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06924167 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068502094 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084664407 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067710876 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08594203 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068778648 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063618359 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083433368 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069581788 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081707057 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069852015 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069825031 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083847667 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066011563 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086532795 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067886438 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063864858 seconds)
  done (took 4.504142603 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087710762 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.141796329 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089657647 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123469781 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082923366 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09521798 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072848027 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12334088 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.08443402 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067768567 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104655794 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084275861 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087439789 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073628707 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089567904 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068762459 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087985577 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066554712 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091100853 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068381225 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090781981 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074418344 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10073384 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081272708 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090487638 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067437818 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085944167 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072990802 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099488596 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091071653 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073990465 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092185163 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084459416 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088537408 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067753983 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089481061 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085001664 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086551031 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07056845 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083390909 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071167416 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090478033 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074900209 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103566943 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06965732 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092737246 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06838292 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083050756 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083367626 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089641148 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078186854 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101222934 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07350696 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085656534 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073120004 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.10251401 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086747622 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066338521 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071456277 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100050959 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066044637 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089982438 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100564701 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070694659 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093816259 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083827802 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092218071 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072166668 seconds)
  done (took 6.735969165 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078646319 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092715867 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083050805 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102158429 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092699973 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076175474 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093098703 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074544949 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093365303 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079831632 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092527635 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115851283 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071645263 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09640697 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07547586 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092972914 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075454749 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093796926 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093598207 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075264395 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09264963 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083853134 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093346524 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103555616 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105006439 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08831707 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075874409 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09278228 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10263389 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075269474 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104657903 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076014611 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092759713 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101494104 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08878825 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092493048 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067625688 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092609149 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075294543 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092783982 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0700604 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102216827 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093434943 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06985686 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093550591 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075392992 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102678336 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105628532 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078763796 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097610784 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076454906 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101556737 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092902173 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07636308 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101611992 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128471179 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084228868 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102729568 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09306956 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084015185 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10203204 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109820864 seconds)
  done (took 6.401192807 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092280799 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096189047 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098277032 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064217995 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067058009 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092476329 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067266358 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.0850923 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077836779 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096083699 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079912904 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090983274 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076104776 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099074588 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090996754 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076121671 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091648335 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073311147 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095612091 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073029159 seconds)
  done (took 2.493384983 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077360844 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104825264 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07065132 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09357594 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072334591 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07563897 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090237133 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072525071 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088027107 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072703425 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098053795 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079563685 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087982935 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075419061 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097774624 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075487874 seconds)
  done (took 2.146652257 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08234641 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098957775 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08490514 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088273821 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066885683 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084965528 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069114379 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064664393 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084144669 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082621124 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087955062 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071821907 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087437778 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067114309 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065639971 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091081905 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064683703 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085776679 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069697254 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102662536 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080822604 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086180204 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069774146 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089052875 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06954183 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093014905 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069100159 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.085983142 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068294672 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069773988 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087791951 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07684279 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084556063 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067611344 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085036145 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066795292 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068024071 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087223836 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072491779 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086482277 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068170935 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087441392 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068913857 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070543412 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083955327 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069327686 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084592851 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075267811 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084762789 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069825561 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069309721 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090200197 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069837372 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098765422 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072802481 seconds)
  done (took 5.145815711 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082948341 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072131729 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082877468 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066879967 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090541651 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071135128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07244775 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088938488 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071806224 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08468759 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071300395 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090940779 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071044505 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072243338 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088839656 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073011447 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083394302 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071008854 seconds)
  done (took 2.22533118 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074347672 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069117255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094472983 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069360225 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086917183 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071370248 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06441569 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086124424 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067264371 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087461104 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069580235 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071709677 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085940948 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071243765 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087456597 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06910852 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071346293 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085254051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06892572 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083667521 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071510673 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067946598 seconds)
  done (took 2.493072244 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074510669 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09705988 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167309852 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109989077 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084757263 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101192006 seconds)
  done (took 1.454037814 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093108754 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102389416 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069469958 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108736364 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078467111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089509044 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072214188 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089158722 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079486423 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103868972 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070978287 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099572593 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099337748 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083009651 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095505415 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07821748 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090563192 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071563371 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0887046 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108421469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07119768 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098416858 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071410929 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089740138 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07038825 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098741698 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098477535 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08411339 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089383011 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079383853 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094934699 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072431294 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098929736 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103021726 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072968255 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099302189 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071852297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10894268 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096654875 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08140445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091091937 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077878964 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099843505 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076177396 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100074492 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088936454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077386297 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089236739 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071010454 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116065601 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096860209 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07977713 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095152838 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099783712 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081024864 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114844413 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103701646 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079481188 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095299401 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103116455 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079411221 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095572371 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098106701 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086405133 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097424969 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079146077 seconds)
  done (took 6.715848787 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086805133 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107207312 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071291133 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103806949 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099786794 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071477019 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089657928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071263046 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089923523 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070484117 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1327779 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071421737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097908372 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097686016 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071263164 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08948465 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072005876 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098234724 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070417656 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116750271 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089547348 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079923253 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097892467 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098464432 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086433602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095573382 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070993339 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090755718 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088589705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071164429 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094662128 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071056252 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09849297 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071030598 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097908195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071307663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089315966 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076823102 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089482225 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095017153 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080592359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10881287 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071078221 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089058397 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103528099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071315714 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088952452 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071595163 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09011538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070559225 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103644525 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085437292 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102626903 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098572805 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070811524 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089920731 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070952111 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09007111 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0718723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09595554 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098259413 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07144824 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11500264 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088954851 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072398179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098328864 seconds)
  done (took 6.600206183 seconds)
done (took 129.360623968 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201909783 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185196704 seconds)
  done (took 1.206229982 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070856992 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.11834012 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081298433 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131430357 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089121922 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102260421 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120036827 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081853281 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069454879 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088529171 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069943005 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089731635 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133404656 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068989444 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08911221 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071215411 seconds)
  done (took 2.300857478 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105674786 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201636494 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111834593 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068305172 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102109606 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081131978 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087798803 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079271173 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097312078 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068266004 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100258519 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078932086 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067705645 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098183709 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097084161 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079982583 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067568447 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100495427 seconds)
  done (took 2.523062441 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095809384 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.109957228 seconds)
  done (took 1.034664625 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.20334512 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123255437 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206531007 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.476113891 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.246567806 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.292495513 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175961449 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17521715 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159882466 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17377153 seconds)
  done (took 3.059843379 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101610843 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174219272 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319029991 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141145681 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088612114 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118388159 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142216517 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112254792 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084951877 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103762471 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102906853 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079833071 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119940654 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079166063 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096331038 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079171848 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122867851 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075948038 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096417461 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078924088 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120428748 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069202099 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097158323 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076414432 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099846594 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081070368 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087538922 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068410559 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096497492 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077876741 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101147372 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098908731 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100021327 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132097977 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104015975 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135470223 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081252738 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094739839 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078371654 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094411151 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081100756 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100132547 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.086601903 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098769041 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068331297 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098449887 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07016641 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088431099 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082761392 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09938695 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083686935 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101008538 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133471416 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.081033311 seconds)
  done (took 6.316561698 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.760316811 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137762121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07357649 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.828522035 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117528719 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085368023 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.748702569 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096588998 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237193311 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76059838 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114754594 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080422647 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207416576 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.21987512 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9094299 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290382555 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.649276493 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108808069 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112284475 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137138484 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165079927 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161518228 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15316908 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.41191613 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099482939 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073648986 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140047952 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101488059 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143852201 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108961429 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075596907 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161255129 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.255539607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.162828925 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099389554 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073187324 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07343649 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173792173 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224236105 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195488318 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162710321 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070442918 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073072646 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.163131197 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136477272 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069743748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144438072 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176142905 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.154208134 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076962593 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10057863 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145066712 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142666454 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.146975132 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103591349 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297509775 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.27475034 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092728014 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124643179 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087274383 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241482159 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105218281 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.185170109 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143785736 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19235379 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073157028 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757892646 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151872417 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073034187 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099279352 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123058076 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078152503 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163823678 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.128614747 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387256298 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16687209 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075517968 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092192171 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186032693 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08592429 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093142212 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143484748 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098136124 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105757006 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171313927 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149130357 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152349251 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.214346084 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.169107695 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144772079 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077995158 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128661257 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098262399 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.1948521 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201339982 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.145737202 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.192946403 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145559195 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146793688 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170258492 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081036493 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152861816 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122800029 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104924934 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142504482 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197021058 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127252538 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085197228 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097004308 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142807771 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130506007 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088937734 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.163472466 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.154290356 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.43582513 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150637515 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089809082 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089163848 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163656412 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144180325 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078772976 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241599745 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127251967 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.152870451 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126761363 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070358318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124816719 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144697285 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103394835 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125720392 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143977947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100142999 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214048354 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.174171534 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102165448 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200378841 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16496748 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098859177 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152615981 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124483705 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149212353 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080357731 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162155186 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077761367 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751610267 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14620378 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12560395 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077937216 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167938872 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093127177 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085719004 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106485548 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070024488 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79054841 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110594876 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083879769 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105546045 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078703402 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125779193 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1410884 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097629601 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143581832 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211826684 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.081266683 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122957789 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106567832 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143048231 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07825402 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107210945 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.106806063 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086961448 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125987693 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09623643 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085393972 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149775987 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16392453 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.17703847 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575381797 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072981011 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106998424 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208290365 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073139063 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268481776 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141788573 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202484575 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14755244 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082394203 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.296546901 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147642976 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.168290141 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108075359 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15531658 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069989488 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140055063 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165807848 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071928321 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09805739 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144724232 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.149628348 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.148084804 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.949085551 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073947765 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227864141 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069732403 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151755252 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09889663 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081495877 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266595713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072913678 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.171780307 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.146808975 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076492048 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106144919 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.821986236 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10637129 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142171757 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099111008 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180921938 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144770655 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160489805 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140850434 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08079095 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164117386 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188217656 seconds)
  done (took 41.487793817 seconds)
done (took 58.750387538 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279901832 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213916645 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.232476528 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147541184 seconds)
  done (took 1.805719326 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.148826103 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109195277 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119513953 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087041464 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108321666 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088254791 seconds)
  done (took 1.513111102 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.423843355 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276982793 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.258822282 seconds)
  done (took 1.81455889 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.301964831 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.233781814 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456121419 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.305402364 seconds)
  done (took 2.256470922 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.196593253 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117609611 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.090792398 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086920841 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.185437127 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242184709 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129150945 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18988812 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101037839 seconds)
  done (took 2.240344864 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.181879084 seconds)
done (took 10.666375374 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.147869181 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.147482613 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079235378 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.25043844 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079308874 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.101168853 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.12649548 seconds)
    (8/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.310140711 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.0865667 seconds)
    (10/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.234811073 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065298716 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102866201 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078875434 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.204248358 seconds)
    (15/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.246764747 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.211616047 seconds)
    (17/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.180108022 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068210082 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078851448 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.252359909 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.16872046 seconds)
    (22/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081502919 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.226385439 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.113210904 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.212599334 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121149966 seconds)
    (27/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065353573 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.169963337 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07506239 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.122045541 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119104225 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086046383 seconds)
    (33/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.10619625 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.201559159 seconds)
    (35/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077815302 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.230278769 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073974418 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.1938412 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.143649865 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098209486 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076918832 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.102092913 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.070216527 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.18807937 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098856296 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102173055 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197103033 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099658743 seconds)
    (49/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10059534 seconds)
    (50/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.21917626 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065833251 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.235990473 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095199974 seconds)
    (54/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219101966 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.169662683 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064628111 seconds)
    (57/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.165221546 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090244893 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096531162 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095289999 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202476059 seconds)
    (62/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.20786189 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090946667 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067959919 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16429671 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115916306 seconds)
    (67/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16261923 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.132997289 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140293959 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09102428 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075685555 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073135014 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.095190216 seconds)
    (74/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074788011 seconds)
    (75/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.0545442 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102488347 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053713343 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.157217736 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079116656 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096948209 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093950792 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075451328 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092040134 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074129863 seconds)
    (85/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122160712 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069746133 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067741118 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098500636 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070185064 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099268009 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.142600808 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.093401352 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06838466 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069265889 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074323251 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.211271355 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069586602 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130339786 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077354651 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062711413 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07645807 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05370917 seconds)
    (103/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110224662 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115092451 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054224991 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076330315 seconds)
    (107/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.122264062 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09134766 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.080051996 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078396522 seconds)
    (111/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136354231 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074090242 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142233652 seconds)
    (114/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075738679 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102188637 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075944161 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.178810897 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115712718 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.103534211 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176085014 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067902911 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168050109 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193860085 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078101814 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068035553 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110535854 seconds)
    (127/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170989781 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134768993 seconds)
    (129/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.133871886 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068176209 seconds)
    (131/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160909693 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158665863 seconds)
    (133/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068226716 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070908574 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.158975733 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09781935 seconds)
    (137/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.10493928 seconds)
    (138/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103099897 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076784019 seconds)
    (140/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074255094 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114749351 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115156986 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151570346 seconds)
    (144/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0907193 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073788255 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154257182 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075914616 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092983553 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068074024 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204946742 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098451936 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114081001 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076232635 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053596123 seconds)
    (155/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101491186 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097081772 seconds)
    (157/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.090607521 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053837 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068633205 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097651281 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.285249988 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090070687 seconds)
    (163/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.103051095 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.151500848 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.146225472 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093484886 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077565024 seconds)
    (168/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095061011 seconds)
    (169/309) benchmarking ("sort", Float32, false)...
    done (took 0.132076338 seconds)
    (170/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.132808937 seconds)
    (171/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096192696 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.164583449 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.147738154 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.139196971 seconds)
    (175/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.157887672 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06894914 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114021737 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054528103 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053862036 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089834082 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.14261424 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.12127427 seconds)
    (183/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.103551663 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104889918 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053545969 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099691086 seconds)
    (187/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082629401 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068488351 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.154226185 seconds)
    (190/309) benchmarking ("sort", Int8, false)...
    done (took 0.167914405 seconds)
    (191/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063056764 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1664842 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062943725 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096270286 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076723055 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113768151 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077011384 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054499094 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.085357358 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053804848 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062475882 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088977409 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074100091 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073786969 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088042814 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054529453 seconds)
    (207/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054596387 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14192036 seconds)
    (209/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076578502 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106069106 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120692167 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074804271 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.140672518 seconds)
    (214/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053860073 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.113422882 seconds)
    (216/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070595912 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089655862 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171120392 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098915861 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075790011 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054063366 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089268927 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082269433 seconds)
    (224/309) benchmarking ("sort", Float64, false)...
    done (took 0.151257307 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069458856 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053806894 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075409902 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069216008 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074058946 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088798316 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05371372 seconds)
    (232/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054400771 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.074543334 seconds)
    (234/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065077395 seconds)
    (235/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054327783 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087161241 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076504306 seconds)
    (238/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054430353 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123591023 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053141083 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164451476 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07603439 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054782369 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076027164 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107356034 seconds)
    (246/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098113043 seconds)
    (247/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053592997 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115486207 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06845339 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148583223 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103259358 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053532857 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.118934753 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070756546 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09222537 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068480534 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069323299 seconds)
    (258/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.076969429 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13792182 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.085374744 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068913372 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068113772 seconds)
    (263/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093730495 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053554858 seconds)
    (265/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056140136 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.093701919 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054169548 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075077473 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.114608572 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076510541 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103639715 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174564499 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098245313 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092063358 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119610611 seconds)
    (276/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070441359 seconds)
    (277/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091699826 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053690342 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054593842 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071260877 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105024646 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095006857 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114209996 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194336668 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075182822 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054529558 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098292259 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090688304 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088304976 seconds)
    (290/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056032428 seconds)
    (291/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055463648 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089728092 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076066238 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070084427 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084592179 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074145229 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056808927 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096983247 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069033757 seconds)
    (300/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05467981 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089696616 seconds)
    (302/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055113263 seconds)
    (303/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064321058 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089221738 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074333411 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.167123708 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068292694 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054131105 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075109759 seconds)
  done (took 33.770560892 seconds)
done (took 34.625239007 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084179887 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117209454 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077965377 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118196762 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08318736 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102381882 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075079413 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103332971 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083126649 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106607865 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08304508 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056984446 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099241778 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078095504 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098466952 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09540328 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10217349 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074749122 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.09763805 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067825558 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075479824 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08935258 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069602463 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056816077 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101231426 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075557143 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096838397 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078005391 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068251419 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089263319 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071032976 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096944506 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068352132 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081705578 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095512297 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07768639 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099648887 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080699159 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070233299 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088855405 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075950591 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089245267 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075737383 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076216365 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095599467 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074410784 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097978937 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082823502 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117326615 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07084621 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077001143 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101332474 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079487416 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096260582 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072673271 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097925725 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07409172 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116976722 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07727207 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070874108 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097661783 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077647226 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.097229129 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077196747 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076953984 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102386353 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08010504 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097695629 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078282993 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074528821 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090040414 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076347828 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093128065 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069375729 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079363163 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101321804 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068357813 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095320902 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076061141 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074763715 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.08937945 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070705857 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070617604 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09615283 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070672847 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057117582 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092572622 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07477695 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089390673 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078073738 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075066071 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096409214 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070714238 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100772833 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068232782 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074008572 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089836335 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068718985 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070178236 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093552645 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067878662 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091241483 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078044647 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069860601 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096256366 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083139183 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090273054 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075692905 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067392308 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.08951403 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084470098 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099393933 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068846528 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070423519 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08948143 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075728261 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068055786 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09006753 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068811585 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089204097 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074899099 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069052455 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092355985 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076763746 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081926774 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.09157829 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071530093 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092155244 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069393463 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074790663 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09064829 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068149726 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07027153 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087166106 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070641681 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0682928 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096901434 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070585886 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098872718 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069412555 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077963204 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.093722252 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075142689 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095580667 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067980807 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060758807 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092059534 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070739615 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069876823 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089748153 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069479373 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068228645 seconds)
done (took 13.476536006 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068565989 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175431941 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.129995631 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099184362 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113706432 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068874035 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103028599 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133119737 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070710242 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131739901 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091958538 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111465258 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.142197247 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068279032 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069186494 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09500593 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069610356 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11498747 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107074387 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112278741 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145573897 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067971977 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125133552 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094144206 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11452471 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12964068 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068785264 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094634843 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072768848 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12084116 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088876703 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07263703 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090246531 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127425833 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098714789 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111746378 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06868382 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110253157 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069485336 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068943922 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118266559 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12598973 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107808067 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087250312 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092962336 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072181168 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071108918 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11180757 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117592289 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085564138 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114982004 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139796585 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072002383 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109220493 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067345508 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114621225 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086949992 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092140928 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069109436 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071606999 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090785612 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072239902 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114353962 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.119353667 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073471229 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108724184 seconds)
  done (took 7.431689757 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088314319 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118514072 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087764958 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109374304 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068221601 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070198151 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091542931 seconds)
  done (took 1.548725665 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069926431 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091387106 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114806377 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093646184 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111170499 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091410065 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101318673 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070164815 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108552362 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071254399 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112822425 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108879194 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092809168 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076181057 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.116930349 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068616117 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094701425 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091919664 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0725896 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11589061 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071914562 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112345211 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071680852 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069628124 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106189736 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069549259 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140300054 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075443974 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092905454 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072966247 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067810798 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143575294 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107017419 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.0810651 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092294226 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086384333 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10802425 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067456871 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087451599 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097715691 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084759424 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092307696 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071036394 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069059041 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096501163 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081487221 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093336974 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071096248 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07319989 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114041153 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070656369 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106841016 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069473877 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0740152 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094548995 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076406954 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101564337 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071651281 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089971195 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094607705 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088273437 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109538592 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08428036 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109572982 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072499873 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108147021 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084265513 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072186906 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094710046 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072676476 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109267608 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068574165 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071824875 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103175222 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071713381 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115923073 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094498386 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094147082 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080116073 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070655356 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092079548 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070217514 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116805668 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073311654 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091985921 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073476248 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072648259 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090544309 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068707257 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073785649 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091254812 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071035805 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07319999 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093215471 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07280339 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110766623 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071206778 seconds)
  done (took 9.495380736 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070785762 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071261247 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094199581 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071303516 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071293034 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092850403 seconds)
  done (took 1.401245326 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102605322 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095325989 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085774145 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098779755 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110450904 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107654319 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086430858 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108848693 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087989419 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105340584 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086045741 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109274276 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09223484 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09803517 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086616021 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098848906 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086200114 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103827483 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082621738 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09971596 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09188523 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099464174 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076854234 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109372941 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07397683 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098554062 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080994579 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106323111 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08195484 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109074526 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077431263 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096796662 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075476419 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108002638 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086194542 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098103114 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075516148 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074869086 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103339906 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074113339 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109517121 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076818279 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.104725441 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075343436 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109012605 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075411717 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097225196 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080076782 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.107666142 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074375838 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098006174 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07554334 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096493612 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075722809 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075344101 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108325393 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09678507 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086020351 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.099027228 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076091896 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073891353 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097231728 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085864647 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096445236 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08485299 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096783288 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075070953 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100111928 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077714108 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098396587 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075219131 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095450627 seconds)
  done (took 7.516190395 seconds)
done (took 28.304815719 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650142807 seconds)
  done (took 1.572656766 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.791783669 seconds)
  done (took 1.715769025 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.288980959 seconds)
  done (took 16.220161662 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.646756107 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.803351853 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.820553696 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158267966 seconds)
  done (took 3.353131944 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.875645876 seconds)
  done (took 1.821664092 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242421291 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.254238306 seconds)
  done (took 1.426785711 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.719721018 seconds)
  done (took 1.655460218 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.290668467 seconds)
  done (took 2.22078267 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337257943 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188815536 seconds)
  done (took 1.465872351 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.531084928 seconds)
  done (took 1.46968717 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.466494002 seconds)
  done (took 7.409180344 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233446338 seconds)
  done (took 1.185088876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272977124 seconds)
  done (took 1.21447519 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.234265681 seconds)
  done (took 4.174266569 seconds)
done (took 47.830349782 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08107238 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084787654 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106116458 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081334957 seconds)
  done (took 1.28941287 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080832873 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07658873 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103348199 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075567341 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104283396 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07712682 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101095927 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081162656 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.097742037 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077253306 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075292965 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097893178 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07867428 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099823136 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073555771 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078372471 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101816558 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074790824 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101665273 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075662982 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096059373 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077455446 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101917287 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074222625 seconds)
  done (took 3.029846577 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079765438 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075383352 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099947354 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074947258 seconds)
  done (took 1.278149271 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079734893 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118454886 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093695911 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.102594485 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096653841 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114413785 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072816869 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07194724 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097398627 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079856392 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093283159 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10255402 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113846319 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080549743 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104612027 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068832377 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094203213 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090650118 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080635737 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103177931 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073053298 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10262352 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071249871 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.116453227 seconds)
  done (took 3.171667424 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079234304 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128498782 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08214194 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116448473 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095373681 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068825757 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101518895 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095939619 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.152872178 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.091627275 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072939324 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068175076 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097804039 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068450634 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080493116 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13562605 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.13854284 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072143475 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122861683 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067953418 seconds)
  done (took 2.882373307 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076996548 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072552243 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090903779 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071962829 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079469679 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098584684 seconds)
  done (took 1.443095076 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070165994 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068867273 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092737048 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069748762 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074379051 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092447498 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06820315 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069933765 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093014417 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07023916 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092661676 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068568767 seconds)
  done (took 1.880969998 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.455645872 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072022462 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094575186 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069068686 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073957436 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093016249 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083274413 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070878874 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117142134 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069007908 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092749842 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072479906 seconds)
  done (took 2.31782153 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270263382 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080571115 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.333615916 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171807488 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142611203 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160783587 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13351945 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120499103 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202263313 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143251197 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232242565 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23062573 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114533897 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194719529 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09249142 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.136276424 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216263945 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202557399 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133885663 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232895419 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213232929 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160164835 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185404846 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132521898 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13737045 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150567333 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073834962 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10708533 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241713745 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166627728 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205483837 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141722489 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099817001 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238317808 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229365339 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200789406 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1671568 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090134308 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161109834 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168574217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263680544 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117143607 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227475242 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137618759 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08545163 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177972808 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174108068 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150214691 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139608559 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092969431 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205614799 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247308232 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171285774 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115017691 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116244318 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143187898 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148560988 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131788071 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253655563 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225068948 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163169638 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097880933 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102505432 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218094689 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163830279 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146348094 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.157452072 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122341168 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17485988 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218693458 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147984064 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180802926 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186718175 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118095473 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151078262 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177022771 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16048486 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239079909 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159979979 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076187186 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180521393 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107777961 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110291211 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173532337 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079788514 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242046931 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128525521 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14523472 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117169948 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139640643 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140509287 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227248526 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210258692 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110143879 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093103093 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108723919 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177052175 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183934369 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117120598 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139341244 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151478553 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082793792 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19721519 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078564083 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156054188 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105287622 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158631325 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168101329 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078599273 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180611659 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107366017 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130308203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168331237 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225606805 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11817501 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085597634 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232323747 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15876862 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135220588 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180905938 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219644094 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.129853512 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131062592 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184577468 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251100923 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119362638 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229893012 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11130064 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111896036 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.116440464 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159845896 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144907018 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155117779 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087678629 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158565712 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232566669 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102646175 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100760262 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195102512 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085217461 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109673229 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146055595 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12855248 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100740231 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131776722 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136927769 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174658918 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181655261 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113182271 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182329954 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104330909 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22787684 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118452751 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.134555138 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133372606 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074249772 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.1698913 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224024405 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083095339 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232605377 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159727335 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134682121 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151638664 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111106519 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177508422 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082368932 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098777578 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177344175 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141481144 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1411293 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216514495 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108484906 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.185274708 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.156542795 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168530669 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165835451 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16782107 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135831764 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116426239 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143630888 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158551833 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101197566 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100750827 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112271959 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135118387 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125134046 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087173679 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177639411 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18541423 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101809642 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144440197 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125992961 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186027659 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105060989 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165377675 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152036813 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123388913 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21714157 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195765157 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193771135 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106044549 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207035033 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074572559 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102446488 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095359973 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187587239 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087302393 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112307778 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150012135 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187288553 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160989222 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195379381 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140731427 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155337253 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196975908 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098749699 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121284232 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21109511 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157145375 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155402846 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094608529 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129152504 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183394869 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134360904 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255299162 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145241063 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181983164 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18934281 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134058478 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083179384 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133570683 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19871069 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137509276 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189940439 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131213456 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118744497 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141636197 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.086339757 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134817585 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161238539 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152045983 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195919261 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148814133 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167598395 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1059542 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148167134 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157474618 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154503982 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066643139 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153441476 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229626006 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124049829 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150492647 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219753757 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084635706 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155792417 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247323405 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207334557 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090214595 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139668672 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154750746 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164416735 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151760112 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201191395 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142089378 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170608781 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141911767 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089215077 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11792998 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128902443 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114268669 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12490472 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14453803 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149375537 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124847407 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164588513 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144630434 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141674307 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152687962 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128250239 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096596277 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127315661 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241237203 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153495611 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243992576 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13132287 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189055866 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233451249 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104341806 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083036129 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109270911 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176881597 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113257364 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169412061 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124943176 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110962069 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160604998 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203160776 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126380951 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073129075 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14214223 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169776962 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141836002 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12927936 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137350781 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20548536 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134627664 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108441609 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15884696 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109245691 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134663131 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243797403 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.088690295 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102797465 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104270817 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084628252 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165514892 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220993905 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.113346015 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.133646356 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150132698 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153811795 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187981198 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130070381 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102212329 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142975262 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184425857 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187297653 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094609061 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144600496 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191450642 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196393791 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138255649 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125760176 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235704258 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192582549 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.231654644 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117426796 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148693969 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147321027 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143468585 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178568524 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1124793 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234153166 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086538008 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198083484 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133505999 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098225838 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186641263 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.101644285 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117333863 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210513705 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153237758 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103494591 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107957487 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145485064 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15643735 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134551073 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078151467 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202997638 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076194421 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171431589 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233487427 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110960275 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112795103 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125341068 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112299766 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137170386 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134837178 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09280011 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.146119992 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238934512 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121196299 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189059446 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202153027 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149526218 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172805378 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130862788 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668886741 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082568915 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218900338 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150256439 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245660247 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128538891 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152439072 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143141668 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155305296 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20344785 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138692065 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184258163 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195296122 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155743061 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083170064 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133359474 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142748929 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120107544 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139283958 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147365662 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147778079 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129994547 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155317994 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163860106 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111517127 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100015277 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225361316 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152435021 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177821039 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203571779 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090117565 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151596627 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204335117 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084048883 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182162982 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197912882 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141027512 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1301621 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110573591 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137467619 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213485929 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102361736 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227564918 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158668616 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141748245 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146713469 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.153518121 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168460742 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137856135 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159530737 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126336511 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145167553 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147656145 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113743695 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082259235 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136130043 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14407584 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128979097 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132778512 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.125955394 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214497664 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074294153 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124892723 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133376435 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179404372 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24798925 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118840115 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086446392 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150390393 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170150047 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149482358 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159720379 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.085984599 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111948302 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111510603 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1165452 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141221394 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147564267 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132458177 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143865235 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20671556 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113025162 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256303396 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09927707 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139052905 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096432337 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083181925 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125343511 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12709238 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134901671 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103169384 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23701421 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12669875 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.096114037 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1228464 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076963419 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112160499 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164583675 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142442464 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153237398 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126686674 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066262391 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137813611 seconds)
  done (took 73.577204717 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13475097 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10585242 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.120933668 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177342533 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149983608 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242690261 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.1835353 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226970929 seconds)
  done (took 2.365342029 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071569127 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119193777 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106305451 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11733424 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091321613 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070842606 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.304153547 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112011293 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091763806 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095536689 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121511621 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092493951 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.478287124 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068991877 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095270927 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086177722 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069906478 seconds)
  done (took 3.206161809 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.445127786 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619604744 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.44864385 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.099760253 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.772328153 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110043756 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151658453 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162202061 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092796664 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.414958876 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.730803264 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149218921 seconds)
  done (took 17.220295248 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078173093 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071619786 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112609636 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086779984 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100097647 seconds)
  done (took 1.472657292 seconds)
done (took 116.069945226 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083472964 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.375647108 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056285376 seconds)
  done (took 1.489430697 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087695273 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089031422 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113647889 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087792851 seconds)
  done (took 1.413313731 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078053108 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078770306 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112877704 seconds)
  done (took 1.301844417 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.295760418 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.1718813 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092207818 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086635581 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080216747 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106909058 seconds)
  done (took 1.303026973 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075408009 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078641981 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100860433 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080761316 seconds)
  done (took 1.357724219 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080103482 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056140011 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057671004 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0834247 seconds)
  done (took 1.305732119 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092718896 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108750735 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084292714 seconds)
  done (took 1.311928102 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112946404 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114558466 seconds)
  done (took 1.256544459 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084467461 seconds)
  done (took 1.108238972 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096443708 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.143793959 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.165493491 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142264848 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174373576 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139638992 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117355466 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092463943 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106474053 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119108704 seconds)
  done (took 2.327107021 seconds)
done (took 15.834897086 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081522639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.398533362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364040879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119454607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672780542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383972162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986716483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121580991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112669498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096156386 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087756825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676234771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977909371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345804655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96512184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327222401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675900135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071352653 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096311907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070549837 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970590646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094766761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070689324 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096792956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65301432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374462512 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095503061 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327588172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09621487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073501915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358979236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095091576 seconds)
  done (took 15.958125292 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073541984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14665187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078212844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087315849 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09826507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07255642 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100731126 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072827392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151154927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071623277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113552132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071348547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100957374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072345894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091236707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096735364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071467339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097192046 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071539779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071705429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114469364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070424432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096761353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072044078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072454051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108835076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072205866 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096694596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072459143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073451624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09931828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07217272 seconds)
  done (took 3.868571733 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118067947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.156270537 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078596918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131202607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.142450658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073611725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174040642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097013255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154119028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071658842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113357114 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071866403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130827239 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072412142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116395862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07172965 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097162952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072887129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071050094 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097044513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09091681 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09647578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071756071 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072291675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095987159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085408783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097677892 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074484685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097604162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073190916 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075767745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097548428 seconds)
  done (took 4.181945325 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075177311 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078384692 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112462497 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087684803 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098739493 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074848068 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076505734 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098988452 seconds)
  done (took 1.739186993 seconds)
done (took 26.768934971 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081420305 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073459314 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102074114 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084854408 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102252196 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082421168 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070586665 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103962163 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078590239 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102087604 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079350626 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069670332 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100559761 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071370839 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078154204 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097338669 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083288901 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101644657 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083638562 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109070168 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072963545 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078265004 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102716954 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082815761 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109622355 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083565997 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.108542164 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076966472 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073215652 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099075044 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079586741 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114405369 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072124853 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.108898419 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072542066 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070272163 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096183831 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071136413 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083089704 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104588895 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073414835 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104289903 seconds)
  done (took 4.724558668 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092516205 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096609627 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116731262 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065555229 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097547975 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064517971 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.12005804 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062872654 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06521682 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.119330618 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058970083 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060919129 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08864979 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056742036 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06025853 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059668555 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089154718 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058787707 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060926887 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086915923 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063405426 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0564192 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08890442 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062228512 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058857473 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065728212 seconds)
  done (took 3.02033155 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078326558 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084876462 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117646735 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132852182 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135218912 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079402837 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106977988 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089401246 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113802307 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070288551 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101246904 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09999498 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089833307 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104126159 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070851537 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113563689 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085430066 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072741737 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103458603 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092147844 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114398641 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081681782 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119846763 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082737133 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07033811 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099860286 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075559584 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110615145 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075977717 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080080943 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100370124 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075765793 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099221429 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083474726 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101179109 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072877238 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091205104 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106623012 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079784916 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098367521 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074976226 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071856608 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118882189 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.116214326 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097151034 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07809349 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104618569 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081504707 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071197067 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115905825 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080628961 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096753037 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074696967 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069824944 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096878498 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084573104 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098935468 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073151092 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080707409 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100217174 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083779037 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100506839 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08715627 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070866062 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103960263 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070398054 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097443894 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069802286 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092699701 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098363703 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111895844 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098933775 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072737705 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105678059 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078677996 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0762467 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097706427 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086955894 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106590872 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074903798 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079109408 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100958183 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074271788 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115907592 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074278731 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072165051 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.097450551 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.0778459 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099246638 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071890046 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084962262 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.096833005 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073567041 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113988722 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070564317 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071909828 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103746555 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075725128 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096552961 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08325173 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076586888 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097516931 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080312928 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097062748 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073473099 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080993874 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.102568283 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070506169 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102114723 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077660483 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07142884 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098584393 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07470013 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098511806 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080426091 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077742846 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101906567 seconds)
  done (took 11.583626974 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.200996297 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.190211251 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073811741 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.183091553 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083314661 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110432635 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18430744 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104067351 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098546748 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071271122 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098238379 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111025956 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132091718 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.142967168 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082274514 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070652531 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114951265 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139677077 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187235148 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15179621 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118886948 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079041032 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.100738302 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071772502 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072803035 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.108314783 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115341805 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082460168 seconds)
  done (took 4.332696788 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085105565 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129997556 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076377427 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118434758 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094990421 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097316488 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075043539 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072618022 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110707811 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082688193 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097649215 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077784142 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.103981352 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080147068 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071763651 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107221875 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079822064 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099545342 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074490012 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075691407 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104447055 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084700253 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102100867 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069579816 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077348533 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096692909 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068625621 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115807251 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070388731 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11958328 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069868917 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104414939 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080849999 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071964985 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097164462 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073391499 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100653231 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07357425 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072418477 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096413246 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06895344 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061013719 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.0969211 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084879765 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104142955 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062292424 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077462585 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10263634 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076439127 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.094699468 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074012434 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073364057 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101470257 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077844258 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075281301 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102459732 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074266927 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096898161 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07791614 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072503131 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094093197 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070295062 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074884136 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097113567 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079829625 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102422566 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069174297 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073742945 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.101321284 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076430738 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.099010922 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073844404 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068101612 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.099782083 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076324893 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075661093 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100396149 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070806207 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096713381 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071980575 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058185226 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097619271 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056935748 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074142424 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095767647 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070009228 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072780977 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105929258 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086647608 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098157905 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076810914 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097778445 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070032924 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073796623 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.092802634 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074110147 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111980385 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087786654 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097753985 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06966072 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085172056 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.102689726 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070363518 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05946763 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104795141 seconds)
  done (took 10.044310215 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094196734 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.121834543 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072658233 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084893262 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12538139 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095920663 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10516432 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076447453 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072922145 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114900868 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071556827 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106327151 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075564335 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080107104 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.121719994 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07906422 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099844582 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080178382 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105600877 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.108125094 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085249395 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111496121 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081913203 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098489371 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075837781 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110754341 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099694681 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081622764 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107673779 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08546001 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108376845 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100117986 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114213624 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.076140163 seconds)
  done (took 4.292060408 seconds)
done (took 39.030107434 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.129351682 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.314440553 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.107459143 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.911016619 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.134721414 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.131265959 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.12171326 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.109767856 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.506952989 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.108201753 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.382315883 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.621735825 seconds)
done (took 58.638794363 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.182104719 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.246286248 seconds)
    (2/2) benchmarking "String"...
    done (took 1.378058291 seconds)
  done (took 3.673466564 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.441296983 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.062889244 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.39466092 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.104145836 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.123616776 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.596381454 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.578804488 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.881578106 seconds)
  done (took 26.791152182 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.103819332 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.436253093 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.222485028 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.213148681 seconds)
  done (took 17.025400582 seconds)
done (took 57.165030867 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.136431109 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.118467477 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.10927741 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.089356933 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.20275209 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.121089461 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.340874342 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.336217406 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.104193486 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.091539264 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.105961372 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.119204696 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.112065454 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.450242375 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.103886389 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.109952436 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.191889741 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.567891354 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.45451081 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.106702834 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.131868061 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.163090867 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.101410604 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.106508353 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.164337126 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.102489603 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.100814344 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.108061861 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.864542485 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.106853855 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.173752881 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.574895645 seconds)
  done (took 187.71955252 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.099559973 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.959015966 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.078182305 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.121025851 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.425465536 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.298858926 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.237355725 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.548773152 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.113821937 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.116836512 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.304956291 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.098838059 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.343586201 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.07819387 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.110840557 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.102840573 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.303712102 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.353382121 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.113324915 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.374071882 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.102193461 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.194579542 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.105892433 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.281706729 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.099882027 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.102714561 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.110245603 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.12769285 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.291947782 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.254959451 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.144443478 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.115559997 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.576255527 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.960424459 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.121558706 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.135986907 seconds)
  done (took 144.954031345 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.339868864 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.099342559 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.09949942 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.099595602 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.123960351 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.099917108 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.543799584 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.543771494 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.589113801 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.730685529 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.157574397 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.260640726 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.101808015 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.187213484 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.111649911 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.100962712 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.114762975 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.126777735 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.101887559 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.1009724 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.543249116 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.113330244 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.285540163 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.101546471 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.09301675 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.118512756 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.481353816 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.094352515 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.11814672 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.393897572 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.129866687 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.09616031 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.296381222 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.361559689 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.194103112 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.09188956 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.115835034 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.089025328 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.346923213 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.089857728 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.090446796 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.093255845 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588848804 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.091699839 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.535102661 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.092418966 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.900578704 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.091978935 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.09091083 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.533816075 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.40153279 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.092221407 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.090458581 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.091995014 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.090623725 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.090169014 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.116273289 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.450087241 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.185010506 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.090393974 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.094636793 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.115355912 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.090456142 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.17607579 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.091367976 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.315270222 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.147789725 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.208282734 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.534752746 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.093369505 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.178447225 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.203274864 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.090771631 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.091637808 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.091495847 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.092554579 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.19178601 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.09179784 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.092507967 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.431679655 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.098141549 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.094866135 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.149843289 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.092178419 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.180991247 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.094252826 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.31600438 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.095057279 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.093930546 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.697735048 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.180468338 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.094030195 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.093212083 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.093254428 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.094162582 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.434851274 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.538374922 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.175877209 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.096272826 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.093752 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.437077853 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.096728097 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.445741613 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.531335095 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.615065962 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.097537691 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.195982231 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.098240322 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.095669803 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.094266223 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.123818387 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.095329539 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.150522649 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.095554449 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.486387183 seconds)
  done (took 331.197736101 seconds)
done (took 666.262060011 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.744883334 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.713408811 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.833238037 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.72604319 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.705992611 seconds)
  done (took 9.763433622 seconds)
done (took 10.804876422 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.256105508 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.256367466 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.14714983 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.259578893 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.12290829 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.270239575 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.236723136 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.119975071 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.187197699 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.162232862 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.208325654 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.142227215 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.121347698 seconds)
  done (took 16.532782486 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.395695966 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379295904 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.168964072 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.395884521 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.139587885 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409175118 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.29257504 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306538751 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.286767125 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.114895877 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.112547253 seconds)
  done (took 15.044685637 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.394605143 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.397184621 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.168554378 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414371712 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.141017485 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40626025 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.296092552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302685919 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.287348504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.115611423 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.11361037 seconds)
  done (took 15.08125995 seconds)
done (took 47.702026059 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.109573512 seconds)
  done (took 2.153343289 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.139580519 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.294814335 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.122903948 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.114810781 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.110610936 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.11123984 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.113980158 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.110318983 seconds)
  done (took 10.163848419 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.109508081 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.10700984 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.10709421 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.105900971 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.109166836 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.108832747 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.105378266 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.106796318 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.106667543 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.108492162 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.109497993 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.106348474 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.108369342 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.110393199 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.107113598 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.110042609 seconds)
  done (took 18.771245157 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.108663318 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.106756306 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.106928021 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.107445406 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.10675873 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.107392879 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.108200492 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.10691222 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.107436118 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.108081141 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.107647245 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.108436549 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.108221827 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.107596254 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.10792892 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.108136285 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.107561389 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.107799119 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.112373355 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.107678927 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.109001691 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.107657958 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.107735015 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.108177991 seconds)
  done (took 27.637846063 seconds)
done (took 59.771038535 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.899520271 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.456726445 seconds)
  done (took 8.401887278 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.110372314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.109210736 seconds)
  done (took 3.26964693 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.109638435 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.110905387 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.109522827 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.110214764 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.109968881 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.110239013 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.109723445 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.110990991 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.111591997 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.110961196 seconds)
  done (took 12.149755998 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.110194438 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.110104184 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.107615974 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.112014636 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.110978623 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.107526039 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.106089181 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.105526526 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.105674637 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.103715287 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.106561223 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.103948715 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.105668625 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.103772107 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.104270515 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.095469346 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.095758202 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.096275557 seconds)
  done (took 20.938187331 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.097813345 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.099031307 seconds)
  done (took 3.231873106 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.09626575 seconds)
    (2/7) benchmarking "second"...
    done (took 1.097259966 seconds)
    (3/7) benchmarking "month"...
    done (took 1.090455133 seconds)
    (4/7) benchmarking "year"...
    done (took 1.090190402 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.090536581 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.090139986 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.090639828 seconds)
  done (took 8.680413636 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.093962727 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.271651514 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.352313443 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.687785966 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.089114935 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.090654257 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.965021125 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.091781743 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.093859901 seconds)
  done (took 12.766241421 seconds)
done (took 70.484960037 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.039555123 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.081561691 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.831683454 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.099188137 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.098463236 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.424136001 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.092962862 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.197565904 seconds)
done (took 35.890285498 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.098726534 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.736623316 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.76468106 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.083766569 seconds)
  done (took 10.611253838 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.075231598 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.902256475 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.081585779 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.013850857 seconds)
  done (took 17.100154522 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.625229273 seconds)
    (2/2) benchmarking "read"...
    done (took 1.413402959 seconds)
  done (took 4.065028622 seconds)
done (took 38.900709974 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.089236289 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.086569832 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.086811681 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.088920885 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.088891908 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.086087349 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.089527029 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.087044491 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.085814574 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.089525689 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.088441184 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.089348532 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.089845734 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.089643945 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.089175323 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.08676711 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.087001092 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.088796515 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.088042803 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.087382284 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.087853393 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.089313175 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.087934776 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.087111834 seconds)
  done (took 27.142008393 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.089856293 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.088712829 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.091001401 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.090457193 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.08866017 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.090158742 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.089660047 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.088836 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.091151774 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.09114152 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.088297715 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.088879371 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.091448913 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.088998767 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.091297634 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.089205847 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.091533157 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.089008255 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.091576814 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.088579982 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.091248047 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.088196224 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.088379304 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.090780676 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.089435003 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.089125862 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.091782681 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.089848497 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.092482735 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.089337932 seconds)
  done (took 33.726990352 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.095245316 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.097512242 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.09119289 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.091871801 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.091457554 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.092032145 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.092927036 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.091854074 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.091212444 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.091385524 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.092242572 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.09155262 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.092109632 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.092566681 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.091830307 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.093053515 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.092323322 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.09224635 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.092122256 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.092326861 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.092662014 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.092117497 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.092562889 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.092984626 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.092004426 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.093024012 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.091910797 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.092658143 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.09244758 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.092476642 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.093156266 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.092982778 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.092003468 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.092616173 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.09272888 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.09285778 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.097729672 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.09782328 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.09273009 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.092239815 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.094014156 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.092652661 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.093708675 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.091668903 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.09264757 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.093125653 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.092865734 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.09432488 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.094183181 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.093622801 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.093450128 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.093311971 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.094025595 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.094053828 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.093746054 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.093291147 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.094297864 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.093735169 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.093679223 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.093731758 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.094150726 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.095186343 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.094683937 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.094697856 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.094667578 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.094156223 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.094527297 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.094741503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.09544967 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.095801773 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.095777809 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.094772911 seconds)
  done (took 79.749804888 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.09416064 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.092459062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.09225586 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.091627106 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.092190962 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.094615811 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.092022746 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.09557772 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.091617512 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.095100151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.09596205 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.0938865 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.092538785 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.095337504 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.093478533 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.091573611 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.094445053 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.092931587 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.095234788 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.096552886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.095574391 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.092088218 seconds)
  done (took 25.093534417 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.095355257 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.095419456 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.093671946 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.095083227 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.093426413 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.095987635 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.09550153 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.095564865 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.095148893 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.093152927 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.09235278 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.098406609 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.093371063 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.093959035 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.094315607 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.094043671 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.095961152 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.093310696 seconds)
  done (took 20.736593901 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.093889181 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.093509164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.096516494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.093727171 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.093974224 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.096949371 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.093427085 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.097029316 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.096810843 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.094503225 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.097631882 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.09653519 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.097366551 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.09386943 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.096531198 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.095379828 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.097018799 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.094624101 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.097316773 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.094633737 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.094813569 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.097829976 seconds)
  done (took 25.137477093 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.097202965 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.097745002 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.094909019 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.095193512 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.094879253 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.097270788 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.098163213 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.095272119 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.097120256 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.098328722 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.096167629 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.098846217 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.095147666 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.095870886 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.095688579 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.09559013 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.098526849 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.096228519 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.09792567 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.095782168 seconds)
  done (took 22.966449798 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.099656362 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.099341298 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.100003903 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.099811262 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.099233262 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.100426621 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.100353656 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.100760439 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.100016516 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.100901293 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.100601986 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.100314882 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.100918519 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.100267087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.101385458 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.100072445 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.100836437 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.099784176 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.100896764 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.100855616 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.101970025 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.101120286 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.10135367 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.10059827 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.100309557 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.100312278 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.101099308 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.10041801 seconds)
  done (took 31.849528527 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.099627924 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.099522381 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.097153536 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.097093745 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.097184999 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.097348291 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.099105884 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.097183846 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.099650886 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.097862784 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.100985848 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.099780231 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.100786255 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.099612848 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.100930036 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.101317023 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100720464 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.098299976 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.098363107 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098208679 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.100971845 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.100093473 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.10028005 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.097938611 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.097759426 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.100861967 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.098743679 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.099288221 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.101381864 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.098608142 seconds)
  done (took 34.013546071 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.120059204 seconds)
    (2/2) benchmarking "in"...
    done (took 1.120175912 seconds)
  done (took 3.278876106 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.098760792 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.10127409 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.102049429 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.099000723 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.098777303 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.101636071 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.102200381 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.099351659 seconds)
  done (took 9.840310782 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.100628237 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.102794671 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.101902162 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.101676827 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.10214058 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.101033192 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.107942542 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.115239923 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.102304788 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.102322426 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.106249148 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.106637348 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.104568017 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.10121993 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.101725052 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.103533307 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.103307605 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.102143299 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.103396075 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.102954487 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.103595689 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.104741168 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.105329867 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.100387423 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.103110401 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.11187846 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.107201529 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.103795825 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.1022551 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.106476721 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.102158212 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.100897015 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.103964657 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.104592022 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.103680393 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.104857006 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.112478832 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.117762074 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.108161682 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.103526557 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.10446152 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.099907357 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.10357055 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.104274869 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.104760641 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.104438836 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.104145747 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.10108609 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.102462276 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.105379464 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.106892351 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.103157106 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.101120678 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.10708044 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.10449885 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.110546962 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.119867495 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.106238862 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.110828972 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.114071154 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.116843308 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.110933811 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.105729614 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.105244827 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.112491757 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.122098102 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.111718504 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.117432823 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.102369596 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.105254434 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.111926932 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.115827301 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.111337917 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.105533283 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.106048846 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.105584277 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.104638714 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.106552229 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.112782794 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.12142696 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.106424872 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.105717004 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.113298952 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.122068271 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.105001129 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.105930967 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.106017895 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.106713787 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.105813957 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.115204678 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.121208484 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.106296597 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.105459013 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.106088233 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.106517504 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.106427599 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.104674052 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.106332969 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.103599189 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.107516373 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.106712358 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.109191034 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.113008475 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.107569761 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.106577438 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.112526721 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.105923222 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.106251832 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.112805675 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.107395981 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.106760178 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.107315396 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.11224157 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.103406168 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.109055771 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.111745665 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.107831969 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.107999391 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.107053015 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.107223092 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.115144805 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.127103865 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.10733015 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.106883646 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.110091146 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.116656094 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.107763238 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.109939756 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.108336996 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.105383403 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.104746859 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.108954306 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.108546015 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.106876617 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.108349631 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.108160777 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.106063214 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.107816822 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.107930024 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.107483442 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.108456743 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.108583797 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.107614792 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.109375698 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.108612332 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.110088303 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.113822006 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.108456384 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.109759838 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.108324396 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.106200062 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.108718702 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.109452906 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.109790924 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.109361358 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.108884806 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.10825657 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.10906765 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.109538538 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.108702747 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.108573674 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.10943985 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.111833115 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.110237132 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.113026275 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.108287301 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.10617735 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.109259159 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.110112742 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.109416577 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.109901775 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.107784133 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.111143444 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.115150107 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.109697214 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.109941541 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.112429748 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.108941768 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.109844922 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.110453547 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.111606637 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.114622755 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.109918809 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.117235115 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.110159771 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.110352069 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.111259628 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.109722257 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.110513928 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.109667693 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.112250242 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.116255165 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.122030358 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.117367968 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.110974117 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.113671334 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.110921118 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.113785941 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.114829174 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.112150837 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.110750051 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.11131061 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.109533399 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.111079867 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.111956139 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.11125304 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.110074841 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.111825552 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.111656083 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.11191477 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.112580914 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.110828592 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.112407613 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.109084726 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.11146534 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.111841327 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.11164998 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.109354521 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.110308099 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.113404727 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.112783772 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.113367976 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.118079901 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.110286781 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.112872839 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.112377925 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.111132326 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.110010488 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.112284214 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.112960971 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.112346807 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.118418114 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.125698696 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.1125834 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.118463668 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.125428277 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.111249471 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.11305856 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.113194344 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.110306146 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.114761813 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.118875259 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.113606641 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.113296265 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.114365643 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.111857333 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.113039928 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.119984453 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.11108006 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.111948015 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.112352689 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.11556664 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.111247295 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.112685344 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.114059971 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.11387786 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.115144084 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.113137845 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.114227234 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.113826707 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.114134837 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.114355092 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.114272407 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.111056292 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.117578108 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.115353655 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.111545508 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.112781657 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.111339513 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.113202592 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.110314639 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.109000251 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.104859886 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.116314545 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.111229672 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.110977647 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.106440158 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.106035587 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.109913226 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.10576806 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.10632558 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.098216247 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.100309534 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.098735242 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.098943529 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.096968052 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.099886077 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.099792982 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.100673908 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.101379971 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.098659749 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.095541965 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.094965295 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.09598729 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.096452818 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.095853955 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.094728639 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.095152156 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.09829362 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.095128804 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.093176693 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.092656495 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.100521044 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.107450465 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.094005199 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.092732892 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.093344617 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.092943445 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.09500451 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.094678383 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.096426612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.098870429 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.09758704 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.100762846 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.094907994 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.101483796 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.094963549 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.096730216 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.10009688 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.092105077 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.093565909 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.094317765 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.095396314 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.101893259 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.10929618 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.095784806 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.096949968 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.094896707 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.095349542 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.095108322 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.095240665 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.096075847 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.095043662 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.104220831 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.109880513 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.097791893 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.096680377 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.092494527 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.095003246 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.095413609 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.094583777 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.09870116 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.095270138 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.096028442 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.095233771 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.095579699 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.096014249 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.095183742 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.095586596 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.093700602 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.095782111 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.10169908 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.11092262 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.098635023 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.096383121 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.103590882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.09588425 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.102204833 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.110149187 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.096986448 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.096009961 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.098119986 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.098584292 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.096381175 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.097650287 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.096146918 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.096869902 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.099705027 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.095790018 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.099010897 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.09696644 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.096964085 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.097134027 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.10493412 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.115346921 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.097894861 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.10055552 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.094804009 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.098995893 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.100839811 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.097789693 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.09762349 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.099105834 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.104991988 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.103211756 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.098470592 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.097716586 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.09912833 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.097096351 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.097681146 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.097229806 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.097959648 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.098966316 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.098367558 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.098006893 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.101407552 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.097545608 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.098542266 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.099920204 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.098687121 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.106809505 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.097839448 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.099325042 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.097932163 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.099604288 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.099755029 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.09904276 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.098692946 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.099104392 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.098430577 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.09832023 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.102859587 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.103471738 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.101156083 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.097823543 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.098787941 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.099747815 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.099211443 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.099837754 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.098154511 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.099205762 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.100054172 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.099427644 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.099983182 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.097541205 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.10045139 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.098480224 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.099289926 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.10104845 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.10460457 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.099985952 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.095981079 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.098706489 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.099312597 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.098085826 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.099497085 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.107106649 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.102191275 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.107264434 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.106028466 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.103195113 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.099863804 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.101449335 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.104828401 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.098702266 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.10047722 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.100036158 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.101077227 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.100427966 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.101799277 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.101201098 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.106581144 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.100608144 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.100490616 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.108503336 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.114779502 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.100791652 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.102299521 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.103518407 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.099934103 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.098977107 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.101066451 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.099841615 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.107565449 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.117242033 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.101755581 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.101694664 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.099140702 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.102251665 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.104873172 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.102377606 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.101451274 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.098861245 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.102049174 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.102430451 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.101065454 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.099734672 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.101345327 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.101585557 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.103545841 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.108047879 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.09915815 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.103049699 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.102070761 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.102931747 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.102805571 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.102816009 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.099034362 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.099690634 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.102800388 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.101837235 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.103364802 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.10498952 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.102746455 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.103439409 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.102726846 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.103417837 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.104676162 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.110175935 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.107516053 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.100448773 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.102357637 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.103482993 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.105010437 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.101984105 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.104561583 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.103125812 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.104438334 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.102675175 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.10343207 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.103628563 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.10545417 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.116056101 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.117862314 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.103671543 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.102991352 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.106973888 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.103319529 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.100859985 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.104126445 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.1052976 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.105385469 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.109342623 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.104242243 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.10977811 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.117944986 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.103675261 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.107455078 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.106413698 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.109610608 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.106441082 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.103569397 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.103681435 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.108240938 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.117573872 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.104827049 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.112127363 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.129036036 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.118523145 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.105520285 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.104803442 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.104178318 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.103913895 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.106223185 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.104599349 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.105355458 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.105063042 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.104754649 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.105035286 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.108680294 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.10582273 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.105564253 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.105160891 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.104680041 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.106890265 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.102465063 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.105029703 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.106215096 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.105111928 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.105890753 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.105553282 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.105677739 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.117144937 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.114728456 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.105153104 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.10573069 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.104567403 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.108498786 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.107738376 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.115202935 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.1113821 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.106160601 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.106656609 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.107462208 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.105971033 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.104950901 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.107254196 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.105342224 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.10619623 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.104290789 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.116993569 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.112281537 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.110942894 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.106724663 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.106600422 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.106655101 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.10775612 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.107485178 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.106761678 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.108568151 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.106804577 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.109986304 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.108048019 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.106975051 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.108767503 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.112924767 seconds)
  done (took 659.993445439 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.104348425 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.104854757 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.104290342 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.105344529 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.105077619 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.104455367 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.105828877 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.104868262 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.106079653 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.10584004 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.104624066 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.104923678 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.105676306 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.105463957 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.105085225 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.105084627 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.105679103 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.105108512 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.105631907 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.105905546 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.10658836 seconds)
  done (took 24.254790273 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.107449494 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.105040194 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.105662576 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.108730944 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.105601207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.108288379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.10685365 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.109011868 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.109668729 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.105921411 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.109182213 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.107757251 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.106204262 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.106737325 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.105241511 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.108956987 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.110324875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.105896488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.109184039 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.107010487 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.109033308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.106110081 seconds)
  done (took 25.409323937 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.109899479 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.10950384 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.108949954 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.106743889 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.110281381 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.107207101 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.109811827 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.110363097 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.109986848 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.110351153 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.107901066 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.111182175 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.115387725 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.113977134 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.111530807 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.110618107 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.255174022 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.110377246 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.110790266 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.110997577 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.108400426 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.116503903 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.108790199 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.107637064 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.109336759 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.111300822 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.110749159 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.110378173 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.110846741 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.112196666 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.113810015 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.11166655 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.111157736 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.112815742 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.110397563 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.112450826 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.114785983 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.110653634 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.10866986 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.111560374 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.119499307 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.12708117 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.11128452 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.117296217 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.111791823 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.112344721 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.113558225 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.116910293 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.10948983 seconds)
  done (took 55.661007549 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.111544708 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.110654638 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.108708499 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.112275373 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.112258113 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.111824071 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.112657792 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.1120575 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.109864776 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.109395122 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.112053569 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.109702094 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.109615451 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.112378002 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.113635846 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.110120479 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.109633743 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.110611414 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.109493562 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.109637255 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.109744893 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.112968062 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.113157627 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.110542415 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.112615404 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.109967681 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.110694016 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.112731645 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.109892274 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.109904288 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.114067953 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.112700473 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.113633398 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.112365501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.109900739 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.114070772 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.114064624 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.110947603 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.11336084 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.110865232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.113816256 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.114142934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.113271495 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.11430073 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.111130024 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.111609646 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.112428844 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.111741475 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.112657159 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.114443209 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.114982251 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.112312892 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.115284786 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.112284158 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.115092123 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.114775952 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.112014098 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.113085935 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.115497345 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.113047628 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.11208637 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.115451475 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.113004423 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.115690577 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.11489047 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.111758177 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.1128358 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.115310877 seconds)
  done (took 76.685725545 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.11509312 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.115244796 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.11605219 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.115047394 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.115981144 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.115108265 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.114918528 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.115360168 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.115260437 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.115715028 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.115118695 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.114774729 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.115698366 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.116444999 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.115318459 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.116156913 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.115261193 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.115120861 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.1158668 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.115225086 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.115196039 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.115721968 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.115394829 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.116317042 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.116779045 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.116316524 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.115808421 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.115105865 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.116967259 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.115434272 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.117186197 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.115915834 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.116332196 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.116510637 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.116795641 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.115414447 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.117418622 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.115648849 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.116574673 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.116344102 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.116567224 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.11620239 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.117032933 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.11709987 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.117146525 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.117138956 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.117179831 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.117561242 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.117264712 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.116159725 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.116308118 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.117403031 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.116656489 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.116487926 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.116351843 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.118189873 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.117562207 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.116956801 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.117166321 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.116806704 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.117271905 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.11805816 seconds)
  done (took 70.259396012 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.117054052 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.117034714 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.115454165 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.115240734 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.117532095 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.114876818 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.117963055 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.118310937 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.11719912 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.117426469 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1181888 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.115779259 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.116434702 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.11800335 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.114737623 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.116013217 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.116075307 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.115803196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.118841734 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.115834246 seconds)
  done (took 23.387858387 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.115629577 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.120265992 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.116283743 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.116402238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.119393219 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.115345829 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.119511615 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.118916212 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.116933739 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.118766763 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.118642156 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.119547785 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115043709 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.116631136 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.119246362 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.115940358 seconds)
  done (took 18.937138523 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.11685987 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.11992887 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.120053924 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.119727185 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.116959405 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.11647871 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.118747839 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.116241901 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.116902079 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.120158371 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.11871917 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.11885731 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.118578421 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.119747681 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.118355072 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.120036665 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.116990783 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.117331369 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.120333668 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.119983219 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.118120845 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.118207559 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.120422544 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.119866314 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.1181985 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.118274273 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.118659647 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.118145693 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.116891151 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.121698897 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.118012583 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.118385947 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.118792005 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.117901037 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.121271574 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.118285666 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.120722592 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.120938977 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.120832248 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.120292794 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.121539758 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.119104049 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.11967094 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.121130278 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.117777255 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.121149986 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.118683833 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.119414959 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.118598128 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.118708301 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.121686413 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.121010928 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.121434788 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.122156276 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.12176864 seconds)
  done (took 62.615034116 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.121576999 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.121877029 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.11948449 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.121456462 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.122830902 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.119232625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.12098069 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.120588942 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.120198266 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.122026806 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.121016205 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.122464319 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.119513253 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.12274077 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.120358529 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.122770598 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.120273441 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.120634212 seconds)
  done (took 21.238290858 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.120366714 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.120575497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.123143294 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.120314215 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.120195881 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.122966099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.119792345 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.122712609 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.122663981 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.120423951 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.12038803 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.123365579 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124047866 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.123510487 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.120916003 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120440106 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.123549287 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.123585147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.119988109 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.120884195 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.123230574 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.123537385 seconds)
  done (took 25.739492098 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.122122713 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.122775659 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.13731021 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.158338993 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.148556313 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.122067944 seconds)
  done (took 7.869067494 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.122727965 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.123884685 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.121346982 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.124222727 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.124798664 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.122306379 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.122183808 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.121868729 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.124241511 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.122200944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.121192304 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.123984981 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.12510026 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.121134609 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.124010788 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.124544585 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.121936025 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.122077115 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.123225239 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.125295033 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.121997351 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.124275227 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.122564847 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.122137627 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.123003663 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.122438191 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.125957618 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.122700816 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.122027155 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.124923472 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.125095731 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.122953109 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.124931258 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.122474816 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.125873307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.125128423 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.122039957 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.125653003 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.125547228 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.122417115 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.126037025 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.125805742 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.125770917 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.123547831 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.126494204 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.123195786 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.123016888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.123704133 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.124351722 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.125841121 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.126297858 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.123509754 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.126195667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.12598516 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.126086799 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.126820467 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.124301518 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.123957288 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.126167997 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.123100827 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.123231772 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.12657606 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.124303029 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.124962986 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.127349147 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.124907122 seconds)
  done (took 75.249165015 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.124579053 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.123944286 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.125629358 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1252511 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.124539336 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.124830257 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.12501205 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.123562436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.124538035 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.125260578 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.127768402 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.125397233 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.125028394 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.124836378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.124935868 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.125150437 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.125495106 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.126081359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.126203218 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.128413107 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.124802323 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.125930618 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.124895562 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.125514633 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.125497941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.128534115 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.126632703 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.125795933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.126031243 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.125934103 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.126469872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.126400808 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.126445615 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.126675232 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.125189262 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.126504354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.12631152 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.127063898 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.126779897 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.128281922 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.127316279 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.128818981 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127092822 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.126655325 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.126603587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.126732166 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127305611 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.127409429 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.127197659 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.127722956 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.127489701 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.127183682 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127392536 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.126659541 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.128254938 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.127634701 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127626695 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127399301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.127609504 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130284328 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.127209122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.12813094 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130908005 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.128817874 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.128290518 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127762421 seconds)
  done (took 75.418712079 seconds)
done (took 1537.280724858 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.214773399 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.145905071 seconds)
  done (took 13.42544636 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.292796259 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.245519006 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.128946938 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.173654204 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.128646292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.149747651 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.142312347 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.128555847 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.129037854 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.12827127 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.129766396 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.318186572 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.182999893 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.129877973 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.128142106 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.220038128 seconds)
  done (took 39.824160472 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.153863479 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.136121181 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.230123649 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.153268083 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.159797745 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.30116905 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.184199614 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.139939685 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.285021287 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.174172951 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.488067047 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.161166223 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.139884506 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.097177463 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.153689638 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.30247745 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.352537746 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.492513261 seconds)
  done (took 26.171315614 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.522665481 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.139128048 seconds)
  done (took 8.734512917 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.143971872 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.139788684 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.16204767 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.149088624 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.173218423 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.150167401 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.156227393 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.153575556 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.146203602 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.133823319 seconds)
  done (took 62.581222649 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.155834227 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.139859191 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.142025514 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.139283646 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.130762534 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.130940387 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.139070816 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.131930719 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.260325177 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.24725168 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.151795881 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.147738203 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.141409409 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.141518763 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.139155194 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.171522689 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.264172232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.138267955 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.137433313 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.146702913 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.140221062 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.223557724 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.175750659 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.137632249 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.248245095 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.271414556 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.143898663 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.148478927 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.248360982 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.138571751 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.140681876 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.141234363 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.143945364 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.696661963 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.650970157 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.149593187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.162068263 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.150917584 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.138851897 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.284551165 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.141963601 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.15007729 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.1349253 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.628470064 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.282426494 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.241726651 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.25474003 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.143497736 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.143534871 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.196888038 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.143385536 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.14335631 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.167852031 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.849074549 seconds)
  done (took 99.429293801 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.172408472 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.622162494 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.30178672 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.151767097 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.873842319 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.760107008 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.135035085 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.379487687 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.185507939 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.134995543 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.403541992 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.589853814 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.140090787 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.210045013 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.329763041 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.226982364 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.134113118 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.855073565 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.135969076 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.137103566 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.531306202 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.151048092 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.147204339 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.289024931 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.17201907 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.557940223 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.374988252 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.543356759 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.136599797 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.135687196 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.555403236 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.144336628 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.178749422 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.139999163 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.387384226 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.444405105 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.429251723 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.136974142 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.163279089 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.138763113 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.173570677 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.553639488 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.436576312 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.137601121 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.147717837 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.556977247 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.137059 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.140284772 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.139065842 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.330773721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.068006341 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.136224847 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.445943229 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.13919385 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.477648895 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.207847087 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.217799429 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.584413595 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.136646246 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.183581225 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.166801787 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.1387953 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.140410578 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.13960542 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.136699259 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.441555645 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.249636723 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.138932099 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.442588922 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.55034017 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.140571323 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.612037686 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.06479572 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.145852295 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.226071715 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.137320831 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.660298677 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.58872388 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.140081491 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.13872006 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.430960909 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.143033532 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.397501368 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.151440267 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.140420265 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.540029042 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.160396621 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.157573046 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.139338371 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.141655335 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.754665393 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.140934183 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.383859002 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.152186962 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.138986585 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.139178264 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.162993579 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.139601136 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.154600541 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.144644385 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.6125334 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.143079218 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.254118542 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.157630228 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.144957473 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.141161502 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.142381553 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.138761543 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.349264415 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.549818555 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.14207134 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.140761468 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.15015675 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.143968856 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.277349052 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.144766414 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.406616272 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.143392622 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.140728252 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.147489859 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.775253159 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.145230827 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.140269126 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.139394882 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.970214269 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.347630175 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.155732716 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.141933405 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.142842329 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.153386984 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.321467201 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.141526367 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.175517864 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.142980951 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.797047493 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.156242343 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.158451024 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.735207789 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.143915011 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.019680025 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.160700307 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.141749583 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.431229832 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.396151956 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.189347006 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.143168251 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.141837613 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781753532 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.176724232 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.287054902 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.157330268 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.147960052 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.338197774 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.565355684 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.141142926 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.718581335 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.142566464 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.347586375 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.142340647 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.45606926 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.58283898 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.144239804 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.151740784 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796617078 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.788407533 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.787645609 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.144297353 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.398700293 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.108506194 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.589553136 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.142756791 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.142675109 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.571642551 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.143221539 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.14962901 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.142588099 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.143110483 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.29476366 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.31508473 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.306789465 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.14669942 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.561003395 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.149970898 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.143451702 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.14574219 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.145377091 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.49691148 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.238116862 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.144665621 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.175680219 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.143227889 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.149431541 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.572213805 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.104448979 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.146700022 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.295593762 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.721504225 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.14532197 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.143749554 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.73037974 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.426925688 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.607838606 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.198989572 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.409789761 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.153305907 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.181261258 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.815492793 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.200246179 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.616759275 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.146558931 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.144078552 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.688109534 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.147141787 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.497094035 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.144571392 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.149924128 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.62343452 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.147368056 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.145409008 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.3459449 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.146474265 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.394682914 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.144953236 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.161094045 seconds)
  done (took 1064.550456192 seconds)
done (took 1315.781747471 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.145674901 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.145810321 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.134455878 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.148512999 seconds)
  done (took 25.661541059 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.155310716 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.15289602 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.153403033 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.152487128 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.154455061 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.151365591 seconds)
  done (took 8.008332014 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.197931603 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.147130729 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.148227698 seconds)
  done (took 18.580142671 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.342807458 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.289003135 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.482505784 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.063360311 seconds)
  done (took 9.267064236 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.153882708 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.15343353 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.153739202 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.155715292 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.157097825 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.158192696 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.155851588 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.155715669 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.159038029 seconds)
  done (took 11.490711117 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.630261717 seconds)
done (took 78.725679381 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.248866255 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.222028408 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.269641906 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.359789592 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.185332943 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.16184192 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.215943746 seconds)
    (8/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.140297251 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.416675579 seconds)
    (10/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.52170615 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.73329018 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.205704482 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.188958562 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.580888352 seconds)
    (15/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.574989325 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.165440007 seconds)
    (17/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.305622607 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.647082138 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.161820029 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.50769195 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.15945489 seconds)
    (22/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.188269015 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.34636075 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.710204452 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.566677691 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.751569623 seconds)
    (27/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.982973397 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.138849612 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.202182962 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.161135966 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.256132751 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.787115198 seconds)
    (33/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.144750485 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.925994373 seconds)
    (35/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.271526182 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.164888844 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.190848276 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.744369518 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.671386996 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.296837566 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.190378034 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.288936471 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.402572492 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.62985591 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.498007434 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.28319317 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.164040299 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.996227492 seconds)
    (49/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.248495349 seconds)
    (50/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.445521326 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.150491045 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.178539715 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.578764685 seconds)
    (54/309) benchmarking ("sort", BigInt, false)...
    done (took 6.167106925 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.276982583 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.317404961 seconds)
    (57/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.978436029 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.345069683 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.275437613 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.421577924 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.166331145 seconds)
    (62/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.15040022 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.728562946 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.99282133 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.273277558 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.174051451 seconds)
    (67/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.873198681 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.152841079 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.195398029 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.224310257 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.192510237 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.228860191 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.829358215 seconds)
    (74/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.39709023 seconds)
    (75/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.153231775 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.190605563 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.420161427 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.937067274 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.557160942 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.186369583 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.848663722 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.904579294 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.677807482 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.433859447 seconds)
    (85/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.354435723 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.710957473 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.499038435 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.260179637 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.225283202 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.209003887 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.844378841 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.257344874 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.766722859 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.167692713 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.433368099 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.691223626 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.166342934 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.195598713 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.192391939 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.496918118 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.154154476 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.681807983 seconds)
    (103/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.44004566 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.198630218 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.533034531 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.153814414 seconds)
    (107/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.344478379 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.509727517 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.386849496 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.17720944 seconds)
    (111/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.852389682 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.266357405 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.168121248 seconds)
    (114/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.272857024 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.180116563 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.381367446 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.696738429 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.240187725 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.916947841 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.512782293 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.28514887 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.168876226 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.168505985 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.26856183 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.944451553 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.381595869 seconds)
    (127/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.472345748 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.274476418 seconds)
    (129/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.304767132 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.553130935 seconds)
    (131/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.676088721 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.171225734 seconds)
    (133/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.42748654 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.23382469 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.671853998 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.192831581 seconds)
    (137/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.504716901 seconds)
    (138/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.157650587 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.447231578 seconds)
    (140/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.250915813 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.197423067 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.184290851 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.168615045 seconds)
    (144/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.190881726 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.839970043 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.153685989 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.462776404 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.274957779 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.688312786 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.171665657 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.563899733 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.119578928 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.313298841 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.473194218 seconds)
    (155/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.179685148 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.276428861 seconds)
    (157/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.170153831 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.344684632 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.859843797 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.197072337 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.254113494 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.182429108 seconds)
    (163/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.510992268 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.246618776 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.154694996 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.234200178 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.192862428 seconds)
    (168/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.19581231 seconds)
    (169/309) benchmarking ("sort", Float32, false)...
    done (took 5.12472599 seconds)
    (170/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.291157684 seconds)
    (171/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.253588118 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.269354324 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.373569103 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.321852782 seconds)
    (175/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.156540055 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.182914698 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.303002158 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.459059525 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.481827815 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.571056042 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.326320689 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.346721978 seconds)
    (183/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.712379964 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.163640505 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.50923706 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.171243462 seconds)
    (187/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.32637494 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.605649987 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.279322654 seconds)
    (190/309) benchmarking ("sort", Int8, false)...
    done (took 4.216612319 seconds)
    (191/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.511604261 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.195047973 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.527589231 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.199647112 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.289721967 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.426883972 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.213023081 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.156732106 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.85520113 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.753424324 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.514998682 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.17414678 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.935212912 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.186674437 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.229606926 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.687474917 seconds)
    (207/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.456518002 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.876082784 seconds)
    (209/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.197918059 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.676192649 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.998101748 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.277314097 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.157032647 seconds)
    (214/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.735927155 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.898721069 seconds)
    (216/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.297227301 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.330727676 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.172857587 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.803883289 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.391099857 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.38692005 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.012798107 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.847790619 seconds)
    (224/309) benchmarking ("sort", Float64, false)...
    done (took 5.418064316 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.157210909 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.316380453 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.710996256 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.185843442 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.197407118 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.363855709 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.645742582 seconds)
    (232/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.610904609 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.370594735 seconds)
    (234/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.859999008 seconds)
    (235/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.698775677 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.225385795 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.216850494 seconds)
    (238/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.150735651 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.160953018 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.966803969 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.175456059 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.197713737 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.168489645 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.159989982 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.259843629 seconds)
    (246/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.184910866 seconds)
    (247/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.957104913 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.994998424 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.192940876 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.200241623 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.223263875 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.403964951 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.804609759 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.175733077 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.892736837 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.256732172 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.174668142 seconds)
    (258/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.750080111 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.177459375 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.31655823 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.189854512 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.366883177 seconds)
    (263/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.271398209 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.300742584 seconds)
    (265/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.162585712 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.669712134 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.420564486 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.218542233 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.985617329 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.215898124 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.363241906 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.175567682 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.55886121 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.44308081 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.224335193 seconds)
    (276/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.273236953 seconds)
    (277/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.260533181 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.337370106 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.574969456 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.240809941 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.437226301 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.222580528 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.17767556 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.258262736 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.212856107 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.161495691 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.271365207 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.517662214 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.275440005 seconds)
    (290/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.19330751 seconds)
    (291/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.675103347 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.293665477 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.913946326 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.276811755 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.490858634 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.232963958 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.162240959 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.20411761 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.842037734 seconds)
    (300/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.919253805 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.562930175 seconds)
    (302/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.603417109 seconds)
    (303/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.344354652 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.855610524 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.199142099 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.17737884 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.954257813 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.680643949 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.386361096 seconds)
  done (took 855.725004164 seconds)
done (took 856.831928109 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.209770076 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.2033051 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.187568493 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.20952628 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.299887333 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.216219001 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.198268583 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.190197602 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.235538096 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.237054562 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.186280776 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.213826697 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.190224742 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.188179407 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.187352737 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.201694727 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.11709363 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.187475932 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.205238756 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.199229583 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.205282469 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.187689078 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.237917937 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.215533468 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.192492733 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.191185355 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.191453113 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.208061058 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.300690707 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.191924708 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.192380927 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.200280998 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.118198713 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.18666453 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.183090093 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.207839101 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.200667267 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.199391312 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.192837104 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.220438451 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.470479324 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.189356018 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.190365552 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.189519702 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.190629332 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.193591952 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.190983697 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.196764877 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.201917019 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.204627946 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.463078974 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.204631609 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.193643124 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.191263829 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.201013228 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.190523679 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.195129975 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.205485069 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.20991266 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.205678148 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.10726579 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.195087703 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.192306296 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.206350804 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.1981951 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.502722882 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.186615738 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.193771469 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.478976346 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.195209767 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.505844892 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.19977267 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.192758962 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.205635499 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.222945162 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.124050076 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.186435268 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.190044727 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.198737934 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.18965763 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.201672738 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.204975764 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.196772472 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.191897071 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.204935641 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.22001099 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.201706729 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.192951472 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.2023579 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.211908875 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.199002894 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.203743468 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.195858188 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.188108126 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.20249571 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.196398092 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.194870892 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.195014227 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.197196741 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.203643581 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.481413397 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.208347535 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.189090476 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.189894248 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.191022995 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.206986828 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.482898231 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.193436538 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.214440918 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.241642072 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.194759493 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.113655389 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.197380199 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.210071148 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.203018239 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.196604504 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.188476746 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.116958743 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.476274497 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.208073864 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.195849143 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.191962119 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.210533441 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.195259386 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.190432325 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.130332755 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.194645857 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.207718258 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.315899901 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.20535444 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.2257124 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.193151925 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.198494433 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.22101963 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.209904984 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.225571771 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.197776182 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.209726318 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.210851796 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.190954929 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.205334702 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.20439864 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.195558785 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.2008707 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.189313277 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.222833737 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.208013867 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.207982543 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.216978662 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.316243386 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.192914586 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.118764067 seconds)
done (took 201.675036385 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.25304737 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.184058324 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.278548285 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.19239573 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.288927323 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.301081869 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.189628392 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.188619797 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.189153331 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.565860269 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.189839516 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.199053725 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.185138211 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.190046538 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.274066502 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.191962883 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.190198805 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.529399436 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.192694363 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.262092063 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.191187205 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.189757114 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.192365212 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.577825029 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.18866706 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.191908647 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.274950402 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.192945609 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.541811008 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.190483741 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.191602865 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.543176972 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.297109968 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.210308312 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.202752003 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.199689821 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.30267505 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.207783435 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.28501045 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.274724193 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.286654251 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.232016517 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.193014307 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.194555693 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.193824928 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.195024218 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.191418644 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.219352758 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.190353236 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.191678452 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.530220628 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.202917411 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.201879567 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.192747166 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.191401924 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.213310918 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.192086043 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.194958549 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.282208494 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.194967459 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.265544949 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.577527913 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.568562532 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.194966922 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.194035553 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.192166125 seconds)
  done (took 139.086596659 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.260631427 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.266865275 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.299464037 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.195234055 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.244253289 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.303632548 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.195819648 seconds)
  done (took 9.893447052 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.20078367 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.195088756 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.244205501 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.243986919 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.196166723 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.341270128 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.195641358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.206956458 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.1931001 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.247784054 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.19791485 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.196766697 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.203424864 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.189808091 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.243714892 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.206948035 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.310111029 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.197078247 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.197414115 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.346937596 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.193963561 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.203253262 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.247415828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.207191277 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.197953633 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.202016948 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.765990791 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.196679355 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.19447098 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.195503551 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.193672219 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.233079231 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.196649139 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.195389386 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.194404118 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311213772 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.197124814 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.194959461 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.19766485 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.193879972 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.197386624 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.19697468 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.197246164 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.19429317 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.196938069 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.219490237 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.196552784 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.197482027 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.197136853 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.197430005 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.246715205 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.198093344 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.195278112 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.195516524 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.252977487 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.20608108 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.197863795 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.195922268 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.198016296 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.19646159 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.34908792 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.248645661 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.197645826 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.245518933 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.198317022 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.199074236 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.198525665 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.198255777 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.25233225 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.198866804 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.245603974 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.195625279 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.351749287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.221102667 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.200129444 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.201530961 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.200210532 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.197964456 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.194395016 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.204013492 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.196345539 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.199251635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.205576624 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.196050534 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.196706076 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303513263 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307411099 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.196038429 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.212630186 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.206380122 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.198148769 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.252083554 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.199791157 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.196654377 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.251539934 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.3136439 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.251762145 seconds)
  done (took 139.854674722 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.203752543 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.207700814 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.201792678 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.215530171 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.20138792 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.200054497 seconds)
  done (took 8.362875458 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.202298664 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.200390204 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.200008355 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.200515569 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.200600165 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.201442645 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.201170222 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.200916929 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.203503479 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.200877172 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.202276248 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.203496976 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.202671173 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.201005178 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.202015378 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.201695372 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.201158631 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.198463234 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.201662261 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.200791686 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.30582227 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.201336375 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.200854989 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.202530042 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.205171385 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.201378061 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.209613737 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.202898604 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.201389881 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.208236495 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.204763571 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.202438047 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.20322041 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.206778732 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.20531496 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.203565776 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.205619623 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.204268288 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.200503979 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.20264252 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.203995543 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.202366801 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.202751925 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.203837369 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.204078967 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.206092715 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.206283794 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.210225647 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.202507908 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.203940178 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.204520466 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.203668585 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.20491262 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.204722231 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.205858904 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.206348044 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.2076133 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.202714979 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.203347557 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.204205926 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.20494423 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.204283556 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.205065592 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.206835142 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.202225118 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.205561223 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.206033471 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.206636048 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.204349064 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.204097194 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.205175247 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.202054391 seconds)
  done (took 88.892252847 seconds)
done (took 387.214919274 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.396789199 seconds)
  done (took 7.533199964 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.337955924 seconds)
  done (took 7.476836636 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.120082822 seconds)
  done (took 20.257603402 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.222395332 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.295051809 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.199743511 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.207468137 seconds)
  done (took 26.062070238 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.396326888 seconds)
  done (took 7.532746207 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.204102526 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.19985472 seconds)
  done (took 13.544512937 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.304475046 seconds)
  done (took 7.443452932 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.446558892 seconds)
  done (took 7.58551998 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.218634109 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.216809644 seconds)
  done (took 13.814833472 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.183784494 seconds)
  done (took 7.322724998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.799181513 seconds)
  done (took 7.939733485 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.210524604 seconds)
  done (took 7.350522081 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.219834362 seconds)
  done (took 7.357591157 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.639770594 seconds)
  done (took 8.778003679 seconds)
done (took 151.136486168 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.197746101 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.202493257 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.199633506 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.202065466 seconds)
  done (took 25.940966285 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.239130551 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.240572014 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.241404317 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.250751533 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.243134141 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.240864876 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.231789913 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.233205115 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.251080023 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.242874499 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.24191641 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.243329691 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.241415888 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.233760422 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.244007549 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.24321511 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.251513007 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.241198788 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.233438174 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.244288535 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.209140219 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.251905009 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.243661052 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.208984443 seconds)
  done (took 30.888097871 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.403626262 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.277917341 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.360695978 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.259993845 seconds)
  done (took 6.442173515 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.259271721 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.261690574 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.272566194 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.311293354 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.337919317 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.270875508 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.235860258 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.229746856 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.215879448 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.262341065 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.336868448 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.277440537 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.3452929 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.208729823 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.394857029 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.207751512 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.208377333 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.260839082 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.311837384 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.338057887 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.209499302 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.259759263 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.263768774 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.278228664 seconds)
  done (took 31.699253864 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.20735123 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.216029081 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.213644553 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.209403189 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.20852071 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.209253417 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.214538688 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.209885127 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.229564228 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.20887973 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.207802424 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.208093477 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.207032087 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.208898455 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.207722872 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.221691293 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.221190596 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.208160565 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.211766039 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.215748136 seconds)
  done (took 25.386256984 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.202051026 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.05545813 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.554194714 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.458730758 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.202147699 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.204082231 seconds)
  done (took 26.818785105 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.270538261 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.396035073 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.209716032 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.527297164 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.604010745 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.211657874 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.211432192 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.427623559 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.698368795 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.692604289 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.260384041 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.268230474 seconds)
  done (took 17.92200655 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.203629306 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.202690204 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.208081617 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.221001326 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.257821752 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.214673828 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.217051487 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.204244281 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.260646504 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.262234224 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.213593583 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.258790449 seconds)
  done (took 35.868409384 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291755442 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249328916 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.094114851 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940747119 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.924088778 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41610147 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.944961631 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610246881 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.213151371 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.479248838 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.894811487 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.307524251 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.461461924 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.207929851 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.208625662 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.072307288 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432693261 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667154721 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210933298 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868850008 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233056358 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.206244269 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.020796035 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.233967707 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41770272 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.183555585 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.468466284 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.983653661 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464465356 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.220150061 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.217175966 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.207772756 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48111746 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838283732 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303425098 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.217081082 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.877208111 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.754901731 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.195516316 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.95735327 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.649357226 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.213116907 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.219447057 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.208795661 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.142504032 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.213534116 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617794334 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.218544471 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.919700742 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.209441114 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.219452413 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303283072 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.212448875 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.778096132 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200320373 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.214893941 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.205850626 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.215372692 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777686724 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.317225834 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.219863811 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.559532013 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.565023167 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868671935 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784752563 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.313181047 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.212916037 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.212843306 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.142779536 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.955757358 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.227347856 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356845894 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.235628745 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.859459824 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857049352 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.914121863 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.15372463 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741231942 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.217068534 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.145247307 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437359447 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987352344 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145842272 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.15514669 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.144738062 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855378106 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.220221325 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.555150462 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.220047217 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.612425596 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.224417613 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.229960014 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.234269336 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.434240481 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.096483467 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210953172 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.687709438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349879996 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233371061 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616512975 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.148905299 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.21498228 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466782569 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.422272972 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.217295147 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.078770821 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393950338 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21437018 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.228163464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.211686931 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.223866145 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.73367396 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.226750222 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.331956706 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.231351869 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.989927885 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898724921 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21879353 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.314570665 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.909351885 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.452105323 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.913083316 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.097418886 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280696013 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.217853919 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.212015036 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.970132654 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.064430806 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.093320269 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.213371646 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.214915226 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.224447227 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.213805337 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157873546 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.214922236 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92562114 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.994196625 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.436996066 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.214002156 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502445916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147210567 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361157727 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223084932 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.435652521 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.323019251 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.211690292 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473183123 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217359358 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.219652463 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.226427774 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232884894 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.311228223 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.235890178 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.219905723 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.471598699 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.217863636 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.217560013 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.981094091 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.993603733 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221366444 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.219998842 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.026000448 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741012034 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196132115 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.217698162 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10271456 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.228331559 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281631467 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.220111082 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.224176917 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.88254601 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.996094279 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.221819754 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.214462488 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439922719 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.225086434 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.891450778 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295667376 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.391123279 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.746590954 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.230875173 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.149311368 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.925615847 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.908017538 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215546368 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.413250448 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.216510019 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.22575602 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.227570141 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.715508679 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.743510179 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219992328 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.895438618 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.224225118 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.226494269 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.221646921 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215127873 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.856213546 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.345412132 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.228569762 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.228292177 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359707745 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.230249389 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.150243409 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.733626847 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.222214492 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.216355336 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.994058015 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.25106177 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.902066441 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678223593 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478657228 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.889414521 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.229907904 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.051485681 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.247132116 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.217775456 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.719255767 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.243778936 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.220225974 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.225230895 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.22756551 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.962494268 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.657291896 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782850178 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874848489 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695481684 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02988118 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.233275332 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.100615991 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629355175 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153865759 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.873901984 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388218227 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631434178 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164771097 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39789422 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.336890767 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916245665 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.230598313 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445912774 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026462243 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.733669623 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.242765507 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.429570017 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.253132201 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.230274877 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.148014548 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.503355447 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.431996081 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.688845246 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301766169 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625396142 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.724231478 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.009524767 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.216681378 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.53017256 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376756002 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.766632161 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60456189 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.219637543 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.969338721 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690358857 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.224148304 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.744475672 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795209693 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.221921082 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.402013122 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158531168 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.230561338 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.230861049 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.22001321 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.353517443 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.22257346 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.47476168 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.230789913 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154252682 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.233459428 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703308661 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.076979564 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.225685653 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2219782 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911349724 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.225345404 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483642842 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.221065854 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.824628925 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.225545329 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.155939394 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154906915 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.91258605 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.229545488 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195310486 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681034322 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.565438959 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.232468303 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.239084531 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066755887 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.475543958 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.234720078 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.750217661 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446932267 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.985499958 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.244970941 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.32052562 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.753175194 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.219696292 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.120282529 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.456814391 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034328811 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.44516303 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.118740768 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.12664407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.218322101 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.433246681 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.120107919 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.971973239 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458343573 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.932873808 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.226844404 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866536278 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247343402 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.948055452 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.244908859 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.574019636 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.230529501 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.290577112 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.232208019 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.232726572 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.232276058 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378141878 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957904203 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.236675161 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.236426376 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.31526073 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.378658623 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.821981326 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.997425449 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757022762 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903511665 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.753675163 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.23415184 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.222921412 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.223751739 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15767655 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370446322 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.748700012 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495818584 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35264144 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.640070774 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.248010455 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.751223768 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.248031651 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437055842 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.497555275 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.09284642 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.230705562 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882921626 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.38267137 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.233871858 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.434386037 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687612077 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754480891 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339072616 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.223053087 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634808785 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49967606 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.313377324 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.222695563 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.813541079 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.234897399 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.543707419 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.232025697 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982993764 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370997038 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.233168021 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857430715 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.233935366 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.383527753 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.996659964 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.002011544 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.479619026 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644050001 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.2358507 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75722602 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866288019 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486455068 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.293865201 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.23444155 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.330587282 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37003583 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.22182337 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.125710462 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.224110166 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068609534 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.934890302 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.234163591 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758761751 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.48717502 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.222905628 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.223188499 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247179428 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.234747102 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447751841 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879680472 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.451214218 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.23425543 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.234245283 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.794678145 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757938463 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.23773567 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158287808 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.22901647 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448746533 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.462184145 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.250950472 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.678285064 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.937022726 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759067773 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.200006616 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247305125 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.23166912 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.863472785 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759708941 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.849992953 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693553041 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.885825848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229518638 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502640538 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.231009124 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.232916452 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504072973 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.230022029 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.231557173 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.239239071 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.756922627 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931794972 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.233241671 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928850701 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.164462836 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.452648396 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.844126422 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164241157 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.229899302 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.394913581 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.229744971 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357688076 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.239165353 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.231785621 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.229020046 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.961000594 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502484216 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.233549621 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.222613522 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.787086352 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.231636726 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.235427918 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442023492 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.233967798 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.901604682 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.576518048 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.483106524 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.240128902 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.214436041 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.23150494 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.22909445 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944851173 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19761297 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.732951805 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763783967 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.232801431 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.240103471 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.233722013 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.445983215 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440433168 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.978797294 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.254187634 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.233121224 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.24433863 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.132717424 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.995743095 seconds)
  done (took 1511.523734859 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.239925675 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.231207508 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.235478684 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.23293967 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.259925416 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.323035185 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.261505061 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.2970376 seconds)
  done (took 51.248360747 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.238350297 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.379431245 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.258273649 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.233247122 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.238993305 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.230059037 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.645507669 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.235876328 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.238681673 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.238117811 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.229758417 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.229401068 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.828212687 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.238578581 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.23176779 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.226908302 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.237413419 seconds)
  done (took 63.327505617 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.231176087 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.355946339 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.304036765 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.245848402 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.764492596 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.225233938 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.261544537 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.26120589 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.229848716 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.481931751 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.875471756 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.250131803 seconds)
  done (took 81.655504091 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.226190772 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.227406711 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.226979594 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.226839934 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.226659486 seconds)
  done (took 7.292561375 seconds)
done (took 1917.155515422 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.465701417 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.826969881 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.768212989 seconds)
  done (took 4.753018193 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.365575699 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.415392447 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.536211104 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.556073369 seconds)
  done (took 7.033312822 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.509480586 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.607681772 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.414105544 seconds)
  done (took 5.69077412 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.476936482 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.22417299 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.339014151 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.219454328 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.221883716 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.221028696 seconds)
  done (took 19.822865518 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.223499584 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.22825555 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.224637393 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.226860591 seconds)
  done (took 6.063300485 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.206120757 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.914974128 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.210071845 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.225019337 seconds)
  done (took 17.717168632 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.971977606 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.984748356 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.968208138 seconds)
  done (took 7.08531012 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.22317955 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.065667528 seconds)
  done (took 9.448684965 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.517694432 seconds)
  done (took 2.678049448 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.358006848 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.549287573 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.19747417 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.137503934 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.196772091 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.631417653 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.661482199 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.300534232 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.124618969 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.149303207 seconds)
  done (took 25.467848908 seconds)
done (took 118.426822938 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.722810765 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.467988488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.424903184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.695012146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.445442654 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.426283019 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426823451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.661803725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.201957035 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.195724218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.695203311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.443813476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.378416474 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.469077846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.379237081 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.473042586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.44450454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.762507289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.413491103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.579059947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.42789205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.334080891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.522773676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.35450631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.447996786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.377521982 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.927206835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.224634936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.583944294 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.949347641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.378220268 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.751893345 seconds)
  done (took 184.149423065 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.222635591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.223043413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.222434502 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.235187282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.223761987 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.223184133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.235031375 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.232649629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.230615782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.225633977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.214411763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.209532218 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.218724384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.209019738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.211703783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.226407653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.21321121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.20889137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.210103962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.222402543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.210196394 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.234424193 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.210905818 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.220044141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.211042861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.222291327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.218020393 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.209265252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.209830999 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.209919541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.211819494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.21761736 seconds)
  done (took 200.168209875 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.219741368 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.220719788 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.210594317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.226137183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.222834279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.220421683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.210260727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.210170361 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.222331517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.229554662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.211057055 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.2110713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.213390081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.210732535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.210682687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.209935068 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.211242938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.210959382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.229622213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.211112412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.211087807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.210844288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.223091907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.211136115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.210289102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.21939913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.221888186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.211103316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.210407928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.211153456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.222677854 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.211323843 seconds)
  done (took 200.047679742 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.413099671 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.218508651 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.219664994 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.173732564 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.219977135 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.219951719 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.210736324 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.40961205 seconds)
  done (took 13.236903815 seconds)
done (took 598.765318086 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.351716004 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.082031981 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.404118027 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.239303353 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.908245534 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.254897849 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.240011156 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.390074819 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.106757448 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.392049973 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.39412887 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.238643808 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.552011087 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.240729193 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.472426906 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.328065611 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.032004021 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.139709 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.535027255 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.681707987 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.4782101 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.619689687 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.389682569 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.116573146 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.529655323 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.626102292 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.860405914 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.039314543 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.239328955 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.536134528 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.680249417 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.111953439 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.289357059 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.272300552 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.326760238 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.308418613 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.080171415 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.272769548 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.415148604 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.407053488 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.68639454 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.936168052 seconds)
  done (took 84.359222488 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.208873402 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.209113258 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.208265556 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.209181173 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.211174289 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.209613943 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.209623415 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.208646909 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.209815161 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.209364033 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.209692873 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.210770717 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.209159609 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.211082412 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.209763633 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.210058034 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.209506874 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.211571212 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.20915519 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.210216478 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.210261132 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.209028233 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.210769468 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.21019071 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.209429337 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.211201954 seconds)
  done (took 32.61195167 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.22348893 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.463304477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.60766853 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.229145898 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.223862358 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.228676712 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.292194387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.224723798 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.227079563 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.227719456 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.36568263 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.227871948 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.258955195 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.634907175 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.2263432 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.22583812 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.224573123 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.226298209 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.471201642 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.23381258 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.311204505 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.225768176 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.293414248 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.235136556 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.244652459 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.225659823 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.230507945 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.735801165 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.226296048 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.366357985 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.910448826 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.291391241 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.687043387 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.619547576 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.905764755 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.22872084 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.226310557 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.370773888 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.228025799 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.226757442 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.293643978 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.227228962 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.615163885 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.825538459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.240908876 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.227000381 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.751606702 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.370310291 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.441808315 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.233506699 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.643809303 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.23090116 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.228184796 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.227456763 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.442520229 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.232646791 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.227450776 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.743845177 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.247661532 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.293928605 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.227297528 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.22734959 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.476472367 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.226975407 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.466344981 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.228865041 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.23515395 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.228714112 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.625459844 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.231256617 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.849832053 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.24230524 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.227891447 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.373243865 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.468536344 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.78290377 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.231571681 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.484755503 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.701732583 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.293748926 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.232406114 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.726812466 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.298097357 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.232449287 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.230784022 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.23096814 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.228988347 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.279687012 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.293310386 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.779108087 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.835385334 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.750064635 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.310676109 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.240845726 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.228247564 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.735587995 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.242729561 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.228864077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.61405863 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.840963091 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.242578789 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.237309624 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.8287925 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.244223794 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.298094703 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.233911021 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.624250699 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.229922853 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.280779929 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.229177733 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.236195573 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.233470696 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.298488439 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.233082498 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.229820939 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.816307053 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.389895415 seconds)
  done (took 162.01491855 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.223939281 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.22401418 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.222335166 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.222583089 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.223736148 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.228728113 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.222999547 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.223480585 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.228681664 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.222651345 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.223178049 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.226109112 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.224020762 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.230595091 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.231035048 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.228607578 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.831933615 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.218626982 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.219052927 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.21713513 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.990850963 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.215773002 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.216272038 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.214546809 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.214768151 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.217926247 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.220229239 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.235720918 seconds)
  done (took 148.781785749 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.222633118 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.723206645 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.222850385 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.339736344 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.241314862 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.219831619 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.336749584 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.273667844 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.224555173 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.221078711 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.220277907 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.490625697 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.223804373 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.679195894 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.389223522 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.339919304 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.683489673 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.225221437 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.221080176 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.220692713 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.340604126 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.228095503 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.49315142 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.732177618 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.22607485 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.730298639 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.214386074 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.224210965 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.222639199 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.73326155 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.223791072 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.494654774 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.292982649 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.275569314 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.733043901 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.683553095 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.680445008 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.350272705 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.222843768 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.221576579 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.221911613 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.212031213 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.73220454 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.227285775 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.224825388 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.722663033 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.238526003 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.22542185 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.23291849 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.222381525 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.276113805 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.276501647 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.497335206 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.736277774 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.293128893 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.244128359 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.339218347 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.587758056 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.225438996 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.681820595 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.212686977 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.7343897 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.227660516 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.213253401 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.224923909 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.230057814 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.356014947 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.339172674 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.683868745 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.226221075 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.684400516 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.35588359 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.223679399 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.224426802 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.226892952 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.734753901 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.684707206 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.356437702 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.34470651 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.394552532 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.216269275 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.225074165 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.213782826 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.293166269 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.224278508 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.733123003 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.685495484 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.226512309 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.226412908 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.226920106 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.227407925 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.380712832 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.735995043 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.294222766 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.677016457 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.508761567 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.497944518 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.227383295 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.278049086 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.225760102 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.49905348 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.228355584 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.275626309 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.649426484 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.500285387 seconds)
  done (took 145.775749198 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.463339195 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.3292373 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.310211886 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.331530534 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.786313088 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.769436072 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.428782803 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.342848799 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.324326794 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.45166646 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.30166457 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.31934336 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.377796149 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.293033352 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.912033308 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.289075813 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.311573082 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.341202382 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.310689894 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.182651206 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.802632462 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.492677734 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.381861679 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.041434628 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.311740532 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.944851397 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.744784315 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.739605529 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.384884944 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.432756123 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.731053372 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.289034178 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.127801441 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.833304783 seconds)
  done (took 59.596211373 seconds)
done (took 634.29311345 seconds)
SAVING RESULT...
DONE!
