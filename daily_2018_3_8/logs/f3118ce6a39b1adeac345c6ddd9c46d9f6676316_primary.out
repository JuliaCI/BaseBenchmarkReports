cset: moving following pidspec: 14389
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.558984705 seconds)
loading group "string"... done (took 0.510417022 seconds)
loading group "linalg"... done (took 9.3982787 seconds)
loading group "parallel"... done (took 0.169122398 seconds)
loading group "find"... done (took 4.077925142 seconds)
loading group "tuple"... done (took 2.063022171 seconds)
loading group "dates"... done (took 1.382366394 seconds)
loading group "micro"... done (took 0.194633243 seconds)
loading group "io"... done (took 0.516608537 seconds)
loading group "scalar"... done (took 58.589557799 seconds)
loading group "sparse"... done (took 14.269241461 seconds)
loading group "broadcast"... done (took 1.765643572 seconds)
loading group "union"... done (took 11.248882202 seconds)
loading group "simd"... done (took 3.654428848 seconds)
loading group "random"... done (took 13.862686485 seconds)
loading group "problem"... done (took 2.236497319 seconds)
loading group "array"... done (took 24.384426155 seconds)
loading group "misc"... done (took 1.164820076 seconds)
loading group "sort"... done (took 3.820361523 seconds)
loading group "collection"... done (took 22.271651225 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.694008543 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150307259 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.207285903 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.210148895 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279326762 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.172601781 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158859101 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172895819 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.645958367 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209628532 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141708615 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418964842 seconds)
done (took 6.207942567 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.30939051 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061245451 seconds)
    (2/2) benchmarking "String"...
    done (took 0.171346776 seconds)
  done (took 0.936384043 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.09441171 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161681428 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111856726 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.10002824 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096067612 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.173342249 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096189316 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112217073 seconds)
  done (took 1.547916848 seconds)
done (took 3.586746037 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.50418322 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.936880787 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.547960305 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182495501 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315925683 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.313699087 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.274782027 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.224900091 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093151865 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085650724 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176580884 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.463687994 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.406766333 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.021051679 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.070638168 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112698084 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.138622098 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.855342711 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081945407 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.124471584 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529819101 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.215413482 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119876671 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10782788 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189534219 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136828895 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.144283963 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10917993 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.727979652 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.139704982 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217840187 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08597536 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.141560927 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.169332967 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.223593754 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113208679 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.749232854 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202786633 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100870743 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103266926 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.745180683 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125732859 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206987287 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109873389 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068834251 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.173243543 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.102943328 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.096023474 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096005733 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.089206861 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.182003592 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.509395786 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107195243 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195599895 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096722967 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.805489755 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10078742 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.281642043 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130719323 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096592756 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093961475 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.093037328 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171141575 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096865272 seconds)
  done (took 20.967035835 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.176069767 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.194015176 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080937896 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.165159805 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131402146 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100690043 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091952064 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082009659 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.134507169 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185175655 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.147249966 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.195960701 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079285307 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093086333 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.174231591 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241116833 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.132061403 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.107067135 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092436507 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.115548069 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129778637 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116100279 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.099739051 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098801359 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.177417904 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208971669 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112955727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125131445 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092961101 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102369383 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14614257 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152364968 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094249962 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.0916642 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.196847441 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110045896 seconds)
  done (took 5.494924482 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241063403 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107318203 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.253958724 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127489942 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182316579 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.155903101 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.189130604 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179984313 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303916117 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.234155241 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182769757 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116785219 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116259591 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082010295 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083492739 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.08054581 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.847771455 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179071251 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153683062 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189067576 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119105102 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084038647 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.733318687 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087571088 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.105357084 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098368565 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064967216 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223988797 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116476389 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.494791014 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088395418 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101713699 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134903556 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196092215 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.143091578 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125674213 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114226849 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.091510061 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.220608525 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105990492 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098036806 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082740681 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133616141 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118576332 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111013115 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.113364251 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.136911085 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091792303 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113188722 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.095304685 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197646888 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.149408474 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.106051888 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.274183352 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.13186637 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10495266 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.113354102 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.80198978 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137137734 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086287476 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097989424 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100884437 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081004929 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102642058 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109653122 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.810875439 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.100636548 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.143899169 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.67940302 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114895097 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123085379 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088676004 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08777299 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.130456577 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089326494 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080642416 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.108473746 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083961004 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109285853 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.16404046 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.131052237 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088074038 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08265313 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.104182311 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151146811 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114698563 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113982977 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126142685 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096398954 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091240019 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131966066 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084783815 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.108864284 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.171431283 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120751897 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114279095 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119231564 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146053573 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092101487 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.293473213 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100098593 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125132972 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101438902 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115798322 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114692283 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08579628 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087146964 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097419047 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084425391 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151512022 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.106861584 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084607892 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091412269 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113571688 seconds)
  done (took 28.839672871 seconds)
done (took 55.999029659 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.415679701 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084392777 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082745843 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103770871 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084820471 seconds)
  done (took 1.539883689 seconds)
done (took 2.285086412 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310630186 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202990482 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093381229 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192855761 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09186179 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200293568 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186493035 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.104829825 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.211841776 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.088347108 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196815223 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088779998 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108093943 seconds)
  done (took 2.851305591 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107610866 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109973145 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105314926 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123666854 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08896977 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105351229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121470685 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11221197 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105290608 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116422428 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090821435 seconds)
  done (took 1.933259726 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103741547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106757093 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095470565 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123077901 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091123857 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102092983 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119050198 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110649526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101485441 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116394977 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090727231 seconds)
  done (took 1.90934099 seconds)
done (took 7.442683773 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222086452 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.02805281 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.195414034 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.251036081 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.349121835 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.304269539 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.621208843 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.205578248 seconds)
  done (took 16.055148466 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.116349132 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.195224103 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094291832 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099124694 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.117673294 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099305358 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101176462 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.117681452 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094879695 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094288168 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093280887 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.118144294 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095176835 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09541129 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116137248 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094599673 seconds)
  done (took 2.557638245 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139499246 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119574384 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.119353984 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.102902277 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098982775 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.121328416 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104321412 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.119456575 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.098363905 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09917014 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.123059266 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10193324 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100393691 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.114172102 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103442281 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120370914 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.115001399 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102310412 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120760133 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.120756445 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102183534 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101288911 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117711672 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101764338 seconds)
  done (took 3.504814758 seconds)
done (took 22.869002163 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150268676 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105645471 seconds)
  done (took 1.011622377 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.168370446 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.185726498 seconds)
  done (took 1.115029041 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114900204 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093246045 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142033415 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106471776 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094957399 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.112224449 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120429593 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111017989 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095954824 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094405203 seconds)
  done (took 1.852951415 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099152441 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097423426 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126985193 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.170832323 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.122313784 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095625075 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097701851 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.115057971 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101059898 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093698823 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117850733 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113977974 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098411122 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132769055 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097671255 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.11684896 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102681544 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09773915 seconds)
  done (took 2.76422897 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095118537 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095437724 seconds)
  done (took 0.959235562 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097095833 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094167223 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095345384 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114402433 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093830685 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093197281 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.11124747 seconds)
  done (took 1.466821521 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.532631642 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.242756481 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.381551238 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076129187 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126091283 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.311035016 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.127350617 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074460453 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092800881 seconds)
  done (took 2.766605905 seconds)
done (took 12.701616695 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097461119 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.444225217 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.635353726 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.134240693 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09403671 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.150033168 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.33974227 seconds)
done (took 2.667748593 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35633705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166389174 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085733402 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095258949 seconds)
  done (took 1.472608293 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085640158 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102533601 seconds)
  done (took 0.967426629 seconds)
done (took 3.218766299 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093671609 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093087677 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091472958 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10926053 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.11528777 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.092162786 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.111121627 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093288312 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091958699 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.111642899 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092693077 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.092252798 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.093047482 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112587024 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09135211 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.214355158 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109685983 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092122749 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092798592 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091735323 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110021577 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091917755 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093055007 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.109488492 seconds)
  done (took 3.302862824 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115578331 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09553929 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.115024347 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097168401 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099230455 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114694846 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098466522 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094797437 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.115261232 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094773039 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097006031 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.1148707 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094783701 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098109846 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113017074 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098942236 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097898069 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112504494 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094485795 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098352564 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.114739838 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094357746 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098232931 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095860612 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11482079 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097593074 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094332695 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.11203032 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097470308 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096801359 seconds)
  done (took 3.855325783 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09935527 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090233153 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092967066 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120377569 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090223994 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093352159 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107463032 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09319329 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094736407 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092608701 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.113229306 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09279587 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092950997 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.11183811 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095889185 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0971275 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.12069601 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093995745 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093939437 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095441242 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11418749 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093335602 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094719225 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.111994192 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093338695 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090396434 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.111709268 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093743646 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094093862 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093878015 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.1132554 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096640084 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093017564 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.120926132 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096058436 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093512041 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.118621409 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090508444 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095204305 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089521987 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.109403762 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092818671 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093710165 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.117186508 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094823224 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095420186 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093398783 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.112495063 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094894993 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096560241 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.108610107 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093807845 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094691328 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.113010831 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096605734 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090589615 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093838341 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.108271816 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095464768 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093192681 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.10850135 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091199767 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098274687 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094495271 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.126563194 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10035176 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092980396 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.114363857 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094145736 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09900925 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.113976595 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103282199 seconds)
  done (took 7.992916842 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117537582 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103121624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112416297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09589134 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094158548 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093893306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118171962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095292205 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094456151 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119178254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094962541 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095657555 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114375616 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096043203 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095403059 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113039084 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100252596 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095568617 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.111606163 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095387244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096002955 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099395076 seconds)
  done (took 3.042335726 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.245471035 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10096189 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144929418 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125163543 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112354333 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125158446 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098813049 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10020491 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116781618 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104314393 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103632546 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116345343 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112414667 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122013853 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104130765 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107613434 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117154102 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105447798 seconds)
  done (took 2.950939607 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107420413 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096293142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.159980909 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096884642 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095837819 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11573038 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101425703 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116113658 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.116203142 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096270441 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.103589915 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113679234 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096099691 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097190809 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114342743 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097128487 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096260907 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11463006 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103919136 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102143972 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.118540244 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103072506 seconds)
  done (took 3.152486796 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109389185 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097204684 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.131856447 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098114121 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095702209 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113954816 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102550948 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097345413 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.120891731 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097142815 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095392181 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09414623 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.129290759 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096503664 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102215635 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114713468 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096685355 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096690375 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115668929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09491503 seconds)
  done (took 2.891539412 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197639191 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131136363 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11180828 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119819844 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131458024 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113279019 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139503439 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112338528 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113852458 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141765553 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113711911 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111912811 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138914921 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117260564 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131053789 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123765411 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138714284 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121908591 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112525308 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131028744 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123561309 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113431803 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138323923 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111996962 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129615715 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112462389 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112604522 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135803442 seconds)
  done (took 4.325072209 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095375317 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094583058 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094635724 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112433279 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095167816 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094763675 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.113659786 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095179963 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093955727 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095405393 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112904202 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095679197 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095551552 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.113565533 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096033594 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094876868 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095193434 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.112878755 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094850272 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09415293 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.113341547 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095517907 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095335158 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094328128 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114074573 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094708354 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094346518 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113018456 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095671603 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095863781 seconds)
  done (took 3.790600164 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108553702 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105436749 seconds)
  done (took 1.0111278 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102991619 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110526375 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094851783 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113346797 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100682494 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095630116 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121648311 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102225312 seconds)
  done (took 1.640493921 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.170613114 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.193357823 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.100944648 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.127448615 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.173821436 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.184562136 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136604952 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.120824314 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.095040894 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.088631811 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.18738776 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086979857 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.115727044 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093714535 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094709716 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122384403 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096521729 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105658527 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121797251 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098420032 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101308116 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119119773 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098934341 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107152684 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.11048994 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.098916362 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100592882 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.126915178 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093381764 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097787822 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112298866 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096420853 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100447128 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.118854741 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097988449 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.193639811 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104608871 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091560748 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.116238285 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101449077 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.129297383 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.116361217 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098057939 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094893037 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118778306 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100958858 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102500301 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.114918671 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088649064 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091084352 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.115788985 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092072596 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096727564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095750603 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115773208 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103693081 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.116021824 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093929439 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092611466 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091787418 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.112352788 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.092215719 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098477607 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.117861424 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098261343 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095976824 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114312991 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096159381 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097805925 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.116337065 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096022798 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111726451 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.116080179 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101585749 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102212377 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.116283432 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093344138 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101813105 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113862421 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.098030496 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100219251 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.143749089 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097698894 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090858331 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.111085613 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104044075 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098268556 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.118147947 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089717226 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106280371 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.117642025 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098018738 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090080474 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114600957 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.093194824 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099631487 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088399457 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116329316 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096036867 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100555782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120001144 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09476761 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097100716 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120205569 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102610781 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09607293 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.18132171 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092737496 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.112338871 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099130641 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102645957 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.109998486 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.097113731 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09663735 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093811511 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111579092 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101631092 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096635614 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.117099675 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101776453 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098068016 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.117614959 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098138445 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09539565 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.111059679 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101380127 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105805146 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116857945 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100076788 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098887734 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.116192242 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.097517412 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100876494 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.11150072 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102485107 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09420914 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097020939 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.116675826 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102010662 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096421662 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.111473845 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095273884 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.098161771 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11661459 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100480581 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.097120873 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.111789517 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.090154147 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097964339 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.112932713 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09912712 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105798411 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.112712142 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09977148 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092619178 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124315483 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094686158 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101675006 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118283964 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102844658 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103014098 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089547085 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113512086 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101987158 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097944517 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.113966017 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09960384 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096314248 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.123322305 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08989171 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101413642 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.108987545 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.095699344 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102405457 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.117813703 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101052312 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09223155 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15623104 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109768663 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103174921 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11573038 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097494759 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101997933 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114576236 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102344727 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104755271 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102785094 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11753934 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095585238 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102187456 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.1134106 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100122418 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096592616 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117866813 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089338984 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098726394 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.109115217 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101483886 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098860593 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.121467407 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102324206 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099812093 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115043077 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10698767 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.093921982 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101548293 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108962109 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102606363 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108470086 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.123445898 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103971934 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098282901 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114928189 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099176118 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106286554 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11969101 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.098842069 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100274113 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.110471574 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.091639264 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103739465 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.12011712 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093766732 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096955572 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099454425 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120104915 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094208028 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090317875 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.121792392 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102754835 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.093207127 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117486297 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093905305 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.096274167 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125924694 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.09064513 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093359373 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.119372656 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.1017423 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099201184 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.117856767 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099901838 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103763887 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.121433588 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10123285 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095643924 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106264688 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.115535445 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10818981 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.094390583 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.120432281 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090886359 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099125958 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.117257327 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.094435274 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.093270623 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122489634 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103242249 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102788862 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116024423 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102540242 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102241458 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.122938876 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095974297 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102728591 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.112920781 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.092051114 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.094659143 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090459977 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.119208081 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.094080993 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103194256 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.115090485 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09657288 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101685796 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119626345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094616179 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103966794 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.127601034 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.092258216 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090531723 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116680712 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096674667 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.094088624 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.114401829 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098793251 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099906026 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.122245891 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110960783 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.094297303 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.117197639 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104314367 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093674424 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.124493914 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103674807 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103436301 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092882382 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.121979976 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09541312 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101155202 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.111280117 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097313651 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095923446 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117882431 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093682455 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.096321631 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.112995199 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09093426 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094783711 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.125273627 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096356873 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101971403 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.117292342 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.096710203 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095950582 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113039044 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106133456 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096751358 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.12498264 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100195643 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090729386 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.091415206 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.123378115 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0980356 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104767209 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.113460636 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101440493 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103160075 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.12123991 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099356377 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106148772 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126804097 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105767528 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103649741 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.111220536 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.096099716 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103317391 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.117512877 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100848966 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101712159 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09308954 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.12175713 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102981869 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099082377 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.116445569 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091670379 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099236107 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.124788527 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100983637 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102321632 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.119857714 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100089281 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.093117243 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102550536 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.12467808 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09757064 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10429609 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118299645 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102810572 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094973139 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.125303609 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099146543 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.093609103 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.111552993 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095313498 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104517499 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.111999855 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10272609 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103167275 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094346973 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.117045492 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101791788 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.094006174 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119622141 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102112983 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.095498415 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.129506506 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099052153 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.096775824 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.123552078 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102857248 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.092665232 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.116642667 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098575631 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106086509 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.117177139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104093198 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098097329 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102885331 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.124108288 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103010178 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104049698 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.123633139 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091494037 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104515643 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.12090886 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103158515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095218639 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116561518 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.093695968 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.097941725 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.124929592 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.095241292 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106965019 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.125406117 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.098187119 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095003044 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103057688 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117525176 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104785768 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093757208 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121019131 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091575397 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.100386631 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116985793 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105869265 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095067343 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.111950655 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103656854 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103666872 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122288009 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100218781 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10613954 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.111347985 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091477694 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102437244 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.095314139 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128177477 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102391249 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095209102 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117910197 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099769241 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100085087 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126397624 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.093206804 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09599135 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.119437501 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100247145 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096566406 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.11404809 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101597927 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099228414 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119521839 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097410205 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09313909 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.1177541 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105492163 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.097829879 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.113243361 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09593916 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10527158 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.098655657 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.11685217 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0923043 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104627983 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.121302983 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105407888 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094877317 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.119899111 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095841143 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101030518 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.126552681 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.096411426 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100063179 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.117264988 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104718782 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102093272 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.11331666 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096620877 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109204749 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124307703 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.100026564 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101612763 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.117387453 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107362235 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106029957 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.120582264 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093412689 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092714048 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096954023 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.113997469 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100829402 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104400343 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117955759 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095992807 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103595247 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123755319 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102501811 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102971168 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.113442544 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105865747 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.096406836 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120851988 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.093601313 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091899548 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102601755 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126726039 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097262475 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.099591359 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.120816073 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101667808 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.093355136 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.11766301 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10205474 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103681608 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.126094265 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098408093 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097064732 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102417633 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.130417207 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101803085 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.097909319 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127252904 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108352882 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098193792 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.120492793 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101646045 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105758203 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.121919235 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105529156 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095801284 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.119799185 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106841209 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105761692 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.13022305 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096858215 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.093010818 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.124347222 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097385727 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.094856475 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.123052828 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106468435 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107336996 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.119671027 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.096585222 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108247947 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123982461 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099552921 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.097487532 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.117662428 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103392834 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096992209 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104222622 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.116809575 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107253616 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105596195 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.126312176 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108221084 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.094351216 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124914984 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101220486 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107589284 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.123135404 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09437547 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093462312 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.123586029 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106721461 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10554483 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103506791 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.124573013 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104073922 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099038682 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120533424 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.098018275 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107421273 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.126854385 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101432632 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102004216 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.119624909 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10027497 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101462196 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.126951336 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106794144 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.100798947 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.129146984 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106024858 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.098489239 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095953979 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121347802 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102544147 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099893371 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125161192 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.096434112 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.094512855 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126614634 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107070369 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098965917 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127698792 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107351042 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097651381 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.123712199 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108081218 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104974249 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101900513 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.121311423 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.1028587 seconds)
  done (took 64.33146547 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152142364 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10840661 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124306781 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10129137 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12003869 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126819718 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102640056 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102272204 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.125674769 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111853493 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100919399 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123093788 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118038019 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145226699 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119409994 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111193557 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123409677 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103608704 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102552621 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124389902 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116707686 seconds)
  done (took 3.316524824 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119572216 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115652251 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134827802 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115487414 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108751188 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13379437 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11318623 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135567684 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116673573 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109491215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137105526 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113466188 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.132639066 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109778323 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109686582 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13236007 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116069925 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1096869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.134820688 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11415532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.131767342 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11362166 seconds)
  done (took 3.510591985 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.133156041 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104781451 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100192362 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.123331083 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105160486 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.101510671 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.125701272 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101196267 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112042816 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118032272 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093022125 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096981804 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100560122 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.123527048 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.096174563 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102364793 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.13295828 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106009311 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107108166 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.122933848 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093318757 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102625304 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10239108 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.114390973 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107529305 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106515482 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.124058268 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106459143 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.092145079 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.126834334 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102430178 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095686072 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09270382 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.114762321 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.093327598 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104663449 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.124384112 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102247655 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10310714 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.094148225 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.124348531 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.106360555 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091980393 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12348803 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101543275 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095490934 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.126141636 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102248296 seconds)
  done (took 6.037405924 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.134421909 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162038421 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105473728 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.131969247 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.140016433 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11256907 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104915587 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.132083313 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103247762 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.128173829 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116475613 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115995551 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130173953 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109190913 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108342564 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.130886282 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108654545 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105410123 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.131860866 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10563981 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.131920024 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108482158 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115157776 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.137129008 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108472324 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105547372 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127240498 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109875658 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115364145 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.132452702 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110119584 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.131955859 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117184082 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106787505 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.127889656 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107859471 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.373183877 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.129654606 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107973422 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104926835 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.128916964 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108872427 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10776219 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138578671 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107619603 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109605099 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127751633 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103214651 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.136410682 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.107551711 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112875329 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.137414503 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109339971 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106703858 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.131263413 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117454514 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107136505 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.127846192 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107322654 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115070144 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.126006133 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109353861 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.137707995 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107349332 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111617347 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.13879204 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107763574 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107990928 seconds)
  done (took 9.317919458 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136393639 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11049831 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139180979 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117695359 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109199716 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130892441 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110237752 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.130865885 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110571066 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115890811 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131192946 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.253026122 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106737652 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113235596 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132308653 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109914861 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109831679 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132219492 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109512706 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110641556 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.131863274 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118488591 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110979191 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.140420713 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121617719 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.128202781 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111332551 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110094011 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139290587 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109518398 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142111679 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.111346207 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109990217 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.140290258 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121409571 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110045492 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127342144 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110469907 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110542378 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.135449443 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106517312 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140989278 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109346061 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107840826 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131332978 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110395848 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118939126 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.141633287 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115970997 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136081594 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111288258 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118055302 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131810273 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110770451 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117974293 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148030452 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118459993 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141958953 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110418783 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.138395801 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120470285 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125600493 seconds)
  done (took 8.541512853 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103826349 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102947017 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103092514 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.124235247 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103746189 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102782382 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.126052973 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103605725 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103165143 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.102658096 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125072502 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102463483 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103637796 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122724587 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103940028 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102433595 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103187313 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123938163 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10405393 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103232975 seconds)
  done (took 3.041517174 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112628496 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121121609 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125847036 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111301888 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104865422 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.132423469 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104199358 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104369129 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126446622 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106970671 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114684116 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.134496976 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104557262 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111674849 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.135834665 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110424615 seconds)
  done (took 2.735132452 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12333931 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120932471 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212183573 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10600389 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127591967 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112809938 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10476994 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.130391555 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103332992 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.110132106 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.132083975 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107728289 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104981401 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.12671884 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106070522 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107994528 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104393372 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129932332 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106184397 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.219434875 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108108 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106109855 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.130321054 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109866446 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106940252 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.134100319 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110114547 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105829164 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.131097789 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106717656 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107061284 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.135862552 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104586649 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109078248 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.128662169 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106647415 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105664722 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.128447594 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109670549 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106761486 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128795582 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108847397 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106264628 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.129440039 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105865724 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105720766 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104073768 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.133509964 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106846369 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106869179 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.128680196 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110843893 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109654192 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.135309528 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114322963 seconds)
  done (took 7.399195582 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11847426 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107038799 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139046331 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10413593 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105694007 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10652416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129987872 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107069508 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106446757 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.1275902 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106780079 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108371534 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.129025838 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108244397 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107415258 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.129956163 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103642863 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10675379 seconds)
  done (took 2.931324741 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111838269 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106369702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108803349 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.128881504 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106098839 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104986065 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.127880424 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10557985 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105496105 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126754747 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106633462 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105395484 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103520193 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126985149 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105172977 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105734247 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.127965759 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104439807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106776115 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125581306 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106838768 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105173818 seconds)
  done (took 3.34388039 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116393165 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.217060092 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.112728449 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.224122022 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.103151446 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.125470853 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111694811 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.104284594 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.142169431 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.102583092 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.101606972 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.124124044 seconds)
  done (took 2.46794128 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133484416 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143899832 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12821937 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107951772 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114462326 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133495102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111994502 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111739187 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140934035 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122593788 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133641643 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118747007 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118001682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142905788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115236492 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138777799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111797186 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110948005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128763377 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128019541 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109931805 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140785771 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110302245 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131903475 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109755197 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119215527 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141301925 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122547055 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133025286 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11995814 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115946777 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133898699 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118459169 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144422765 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108483002 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118204632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132727788 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125888059 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115593014 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141898044 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106490491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137674058 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118693876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116510559 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141340991 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11135406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138113888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110512855 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110080189 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156852267 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115982121 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141245391 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115176681 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119721106 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140997872 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133616147 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145966484 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118930942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136973787 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12315164 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117595709 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137372295 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120181029 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144771621 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116640538 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117451074 seconds)
  done (took 9.166525903 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147188214 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107928083 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133529427 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123149251 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142882677 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111781938 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110404417 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13247207 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112354236 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108563093 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178253269 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110412007 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141958608 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118876606 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112810606 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13439611 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111863693 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119736995 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13204821 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131662609 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134032158 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120288756 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12024632 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144037444 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123130867 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139371916 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111955723 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110449252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133384134 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111485908 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137328162 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11265653 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121370828 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.129793557 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120776164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11128428 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134077971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118167317 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110778407 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137540246 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119389136 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149128218 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111842746 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112562754 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145128119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113712676 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133952052 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109555091 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112301883 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129101296 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122910287 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123342727 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148220329 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120028912 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133600043 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111232679 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112510349 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134407713 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112237333 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115855105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142551085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111725115 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154936348 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111708138 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11224985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143257898 seconds)
  done (took 9.143836709 seconds)
done (took 174.02041668 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177909533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217930344 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.200520108 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.190173868 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.097475758 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.169263167 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138294594 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200992586 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097364687 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.097133906 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096382964 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.123556585 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.206017756 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.098509681 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.121696551 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100500295 seconds)
  done (took 3.218470817 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199497212 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.351060014 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112746925 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.124951799 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105165353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102446315 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.125167776 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104504154 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.103155065 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.133639247 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103092836 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099285855 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.13233853 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100372827 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102626699 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124712729 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110950239 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102423687 seconds)
  done (took 3.233700214 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12223287 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157075495 seconds)
  done (took 1.17808264 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134502125 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.22332519 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299645166 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174180292 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12322523 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144238611 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15331131 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139024316 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.194184196 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.139147464 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115548512 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100537687 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.151717796 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.109713126 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.142081022 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100738838 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.131056282 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.139492184 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116158371 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.104946083 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14938233 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106242199 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107326776 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139296658 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185455623 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.139118721 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107050701 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10630909 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.127249685 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117685378 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.133679378 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120926916 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11469662 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.186766595 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10478538 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182715657 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131642452 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.104341638 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115808662 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.126884877 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.108360769 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.107937837 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.139483913 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100630154 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105474534 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132921481 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107439161 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106554811 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133805467 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111108919 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.134982599 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.110680599 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.180951407 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110706793 seconds)
  done (took 8.133662253 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.895852182 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153375434 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101647258 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.039010064 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14726829 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116466913 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.884989858 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.151269707 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259429608 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.903062965 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118638524 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135857931 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244593557 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261366414 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.296923068 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.367875563 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.743765505 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116381215 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131971136 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166536531 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107133268 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14246005 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119357717 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.524672233 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.104883893 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101278558 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129012379 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110080876 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18096475 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103568743 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128911112 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176134933 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29488753 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213506241 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126402804 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101077022 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101339666 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188012352 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27879181 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226254848 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.197834341 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099035909 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.103174561 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129875771 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118131202 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100360001 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181316717 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.1971156 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194991744 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107261201 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110018578 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133606669 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106193402 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182288978 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102087473 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364582439 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.391571411 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10292037 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109345313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136877689 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275013207 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105419405 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244847244 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147289388 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225005227 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102505348 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841852858 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189031676 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10374181 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10705921 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130964899 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110387687 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129959982 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171116217 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.50728664 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109297471 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107638048 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125235137 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24402897 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104419706 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103617819 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185397996 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104724975 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133740488 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112072666 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108756043 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.194424198 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.274727037 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110471311 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131778691 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108216148 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113154336 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.126562432 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237586623 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235347122 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155516153 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23400884 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130475552 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16189172 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188955046 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106509677 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193285755 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130257255 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114099455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107253651 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229432966 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.161333971 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104328318 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132539505 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11002209 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.16234836 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107482368 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109647768 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191871421 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.566067985 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190395388 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099931466 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108689593 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132411656 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161248652 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134258366 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272483396 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111134956 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189371444 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108270338 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.123427603 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109047946 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183615021 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111666131 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109161307 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130155962 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112281315 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.286850165 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228277257 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111959332 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256373895 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.203850603 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107832527 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197357823 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108742259 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192428472 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137038765 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108187508 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104816988 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825650127 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138282592 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108267806 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108780936 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.212018281 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10273845 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128889447 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103638158 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1011918 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821057016 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129764743 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100687372 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105781767 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129683766 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108406713 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112828054 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131605868 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161477153 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271801509 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112076099 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108033102 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125529273 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161448968 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.128558833 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103887672 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103891322 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126030969 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110691516 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107679207 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129187839 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171636739 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.182800098 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.235543545 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.640077065 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.127370453 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103651718 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249546392 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102393937 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.358615656 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109942341 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240929767 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188794809 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10059639 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366230835 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189787599 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.213247969 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107418721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197396057 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102453015 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109391291 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182744519 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.127122761 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110961398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182786657 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112065307 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110354713 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.310208105 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103246512 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256136378 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.101505552 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195533858 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104775021 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10837925 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.355160718 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104456952 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116193749 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181990332 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108225453 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127439088 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.683829856 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103538027 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112740531 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130829929 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239993655 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188992261 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109812752 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112207956 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135673454 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160754195 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235513202 seconds)
  done (took 48.497466654 seconds)
done (took 65.154557862 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.264581697 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174743897 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.382246126 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.156465512 seconds)
  done (took 1.965997108 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.276594061 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.173461 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.259437572 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101830893 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.264687693 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100825542 seconds)
  done (took 2.101477576 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.180851825 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173692499 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151494366 seconds)
  done (took 1.431240045 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214312556 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212019882 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356275567 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.268264517 seconds)
  done (took 2.058303294 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.289156319 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11958272 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127923797 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.238800995 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.256424442 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212667047 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126798364 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179197266 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132969569 seconds)
  done (took 2.642597055 seconds)
done (took 11.121593512 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.222145894 seconds)
    (2/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.364802186 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.408051612 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.399653546 seconds)
    (5/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.228252615 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.238482754 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.227897047 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116130243 seconds)
    (9/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.339995225 seconds)
    (10/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.239616404 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19452297 seconds)
    (12/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.322163869 seconds)
    (13/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085204078 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.150502788 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.124463734 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.276399524 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.381831764 seconds)
    (18/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.179050426 seconds)
    (19/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.274919327 seconds)
    (20/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132366777 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132089177 seconds)
    (22/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.289396377 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.219925611 seconds)
    (24/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172940969 seconds)
    (25/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.23933673 seconds)
    (26/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.2004171 seconds)
    (27/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.336280413 seconds)
    (28/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.201862986 seconds)
    (29/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142877572 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.107356202 seconds)
    (31/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.203923784 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109112313 seconds)
    (33/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080423009 seconds)
    (34/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.15041796 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.154166414 seconds)
    (36/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120720154 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.120664137 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.132646192 seconds)
    (39/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.240360029 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.139825567 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.291077871 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.195047441 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105992307 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137220769 seconds)
    (45/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111764704 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.282577496 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100287835 seconds)
    (48/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.129228731 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124829516 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105154505 seconds)
    (51/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.138233622 seconds)
    (52/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.146298569 seconds)
    (53/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.178403867 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.139817533 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.101848737 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119804442 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159641521 seconds)
    (58/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193546764 seconds)
    (59/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.141018868 seconds)
    (60/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.219838972 seconds)
    (61/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.143746364 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.151672443 seconds)
    (63/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.169639557 seconds)
    (64/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.230364913 seconds)
    (65/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113984994 seconds)
    (66/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086008026 seconds)
    (67/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.224596788 seconds)
    (68/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112139606 seconds)
    (69/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082813996 seconds)
    (70/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.088300501 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.134332732 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107102939 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106913138 seconds)
    (74/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079224168 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.151935507 seconds)
    (76/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.087360104 seconds)
    (77/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.106335895 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.159768919 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10662569 seconds)
    (80/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085647367 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08740021 seconds)
    (82/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081361896 seconds)
    (83/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.171247447 seconds)
    (84/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087233783 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10546516 seconds)
    (86/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086316155 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.153053075 seconds)
    (88/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106963971 seconds)
    (89/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112441221 seconds)
    (90/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.201939482 seconds)
    (91/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.086681918 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107215844 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.136167915 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134438582 seconds)
    (95/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085039244 seconds)
    (96/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.167801496 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.201392469 seconds)
    (98/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083000216 seconds)
    (99/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13917966 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.103912467 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11351083 seconds)
    (102/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.081132398 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.12878835 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090441482 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.131279617 seconds)
    (106/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15629004 seconds)
    (107/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079918721 seconds)
    (108/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112826721 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109030388 seconds)
    (110/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.206476555 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105071613 seconds)
    (112/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175959864 seconds)
    (113/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.11194926 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.17388092 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123329302 seconds)
    (116/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.109363365 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10467897 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086519346 seconds)
    (119/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079452754 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.141938229 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08404375 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107130474 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087868461 seconds)
    (124/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.112025831 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107266436 seconds)
    (126/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.133352043 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.137646575 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0816978 seconds)
    (129/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113289032 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.088027955 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.159689128 seconds)
    (132/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083339349 seconds)
    (133/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08177411 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.114934243 seconds)
    (135/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159552971 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128356745 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128513344 seconds)
    (138/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.110194794 seconds)
    (139/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083813776 seconds)
    (140/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080349526 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116850514 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082012206 seconds)
    (143/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.162778418 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114053544 seconds)
    (145/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117884324 seconds)
    (146/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.111687755 seconds)
    (147/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.080973565 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080570295 seconds)
    (149/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.084021228 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106536027 seconds)
    (151/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.116318528 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10875 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106269531 seconds)
    (154/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.17131231 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135009029 seconds)
    (156/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080211159 seconds)
    (157/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083158232 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.130627405 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082493358 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083885137 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104182813 seconds)
    (162/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.111771402 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109102651 seconds)
    (164/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114381313 seconds)
    (165/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080359546 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.138315401 seconds)
    (167/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.0881078 seconds)
    (168/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.084674041 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126995564 seconds)
    (170/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.105420365 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107737222 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084174551 seconds)
    (173/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080774465 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.0831379 seconds)
    (175/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.14151736 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107545271 seconds)
    (177/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081950168 seconds)
    (178/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.158190526 seconds)
    (179/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116282089 seconds)
    (180/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086792217 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112966158 seconds)
    (182/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.112513085 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128831007 seconds)
    (184/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113080294 seconds)
    (185/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080246678 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.108385932 seconds)
    (187/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083347304 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083077359 seconds)
    (189/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.088112789 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.129860239 seconds)
    (191/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.081820652 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114748526 seconds)
  done (took 27.748745515 seconds)
done (took 28.678004058 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.228149164 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132744136 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114115037 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.114830746 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234900467 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121027452 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.157990481 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116712858 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123551469 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.141093924 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.105062749 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126584554 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.141295891 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.209537338 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.14393052 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106719739 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.106398759 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.151093237 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130741485 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131457533 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.238287619 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107481092 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.151445765 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106092032 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238510812 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107025384 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11337156 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.142218767 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127465957 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114182527 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.140953462 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106786059 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130869775 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.154697197 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106677398 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.115512177 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128881313 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087896065 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.117268316 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.116176649 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.15399982 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117183091 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114392514 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.132098939 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115692471 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114740412 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131313856 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.119713444 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10417149 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.14142264 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108818098 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130773999 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.139369515 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105741924 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103846075 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.132112917 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12629089 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105309733 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.152987238 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107196099 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107510187 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105422987 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.14227972 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105790154 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114201514 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.130287335 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114486671 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116613497 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.138475136 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108330034 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105239464 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.137984371 seconds)
done (took 10.340770445 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110344147 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.151913711 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.237225103 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.238729457 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.135211992 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.150979767 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119514398 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128712783 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.145079105 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125634363 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142188523 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.163890504 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.245351538 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122364656 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.122268186 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.14462455 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117884896 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114130093 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.239181661 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.157865164 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.132972661 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.122184618 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158989275 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122831601 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112049405 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.159437193 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114661294 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.14215729 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11025493 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127928053 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.157070072 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110570186 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113825652 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.153899155 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127448427 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119615066 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.147139922 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11858895 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109464452 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.135155883 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119040014 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124369347 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.135318496 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.122496783 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118124809 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150159434 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116849408 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121049701 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.136500391 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118090097 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110856331 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160546947 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122605602 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12642301 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.147323499 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123085737 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122176193 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.146873043 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112991172 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122815816 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.135956166 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109122888 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111117332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.157860374 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.114060295 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.148600867 seconds)
  done (took 10.00593766 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130769929 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139520045 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.146684671 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.122294116 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114982987 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.128740442 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.104448487 seconds)
  done (took 1.8602525 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.106423101 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247407616 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.220513806 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.247321549 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.245180614 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.260829541 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12867962 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.13112985 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142162808 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117060937 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249817023 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.277074408 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116766478 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.147649777 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.225480247 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.133073463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.2521291 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.106012568 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12133063 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.250596939 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12254709 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.166440844 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119735168 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105934755 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.243405089 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.107383341 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.296793837 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152751732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116031853 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119011088 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147358608 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187394068 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.243524335 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.148229512 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115318294 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.248931071 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.218259191 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.148849658 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.260427199 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.111454889 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.246494727 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.120717163 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122610571 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.149105261 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122073271 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.23773884 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125688903 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121288166 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.147858893 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.254232564 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.118589739 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.247596426 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118522499 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120067086 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.145017212 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122517661 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127631612 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.148453464 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.226495253 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.152033218 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248836907 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.221384005 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.249319449 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250523151 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130087402 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.249878851 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.23863956 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119435229 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14294531 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123257865 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.252648219 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120514578 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11806221 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.24054297 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12325396 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.255738184 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.252228693 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117894638 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.148309235 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.111348178 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118450731 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.134469608 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.213821385 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148528772 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119657129 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124712572 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147888231 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12117039 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111689769 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.158653728 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120491399 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.144620891 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128388728 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120991643 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150364026 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.254718633 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.119631757 seconds)
  done (took 17.416360321 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.1084569 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.109254076 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111729435 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133445253 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108288125 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107675125 seconds)
  done (took 1.682781169 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146912591 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122035703 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.156353734 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122609872 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.195013534 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.23000516 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262262534 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115582623 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.168772436 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133930649 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256593908 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.261002325 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.25864275 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125906735 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.261335778 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124494314 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.266396912 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.121377526 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.156935891 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120189665 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.12171532 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.151894012 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120109177 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24819461 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122554533 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.123140328 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143377964 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130347406 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127773247 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.145038032 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124833496 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14713023 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.115756978 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115715275 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260409348 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113663775 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14510893 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125158495 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124061724 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.150286195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.262792712 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120169414 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127837239 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.152218936 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.117657495 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113807894 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.15094212 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114964613 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.265874962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.125298904 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.153051587 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123631619 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.123219285 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.152495491 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114875388 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135967504 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.151815796 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.23600305 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.153190168 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.115358743 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.149866381 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123781409 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117733934 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.153311281 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.123860066 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124907237 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.141489668 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124746162 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119004619 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.149013472 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126629101 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122875198 seconds)
  done (took 12.055034218 seconds)
done (took 43.987714187 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.73644888 seconds)
  done (took 2.735103958 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.119447787 seconds)
  done (took 2.118639272 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.967211885 seconds)
  done (took 20.000693808 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.448071642 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.483561045 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.177048331 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152499405 seconds)
  done (took 3.263607108 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.855238115 seconds)
  done (took 1.881190558 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.349740807 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261371921 seconds)
  done (took 1.620626736 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729815783 seconds)
  done (took 1.750003646 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.566844681 seconds)
  done (took 2.57567955 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.29868747 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.252822122 seconds)
  done (took 1.576024933 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.647714074 seconds)
  done (took 1.669375009 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.445338104 seconds)
  done (took 20.471759837 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265616217 seconds)
  done (took 1.294527905 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297708187 seconds)
  done (took 1.322357238 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.788817255 seconds)
  done (took 4.816250607 seconds)
done (took 68.109147168 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121653859 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126360336 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.151364232 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124039966 seconds)
  done (took 1.538312804 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12756838 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123517352 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.151833679 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120583568 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127824593 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.147466125 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121741934 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.124735583 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120034985 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.151088805 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124147652 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120713942 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.15134069 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120802467 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.119567914 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150512683 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125134111 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122242543 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148509224 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122707659 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122564042 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150812924 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126288021 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125018391 seconds)
  done (took 4.174988807 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11818016 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.114334959 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.114876346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.137001211 seconds)
  done (took 1.513144792 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.13033089 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136033596 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.158974549 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129861398 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134019767 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158711272 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120692198 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11903971 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.147219418 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131039958 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.138776282 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160083254 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134953432 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124175261 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.160433392 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117086004 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.123050113 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159498003 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128846281 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.156926176 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123369314 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127852072 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.152925504 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.131502832 seconds)
  done (took 4.332055698 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.198412548 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.134428607 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.180755533 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.169575617 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.182697039 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119737599 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.150570786 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.155579026 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12909865 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.150051432 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.124832328 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167358859 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.155336566 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124758065 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121562584 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154495288 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133770534 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.153648272 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.170113773 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126266414 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.156855823 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.134900945 seconds)
  done (took 4.328539924 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124242359 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.113542556 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.137143819 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110701167 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.125164313 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140009684 seconds)
  done (took 1.788501101 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110879471 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106819774 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106583331 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.133138504 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110827335 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10709821 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.130699556 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.107958286 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107692239 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.106279734 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.133153744 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105842507 seconds)
  done (took 2.399150276 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210753247 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149916842 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259922437 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404706168 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191932971 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192881425 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287146936 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194016532 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210717342 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140058975 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219511849 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165831946 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18670976 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19151749 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170637264 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161548564 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19888151 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211699422 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173407869 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248183318 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161102934 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208118783 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192068128 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180635409 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144200381 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194336746 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123605326 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158121324 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1723764 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196804762 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181253707 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184493823 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144516273 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225946976 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265590035 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213552336 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276500391 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13735873 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202495133 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19355636 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265163799 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172327728 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22473924 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156980119 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130976673 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216996217 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187785643 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18786094 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.165779773 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148898246 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216939462 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183946862 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203602757 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166883025 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30630216 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163761718 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145172459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209717791 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192152925 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232206605 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210017316 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.1270256 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205668876 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223637273 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219331036 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173348419 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168908219 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154806821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168933465 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238793173 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213558133 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163762713 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.24298601 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163514689 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175708404 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199853993 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158808682 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240657946 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204626295 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121310658 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182155492 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137914981 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127734136 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220775168 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124868772 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248002155 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134241881 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.345851224 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211812792 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161132769 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193738665 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162913242 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197558703 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151136845 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131291894 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146251267 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.192184406 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161090686 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160366052 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158700962 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173046352 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12923538 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156809856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.153448838 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173011861 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.164296184 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165867931 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205413522 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13412439 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210401708 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153272974 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.193658234 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172829159 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224482707 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133271267 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163540656 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254865112 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174203365 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.166410338 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177039437 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22749684 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152542426 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167068773 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168826322 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224922562 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17414523 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202710773 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169096059 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13775958 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170746744 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176885373 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192155989 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16376778 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15780572 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167567365 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223000547 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128772566 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171641278 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184685361 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165239966 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12679991 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138108974 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166576823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145976005 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.180426573 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143170444 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185988984 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169011217 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196283407 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160655986 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165661521 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176132717 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162794623 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.172362003 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180622123 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12237132 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.207910167 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200793649 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160468317 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184932346 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.194904265 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212224036 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176098081 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159239196 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187521017 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159479412 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125032082 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194217075 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17265293 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196809513 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.190061197 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210986692 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.198651984 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.166351778 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18139625 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204551933 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.188064701 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188793001 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.147167686 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207769584 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175402306 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.153265247 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125783917 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.130459622 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168582596 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133271275 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168599368 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186513235 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197545168 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207981164 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17136369 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168508591 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19442944 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.158114553 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164507281 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206258895 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141268878 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22301079 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223379378 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182496561 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172342877 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166130416 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.150338208 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128709162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13649068 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192615331 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139850794 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168442126 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144592152 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222409473 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177889899 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180741684 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222287749 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169166443 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232520175 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123178393 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.193677267 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172002885 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200031756 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189803688 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162402513 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.166086885 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225032885 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145619229 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225676828 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19939439 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184912079 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228742485 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167957856 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161740675 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150832872 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193089347 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142840502 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194633839 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149054828 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16037936 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156206028 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139691882 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17265415 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222105309 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147917562 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212915476 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.160075033 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204419386 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128310729 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173237717 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176485935 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17817715 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107069334 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203131219 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198137116 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182847879 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159500193 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204449231 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13072846 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.347716402 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219391882 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180859023 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169358676 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141714037 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203189361 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16336955 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195280096 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189111014 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174412193 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243278179 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173266818 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.176458327 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134419239 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150351302 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183245069 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.142183059 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.184446634 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.164593298 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.174876066 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222548814 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139694431 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201933349 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180556099 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.177742568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.154079658 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141390829 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259012056 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20058709 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177149535 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.196368317 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.168463826 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215966196 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125546762 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158420786 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137155132 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218782012 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133986098 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210329969 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.167871408 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213558743 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207672151 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167006062 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173746753 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.131321805 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199686586 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153632063 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216577705 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138590685 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.168867597 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192662171 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160719226 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135665789 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192481201 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294283651 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177986143 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205919543 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108077226 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288369629 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157214971 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134873975 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193206312 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174361797 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164566901 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189658453 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206957988 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145510938 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195111261 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139333455 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210568838 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18720814 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19921377 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211460975 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150982225 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194697127 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165830025 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206670599 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148247101 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.180371741 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162190882 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2284834 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179660606 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.164179445 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172336427 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203847372 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17309036 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208644812 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169897661 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186700625 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128984447 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200134985 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139974237 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156623503 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163669022 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.198835893 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132072927 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208760514 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203408536 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133223661 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130312206 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179069403 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169237965 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173501488 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132600036 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22192841 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130800195 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215741257 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244359748 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13332979 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199400143 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149515071 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13241285 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170774351 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147476625 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161681185 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176118924 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184664139 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.161473137 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180342165 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198113765 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198477257 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162570833 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175990915 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.267465046 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129385959 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223300896 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181704101 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200440199 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183320985 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179454238 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202926974 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154510746 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200562638 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153595842 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.252767853 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169972284 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.200219968 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134336367 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176482136 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140014232 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.166309607 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15527338 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202675094 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145941266 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138455022 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.199534495 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146338571 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.181395705 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144948964 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233195581 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153836077 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221720575 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220557168 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140540123 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208077619 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209918282 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13382396 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167914667 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205645774 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147192053 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185408025 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136747544 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.170069561 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21770861 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.158480043 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165058132 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208276733 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170673683 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204573543 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136831238 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212500089 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142703753 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209606696 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129618856 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.185423107 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172831563 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167209057 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130241774 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203501936 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166615478 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.197611611 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145432153 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180772257 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223754336 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127149361 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16694505 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291520684 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192240822 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228332677 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139654822 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138807278 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180318733 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162966805 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.201720971 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201270902 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133312023 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131741596 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.178311495 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160417508 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171706857 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171993836 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213299567 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16340161 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219145375 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136866049 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286112677 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144275795 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204308201 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.119539058 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132087001 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173840307 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138373011 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17465148 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184102924 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249130859 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.196931006 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.151062221 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16940742 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129580428 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134192998 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195989832 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156299904 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20027775 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151393376 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104151425 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174222189 seconds)
  done (took 87.488108344 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175327661 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.174228808 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.1863398 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.246731571 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21303739 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.314843392 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.251974431 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265250568 seconds)
  done (took 2.949788315 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123454673 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.16462165 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145839863 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148946553 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112700783 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.494423986 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.167159378 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124367144 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.166033988 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157783727 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140406818 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.589185478 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120887224 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.150741494 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124540899 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138815268 seconds)
  done (took 4.188458289 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.481602894 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.566777637 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.3925081 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.294105742 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.275681167 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.217910297 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.820403295 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.214055194 seconds)
  done (took 13.388046878 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.178285565 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.175022946 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.463705182 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.318373463 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.187028227 seconds)
  done (took 2.454073546 seconds)
done (took 131.56164218 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128753619 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127992397 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.128716313 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158778916 seconds)
  done (took 1.664494802 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195855595 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092755278 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094880641 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122293949 seconds)
  done (took 1.63899569 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.471700928 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093810697 seconds)
  done (took 1.724115938 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.159796272 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147186177 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.171750775 seconds)
  done (took 1.622124127 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140400219 seconds)
  done (took 1.272275174 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120843204 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131647668 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.282800762 seconds)
  done (took 1.672248193 seconds)
done (took 10.734760804 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124569151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.934799057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43802709 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138446071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.717734202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431436985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.442180871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.181333799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178925102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142843852 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135737072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694181198 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.455851095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.884392913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.409893258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.914687768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699813849 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115982578 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.15007062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115803522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.420098979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.142840014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115791493 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116068317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.7248203 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423758811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113448661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.923528533 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113965064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117404601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.432481812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114322375 seconds)
  done (took 21.188858882 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117430863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173808083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150958785 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116238467 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118442582 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144715756 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125838496 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127723627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.212239432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114708624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16595789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114503894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120456797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.144221892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140779475 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113356271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147329346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117379811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123137661 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.146467539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136957771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112824965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145949764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117397528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114458468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164608671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114690314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128268672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143622351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120209396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12064849 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.145590756 seconds)
  done (took 5.443836851 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163637823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182415057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.154183278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154246169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196524819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117335784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.232366439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154416009 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.213515631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115599264 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137116263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.144472319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157161565 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114722769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.17130335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114921672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117945841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.148591557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123631305 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116079938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.167447234 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114065533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116272413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.148079708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115647314 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167665503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116459444 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126775302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.144679357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119200745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119881805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.145532115 seconds)
  done (took 5.772479346 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129159353 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131693709 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.137854489 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167602343 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.124655215 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128257076 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.160653898 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125266207 seconds)
  done (took 2.245133461 seconds)
done (took 35.790165206 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139188923 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133654466 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136317919 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.159779861 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.259417748 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122248913 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.133568464 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.121432905 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.161352251 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136774403 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113740471 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.157364044 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13590335 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.126075889 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.261996451 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.13015589 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.266156444 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.263406662 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.122704962 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.130432973 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.154746325 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234683482 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.1594529 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.123897597 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.260440862 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119696155 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.258133411 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127210377 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.126879986 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.146298316 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.230777534 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.159837413 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.124089376 seconds)
  done (took 6.571616211 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.24339497 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.156603631 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.125029784 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124245388 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.124155454 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.154309817 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248919245 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153762093 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12408043 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.122883061 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.154648177 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229574302 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.162154196 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.121412589 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.125077193 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112949692 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.285229797 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.158296991 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.116740395 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095449375 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.119586444 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.154080597 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.26133945 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.152108883 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.124464233 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122555864 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.157301946 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128998561 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.1263693 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12556873 seconds)
  done (took 5.76757974 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130408085 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137414527 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.172535813 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.193152641 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153862945 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16699435 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143510216 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137327511 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176049998 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119064582 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.132425757 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.185690028 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134436289 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127330231 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147953205 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136252204 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139165228 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.150711499 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126584458 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135579405 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.169121977 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.136165838 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139746087 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.156593177 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116222852 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124650435 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.158012741 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128452783 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124463805 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.162987859 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.119029145 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119792859 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.149570857 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.153754324 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11881476 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.162623133 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143748639 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130922797 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.162926159 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151539913 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.120423665 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.1492495 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14393577 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171761198 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150103643 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131074251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128234577 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.164685736 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11577039 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134556598 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.190059225 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11828296 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.168437254 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117513933 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.116010774 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126306944 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.148298409 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123279433 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131308374 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.149803845 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.14406755 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12439244 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159574838 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.1207674 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129185616 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.1465816 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116409212 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121540979 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143489669 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156134898 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.155362186 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115485231 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.160302381 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130951748 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127657069 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.160869388 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116479459 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128684923 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.159597105 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123416638 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129487492 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.15155885 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120292328 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.133995104 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.168728268 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.132043303 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.129046356 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.160628673 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121680053 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119239757 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164375292 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118189169 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12233224 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.159332637 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119408495 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121539703 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129957881 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.158994141 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.1167002 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142793593 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.151317242 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117366068 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142256247 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.151969219 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12348412 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127182355 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.189648997 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119051938 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129255722 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.163090212 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117674421 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125567856 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.150540015 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.118266219 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134876177 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.164131023 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126102748 seconds)
  done (took 17.551883399 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.362991374 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.34765759 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.19046488 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.436746702 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130762676 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277903345 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.346001461 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.349162866 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.118188503 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183507199 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179864115 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.316723882 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.15118067 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147312686 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.351671498 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.408133861 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.181234477 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.154946878 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185561061 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132531503 seconds)
  done (took 6.124237496 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136858761 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152418831 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170665494 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147062529 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127320367 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164553677 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119147297 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140287672 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15991623 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12847548 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.120302069 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163636391 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.132230065 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134127186 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.163309398 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149337663 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123669285 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.153718228 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.14200704 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122273398 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135699411 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145340637 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126488683 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170440284 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.137875027 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.128354504 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146874749 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122987348 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124062167 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.158578566 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122197893 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133684334 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.156236542 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107073204 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128645756 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162779293 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124517083 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120487488 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122081242 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150772822 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13279117 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128858556 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.158608853 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101714513 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13647579 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112207557 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.162659989 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.132043312 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108625785 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.168199042 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13174401 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131451993 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.156483917 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141409412 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123904628 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.166138241 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128793442 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.13405982 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.152774395 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116410615 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.116503286 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119889208 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.156665 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.132334742 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129024492 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168222886 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.134730118 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116656595 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.15396068 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122178421 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120114787 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.163127675 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139378821 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125654958 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.156057506 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129691789 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124600656 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.126088946 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127276321 seconds)
  done (took 12.04735952 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143762787 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128236649 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.165012186 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154276388 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131303136 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.153420492 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128988429 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.138621891 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131492039 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166697455 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.135763214 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130129905 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171068868 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129199697 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127507455 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165986449 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13114657 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.185638663 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137287955 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144513458 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.164434336 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123090135 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129767218 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.159993425 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147289849 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.129783017 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175804493 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131579646 seconds)
  done (took 5.246093627 seconds)
done (took 54.458584626 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.310546883 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.515080457 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.279189286 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.27782661 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.299333187 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.309376029 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.277588703 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.278039275 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.778562741 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.24721704 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.281697983 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.278376631 seconds)
done (took 29.312220604 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.423725363 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.421279453 seconds)
    (2/2) benchmarking "String"...
    done (took 1.5693478 seconds)
  done (took 4.169273245 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.268759383 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.268094322 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.522482013 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.268038425 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.269384759 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.269221187 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.285972443 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.289182389 seconds)
  done (took 16.341233954 seconds)
done (took 26.377978542 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.280796524 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.549388983 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.53210705 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.257149909 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.272436235 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.270913514 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.2760052 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.334981037 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.285706373 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.254253887 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.736219974 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.56746775 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.271842477 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.689988577 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.260056776 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.285210607 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.288813992 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.600464672 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.275669509 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.261661686 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.265172351 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.259290521 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.294094594 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.282388629 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.300579648 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.286325174 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.266818124 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.290808453 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.563569424 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.277485031 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.27961355 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.293009495 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.268528754 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.278317858 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.287408444 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.277784953 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.551840148 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.285676889 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.258350404 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.30979244 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.556626358 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.294478244 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.272395617 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.271233218 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.26981569 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.276680162 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.276763225 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.39122265 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.310310567 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.284026857 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.332431051 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.6784531 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.277552589 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.272728137 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.272908238 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.595903773 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.306011858 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.382477083 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.284272015 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.321560201 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.272141271 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.282890874 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.317602809 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.276695693 seconds)
  done (took 148.977738038 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.271091483 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.272854315 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.272175194 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.273694637 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.276908424 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.27407277 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.273704141 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.273669699 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.272598506 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.2953316 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.278151305 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.275773337 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.278568742 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.30156986 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.283036005 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.296920688 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.279814187 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.275187339 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.301784736 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.273414134 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.280604305 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.277115009 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.280739859 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.274169002 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.287829184 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.36834238 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.308820841 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.297681198 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.2898385 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.275419418 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.280325462 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.282916249 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.96474611 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.148197616 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.274342963 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.319746847 seconds)
  done (took 82.985463404 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.276186579 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.274802818 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276475372 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.275479468 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.31110365 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.27647404 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.906066473 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.918347044 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.34036092 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.565086173 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.881756318 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.605696191 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.280734346 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370771261 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.290236988 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.279156552 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.372017593 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.302100018 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.275820322 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276621947 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892537128 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.289263633 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.279433554 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.465427533 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.293512646 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31200054 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.683746975 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.277582649 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310807304 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.622224367 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332056914 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.277011688 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.694204722 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.642317397 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396443117 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.278218566 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314317869 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.27676357 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.567741604 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27920669 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.278838859 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281243432 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.009213304 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.282648295 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.912218501 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.282775608 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.334308718 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.283157991 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278974034 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.31980195 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.113188045 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.282700845 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.278379862 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.281623321 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278678483 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.279691904 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.315244796 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.301891747 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.241446623 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.284746757 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.281430803 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313943764 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.281244599 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.279432921 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.279036292 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.862478616 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.337549336 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.38928699 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.522520456 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.909252539 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.28378204 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.375712715 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.408604315 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.279049383 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.280982045 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.280644956 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.279658486 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.395024127 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.280780449 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.279811358 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.008469922 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.465741925 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.300218203 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.280294247 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.893096594 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.386359032 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.281083019 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.682892211 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.285805286 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280389818 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.107075526 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383574949 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.281598479 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.280556743 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.281678516 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.01170225 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.923870996 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.604467573 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.287071561 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.843344773 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.286233967 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.186288593 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.893875703 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.997902171 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.288087164 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.396970029 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.468989171 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.300398486 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.282696626 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.890263737 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.287374771 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.340836075 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.283011307 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.684917494 seconds)
  done (took 387.999121551 seconds)
done (took 621.136486193 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.14992139 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.098487268 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.253413395 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.112725611 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.092518833 seconds)
  done (took 11.887187573 seconds)
done (took 13.070238087 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.488095263 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488931017 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.351638549 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494216175 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.318542716 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509517249 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.474053063 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.302051727 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400626794 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.373079019 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.39914326 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.342400071 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.318234173 seconds)
  done (took 19.442397757 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.576368532 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294640131 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.351411218 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565940838 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.331179349 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.580151965 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.614352945 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.296582701 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443821496 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307943203 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.307580073 seconds)
  done (took 18.852748269 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.582020294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.295543879 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.372792651 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.570827902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.330369906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.589641981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.624156646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.296122572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453002525 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309392579 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.309522016 seconds)
  done (took 18.916085206 seconds)
done (took 58.39511429 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.327311917 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.392745592 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.325354344 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.305726639 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.302846748 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.302864157 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.305859604 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.305445648 seconds)
  done (took 11.751934049 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.302756429 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.302755707 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.302868445 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.302392012 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.304128677 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.303026552 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.302800065 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.303453171 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.302840205 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.304182203 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.303236512 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.304853853 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.304217001 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.303774149 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.303824419 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.304105347 seconds)
  done (took 22.039273328 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.307301837 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.303753422 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.30366139 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.304516881 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.302907099 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.30312848 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.302641333 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.303279588 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.305528097 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.306494726 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.304700496 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.306972617 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.30666588 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.303874355 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.305167599 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.306639223 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.30371177 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.304501256 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.31053453 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.303710907 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.305869404 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.312233351 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.305367118 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.306513804 seconds)
  done (took 32.515756288 seconds)
done (took 67.493110431 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.289473421 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.292341774 seconds)
  done (took 5.769002166 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.362689436 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.36326422 seconds)
  done (took 3.915573617 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.305221751 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.306480151 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.306725545 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.306176246 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.304217104 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.306474246 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.307375111 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.306116013 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.306150129 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.305491037 seconds)
  done (took 14.246794633 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.305350947 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.306071897 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.306019306 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.30569044 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.306008048 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.307123905 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.307289167 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.305932513 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.308329798 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.306605722 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.30703405 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.309026971 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.304866029 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.30627631 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.306337627 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.306457376 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.30659787 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.307134664 seconds)
  done (took 24.706009512 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.321191674 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.326844923 seconds)
  done (took 3.836070943 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.434391451 seconds)
    (2/7) benchmarking "second"...
    done (took 1.347755163 seconds)
    (3/7) benchmarking "month"...
    done (took 1.410717382 seconds)
    (4/7) benchmarking "year"...
    done (took 1.404436779 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.348920561 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.328547952 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.350379626 seconds)
  done (took 10.813451696 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.29494254 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.607056101 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.791722486 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.452886376 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.285850586 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.311588279 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.286496023 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.315143435 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.314405116 seconds)
  done (took 14.84968805 seconds)
done (took 79.325569478 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.292971635 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.328640393 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.310184882 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.333307987 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.646215905 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.350820895 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.298871923 seconds)
done (took 16.753539787 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.28667992 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.27802672 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.276100904 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.323532651 seconds)
  done (took 10.353431391 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.292664808 seconds)
    (2/2) benchmarking "read"...
    done (took 1.623653691 seconds)
  done (took 5.107553076 seconds)
done (took 16.653210136 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308675487 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.310784057 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.310263195 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.310620749 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.309333723 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.309213449 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.308787237 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.311387363 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.309223415 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.311867877 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.311328408 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.310987603 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.310725297 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310138914 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311079906 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309195852 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308779069 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.308797402 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.310272876 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311328756 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311195401 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31134373 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.311128371 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.311516639 seconds)
  done (took 32.639066878 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.31132829 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.309805207 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.311709751 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.311486034 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.310580463 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.310848308 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.312087416 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.312105927 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.310586265 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.31175598 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310450009 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.311659033 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.310820843 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.311251853 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310873741 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.310891885 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.312567441 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311964065 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31350869 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.312945238 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.313348014 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311309076 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.312273829 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312121674 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.311057295 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311466719 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.312025913 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.312496406 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312019013 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.31171284 seconds)
  done (took 40.540703647 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.317695214 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.320337398 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.311117892 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.312277207 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.312043021 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.312472317 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.313134305 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.311850441 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.313247949 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.312328363 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.313332955 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.314760632 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.312743926 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.313033289 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.312136993 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.314651262 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.314916747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.313125423 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.312374382 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.314683642 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.31464104 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.313109593 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.312393991 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.313986413 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.313248236 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.31401336 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.316131919 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.312778469 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.313936826 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.314332098 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.3133322 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.315591475 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.313886696 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.31423617 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.313968242 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.313331218 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.318078352 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.321835437 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.316277886 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.315749131 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.315051541 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.31460395 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.315536058 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.315871013 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.315509137 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.314124874 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.31411906 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.313116935 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.31657775 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.315020439 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.315367784 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.31619995 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.314872556 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.315685182 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.313830273 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.315644487 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.317169681 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.316378256 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.316676383 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.3160501 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.316225653 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.315391209 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.316649761 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.315414506 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.315977368 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.316520496 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.316600596 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.317006631 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.316919614 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.317324671 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.317086142 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.318054874 seconds)
  done (took 95.869145254 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.315428565 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316369843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.316234439 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319285297 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31581498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.317856488 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.31812389 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317755792 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317428038 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.318518997 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31717536 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.318672896 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317825833 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.318504904 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316756964 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.317764617 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.316839636 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318223493 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.317995459 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318664573 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3171336 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.318072676 seconds)
  done (took 30.184211825 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318839123 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.320649452 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.319469309 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319405986 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.320246701 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.319592961 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31891384 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.319567341 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319141743 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317316449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318717073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321133962 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321247151 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320403007 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318145339 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.320179258 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318794382 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.324188531 seconds)
  done (took 24.954348973 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.320303355 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.319453377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.320965121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319790953 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.319658911 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.320223484 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320982424 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.319373409 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.321647072 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.318488504 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.319081308 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319458206 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.320438317 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319804067 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321797162 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.319043792 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.320140773 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319166869 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320616363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.320543397 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.323633859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321458163 seconds)
  done (took 30.244885683 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321459266 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.32176222 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.320354301 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.321999007 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.321031903 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.320666861 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.321280055 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.321153242 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.322202259 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.321556943 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323106194 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.322396643 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.322620048 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321800075 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.32181828 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321666662 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.321818959 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.321788023 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322648154 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.322455145 seconds)
  done (took 27.636510004 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.323397308 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322957856 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32243179 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32158094 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321279911 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.32308147 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322536848 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.32207783 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.324265848 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.323029162 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.322100223 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.322702185 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323218858 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.322939813 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.323650345 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322859014 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.324091573 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.323283051 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.324265728 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325048459 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.323712238 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322808936 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.323910391 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.323761537 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.324672787 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.324316562 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32544723 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.323459139 seconds)
  done (took 38.254710891 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325371686 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32441718 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.326357961 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.323245863 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.323902512 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.325271677 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.324135378 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.325149569 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.326361647 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.32453335 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.324296538 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.324783756 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.325143433 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.325521844 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.324757513 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.32572854 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326090884 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.325151301 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326150984 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324162273 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.324737442 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327719083 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.326724722 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.324869247 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325769518 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.325267839 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326098349 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.325791502 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.326223794 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.324888986 seconds)
  done (took 40.962367238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.345068707 seconds)
    (2/2) benchmarking "in"...
    done (took 1.345479281 seconds)
  done (took 3.894883242 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.326968661 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326682233 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.327948997 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.326059726 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.326661636 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.327714367 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.326300627 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327119298 seconds)
  done (took 11.820698884 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.319753111 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.329873575 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.328627706 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.325931895 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.327754068 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.320114308 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328941267 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.332644844 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.320614391 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.323618665 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.327250332 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.327091209 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.321836228 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.321013493 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.321172361 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.323236229 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.329937654 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.328390572 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.327943479 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.328990672 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329246345 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.322346519 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.325827688 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.331341559 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.322267351 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.331134731 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.328976884 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.331700627 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322186178 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.32822431 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.324278491 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.331506681 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.330493731 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.331505487 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.329801137 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.331408662 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331662413 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.329742835 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.33198413 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.335476181 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.330788254 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.329874308 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.324647563 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.328009655 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327741803 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.33395572 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.330456851 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.330287015 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.323635731 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.327854226 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.338640676 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322956322 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.333799879 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.328334775 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.329555265 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335717055 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.338730207 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.326409277 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.332131449 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.336587138 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.343054791 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.341616972 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331621964 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.336253366 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335104525 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.348425266 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338150333 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.340223026 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.333625128 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.333516884 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.333962693 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345960158 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.344465269 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.338511661 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.332992708 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.333932687 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32554434 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338047566 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.334909686 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.33837027 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.337693789 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.3352692 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.333849057 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.347441379 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.328535084 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.337329011 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.335648678 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.334180108 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.326521531 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338940504 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.341619265 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.335748717 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.326506517 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.330094868 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.331088603 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.338917714 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.326177154 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330069932 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.33746936 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.33433275 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.334935169 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330535384 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.337318785 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341353001 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335687486 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.335327011 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.34291825 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329311507 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.34040776 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.344009253 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.335061618 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.329224834 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.3327368 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.338853025 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32960187 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337561184 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.342015205 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.33094692 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.341699648 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.336775855 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337842883 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.355728123 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.341170563 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.336804724 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.330764546 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.348729447 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.337303449 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.333609406 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.343570845 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.336120104 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.337291617 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.331856151 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.342949038 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.331176599 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341145347 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330574413 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.340016033 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.337706739 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.337805195 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.333885072 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.338529151 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.334081582 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.336982262 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.341022733 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.34501941 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.334137465 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.345173873 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.337414528 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.336599516 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.339210683 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.342949015 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.33850339 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.332481858 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.341247204 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.330571389 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.342612177 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.332671268 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.342847008 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338775789 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.33826345 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339564957 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.330306109 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335753995 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.342272783 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.337285296 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.339267354 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.342468866 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.339732161 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.339486915 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.331472136 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.34295231 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.330040106 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.336239832 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.346820791 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.34040877 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.337847309 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.338174336 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.346739215 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340247425 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33957816 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.333771837 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.342382399 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.345562867 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.342813044 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.349600346 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341275718 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.341432395 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.334886515 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.336546961 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343186322 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.335840465 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.349957742 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.347712474 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35575762 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.335843011 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.343551668 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.332859562 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.34626862 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.340321861 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.349257798 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.341035289 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.34140826 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.334474248 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34566149 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.335888275 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.344943651 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.334325872 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.347073554 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.341632817 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.343135367 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.34243109 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.335851156 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.339579368 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.344851808 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343623744 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.34408507 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.335928296 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.345112555 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.33394512 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.338884896 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.346718895 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.343513725 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.345505404 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.351198858 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.341001231 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348391289 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.344596735 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.338475102 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.346441858 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.340401037 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.342546947 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348944783 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.345804158 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.338854729 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351552932 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.345889437 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.337517558 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.345326035 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.352460392 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.343116938 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.338607147 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.351309365 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.344001967 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.344467993 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.343492535 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.337208184 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.348781119 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.347853751 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.354890322 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.339008331 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.347741278 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.339667026 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.349244371 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.341697871 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.346324215 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.345625688 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348572099 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354184506 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.345534246 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.338266304 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.348881032 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.345427022 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.345106173 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.339271415 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.352748734 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.347637419 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.347759769 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.345004915 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.343146879 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.349538292 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.338150608 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.348663282 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.339351908 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.357364116 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.367924752 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349048201 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.351340648 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.350657031 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.349074163 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.351436883 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.344200599 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.341293794 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344208043 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.342810834 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.341600993 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.352361725 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341568593 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.351455922 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346165547 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.350700718 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.351621399 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.349668988 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.342571542 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.351167549 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.34832745 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.34886359 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.339295869 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.351164 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.342760501 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350331871 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.34979917 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.343768451 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.357534102 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353466103 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.347171714 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.345216466 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.34459334 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.343519471 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.346416386 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.355783128 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.344990245 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.3570262 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.344276604 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.350707444 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.344894518 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354452531 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.360390808 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.344004831 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.357373105 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.349418359 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.341124168 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.343109733 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.351904241 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354553319 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.361916359 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.342111003 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.353399728 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350749668 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.35100261 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.348900475 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.350801655 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.352204753 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.350342052 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355593098 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.355994076 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.347435508 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353244291 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.360855664 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.350106187 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.349654617 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.341676241 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351842283 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.36137251 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.346061993 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.349201781 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.346887988 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.352163441 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.352320123 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.352282437 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.352955364 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.352069588 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35565873 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.358213599 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.35619369 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.352696272 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.357723593 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364892153 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358466526 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.364804938 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.348961277 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.358611157 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.352233769 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.345988827 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.348573666 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.347431703 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.357519019 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.345148776 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.359063769 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.353702371 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.348633143 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.354637174 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.359685221 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.344632005 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356872761 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375713326 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.345902559 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357823287 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.352922889 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.346264286 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.357836971 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.354831325 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.345160303 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.350812371 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354639319 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.362380847 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.347686085 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.357049298 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347970646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.358600409 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.355760538 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.354268849 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.35419841 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.356375697 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.346859684 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.358023658 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356487566 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.365263098 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.349292314 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.353024939 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.349583214 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.36342274 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.366788954 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.349997126 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360035792 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.358115493 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.347639016 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.353244193 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.361148781 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.348590502 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35886208 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.34651979 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.354140003 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.353993605 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.356859838 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.360052515 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.360278038 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.346745918 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.350066464 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358289375 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.357391985 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356735182 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.353530395 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.364229883 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.348936441 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.349197787 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.358871963 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.351618003 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.362644644 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350977565 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.356468554 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.352926427 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.360931331 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.357183665 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357484183 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.34908715 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.351090991 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.364332167 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364988563 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.358675179 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.356838567 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.360539221 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.351704762 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356088153 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.358367556 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.352904251 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.354785326 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.362441106 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.353139865 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.353960966 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.354649412 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362266386 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.362206694 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.363464733 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.352687375 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.367354156 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.369700921 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367658611 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.351537094 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.356967972 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.354990504 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.361259975 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.359411192 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.352599044 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367220097 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.365520381 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363469232 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359131684 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.360984897 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.352725479 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365230408 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.361298046 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.355958508 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.366979064 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.357068454 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.368038981 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.359675848 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.359370043 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.352472581 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.352919287 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.357121406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.359039029 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.363167604 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.3595684 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.365052053 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.357709399 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366995965 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360416062 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.361420826 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.360354269 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.354214645 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.363495029 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.352712768 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.364155467 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.364900744 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.354240413 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.365311989 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362177614 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354949768 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.362916627 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.370723869 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.361073179 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.354275985 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.359369224 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.366681434 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373030345 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.362388285 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.356398982 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.35982968 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.367313728 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.36336853 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.361978369 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.356311843 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.375384464 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.377037323 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356265229 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.359884689 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368158336 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.374672615 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.363097722 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.366011439 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.358926135 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.36342805 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.371210232 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.364495305 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367443578 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369743449 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.35918888 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.367871642 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.357839693 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.363016893 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.36525673 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375882614 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.364333893 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.360696856 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.378732023 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376248461 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36708857 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.389971848 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.372737975 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.364507008 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.369875837 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356544481 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.366604896 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.359970713 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.372088439 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.364745947 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36530329 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.366568392 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.357454862 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366881045 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.373186488 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.375695818 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.366396113 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.357135587 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.359952652 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.367961623 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.366204038 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.367656065 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.365794117 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.366767828 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.36483695 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.362137927 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.380087237 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.386537825 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.373458398 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.365749929 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.367026575 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.367700194 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.373684852 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.367660412 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.375491284 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.367593134 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.367964688 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.364863469 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376129562 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.368334741 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.361868131 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.362721381 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364483075 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.370853061 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.376496686 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392296562 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.371518087 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.372474368 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.369778687 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.368827937 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362454287 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.371308733 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368288406 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.363687148 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.364015537 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.371314752 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.36887582 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.369665393 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.362460711 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.37685002 seconds)
  done (took 805.121245686 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.36927453 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.369206925 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.369621505 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.369152778 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.369482452 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.36871653 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369010684 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.368421661 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.369231069 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.369571607 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.369002869 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368426347 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.369229508 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.36859563 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368913768 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.369271082 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369524937 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.369830626 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.369666387 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369006968 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.37052195 seconds)
  done (took 29.994738249 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.369046981 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.37163212 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.369538755 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.370480661 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.370395394 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.370089033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.370676352 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371029945 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.371683815 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.369564571 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.37112382 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371647795 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.371123551 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.371720317 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.370987309 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.369621896 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.371433637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.37019124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.372127022 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.371661156 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.372805429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.370616688 seconds)
  done (took 31.400619913 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.371374229 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.371089692 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.36378991 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.374276785 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.372514833 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.371456714 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.372623168 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.372052111 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.372906317 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.364134197 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.363725997 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.366151316 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.369599872 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.379150136 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.368500903 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.378559324 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.373821533 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.373153649 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.374161301 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.372100051 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.376611411 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.385002696 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.375327306 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.364751074 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.375404183 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.372958881 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.37311567 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.373950944 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.36541011 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.377697099 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.373222598 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.367424112 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.376027708 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.37761498 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.3677872 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.377834735 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.37407914 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.374331257 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.373821675 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.376223688 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.395826247 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.375490915 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.378733656 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.387643679 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.374110332 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.368589869 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.382669526 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.375645514 seconds)
  done (took 67.186023514 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.373876646 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.375298233 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.375731929 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.375451217 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.375355592 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.375941661 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.376127078 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.374011391 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.376030556 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.375108786 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.376152277 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.374627851 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.375134995 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.374837276 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.376264935 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.375163626 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.375878026 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.376843243 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.375635709 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.376518368 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.376144166 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.377319996 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.376605738 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.377335948 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.376237814 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.377527589 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.376510022 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.37711119 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.376528164 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.375897091 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.375854889 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.375422511 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.377953194 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.376640151 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.377949075 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.37726197 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.377544162 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.375911231 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.377729471 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.376881961 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.378040912 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.377051058 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.377202416 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.377885429 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.378438739 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.378835726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377493977 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.378624031 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.378950583 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.37930153 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.378844718 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.379070198 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.378201397 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.37753286 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.378597794 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.378963214 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.378017284 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.379203399 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.379681255 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.379089097 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.378511146 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.380104994 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.379861564 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.378857785 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.379390745 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.379766203 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.38045472 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.379554646 seconds)
  done (took 94.899697169 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380165689 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.380594379 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380008605 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380823258 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379968339 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.381480628 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.380744514 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.380706451 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.380721213 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.380542072 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.379913455 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.38084557 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.379922276 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.380761901 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.380482019 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.381853923 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.380889974 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.381001059 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.380299153 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.381086708 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.380997764 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.381114087 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.381413025 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.381758209 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.382391795 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.380837318 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.382230233 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.3837224 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380522126 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.383041676 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382328686 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.382498462 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.383647275 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.381212448 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.381913315 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.380983118 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.381795009 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382440354 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.38267958 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.382160734 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.383280642 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.382571527 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.385292758 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.382317399 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.382580906 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.382594262 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.383110637 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.383916471 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.381914854 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.384382553 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.382903174 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.383255782 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383791135 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.383992148 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.382987358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.383969929 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383656669 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.383699125 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38425536 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.382939928 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.38338765 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.383161516 seconds)
  done (took 86.938335361 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.383623193 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.384695158 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.383511925 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.383732185 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.384285582 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.383133201 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.383901709 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.384785371 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.385726659 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.384098705 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384923219 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.384673212 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386609467 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386063733 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.38433165 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.386036659 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384975288 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.384266295 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.384544445 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.385463513 seconds)
  done (took 28.948196221 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.383971658 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.384894987 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.385152499 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.385880625 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.385972862 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.385664284 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.385079332 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385554274 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386236861 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386348916 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.386791636 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.385974582 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.386108567 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.386885412 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.386438152 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.386097128 seconds)
  done (took 23.426845002 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.385624874 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.385975544 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.386575342 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.385894881 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.38676068 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.388926379 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.38632586 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.387771247 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.38490691 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.387026709 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.387655365 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.386412896 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.386761349 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.387122113 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.387151702 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.387266772 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.387057771 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.387343362 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.388571241 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.385648106 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.386813879 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.387109039 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.387043233 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.387295729 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.386478285 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.388636327 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.388259054 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.387073868 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.389095475 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.387877985 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.388628226 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.388934998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.387775286 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.389496516 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.38947924 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.387335357 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.389290152 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.38913169 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.387246273 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.387827988 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.388361864 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.388508747 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.388918403 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.388773932 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.388794652 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.388967254 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.387960209 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.389215742 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.390034435 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.389360239 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.389567114 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.392231619 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.3884174 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.38845809 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.389934885 seconds)
  done (took 77.590679357 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.390458025 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.38869418 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.38892507 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.38944083 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.390604514 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.389086628 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.389811508 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.39147345 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.390639322 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.389900752 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.389946303 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.391360352 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.390378801 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.389546976 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.390571958 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.390313409 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.389635702 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.389968082 seconds)
  done (took 26.279244798 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.389338985 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.391695509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.390957487 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.390131922 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.39098978 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.392187539 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.390488074 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.391162633 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390889507 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.391758816 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389966296 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.391142633 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391057593 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.391143763 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.392233555 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391025192 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.391112014 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.392252927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.392124961 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.392317248 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.393965352 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.391942641 seconds)
  done (took 31.869348209 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.381342371 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.382256311 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.381394924 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.400884497 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.404894165 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.382853455 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.384700413 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.383265932 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.403872604 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.424885888 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.420852258 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.403328336 seconds)
  done (took 18.015383302 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393766853 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392568561 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394336899 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392998885 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393510556 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394531396 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393492519 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394060749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39340323 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393890869 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394296867 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393002864 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394483625 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394477285 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39487083 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394341581 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393213517 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395063271 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394991697 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393551607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394563129 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395338227 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395845052 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395457312 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394715666 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394286455 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396115466 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395153766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395822627 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393872393 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396576981 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395994972 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395707777 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394780231 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3963414 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396848826 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395673383 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395981585 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396780246 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396258488 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.396532334 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39638616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397031756 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39817219 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395217653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396428382 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396257664 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39616158 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398170435 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396773158 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396184689 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396379717 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396115004 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396363555 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397537727 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398223331 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398477461 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397526253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399117368 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398921976 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399226338 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396890705 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396889676 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398385982 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395508598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397759745 seconds)
  done (took 93.380302517 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397634116 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397162841 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398894878 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39862418 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397514114 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397250165 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398666418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398815607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397288752 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397985467 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397805926 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40010239 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399027545 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398398306 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398087935 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397426436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399834263 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397343179 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398999616 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398780063 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399626158 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39922502 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398637071 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399202561 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399857594 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400135513 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398669972 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400037157 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400237676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39905319 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401344095 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399995793 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400832101 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.399302786 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40045804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399424043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399516422 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400868968 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399399821 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400150638 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401670418 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40041438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400124397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400459569 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402361834 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399138293 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399555489 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39991122 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401872213 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402355727 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401747326 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402310952 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402127177 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40188219 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401641109 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400863253 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401633734 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403204596 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400350038 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401632402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402652319 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403257677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40292878 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403059823 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40223355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402897704 seconds)
  done (took 93.671724052 seconds)
done (took 1886.917887807 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.559339739 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.513410739 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.392042109 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.466701541 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.392377652 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.414288139 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.416636768 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.391976251 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.391303082 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.392559041 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.392692873 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.604975356 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.436123475 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.392963193 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.392527069 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.492199728 seconds)
  done (took 28.3110274 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.423688478 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.402416662 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.535052599 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.402275176 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.421795883 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.616784142 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.466613671 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.400348122 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.600709084 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.420901164 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.400473172 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.438450685 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.398912745 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.400697898 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.419608847 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.617050543 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.693071364 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.404730863 seconds)
  done (took 30.733059783 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.93384855 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.412675499 seconds)
  done (took 5.616696714 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.42117628 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.398838467 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.399796263 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.397248577 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.391491895 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.390709519 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.397147808 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.399079773 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.40438477 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.547978905 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.401493278 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.415783956 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.399468237 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.399181389 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.408537486 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.4507334 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.565025337 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.409592594 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.408380993 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.406913682 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.398079877 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.503518581 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.447057806 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.408863255 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.550507562 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.404311374 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.408673897 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.406961815 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.521932747 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.411964588 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.400784206 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.400305007 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.401520925 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.408148184 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.977347816 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.399802062 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.428049256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.408061626 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.407859429 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.545723365 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.40262365 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.407823829 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.392934068 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.966054138 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.521468631 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.539418794 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.406396724 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.402610955 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.401342957 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.472006991 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.401925454 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.403720673 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.465831945 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.24571365 seconds)
  done (took 89.362918694 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.450371348 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.395084283 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583495236 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.417032471 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.394658809 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.395038812 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.415887693 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.747011811 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.40098737 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.396197576 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.751489016 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.096081661 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.402403849 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.461182067 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.437088112 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.453989456 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.402046932 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.412167864 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.398927023 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.401771365 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.010228869 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413471424 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.397032882 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.494527234 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.440419736 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008117171 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.397116201 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.397715792 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.421001784 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.396826288 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.060501955 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.40260232 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.449372065 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.397100182 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.713722876 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.877329033 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.838252315 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.404096625 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.423569524 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.400337466 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.437491651 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025444648 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.853763771 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.402821702 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.404554907 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.025806953 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.403359173 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.410464439 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.40035715 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.675536776 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.398025317 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.400076824 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.398249429 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.398206299 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.396871547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.456179349 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.455696775 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030693841 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40506035 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.397954891 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.443620215 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.398142068 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.40786023 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.405962768 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.401828266 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.85810354 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.63937305 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.407032318 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.854164506 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.05602048 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.405627695 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128986259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.404119571 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.427053114 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.448007725 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40080028 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.418308226 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018674586 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.435598494 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.400101642 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836244945 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.407329964 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.742124132 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.422090449 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.402027085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.030389417 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.401377896 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.446988389 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.401627131 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.400946961 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.42516695 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.405711408 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.722533193 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.452733839 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.401861512 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.401471045 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.415362955 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.401362691 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.402761288 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.400137487 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125445913 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.415034854 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.401908396 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422912454 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401365824 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.402868177 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.403226522 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.40178266 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.693294529 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.402487957 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.409701302 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.400795412 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.40310431 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.405929019 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.503470556 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.413516328 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.786646158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.408351915 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419295041 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.405777775 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.402966818 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439670109 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401852827 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.423079966 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.406196151 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.732510385 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.424329492 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.404042378 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404224251 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404468637 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404336663 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404342069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.457288084 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.404995504 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.279000726 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.418930502 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.425335673 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.403401996 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.417311727 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40393489 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.411244855 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.403621976 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724871402 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.725057296 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.629858575 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.407528561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.404120302 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.300540486 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.443353708 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593092502 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42441561 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.405153921 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.716706607 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.633400407 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.40746932 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.405252881 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.403672119 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.693401725 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.404885624 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748191602 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.091219686 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.409917009 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.414192553 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.279752471 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.259989372 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.411305299 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.406789678 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.742960721 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.428256616 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.406750289 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.405755903 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.407260103 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.40633165 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.407514203 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.408010993 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.407712035 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.405852887 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.698239794 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.606129023 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.426554923 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.409177649 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014233508 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430914391 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40667365 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.408299697 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.409368236 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.40659951 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.473062007 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.40719861 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.426784763 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.409652891 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.418580728 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.057859645 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.424012416 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.411940496 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.607716391 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.234586076 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.41382358 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.407907897 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.407667007 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.467330618 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.054575881 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.43703123 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.798232266 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.415311202 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.452465208 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.408202565 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.450811844 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043431078 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.420623309 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.407610932 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.227826826 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.412282104 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.89306849 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.409608133 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.407722827 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.159578473 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.415201131 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.413311855 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.412190295 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.409343171 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.731608395 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.409831731 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.416247096 seconds)
  done (took 517.96108926 seconds)
done (took 673.256221074 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.408683834 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.414192795 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.415030559 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.414358249 seconds)
  done (took 10.940532226 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.427884406 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.415556722 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.42557134 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.416807961 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.426164256 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.416524559 seconds)
  done (took 9.817789388 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.410256584 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.414364346 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.415960809 seconds)
  done (took 8.5287326 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.656851756 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.440435876 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.846852422 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.415976691 seconds)
  done (took 9.649245248 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.427916071 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.428035518 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.427124253 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.426383668 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.428012813 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.429873427 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.429265809 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.429303661 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.430351791 seconds)
  done (took 14.14291402 seconds)
done (took 54.369983138 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.626260022 seconds)
    (2/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.395675708 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.749517296 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.764633017 seconds)
    (5/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.490109242 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.416624042 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.491146245 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.446857701 seconds)
    (9/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.389912175 seconds)
    (10/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.405854814 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.814500806 seconds)
    (12/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.396460809 seconds)
    (13/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.836584082 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.527204256 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.412825735 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.69596392 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.494438849 seconds)
    (18/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.6521326 seconds)
    (19/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.408839432 seconds)
    (20/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.504439498 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.51698336 seconds)
    (22/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.390828508 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.700429767 seconds)
    (24/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.432696704 seconds)
    (25/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.496010044 seconds)
    (26/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.40016457 seconds)
    (27/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.596741357 seconds)
    (28/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.58442253 seconds)
    (29/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.521650815 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.414944255 seconds)
    (31/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.648496745 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.544314186 seconds)
    (33/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.392253161 seconds)
    (34/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.65897093 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.505879824 seconds)
    (36/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.412903568 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.63107975 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.015857052 seconds)
    (39/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.6589976 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.491197353 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.440682575 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.556214918 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.525543086 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.572190572 seconds)
    (45/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.688669528 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.69076852 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.540896593 seconds)
    (48/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.485621668 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.542229638 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.422197724 seconds)
    (51/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.457335057 seconds)
    (52/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.537448693 seconds)
    (53/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.393336437 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.483583698 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.513702035 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.590502005 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.653241976 seconds)
    (58/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.619991518 seconds)
    (59/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.511270921 seconds)
    (60/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.565199058 seconds)
    (61/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.654586581 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.442826731 seconds)
    (63/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.399828313 seconds)
    (64/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.78084835 seconds)
    (65/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.45609047 seconds)
    (66/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.411563143 seconds)
    (67/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.400233409 seconds)
    (68/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.470347531 seconds)
    (69/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.582589194 seconds)
    (70/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.395374009 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.538508402 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.548581928 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.443706123 seconds)
    (74/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.451638251 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.508270035 seconds)
    (76/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.583011002 seconds)
    (77/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.437335574 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.764157122 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.589658971 seconds)
    (80/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.660884217 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.586032948 seconds)
    (82/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.396282114 seconds)
    (83/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.448277141 seconds)
    (84/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.426691159 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.593946336 seconds)
    (86/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.543191298 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.507152755 seconds)
    (88/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.48533459 seconds)
    (89/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.456768049 seconds)
    (90/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.420687924 seconds)
    (91/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.818230731 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.43777689 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.551537235 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.513230187 seconds)
    (95/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.543547455 seconds)
    (96/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.54205065 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.403620468 seconds)
    (98/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.402144171 seconds)
    (99/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.474737131 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.55444733 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.458099459 seconds)
    (102/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.527949561 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.638322782 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.403586975 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.499285105 seconds)
    (106/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.744310041 seconds)
    (107/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.517262081 seconds)
    (108/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.459614193 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.509337371 seconds)
    (110/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.411527132 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.517038418 seconds)
    (112/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.620135338 seconds)
    (113/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.584165262 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.400001036 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.700551276 seconds)
    (116/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.64522521 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.549647919 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.838846191 seconds)
    (119/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.402756853 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.549552678 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.617568313 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.553452339 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.404227069 seconds)
    (124/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.409286637 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.715087306 seconds)
    (126/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.521441006 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.461367049 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.415378976 seconds)
    (129/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.456293035 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.434813825 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.700504199 seconds)
    (132/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.547975941 seconds)
    (133/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.402315921 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.551970769 seconds)
    (135/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.616533532 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.557511275 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.515561896 seconds)
    (138/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.69806524 seconds)
    (139/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.52763984 seconds)
    (140/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.451306264 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.596737523 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.407083225 seconds)
    (143/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.778882491 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.493365934 seconds)
    (145/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.491965014 seconds)
    (146/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.65795951 seconds)
    (147/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.515339235 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.424388773 seconds)
    (149/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.919873794 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.535762114 seconds)
    (151/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.401003643 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.696716982 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.537268082 seconds)
    (154/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.606710522 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.742307588 seconds)
    (156/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.500990113 seconds)
    (157/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.741271311 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.550238561 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.402991527 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.423974837 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.487682978 seconds)
    (162/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.825610953 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.602508415 seconds)
    (164/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.462362488 seconds)
    (165/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.456460146 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.473837772 seconds)
    (167/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.748206526 seconds)
    (168/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.630732589 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.536719376 seconds)
    (170/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.401927029 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.549432317 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.526106911 seconds)
    (173/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.437389242 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.505827666 seconds)
    (175/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.493706563 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.590642354 seconds)
    (177/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.519780267 seconds)
    (178/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.508452052 seconds)
    (179/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.511768657 seconds)
    (180/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.709896891 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.464756493 seconds)
    (182/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.003633139 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.623720315 seconds)
    (184/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.455362339 seconds)
    (185/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.402706655 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.403847684 seconds)
    (187/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.617993681 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.602272432 seconds)
    (189/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.746439797 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.588920289 seconds)
    (191/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.498293083 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.463149752 seconds)
  done (took 345.464048366 seconds)
done (took 346.756174273 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.45313884 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.522886786 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.434485804 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.434429712 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.436048483 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.439268989 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.458503024 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.435363873 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.449512525 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.449270777 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.435707468 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.446173077 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.449909567 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.445206863 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.468747529 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.435669651 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.433451891 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.442961471 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.451355279 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.452724732 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43638894 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436670187 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.463464905 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.436122047 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.44494538 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.44372438 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.44284944 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.426710667 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.467630635 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.450270432 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.42711272 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.447419676 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.452502988 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.447003876 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.438958905 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.446156266 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.438134507 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.523796873 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.458878138 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.447575031 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.445196638 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.453849355 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.441339401 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.44325732 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.448915268 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.466172555 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.446687371 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.452291892 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.427491888 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.451474976 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459129198 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.44973979 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.445646348 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.428309252 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.44301998 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.453855067 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.448422551 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458388322 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.44515101 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439258635 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.470478095 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459433406 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.449954762 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.446522863 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.445821541 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.455418891 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.447784332 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.455362927 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.44558316 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.440006862 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442063156 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.448774312 seconds)
done (took 113.612744556 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.561835263 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.434886642 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.593721759 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.446686379 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.607602218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.562184476 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.447787076 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.449626188 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.446709807 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.236091817 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.447410186 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.44726088 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.436547877 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.447474524 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.560184233 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.446748659 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.447047609 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.133062821 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.448823336 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.57944738 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.439480599 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.448016779 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.44719605 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.236994229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.436670799 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.432510138 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.580019892 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.449013976 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.138337262 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.431212151 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.43508273 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.135859911 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.579097686 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.468025113 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.458080674 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.456406773 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.608772649 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.452883703 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.563368583 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.565707023 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.595871395 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.486743613 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.432338609 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.436376031 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.450407244 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.448689474 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.447487733 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.47856444 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.435669656 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.449013649 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.135128614 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.458832696 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.457683084 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.449912144 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.449371203 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.469921066 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.449995007 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.453443211 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.583013457 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.4522851 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.56448094 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.241711407 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.23851682 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.451849919 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.438473229 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.451123844 seconds)
  done (took 115.658742804 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.510877395 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.520008517 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.565620269 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.442924296 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.490120977 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.566407212 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.443752381 seconds)
  done (took 11.849277817 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.447861888 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.452096047 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.491737569 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.489699917 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.454759422 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.615598674 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452382061 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.455696723 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.45156037 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.493391217 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.453112478 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.450862848 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.460748485 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.442249394 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.488967287 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.454781391 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.560624075 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.443469017 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452813705 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.597966243 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.452740892 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.460860424 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.493571963 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.455751921 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.453217899 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.448523217 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.227014821 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.452793844 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.452890702 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.45237475 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.454066779 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.511068462 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.453951483 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.443061761 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453336315 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.55890309 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.453377069 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453657343 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.454489646 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.444681782 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.456322959 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.453475105 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.45336492 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.452461728 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.454695037 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.470181305 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.45467905 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.454920201 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.454388489 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.45488327 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.493352864 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.453770803 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.453187376 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.455713665 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.500251653 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.463254205 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455914148 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.455514454 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.456661336 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.454024566 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.6010908 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.492859666 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.455212684 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.493601987 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454079399 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.456354014 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.455974192 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.45571605 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.539300526 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.455661179 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.494355818 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.455868885 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.627366345 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.470426161 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.457638559 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.449662971 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.448624526 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.456055855 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.441850641 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.453545843 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.456098617 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.447621032 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.452766525 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.456441315 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.456957508 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.605406576 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.554958695 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.456190042 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.463035903 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.454174769 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.456789104 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.499063123 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.456436216 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.456182804 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499972558 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.566324926 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.49923305 seconds)
  done (took 149.007639764 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.459843135 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.460090056 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.452300881 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.474788494 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.449149491 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.448876165 seconds)
  done (took 10.059533382 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.451310044 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.460580462 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.459426825 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.458364993 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.460955667 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.458177559 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.45919089 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.450450187 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.461906774 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.458248865 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.459239051 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.458908339 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.459967564 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.460186865 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.459926107 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.459542612 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.459247002 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.459317081 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.459057771 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.461504339 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.446838543 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.459927015 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.462189795 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.453223954 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.464030544 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.460056723 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.474731595 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.460724036 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.460844575 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.459303701 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.464057401 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.460882568 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.453048611 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.45679366 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.463801068 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.453973701 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.464525795 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.463010545 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.46067567 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.463210792 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.46175806 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.462449756 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.459348327 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.462016804 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.452889244 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.456526967 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.464581595 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.475527574 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.461017847 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.461962811 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.462602982 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.463138866 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.461049543 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.463970633 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.454525723 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.456971199 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.466243633 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.461146501 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.462081359 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.455244321 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.465126953 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.464106492 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.455466744 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.465231877 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.462605108 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.462304124 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.453927745 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.467950222 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.463937438 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.462406586 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.464160395 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.462798708 seconds)
  done (took 107.473969802 seconds)
done (took 395.357565795 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.881713448 seconds)
  done (took 4.201495507 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.647339875 seconds)
  done (took 3.968612974 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.304561536 seconds)
  done (took 26.634726304 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.511838297 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.475294783 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.461999979 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.455201034 seconds)
  done (took 11.224931741 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.831522468 seconds)
  done (took 4.151968774 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.455684978 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.487321435 seconds)
  done (took 6.263788958 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.764244629 seconds)
  done (took 4.085249927 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.967589506 seconds)
  done (took 4.297799048 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.462204114 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.467323233 seconds)
  done (took 6.258303646 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.434095604 seconds)
  done (took 3.754834296 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.453654868 seconds)
  done (took 22.774936748 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.476743108 seconds)
  done (took 3.800066609 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.486104469 seconds)
  done (took 3.807198734 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.71399737 seconds)
  done (took 7.035448843 seconds)
done (took 113.582065872 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.446582155 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.453903263 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.456101926 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.454706086 seconds)
  done (took 11.132174072 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.529604096 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.531851091 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.538049878 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.524663001 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.524946217 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.532074442 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.492351339 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.491470513 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.520650857 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.517240288 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.534698185 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.523311246 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.531001108 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.491670914 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.51698525 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.534593405 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.52240239 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.53923864 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.49213936 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.52407405 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.46707978 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.525321464 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.520797841 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.467383952 seconds)
  done (took 37.717282479 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.952865613 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.528348415 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.610821035 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.507023859 seconds)
  done (took 7.921688651 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.569284059 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.570626508 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.590330256 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.62486801 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.673702894 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.585304205 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.494078729 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.488848306 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.47443649 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.571895728 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.656147047 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.569479095 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.787651478 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.468146887 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.785706868 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.467197923 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.466721607 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.572966263 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.620709704 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.650158404 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.468204355 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.571043924 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.577646301 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.570864063 seconds)
  done (took 39.198486343 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.477873141 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.486083214 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.469352689 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.483729269 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.46996966 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.470572526 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.469731994 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.474856255 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.468055562 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.46977691 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.469933372 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.483994444 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.470005545 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.471150861 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.476476571 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.470847801 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.470897967 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.476396751 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.477874432 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.469902557 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.470153718 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.477244845 seconds)
  done (took 33.75112906 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.453464538 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.453459249 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.806271946 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.708073526 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.4552068 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.453103505 seconds)
  done (took 14.655046977 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.545944301 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.704226635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.460634711 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.899409279 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.987572598 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.461840605 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.461474295 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.749693878 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.130480673 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.125066732 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.534789752 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.544620966 seconds)
  done (took 21.933290847 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582188201 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466775903 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480550522 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508258665 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466978824 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.465470131 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504959049 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238743598 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.472966453 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742860483 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482653393 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561244359 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.717576956 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471474959 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47334314 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445744635 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70442866 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041852805 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468693062 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467853011 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500124446 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484740965 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467783406 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.734791874 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470085773 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468839175 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.729436466 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.46734623 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816205651 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797099976 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79599103 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476242973 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744302769 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199924666 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574744974 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712061192 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462827571 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470276573 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.462073206 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.473484018 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492855557 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470931164 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788923411 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476957286 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469950116 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484816429 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244742188 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.479113832 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.46936707 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468639353 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792634434 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554445371 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.475423742 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.469762582 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551731192 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469991628 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.47598393 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606412142 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107687851 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470201912 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474016178 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.495792105 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489232684 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472841285 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24963877 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.481152752 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.477838681 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.47847864 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472831753 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4829308 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496951292 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470390988 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.491512418 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47086195 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419197961 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493352716 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473079564 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098276298 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472540125 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.47751353 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699611911 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471724618 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469222202 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.470841784 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471416437 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384026904 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486296298 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.439368163 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519618518 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24500822 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.722353059 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495853856 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501835115 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.695903153 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.441142445 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471872584 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.491306621 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476192697 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496166679 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249802612 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473560938 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.478403486 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72256675 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.685067801 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484810017 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.458589961 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012236956 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474026386 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.499982855 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482096122 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.72538348 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.202205343 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808663855 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479476646 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508950512 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475175119 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449220377 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480114609 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.486802287 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493720732 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797084562 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.458511404 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48226346 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550311842 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477120411 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475455641 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473768481 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477101831 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476168064 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.697404075 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489949809 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.802332116 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.478477668 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47482387 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.48446527 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478698511 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.477422512 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.699669509 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482847655 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755414313 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475240214 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477060285 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477240873 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.696815163 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.476080886 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.483296558 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81717476 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484959047 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491302054 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804476218 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509695065 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588136037 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508079246 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.48586908 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.732520694 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.482057175 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.484441078 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478318129 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482259243 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485844127 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.486740237 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47393582 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205839048 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469058632 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483808733 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477938269 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.494102856 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553004471 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484984528 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.725203731 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.480351555 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500384803 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.485751417 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.48781462 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701781617 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80673643 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.484924191 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650728511 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.010698324 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20659051 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4950785 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.479036347 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.478789265 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.479656913 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480968942 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478001466 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480471017 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723549712 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817284689 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481885376 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209916319 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483744436 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479822636 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.487097168 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807205588 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.493929764 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48104012 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.48839497 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480178228 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495696185 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.810826829 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706285296 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.496886704 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48118298 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.999108744 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.487096235 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481156796 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480616452 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508260996 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481095561 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408942263 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821997528 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499403708 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817668965 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488708766 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.498644032 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.481313421 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481339477 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500120751 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.493765767 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511378195 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.728875817 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484358308 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485563086 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11926618 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431261488 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17224007 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501747393 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.502898741 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482958264 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269272816 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482319857 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482703361 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766569687 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259396738 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482643166 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016981479 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.482758206 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.398825669 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814804633 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719415737 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49719089 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.485322273 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823891275 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.70188387 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509212888 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485923216 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483412555 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.453054683 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094844768 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493202959 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668276313 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26368599 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485936956 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491702226 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.515254914 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.498095216 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953726545 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486134085 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484825211 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499478417 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491231949 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424526973 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490374589 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483725536 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260119596 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500078582 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.027290689 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486342618 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.732908787 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.818621022 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.79842388 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.492458248 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.487559695 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.735854809 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820638591 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492054323 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491819364 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171103584 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.349976305 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.49448357 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487462682 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46019871 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507885655 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847854194 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.493608298 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.522730214 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496031233 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486417854 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48569828 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.486464232 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493018812 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474572126 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088098154 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.490349043 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483639985 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48773004 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49293523 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.736213164 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.503304681 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223642856 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722486733 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483085961 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521719699 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.494068053 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49142161 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.463132901 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488805059 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486351388 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481276391 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.710936976 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.486819201 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.456796813 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.566973099 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.70046684 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487687924 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488600879 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752010377 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.489762416 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.510465847 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445720752 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521066245 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486510048 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495596113 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48617671 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530618249 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563746188 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736538498 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.825623632 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.832118953 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966742271 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488784754 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497605656 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.50485839 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572559161 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488341927 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.491121111 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.492971733 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233089944 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497552294 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239437607 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833166924 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49844521 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501465542 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490324893 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731217184 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489687209 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766987876 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489160013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.483619382 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51204116 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495685108 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497841423 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729485826 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765197417 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490247443 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49911778 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495201619 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.490644392 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830432656 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.712649073 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101580823 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173238538 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49864367 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490596512 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279355614 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768241451 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492832252 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493280229 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492159831 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.49643178 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.499698218 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.501308413 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504585189 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723214981 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826696583 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233251487 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.828764082 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.531608753 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.430374757 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49422582 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.747594242 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325465769 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.741319973 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239039348 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37823553 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753978648 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569135837 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743849414 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.495991825 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730962536 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.493134201 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498948143 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492605621 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495268173 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.494572937 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.826517795 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243834626 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756901829 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.500933923 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.502653059 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52760179 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.743663977 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.720007399 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.413498986 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.723889596 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833367806 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.507646227 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495713833 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239686048 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837204046 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502188046 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.500328104 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.753113479 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497152113 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531746452 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.366572349 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.495600394 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167364653 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.714609284 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516637287 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495398992 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380898958 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245760004 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.51371394 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105252939 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504254985 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509009998 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779648047 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.504335927 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497766786 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78584787 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.502387778 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505249646 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754501008 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.233224595 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.442937406 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.51094895 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520878509 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.503256204 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498801947 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562125 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497925723 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499006336 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.975941103 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499440015 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498516794 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512472194 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.498334542 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505110974 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.502488735 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496787305 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.505905324 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.483895772 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.479757976 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507370833 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638269448 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121140577 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502347356 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.116747219 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.836889848 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.747978758 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504820606 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.474362014 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.505784409 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501387337 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500219289 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500086414 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497659698 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178263827 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.508208924 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.842152916 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512586566 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.715159864 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713169127 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502749546 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758435528 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502933065 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525340537 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.468101369 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501691967 seconds)
  done (took 1044.292264532 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.509822299 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.511864803 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.538057052 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.552985355 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.523332691 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.518910476 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.575212662 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.527773039 seconds)
  done (took 21.613593914 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.490780314 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.504376777 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.508374735 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.503721051 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.505268556 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.078905711 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.512786589 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.506111984 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.515221447 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.493278749 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.509892119 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.24719463 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.508591543 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.506456042 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.502734318 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.506866003 seconds)
  done (took 34.769316421 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.727757733 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.764521084 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.282433441 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.520001518 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.541474113 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.526515097 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.938951626 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.501052921 seconds)
  done (took 29.162157689 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.506571623 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.507051698 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.509276505 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.508119143 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.508369858 seconds)
  done (took 8.896672577 seconds)
done (took 1306.368330024 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.508468864 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.511007174 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.5111196 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.509259166 seconds)
  done (took 7.399222147 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.472427646 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.473669576 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.475176231 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.486549394 seconds)
  done (took 10.267396455 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.348703209 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.164712347 seconds)
  done (took 5.872814279 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.084269696 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.075677344 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.077294761 seconds)
  done (took 7.598675743 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.814455708 seconds)
  done (took 3.175967532 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.494603325 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.501303705 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.521227461 seconds)
  done (took 8.878259977 seconds)
done (took 44.555052743 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.495003338 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.271219456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.674002409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.506418487 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.676554236 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.66722077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.768390167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.495350579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.512533209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.504485723 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.50790196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.66872194 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.765261357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.266189444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.763572973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.264371511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.693354136 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.514225832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.498237947 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.506816661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.781950622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.496930973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.507667263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.506206956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.670361035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.655138714 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.501724375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.271215046 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.506623996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.501680967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.681805471 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.505833028 seconds)
  done (took 86.969037737 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.496668621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.501036345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.522773507 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.503380864 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.503418232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.502548961 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.504337211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.501923199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.50980825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.502702524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.503289333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.503956167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.505454842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.503038501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.505412209 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.50262601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.502752894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.503947989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.503786225 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.523744646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.502864722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.502702398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.50427943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.52038687 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.503465557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.50515496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.514148454 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.517941108 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504072585 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503957449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.50355193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.504727773 seconds)
  done (took 81.554350962 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.515653827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.503030035 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.505342124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.505602765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.514833676 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.504017048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.507396468 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.507323035 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.503761083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.507926656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.502697671 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.525638409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.50517344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.514450886 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.505409011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.517874293 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.505600573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.522477546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.504144657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.51073522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.506851161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.504622633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.511868473 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.507856291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.513831198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.507627552 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.507797422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.504639471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504429218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503934498 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.527298367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.526056909 seconds)
  done (took 81.681128005 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.788264964 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.517303585 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.519699015 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.511323102 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.521228887 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.518487508 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.513348451 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.751888055 seconds)
  done (took 16.005696931 seconds)
done (took 267.572778855 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.512547449 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.092436246 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.545189973 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.511724445 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.53372944 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.538214787 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.751264774 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.545657271 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.7419528 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.518592011 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.533983221 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.518086919 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.468411661 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.66717411 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.431218315 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.526897908 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.509713402 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.52001634 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.171800779 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.773789774 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.544821603 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.50611797 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.436967825 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.518355349 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.486841478 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.588317268 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.594149985 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.683905132 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.649484391 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.594587489 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.114407638 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.523546736 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.514140297 seconds)
  done (took 69.535820881 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.510784404 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.52034241 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.519852289 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.519232538 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.52225256 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.520011592 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.510560868 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.519746483 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.521123238 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.520713508 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.521968907 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.521039691 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.522461207 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.522035611 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.521222095 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.495412993 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.512312244 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.520293299 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.510904382 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.494406849 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.520868312 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.522731922 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.522951026 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.52107051 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.522397507 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.5214261 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.522204619 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.523518464 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.522359562 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.521749522 seconds)
  done (took 46.916986475 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.522680049 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.19554225 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.414881046 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.525907496 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.513680898 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.518149023 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.892325016 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.527844517 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.517014007 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.518816804 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.068311342 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.526974813 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.55331609 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.403869385 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.517810865 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.524602755 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.523418082 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.515395431 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.191257143 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.528375161 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.891851433 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.529993165 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.886552748 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.529529641 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.51918316 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.51814758 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.52062302 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.426023935 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.540844162 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.073039212 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.518530547 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.876049257 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.356007233 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.479414627 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.520827974 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.531355522 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.524805601 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.085091669 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.519311028 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.520053114 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.875624293 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.517148574 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.405667467 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.243831864 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.539931438 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.525859573 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.474275262 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.079014435 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.822266185 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.523969605 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.449079813 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.521658104 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.528297243 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.520367631 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.822831635 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.520455043 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.516574006 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.499925132 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.522745158 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.878067854 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.52740821 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.520570829 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.195114317 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.523350812 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.196936434 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.526752476 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.527261094 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.520505699 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.418201378 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.5219643 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.260849413 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.540538911 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.526995175 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.076569473 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.194099352 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.522105437 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.522109422 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.20455042 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.394274083 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.911615822 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.528710985 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.402853651 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.915189511 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.527984376 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.529527359 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.531167593 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.527334892 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.590462126 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.891541708 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.178862011 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.261077136 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.513337991 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.896754767 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.532978816 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.522090312 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.50573634 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.528869429 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.529461176 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.407025186 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.262872331 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.542727232 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.529806383 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.249236202 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.545158865 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.889241483 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.532007861 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.460774127 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.522589951 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.591263057 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.530951446 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.528543747 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.52563958 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.884346821 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.525964134 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.531014536 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.24753203 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.109369526 seconds)
  done (took 214.992439655 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.516729288 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.515039097 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.515999869 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.51708922 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.515922667 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.523113362 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.517731475 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.517033991 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.522518271 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.518403145 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.514809393 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.525915439 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.524388422 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.51499245 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.5265632 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.517376813 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.517190646 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.533755245 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.517715509 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.517606011 seconds)
  done (took 47.768548375 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.533109389 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.266739315 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.224038067 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.537589777 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.533054947 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.52484235 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.59464268 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.534511872 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.534360516 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.914437565 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.747152778 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.535113549 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.533859311 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.532511819 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.218556354 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.509278359 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.914715635 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.263309082 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.540108261 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.255423413 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.510399897 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.53499211 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.522678228 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.233360824 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.915397156 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.901254405 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.602751081 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.228558457 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.538375769 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.534187237 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.221054372 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.535276761 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.526345071 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.240272937 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.539824624 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.550639318 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.533998244 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.597219855 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.597626394 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.905823851 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.231814276 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.910008145 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.552511331 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.706735166 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.537153003 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.506387324 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.233077236 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.535866611 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.506120342 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.536430494 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.540396483 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.210046668 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.528611906 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.220864667 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.540499179 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.536200757 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.224169592 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.210127095 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.21562892 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.750235215 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.526539418 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.899861085 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.542408594 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.235544667 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.538974153 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.538436418 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.538487675 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.748941306 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.244260239 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.907019834 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.906112592 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.902435696 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.537942743 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.609912087 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.539524835 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.902558423 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.608234431 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.961945885 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.904425802 seconds)
  done (took 141.224301639 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.852201216 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.657086203 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.980216975 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.18119224 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.099588061 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.682043504 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.660490464 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.81567925 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.543655415 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.63893146 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.314737525 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.632594654 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.36498438 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.608747072 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.647588071 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.663058361 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.996466436 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.543340352 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.251132618 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.290147619 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.534254478 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.645697144 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.086850854 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.753671502 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.524301587 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.144413261 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.549515492 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.125192596 seconds)
  done (took 58.171445397 seconds)
done (took 579.978578322 seconds)
SAVING RESULT...
DONE!
