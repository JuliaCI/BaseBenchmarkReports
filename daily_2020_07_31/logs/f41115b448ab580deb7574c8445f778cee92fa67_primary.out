cset: moving following pidspec: 8084
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.539470756 seconds)
loading group "shootout"... done (took 1.22172057 seconds)
loading group "string"... done (took 0.403145452 seconds)
loading group "linalg"... done (took 7.603140164 seconds)
loading group "parallel"... done (took 0.14443993 seconds)
loading group "find"... done (took 1.266663392 seconds)
loading group "tuple"... done (took 1.824784179 seconds)
loading group "union"... done (took 11.992860635 seconds)
loading group "dates"... done (took 1.248271239 seconds)
loading group "micro"... done (took 0.190515595 seconds)
loading group "simd"... done (took 4.127172026 seconds)
loading group "io"... done (took 0.969929137 seconds)
loading group "random"... done (took 8.266651426 seconds)
loading group "problem"... done (took 1.521200615 seconds)
loading group "array"... done (took 18.4765711 seconds)
loading group "misc"... done (took 1.44435216 seconds)
loading group "scalar"... done (took 37.680373442 seconds)
loading group "sort"... done (took 2.880310515 seconds)
loading group "sparse"... done (took 11.365258515 seconds)
loading group "collection"... done (took 16.058950276 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.48400059 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12342303 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126592675 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115517761 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.140551233 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123815891 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122274816 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083358977 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.916626244 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145449652 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111551003 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428561585 seconds)
done (took 5.267699318 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.160537491 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084276959 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076302112 seconds)
  done (took 1.297942784 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062343657 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12763361 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063239603 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063671783 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063571916 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063237114 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062820453 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06291271 seconds)
  done (took 1.644782667 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068391563 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064987961 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062623757 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064301389 seconds)
  done (took 1.4037068 seconds)
done (took 5.726275333 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.233365817 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099639892 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.282871025 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.387456094 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.450962116 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.087963686 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071102418 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067201079 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.123746922 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326160102 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101889364 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.179117513 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08803153 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.169458194 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.990131509 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.117567754 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082649758 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120116916 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088113563 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126354938 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.40377161 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075542913 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071117853 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.06702072 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064250305 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.651101252 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653144083 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126317689 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080319606 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097550207 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11339105 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.639651073 seconds)
  done (took 10.411207698 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089271595 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088571379 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065447624 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121466712 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.089219864 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066864302 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071356497 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063961309 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088784386 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121954705 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086668445 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096606312 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063287238 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065903471 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072993589 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195730864 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077226482 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077014485 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06465509 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07684242 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103657599 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.073568136 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075760626 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075478404 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126139001 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166458175 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09292461 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095497569 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063708437 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077021397 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111735652 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123628369 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061596058 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062532036 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117334401 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090672546 seconds)
  done (took 4.450694159 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.923729823 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087527861 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099281459 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.608450834 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06272163 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.14893311 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235551452 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069063999 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.442371675 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.1395969 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.136898665 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.140600483 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065942005 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.1108197 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.206017769 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068003728 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.112063022 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.35702117 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064749636 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06329378 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.061953151 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065143832 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064692266 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059840594 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066855116 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088982386 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083723012 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.160160394 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.74024109 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.235598833 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06198477 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16042026 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079706244 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.352558864 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.064562169 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077247729 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.380722462 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.116703346 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.060748263 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158509945 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110208342 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064726125 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.109158183 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.072433018 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064416187 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079943533 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.063318002 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.0661412 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066224115 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072667802 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097523043 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06085462 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060663645 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.155418818 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060420575 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061196552 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062207611 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14552052 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.059769139 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.132519666 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.059252131 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06336292 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093549273 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06318723 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08341167 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.094069191 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.331471053 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.045969781 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.061071035 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.204047848 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.071451084 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.059923508 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065398845 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061557916 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.06254582 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062233536 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068390357 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06473837 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063820547 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103453132 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061918781 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059309294 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064176211 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061863981 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066509663 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094713053 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060668362 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.059421991 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.43373016 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092607829 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.060832629 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.071196964 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098709953 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.058472593 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.06657952 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.061239159 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.060862498 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06003102 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.060463922 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.304084885 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093854137 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068239111 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113235619 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.02597791 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069282905 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066202784 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071662691 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069332341 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068377304 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066018591 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068187834 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066979814 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063533489 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.11141955 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066177675 seconds)
  done (took 21.185353808 seconds)
done (took 38.112630044 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254413005 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080563269 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080578028 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080488057 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080191594 seconds)
  done (took 1.840660935 seconds)
done (took 3.09805387 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.106563805 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061180444 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097673442 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.096690271 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064229966 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060878939 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094871964 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06074319 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094844127 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.09670078 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.098498199 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097902377 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060974051 seconds)
  done (took 2.352903144 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066937135 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077716643 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07995725 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059072837 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069128278 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078488293 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059460859 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077852119 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084562205 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078459153 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078151656 seconds)
  done (took 2.059841149 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066039714 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07827553 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080398166 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062819446 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070723627 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078187668 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059094504 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077912111 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081924281 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078511019 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079025095 seconds)
  done (took 2.053271359 seconds)
done (took 7.708703713 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065248528 seconds)
  done (took 1.289634423 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.520799841 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.442336152 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.06760916 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.08738132 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184448667 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.098069631 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.223658234 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070855871 seconds)
  done (took 8.099916824 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092964921 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065942153 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069911362 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066120672 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.06597984 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066227745 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066674456 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065884086 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066818254 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06666116 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065734517 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066967836 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065196437 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065335208 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066421054 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066275645 seconds)
  done (took 2.412301689 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094362306 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093311542 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070760037 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071504828 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069307688 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068430037 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071284617 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070741834 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068190694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068902201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071882761 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070197038 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069866247 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061125674 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071259081 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072795337 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067698759 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071239997 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071301793 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072196278 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07165017 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060871985 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07014934 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071369327 seconds)
  done (took 3.068687876 seconds)
done (took 16.111749117 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109621628 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073774576 seconds)
  done (took 1.415349357 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068141338 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069099945 seconds)
  done (took 1.384955453 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073189411 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059271811 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081040911 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07070976 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059780239 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059261585 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078752338 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059732651 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059322769 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059970618 seconds)
  done (took 1.911115081 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060378636 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068539378 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06619428 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068251258 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066350239 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060595766 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064283387 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061175345 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068896904 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059798683 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064781574 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080051711 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064797495 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082005743 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064454215 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06537167 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067163198 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064332954 seconds)
  done (took 2.449741356 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0590617 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060237397 seconds)
  done (took 1.377420751 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062180883 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06058145 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063245857 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062963613 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06010086 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059683831 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060527973 seconds)
  done (took 1.681262194 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408775584 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11709137 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337426973 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067198277 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076836752 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247384444 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061091757 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066408062 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06615167 seconds)
  done (took 2.743462736 seconds)
done (took 14.225372201 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075854443 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081605538 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087202673 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418091727 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090572671 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064815115 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109420022 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17816374 seconds)
done (took 2.378760761 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210405637 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.417578222 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.953973767 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063803477 seconds)
  done (took 3.697096197 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.318586766 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0818571 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074461534 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064821276 seconds)
  done (took 1.812230301 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061206035 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068217592 seconds)
  done (took 1.39655727 seconds)
done (took 8.388318194 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060630985 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06123804 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.061540739 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060575332 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.061277513 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061587196 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060388405 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086208288 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060290388 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065749615 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061607485 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060675912 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.060759946 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.060680428 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060953182 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060905258 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060958856 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060501862 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061083166 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061194998 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060954752 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060756376 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061564398 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061017009 seconds)
  done (took 2.790283425 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077227059 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063609152 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064674575 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064629102 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065107871 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064689141 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064377422 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063151492 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064980655 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063028535 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065293474 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06536815 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062921495 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065166088 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062744634 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065238201 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064710437 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06325773 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062953636 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06545642 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064495226 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063181913 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065230936 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064865472 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065393252 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064796761 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063170054 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063261546 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064728725 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065061346 seconds)
  done (took 3.223939605 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060491008 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057755122 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059106149 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067224162 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058082636 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05811395 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058277895 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057160583 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058165778 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059144396 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058500993 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058205086 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058736396 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057761829 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057537709 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058476835 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062155842 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075950103 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058070496 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058139333 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061435536 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058000201 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057990962 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058005065 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058387272 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057784252 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057768926 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058310002 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057443279 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058438693 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057613853 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061021208 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062254566 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057963541 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066309723 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062031406 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057678826 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061741312 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059348753 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057971745 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057637585 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057480079 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057874252 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058279709 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066558621 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058266818 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05917096 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058525755 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058601543 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057584055 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057790703 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059914393 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062962867 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059685544 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057707377 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059156076 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057702258 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058888967 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057899974 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058083492 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05763484 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060978784 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059825755 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.05865222 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075133935 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059582084 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066481728 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057892371 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061756686 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060761554 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058272441 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073868854 seconds)
  done (took 5.593079423 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08232423 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084272371 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063111851 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062415859 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058389075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058543592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066602961 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058608336 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062963249 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077411663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058722927 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062870459 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062823526 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062280181 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05893143 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062495702 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066815232 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059123336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058451519 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062265032 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05862247 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06597044 seconds)
  done (took 2.709277039 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135126178 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064554291 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101444777 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074919332 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06706153 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074776093 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063887552 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064077882 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064040228 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064454766 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064666533 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064282317 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067561918 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06453125 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064533191 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064730072 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064080979 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06443904 seconds)
  done (took 2.580868388 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073247096 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064079871 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086356767 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064055852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063575942 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063728099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067951426 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068579393 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063268839 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063474386 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068459974 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063339351 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063536314 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063400676 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063206773 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063495393 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063586773 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063266458 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068628173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067667746 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067735379 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068208378 seconds)
  done (took 2.744806789 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071353598 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062789589 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076148902 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065499644 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058951963 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058390253 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063819086 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062989259 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063572061 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062570249 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062789921 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058662719 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064820566 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062672402 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064753038 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062768461 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062806358 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06294889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062857314 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058378179 seconds)
  done (took 2.55372214 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083235555 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061028194 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061140318 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079431992 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061952114 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061278525 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079760931 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061041614 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061436291 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082365321 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061869598 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061146798 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079704341 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079580728 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061355015 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079919666 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079646749 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07975211 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06143309 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061487633 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082374149 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061471927 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079773494 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061633051 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061329696 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0614768 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061266355 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079771341 seconds)
  done (took 3.233439183 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070756298 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060645516 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061417078 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061845386 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060996509 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060891126 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060792252 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060813602 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061728869 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061262031 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060963381 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061238641 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060708229 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060632503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06069966 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060626465 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060796946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060762564 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061320025 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061059353 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060839125 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061161484 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06072148 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061210221 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061679097 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060924451 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061349501 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061105566 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060934668 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061051367 seconds)
  done (took 3.13231868 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071515002 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069969536 seconds)
  done (took 1.433226743 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059140171 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074347605 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058017288 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068468999 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068039277 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061512268 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067566754 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06692949 seconds)
  done (took 1.810093686 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064202132 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086811583 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060846119 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061403956 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064269624 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116496989 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074064009 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069207802 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074453284 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060921524 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060285901 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071491693 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059109673 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070970509 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061786159 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066916078 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06535787 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069910659 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070186016 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058282142 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069720501 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060567946 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058608893 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061009573 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060026917 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065336719 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073702967 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069737857 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067046024 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057424222 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.077177726 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05877483 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059690489 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067283411 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063990596 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058828789 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092633306 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059006244 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064880505 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058468309 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069581975 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077046623 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07137204 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074988111 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060543166 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06106512 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058511058 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061136273 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061027084 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066390138 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.05855662 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064731002 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057639688 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060843636 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067873167 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059117066 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06533337 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066716781 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070187152 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067601354 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065815061 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072182018 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066237576 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067947961 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06027303 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075957942 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060711525 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069897306 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071543853 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060166975 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072015704 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058498111 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057329414 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058665531 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089701806 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060580491 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060400252 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.05878612 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059131991 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060544137 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067384779 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064967572 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064481053 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062624285 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073351724 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066627558 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058330244 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067006653 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075506811 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061163142 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058377815 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073651581 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060580096 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058458194 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075151394 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066534502 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060347828 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059556791 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06059943 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071108398 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060111061 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056936735 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064963463 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060046161 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061742353 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063504981 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065095276 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058286727 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066868631 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064076364 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059898811 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056311845 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06126973 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058840689 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056532913 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065652751 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058026911 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071434937 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062801681 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069853624 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070271212 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066971456 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071816392 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057642989 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056620153 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.074057892 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.20221712 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062264865 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076098844 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059148223 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06860648 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.05873002 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060943957 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066605953 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058212192 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061639707 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059261033 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065467254 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060588841 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062057603 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062494279 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066219384 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070311845 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060591457 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066346355 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058985601 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073151386 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066919586 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062474486 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063591725 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060254382 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069935294 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064403855 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067266418 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058570216 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059530032 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058958199 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068474107 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067262815 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061267919 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06809259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062616534 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059270637 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.05907179 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060358347 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061192628 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062787244 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059888673 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065096797 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066811634 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072041148 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071169195 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066242693 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057862533 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058468543 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06059616 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058175095 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062442202 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066763644 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071929639 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069128461 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076929875 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058969511 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066424719 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060627802 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074561986 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07018752 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.05968951 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064688577 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057460026 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060607361 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066729012 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069504286 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071995115 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071850439 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062375524 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062132861 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058846468 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071422039 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.05913336 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066025724 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066590346 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064123208 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058776134 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060647197 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066458952 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062009135 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058781058 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072528438 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06595499 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058464645 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071452203 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059098287 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068700872 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058197178 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061271391 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06266001 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061084425 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066695218 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072508599 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057566497 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059413692 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073090828 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.06065023 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06098994 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064866362 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071203304 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062278036 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065215565 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067924068 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.0672333 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062370621 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066915467 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059668503 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066682027 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062220054 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068737859 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058433767 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074981601 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057062335 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071764052 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058757452 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068015533 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058303699 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066045078 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058963419 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073014243 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059699802 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059497106 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068536038 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056641384 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066286773 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057781593 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061662946 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063128118 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066373366 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060159989 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.205114081 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062861181 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066716687 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064152299 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066966117 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067127336 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062601917 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058885598 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066351961 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069527774 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066598674 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061477915 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061426434 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059034261 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067033514 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060800712 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061083366 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065391198 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062722437 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063746775 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060984497 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06192073 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060935884 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066559871 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066873342 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075671849 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066124668 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06493556 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066755292 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058518237 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07257391 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059255147 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064888852 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057773103 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066861306 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067366001 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059022053 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076999271 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060636265 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065788089 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071620954 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065801565 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061402371 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075525203 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062447667 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065174785 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065374883 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062813242 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064455905 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060975964 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065443541 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067148846 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068495533 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.05966239 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065007029 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066129761 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061739917 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068434583 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060604258 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065280304 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060814777 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058014187 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062484313 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069300019 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062488506 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063327156 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059250234 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057774652 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059374927 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067151524 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062881165 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066227019 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.0726324 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057997348 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060247113 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058658782 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064148051 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075655973 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067746254 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065058927 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062806437 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.05821491 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060701197 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060728635 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059153419 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062910764 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058045721 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058575959 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068342124 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060657215 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062016281 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059260675 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060028172 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067027566 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064335948 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059362115 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064281977 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058369001 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062252061 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057877664 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060998466 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062098125 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058148718 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061405478 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067781066 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074165113 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064199802 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065932651 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059762679 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065484215 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072674995 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06733188 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059443658 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066729221 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05745556 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075543106 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066476752 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065041218 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067409547 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059321532 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073275147 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061510976 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066598948 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071983533 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059240046 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066256504 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057750103 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071521218 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.061226922 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057881095 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065216957 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06441405 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063012273 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068992794 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058535886 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064871569 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063421269 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060554655 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060193033 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059365937 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065018284 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071953012 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058946513 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.062515963 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064687425 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.0645102 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061338491 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068603331 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065133195 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058888341 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059983333 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060349772 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.058880561 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068443601 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058207847 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061227091 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06154678 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057837557 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063096571 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072150353 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06588066 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066101922 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057422863 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056902851 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073146312 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060229073 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061656789 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064275102 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065462306 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068746632 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065506496 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072523724 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.057843327 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06236346 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068355508 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058271802 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.05762954 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.059878304 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059270992 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0649772 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066153124 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06329444 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059522637 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06336967 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068844745 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.05915942 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061415528 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063107089 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058279373 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066518066 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064124998 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065046712 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059171157 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057272814 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060207688 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065589023 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06404908 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065232607 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058424706 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.064978835 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070142538 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064118068 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061525007 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057159529 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06161504 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064954876 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063055437 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057390235 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061093926 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.059926154 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064745295 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065383613 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061005375 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05702424 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072714143 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064704218 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065429347 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059613557 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059704971 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058540787 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057467986 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067983842 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058114085 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059698826 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061804403 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060401556 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.073719269 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065022406 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07147015 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05934171 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061332021 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057722627 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0660508 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061258141 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057746002 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066669374 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05697689 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071298354 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.068474961 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066544638 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057656235 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.0615632 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064751469 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071144197 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066322557 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065585625 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062038359 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065839655 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059872031 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067673277 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058091329 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.05671152 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067295964 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064434495 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.06938393 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057429102 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066926455 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059764642 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06414856 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065095359 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0597065 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059690769 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059754054 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.317233604 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065065784 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069282064 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06569365 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077791392 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062279017 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071029801 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069100495 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.072459201 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074622101 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074179755 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069844231 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06198182 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068566224 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069302271 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062969412 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065194586 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065229149 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082364086 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062598295 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062687814 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074708313 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068259553 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061318538 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068819637 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064211912 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.06991815 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061444806 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069944087 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065499252 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061599248 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063613595 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064347773 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058901873 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059456188 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060374878 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.0692772 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064179996 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059988622 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07765237 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061469815 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067074437 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069639178 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065180043 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061412879 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058432704 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060994861 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07095082 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073443562 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062583878 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066888473 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061716284 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067698865 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058287904 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06676938 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066543141 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066507255 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.05930839 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059879983 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072500113 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.0728442 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062917071 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067659009 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067121743 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061425823 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080318798 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066528282 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060390792 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069764016 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0620462 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058498311 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058498761 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061661742 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072025293 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059511665 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062362649 seconds)
  done (took 40.213069292 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097432294 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061404297 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059785114 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060218281 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072364997 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060606141 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059722332 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060882409 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060876668 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063116276 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059678638 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059539659 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072049106 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074793225 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070967234 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064718968 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05970976 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060790748 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059506763 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060732272 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070703575 seconds)
  done (took 2.82348478 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066058713 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075492759 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072856799 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076911466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068401341 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06479275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072343747 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064736617 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072608241 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070207879 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073033263 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064935441 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070142098 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070490577 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070144591 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064966761 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072961508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068677244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065168909 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072531108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065165683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072151275 seconds)
  done (took 2.946770463 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059751035 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060154388 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066882384 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058901012 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059687228 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06328151 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058724597 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062482163 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062644763 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062919706 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067476787 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.06036048 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.05892622 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064062022 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058909533 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060028797 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103326747 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060762236 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060397252 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058955554 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065071268 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068188239 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059204659 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059720433 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063380398 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063787877 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059688355 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063045209 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060452872 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063469927 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060740119 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059447073 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067306659 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066752783 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062785856 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063126974 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061330161 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060320012 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059173341 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059708474 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067084162 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061020728 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059646813 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061016556 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067131239 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059171083 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059061412 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066875041 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059396805 seconds)
  done (took 4.49113662 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.071283223 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109064865 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065512899 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089348809 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073601664 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066796073 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065396316 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090302228 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060446112 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061574485 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075341815 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075452631 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063068741 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064735394 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067640669 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063019551 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063799301 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062068271 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066697246 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062844416 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066154264 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066570209 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073511866 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073985586 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064093804 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061783088 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062512901 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064409167 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073770863 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067070582 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06474804 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065148991 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074495231 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065467461 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062173196 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062291508 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074944389 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063082691 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062766719 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061000787 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06247326 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064428749 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066713589 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075284627 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063174481 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067417645 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062585799 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060178611 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074322522 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062495367 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067777864 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075642725 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064060999 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063348479 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064830215 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074451772 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06365687 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061668833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063298076 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073719063 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060830444 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064035652 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074953336 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062435157 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066935074 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075028594 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067225319 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064028557 seconds)
  done (took 6.170572233 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069008068 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091695386 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071852885 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07153995 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070735043 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07085669 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07050284 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070591249 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070561698 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071399524 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071260201 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110175983 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066622047 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076088886 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070721746 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070468601 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070623968 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070648451 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07073688 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071101972 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070688526 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071974664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070868848 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071607462 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073766241 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066265489 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070490407 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070482842 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071610435 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070683596 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073962409 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070470767 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070868782 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071453423 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073793034 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070271112 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060150319 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070529537 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071154993 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071037415 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066630928 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071076285 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070173339 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065883834 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070787089 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070351974 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07151359 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07396035 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079589583 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071500822 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070966304 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071878452 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070500377 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071083509 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071567412 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079571912 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071765028 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071606645 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071024945 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07178003 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071414068 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079751379 seconds)
  done (took 5.924348576 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074183998 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066551483 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080429299 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062096143 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059242952 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06969758 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059215028 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059499788 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067855517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067713497 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070352794 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069595749 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072233026 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069847284 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069671711 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072010279 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069422566 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069551191 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067712776 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069086858 seconds)
  done (took 2.811504588 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070917211 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076835924 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066381095 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069939096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065378897 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06910301 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063937712 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065443341 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065863922 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065215089 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07156832 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07091443 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065324814 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069779772 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070895141 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069277875 seconds)
  done (took 2.531556347 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065064476 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068485923 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.0682096 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061156017 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064315818 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059943489 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060546048 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058786115 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.05983698 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073707912 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060498641 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072122053 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060882927 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059450125 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060347238 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066183672 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059715493 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060694444 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060770988 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066263004 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067428129 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061831973 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064427531 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060490117 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065667974 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067819187 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062421989 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064116265 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060547866 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061203718 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06633389 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067537696 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060439775 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061230539 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059421845 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060644363 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06064159 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061249067 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0667576 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060725712 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059183834 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066156864 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060640405 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061700175 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059968131 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061125817 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060280761 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066061453 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061014674 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065718711 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060362004 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063097603 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061155491 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068075899 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063302115 seconds)
  done (took 4.901883337 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073728797 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065615544 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059627533 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059206713 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064203062 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065786407 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065158628 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064832177 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0650982 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05934075 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065314569 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064018273 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065028986 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064595173 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064912384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064886946 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059266115 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064442914 seconds)
  done (took 2.605402223 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.06965036 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064847943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068736556 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064810926 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06456398 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063884851 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059487366 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059556911 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05968148 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064256712 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063856185 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06359955 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059415032 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064163872 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064231135 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06399968 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063316538 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059543994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063817301 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059467957 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063477546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059390275 seconds)
  done (took 2.830733207 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.08539105 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082279796 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.12067055 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076772932 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085003469 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069814601 seconds)
  done (took 1.963665597 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087675739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102413778 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064665875 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064917809 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074685028 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067727428 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067495801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068267147 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075564876 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072852759 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068016314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075098748 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074879664 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070156581 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074980317 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07798192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068183564 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067943008 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064187627 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078208911 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06807946 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07547722 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068321879 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067958399 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068309316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090270825 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078000946 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073093531 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070725836 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075068815 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078171975 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068124463 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075023124 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072902996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064362255 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075570597 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068507043 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078344379 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075248652 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070299576 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064176875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075137646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07526385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07043967 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078330842 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068406422 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07029324 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06833838 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068594599 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080854311 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075493433 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070449166 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075416476 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079145886 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078667473 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080724284 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073303049 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07055849 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075953497 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073493051 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070472175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075602786 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070989542 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073518339 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078449897 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070448027 seconds)
  done (took 6.287912696 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094430699 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064303434 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068445348 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073545818 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070765372 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068077912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068551021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068759951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068924987 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064780407 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102938736 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068816225 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070519775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070627697 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06841053 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068494571 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068335202 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070445375 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065212192 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081048759 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068718955 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070714957 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070771799 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070379111 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073419625 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07815874 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068288162 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068096255 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068380987 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068257509 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070695879 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068193942 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070392901 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064964711 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070307118 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068222507 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067901401 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070147841 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067732667 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075338728 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070194018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078107871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06786432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067915605 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072944609 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06785807 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067680558 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064616786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067893971 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064684317 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072775946 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072713938 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073381682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070457693 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068800504 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068853751 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068371645 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068202856 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068434961 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078642609 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070442327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068472038 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081326665 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068568752 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068304774 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070375069 seconds)
  done (took 6.142257039 seconds)
done (took 125.716907551 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206148322 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180059509 seconds)
  done (took 1.817546536 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069696249 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09522927 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072888088 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131944102 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067169915 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103922812 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100556718 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071497413 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067663443 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068684877 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068640787 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071541655 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135816836 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067223743 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068529155 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071698634 seconds)
  done (took 2.783003723 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10096797 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181778941 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106650545 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066535496 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103021294 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074353442 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066211759 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077386834 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070813354 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069678066 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074563494 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072586253 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069193577 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072638278 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070280976 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074087108 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06927337 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073708636 seconds)
  done (took 2.949779268 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089878986 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084410925 seconds)
  done (took 1.635948219 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157704304 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105096332 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142140696 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319522043 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.135546454 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.280796837 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131559778 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129244948 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114829693 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122915905 seconds)
  done (took 3.091412883 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097068162 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165287973 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300659609 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11758462 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072943404 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084902728 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118277632 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078796765 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078022339 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077704679 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077678417 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077054315 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095431945 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07441383 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074100479 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074522891 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098560519 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073623022 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073711508 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073611615 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098720646 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067571359 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073999677 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07306819 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075936665 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075532973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068451072 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066558157 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073857654 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073250734 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076314456 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.081766507 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075253577 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101085796 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070989133 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102245221 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072253983 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071230641 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073196989 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071652412 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074933387 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074733641 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075189278 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074511163 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068162557 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071999051 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067944623 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066312543 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077045768 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068121048 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077433957 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076140607 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101158682 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068625784 seconds)
  done (took 6.049471872 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1042993 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104056348 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068070768 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111330261 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102917931 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067434211 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103407063 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097543255 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106106997 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06759792 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065904789 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066570229 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075863115 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.07956656 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114391266 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104363892 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067473567 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067267428 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105951919 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106170232 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066086414 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099100871 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095470622 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105562618 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065655878 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067486056 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065214511 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066268347 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073125263 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074441674 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066279401 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075092084 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083581295 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073145274 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065507459 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065595174 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065738848 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075295857 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075049039 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075705111 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073977257 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064889452 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065429095 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066178289 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066602542 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064621862 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073559144 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075127079 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073555973 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066237886 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066446218 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065878844 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066416547 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074915812 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073802402 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076108806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075538215 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066146148 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066408873 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067919793 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076543687 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076309283 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075816253 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067481909 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076601138 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065860788 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078497131 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081182097 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066388661 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066741289 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066101961 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066153917 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066992417 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073487733 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07412843 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066976101 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066322895 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066347997 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076593661 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074525756 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066422136 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073103072 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065362576 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065931864 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0662038 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066031833 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072757099 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075200809 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066921807 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066041907 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065875231 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066059434 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065090902 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074016361 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075100068 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075308483 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074078139 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067004844 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074377843 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075088472 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066811911 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074637755 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06665043 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066951099 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067220197 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074486465 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073658683 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074976623 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065680651 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065355796 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073244182 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210965399 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067463594 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074718714 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077771549 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074955133 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066199088 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08048152 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067021436 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076662451 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064513518 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07714612 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06729653 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073902455 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066555377 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065521889 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06597753 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075296147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067126026 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066214872 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066913706 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066191473 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075120242 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07890313 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065962594 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075128276 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074860691 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066710637 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074539271 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06630622 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075024293 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066987116 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066355292 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065236614 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07745444 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06664458 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066699298 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066224212 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076579116 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066167455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076042278 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074138152 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065894854 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081167122 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075886912 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074034491 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076523891 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0673751 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065971313 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065731217 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065775035 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07329242 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075075007 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067251353 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065894579 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073116513 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076852892 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065641248 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073601963 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073632503 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07415338 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066070219 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065790474 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076734129 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075525897 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07451088 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073849104 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074659956 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066229342 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073479404 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073801138 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066138029 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081258761 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066646244 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077917685 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074878787 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073037005 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074969447 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076149126 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077076008 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077209329 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079757767 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065659361 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065771513 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074016158 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066336989 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065754534 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073607113 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066578776 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066256104 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079637891 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064281092 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076239676 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065770872 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07554619 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065945208 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066488578 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079413952 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066422411 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06673477 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074606057 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066058638 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073554496 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077257295 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074240647 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066073692 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06645256 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075330232 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075391588 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066726316 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06563054 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066516907 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072833563 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071607895 seconds)
  done (took 17.946632996 seconds)
done (took 37.74390419 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203968458 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157753692 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.192977515 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111703016 seconds)
  done (took 2.221715081 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.094809748 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.095609804 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077968199 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062650064 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.083514744 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062863234 seconds)
  done (took 1.978324892 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272988707 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195648841 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177022116 seconds)
  done (took 2.14309677 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21288119 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194003092 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462227331 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.290440007 seconds)
  done (took 2.752189128 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.132786347 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079426492 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062343945 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073292271 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.112319074 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.143836937 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.089621106 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.114391948 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073664552 seconds)
  done (took 2.439243841 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.132294893 seconds)
done (took 13.186001748 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110659857 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097235772 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.22790805 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155094403 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095217167 seconds)
    (6/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.240169865 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195797267 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066233374 seconds)
    (9/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.201826796 seconds)
    (10/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074480662 seconds)
    (11/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.197687635 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079378711 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228010187 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.306326736 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.240144214 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077007271 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 0.242502253 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075129227 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072616468 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067107667 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072031543 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072405917 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.197873961 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073854053 seconds)
    (25/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.182820477 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119661964 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.208772305 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11497652 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074189679 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062726792 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.07874369 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074560111 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170216171 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104434147 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217077258 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167340179 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071842477 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151135011 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118489793 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075084523 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078321757 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071870532 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.206561147 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063592448 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062481931 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06860411 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14142289 seconds)
    (48/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.197042208 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084173295 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170375151 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158036836 seconds)
    (52/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203658635 seconds)
    (53/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075111137 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.077419162 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.15201942 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087557035 seconds)
    (57/309) benchmarking ("sort", Float64, false)...
    done (took 0.130059573 seconds)
    (58/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06413463 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122222932 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06998647 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.063846014 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074199354 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085606449 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063529506 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062612964 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062708795 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072298936 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131341966 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062621361 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.169145798 seconds)
    (71/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064412071 seconds)
    (72/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.094069701 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076045874 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082068708 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.063128989 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062723998 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164068835 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074115105 seconds)
    (79/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063188026 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086124196 seconds)
    (81/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075111604 seconds)
    (82/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067297995 seconds)
    (83/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.367703901 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074561894 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20791443 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.081007792 seconds)
    (87/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.073815377 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067966953 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071033091 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063821662 seconds)
    (91/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.165421577 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073235736 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066626307 seconds)
    (94/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072707705 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.137487212 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172147538 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062970597 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.138998325 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.177650777 seconds)
    (100/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137907296 seconds)
    (101/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063428994 seconds)
    (102/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064855922 seconds)
    (103/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.136960873 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.079333405 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066934025 seconds)
    (106/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.074478496 seconds)
    (107/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.139668135 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.207254621 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140843849 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065755981 seconds)
    (111/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064818464 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072724403 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070694736 seconds)
    (114/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.063672194 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134176512 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064026464 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.081276255 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062663728 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063237952 seconds)
    (120/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.139390181 seconds)
    (121/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071990648 seconds)
    (122/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154280085 seconds)
    (123/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063829905 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074917538 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070296346 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155687235 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072355101 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063798564 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130536902 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074588008 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085440758 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126351722 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.193723867 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063158744 seconds)
    (135/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.157935916 seconds)
    (136/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.207441763 seconds)
    (137/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071479167 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073090582 seconds)
    (139/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062679495 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185584445 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0742643 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061993634 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074940185 seconds)
    (144/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077497116 seconds)
    (145/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.156632242 seconds)
    (146/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092112465 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170526905 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.076923205 seconds)
    (149/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072267723 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144414028 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063433208 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.18140156 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071317593 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063945547 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063204529 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153965486 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062871574 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088698632 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115861229 seconds)
    (160/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064045196 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062434011 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061724995 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.13482145 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.0927539 seconds)
    (165/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.083796784 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06237827 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.061847517 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216898643 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064408916 seconds)
    (170/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065257993 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121171193 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069469188 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063325733 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065324689 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070111974 seconds)
    (176/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06267318 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14126349 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116570217 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13331505 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062672489 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062135251 seconds)
    (182/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.124287026 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.061852032 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063877827 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109113894 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063694038 seconds)
    (187/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063420011 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085575868 seconds)
    (189/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064386173 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084742458 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.289755748 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094296347 seconds)
    (193/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066164858 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087544283 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078945745 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070945813 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072681287 seconds)
    (198/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073285248 seconds)
    (199/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065573519 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08090526 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072533592 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064349704 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065367317 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089528431 seconds)
    (205/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.190359465 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156903766 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070993365 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.133645927 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063410566 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063331435 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064112287 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064213694 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089942977 seconds)
    (214/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.067791418 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070258649 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063169673 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074565642 seconds)
    (218/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062818102 seconds)
    (219/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.07855904 seconds)
    (220/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064437008 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075297538 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.0897766 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163338523 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062725293 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074898784 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063774814 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091166965 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138196359 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062799745 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071703254 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063320352 seconds)
    (232/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.070191201 seconds)
    (233/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069992329 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062617942 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064459529 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071716892 seconds)
    (237/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06462841 seconds)
    (238/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.062121994 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.062618895 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062909065 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062401136 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118529453 seconds)
    (243/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064043997 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064570418 seconds)
    (245/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062974486 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062899224 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063783968 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063947716 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.20459347 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.161478638 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065186936 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063125618 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062494916 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06244736 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088910235 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062142408 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066020898 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071406805 seconds)
    (259/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.0641565 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088972352 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062325305 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.062237718 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062161277 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116867237 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063297079 seconds)
    (266/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062456246 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06322756 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074208342 seconds)
    (269/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06195711 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072642774 seconds)
    (271/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.138095748 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.166930026 seconds)
    (273/309) benchmarking ("sort", Int8, false)...
    done (took 0.169190523 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069815806 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064306983 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062766084 seconds)
    (277/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064126024 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064495072 seconds)
    (279/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063041653 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062675173 seconds)
    (281/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.136784242 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063720485 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063294709 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062259589 seconds)
    (285/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067758193 seconds)
    (286/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063916828 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062198607 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063401077 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105486454 seconds)
    (290/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.081369816 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071098251 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088562708 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073862212 seconds)
    (294/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.062033288 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.135473175 seconds)
    (296/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063313008 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.063781553 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062215339 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069352503 seconds)
    (300/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071417581 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163905556 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070479241 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086659981 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 0.131156785 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092051013 seconds)
    (306/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068142306 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065161401 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062377517 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065416438 seconds)
  done (took 32.178815733 seconds)
done (took 33.691832026 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082036856 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088421165 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071889009 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083993838 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079525777 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094417214 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071619048 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076862724 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078904919 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.0775572 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076954012 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069743672 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072546563 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072690221 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070782531 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086478845 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077658113 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071489569 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071977095 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063324996 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071754457 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063036486 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062257137 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070361876 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075164076 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070390116 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072980478 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072580648 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063458623 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063163722 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067612318 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072171361 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065882411 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076771163 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072208101 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07150368 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073162399 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075619831 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062849833 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063534553 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073539804 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063560645 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071971311 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069565959 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068060936 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070649855 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072156913 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075625272 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08625484 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06786094 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07364238 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074161598 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075085675 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069081072 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0690387 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071162318 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069297629 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086423235 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072218177 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067218963 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073358488 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072460229 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069776086 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071765018 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071321259 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073766565 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076428657 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06969253 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073934824 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070407789 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062577505 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071430872 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068049141 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062994373 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07448109 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075861787 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062475597 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067564774 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071001466 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071459849 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062813874 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067332652 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062263346 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067858496 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067126358 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069206515 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068471513 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070515773 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062717824 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072201388 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070234208 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071241884 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062479562 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076484209 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063192417 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06984924 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063330756 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063097782 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062604743 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06787688 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062910898 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066956069 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071887227 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062148841 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067612749 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076703529 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063445815 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070368486 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062373713 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063274948 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074179172 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073900805 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06349796 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067949037 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062619911 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068528375 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062561979 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063075597 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062774332 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062574833 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067838544 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063058391 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067474443 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068558406 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076337583 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062833676 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067547078 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067604811 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062833928 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069931323 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063198196 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063179827 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06244772 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076710417 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066988192 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063181056 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068402373 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067140558 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070754346 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06195391 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071326646 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06896822 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.208619057 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070811418 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062823206 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075110063 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067876703 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067268987 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062777265 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063693646 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063122509 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063475196 seconds)
done (took 12.383078717 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06207417 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.092962032 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072448963 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080988117 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076266365 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064534889 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068469213 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082533403 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067252312 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083674511 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085359264 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083902684 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091012025 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062880298 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063352835 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064286557 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062363809 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070131656 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.08010734 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085186331 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093420251 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063620318 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073617562 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079512482 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074657303 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083016236 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065391935 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064741959 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066519267 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079306062 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08715875 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062836916 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064092516 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078465149 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077822756 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07162524 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064228368 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068396007 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064052956 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063389998 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064993696 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078852215 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068035129 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072889191 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064377348 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064597336 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064366444 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068246664 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074679381 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06787377 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071497957 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075912894 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066155628 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063643062 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062316294 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068220887 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063539955 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064735746 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063650591 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064296815 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063778933 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065526936 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064066039 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06408429 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067059718 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067202706 seconds)
  done (took 6.249572825 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079599486 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092269034 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080367256 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080228384 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063243721 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064021498 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064013386 seconds)
  done (took 2.131385871 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062400304 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07729054 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080545623 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080909205 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073476381 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08218405 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064511764 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09320019 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06338776 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.07666868 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109971067 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081507503 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067477527 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075676812 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063986113 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071766722 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064252294 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072003712 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07295954 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080543281 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068158426 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090671827 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077547193 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064527282 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084985169 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069316269 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063581953 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06382657 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065219003 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064956259 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064917906 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102780768 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069013439 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078196206 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065536496 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063792789 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070451279 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067702981 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067406782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070196225 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070063932 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065650514 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062854356 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065229421 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067218685 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068214992 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062739396 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06587325 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065166047 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076399016 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062862452 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068707028 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067956423 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06910331 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069857354 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068797822 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072485688 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065571025 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07623996 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071911344 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065261441 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073600375 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072701062 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070132946 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072997979 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068283817 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.06929711 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070160366 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065359306 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066183979 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065727959 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072951548 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063802031 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065922136 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067362267 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065874397 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068506708 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080849866 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080690207 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076727596 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065793844 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065294303 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068328864 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08033025 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069307046 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065188398 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067683442 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063267686 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068847591 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06539577 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069781292 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065417866 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072424799 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066575814 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067799186 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073514785 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063365597 seconds)
  done (took 8.462298458 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065595313 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065603846 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067277627 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065294672 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065235916 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065519038 seconds)
  done (took 2.030166472 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085893143 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065518468 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078438452 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065369957 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099871185 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072919341 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073842126 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074225527 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077476957 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077377965 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072615785 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075409 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072473558 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066873762 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072406284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066936175 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072639455 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06882029 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076477356 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067088274 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078278511 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067074 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067033449 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077181552 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067839563 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065796284 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065388966 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076522028 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076503287 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076957901 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066570872 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068046677 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072466334 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073547545 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072947478 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072428492 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065130476 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07080395 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067114588 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068085334 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074950169 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067013219 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067819919 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070919081 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073774993 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072186925 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071050228 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068653304 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071849106 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070725729 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070648188 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066028511 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068002647 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070436538 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072519256 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073433451 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070536657 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072338926 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066883256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072164183 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064980141 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068053825 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073665428 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067919367 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069130291 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070600724 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072358549 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066561032 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066852105 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065370376 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070651292 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064908604 seconds)
  done (took 6.735181394 seconds)
done (took 27.200755633 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.991749675 seconds)
  done (took 2.574831657 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.562929514 seconds)
  done (took 2.184983091 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.905078334 seconds)
  done (took 8.5266177 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.284594701 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.336022892 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.711802255 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128262315 seconds)
  done (took 3.111670315 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705024056 seconds)
  done (took 2.335496135 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229278848 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223064985 seconds)
  done (took 2.088314207 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.344198184 seconds)
  done (took 1.967502918 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.077122452 seconds)
  done (took 2.698244672 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225711483 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158693894 seconds)
  done (took 2.015534569 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452881596 seconds)
  done (took 2.080737965 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.287289166 seconds)
  done (took 5.919070871 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231728602 seconds)
  done (took 1.901891904 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.229464029 seconds)
  done (took 1.866021009 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.757904013 seconds)
  done (took 3.385109265 seconds)
done (took 44.285645491 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078254684 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083096169 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083245839 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07923402 seconds)
  done (took 1.926476534 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070516625 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068332916 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072034515 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072050468 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069157359 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070933601 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.0713064 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06793309 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069139863 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067659241 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066392347 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067939224 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071000307 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067759214 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070526556 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072555788 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.06767464 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068160374 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070917471 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067587006 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070936928 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068166144 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065844114 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067235759 seconds)
  done (took 3.286844293 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074064343 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070501779 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073003123 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069142079 seconds)
  done (took 1.924442968 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072411836 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084580607 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086139433 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091421246 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07424927 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074561662 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082826963 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083781797 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063337532 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086586754 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065725563 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064323395 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064329968 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084834418 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082594154 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060960158 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062978748 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074696643 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074161134 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076448299 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065661887 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063887336 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07468339 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074355222 seconds)
  done (took 3.428733094 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076070386 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063858644 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078475135 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090832853 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092144846 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0639383 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07912598 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092214791 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139865782 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063521529 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069213402 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063540655 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105469111 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063489652 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079838972 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109961268 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11349939 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067025598 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097013085 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063648157 seconds)
  done (took 3.320631486 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073013035 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067266756 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067842212 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0629866 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074560855 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070973816 seconds)
  done (took 2.066130677 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064861041 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065621779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064906481 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064371972 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069897695 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064529032 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064087275 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065308715 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065309358 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06459954 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064467814 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063903235 seconds)
  done (took 2.424313096 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157596561 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068219839 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068871478 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067110093 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06953567 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064079271 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079475832 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06647828 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083445165 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064347482 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064467647 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066846411 seconds)
  done (took 2.564553949 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096471594 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129931422 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095350779 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071568686 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168773259 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09334996 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089661575 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.122354258 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092814513 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068186968 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091259319 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134914722 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094586279 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097603477 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080985896 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124240573 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109765902 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086795216 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112712072 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08102494 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069334164 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133564195 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068894344 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092304905 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100839494 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.096919066 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109038008 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131677702 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082887331 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088828891 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08162451 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073281559 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104350824 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083623418 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.096722488 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09240814 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097304658 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083889246 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085085097 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118311912 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152319131 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100132233 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099648498 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133982574 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077597121 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.107210336 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080280259 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098798796 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103136073 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092807466 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074631483 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090839368 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105380829 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101297792 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080908379 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081090129 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116958762 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.098021845 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095346669 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078958537 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105958702 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086187937 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107338503 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267113019 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141458474 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102129676 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136664523 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124725646 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09523936 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.088692376 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090810497 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075349161 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110604746 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097954398 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136288399 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109823239 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099469552 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096670805 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08226568 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108054128 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114595579 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093178099 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094070147 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145552217 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108189724 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089796042 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097202047 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.14088701 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070906003 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146742329 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088582135 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12087116 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096081963 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138572803 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090959814 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082656661 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105496013 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10236652 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088911289 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102633246 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083637964 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113014576 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091860589 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10066088 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081180164 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090120262 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086404595 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097278228 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074801785 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103132016 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114785166 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112643509 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07426119 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107498154 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085334128 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076519554 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091942554 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139153715 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082786173 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074512203 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148270431 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.09235306 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116971248 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108705337 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082281812 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267686301 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136959197 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09229284 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089698745 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075934657 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154222882 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075637007 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118525428 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081337875 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10218024 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105414455 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132396915 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137295517 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09631654 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07818283 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091529913 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.105793089 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08731019 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084970016 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076499879 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107857903 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124767456 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.099936074 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080243494 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091928007 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068943098 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113332066 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075754377 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084519786 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095476992 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.087311595 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.08964829 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142809872 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084245781 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10746004 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097602422 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066748436 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091255678 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150741711 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082535043 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.109471609 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117355066 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083957181 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067765556 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.095474591 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072260547 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108085854 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.09240196 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107288926 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077520822 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106291155 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067998072 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07348316 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129284746 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102023512 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088736275 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132406402 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104957599 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088506833 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103617886 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096872018 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094785213 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101293255 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.261940518 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105748844 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073980616 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130468556 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092372932 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078159922 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088126412 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079196956 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077816058 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100535177 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115806267 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088974093 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101748243 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103484356 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090409759 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.110226327 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089615466 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079485613 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131844245 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075896096 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07431929 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088126453 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106253395 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088273337 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134742892 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079351306 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136301525 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092645205 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081145486 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114394589 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068488642 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069873879 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081206755 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09187633 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115476971 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078857402 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077778526 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118252633 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132347596 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097600488 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102834318 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06795792 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090803786 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135743348 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.11468927 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081262713 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109989851 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08429012 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130096329 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096595581 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120661161 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105975755 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111205803 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091383812 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080603085 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073100938 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087513956 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110988383 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086656281 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081644809 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067429032 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074131152 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092129384 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090789674 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111089515 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0873936 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133767756 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072491196 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100886502 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259858405 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108174541 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091218158 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096701854 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091976664 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092122928 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091850653 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092665788 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073421772 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12680366 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102881679 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078406735 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088984921 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09583182 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106565649 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108810314 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109434804 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094406046 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106884586 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12418796 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099331152 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081981554 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084385579 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094144391 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084807375 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08202294 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104420753 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112000146 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098193157 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109849968 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095431016 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.092719514 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106926929 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093299589 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088955781 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.118377268 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153401142 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102454181 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104554465 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085252736 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107013771 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10607188 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113449643 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111540922 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109312892 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071040574 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075283088 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070675326 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106900538 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0791073 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118047614 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07638903 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107191795 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096725583 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079753999 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066637536 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101988519 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093804269 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081949434 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123651293 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113662544 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073113925 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091096053 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107706727 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083094007 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125037785 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101748239 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101248403 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071420936 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09014544 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073137687 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.263070226 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101981939 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078207263 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076866365 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070148916 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10864012 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084709009 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109599057 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089120137 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102092677 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120488261 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133773027 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087168236 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097413714 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119358471 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114705527 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.082087059 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113077487 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13712439 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120689761 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081546212 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084888867 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106987605 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106357427 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102472814 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076150874 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079395878 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109362216 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113858661 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06828348 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085207892 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070376085 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.084376015 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112685863 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095761614 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082591054 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117981392 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074736832 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108143085 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095414603 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122929562 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122573775 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145283049 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097107205 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085192284 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076804806 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124151277 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070539501 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117562122 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112934768 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087874405 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.06843917 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084353231 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.095691152 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.62753352 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109268496 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076190994 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135843876 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087364069 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116345958 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084474009 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117328654 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089188254 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101534511 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091121404 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283493264 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083378538 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110658276 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.178406105 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111537235 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.108196508 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073862504 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086326465 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074016961 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.078861466 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08155403 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087493241 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109285206 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08493688 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106514881 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080029309 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.10785662 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090726869 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088974437 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.098982759 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0818076 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139470975 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088271031 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122809356 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10736202 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078399644 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074699256 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.08695491 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10119159 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0819995 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094350433 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078677196 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076567087 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15092797 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102468217 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085565179 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102521198 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091596759 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086719704 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092201117 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116142471 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1106331 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073303257 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.088172281 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104333603 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079199238 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074731836 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097166626 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069638106 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089009772 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099311006 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096702758 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08998083 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.101991686 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078186757 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08752514 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11028037 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085791733 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077099411 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076641689 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076602618 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075973861 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103948233 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108686746 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114499886 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109925743 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090885405 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092668287 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078332925 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.222252784 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233056466 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098426818 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106025959 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076742604 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.133225652 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089630546 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089697998 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097600771 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10173249 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153238408 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074954549 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109348183 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095091955 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11056347 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086927538 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107952345 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096089741 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091985054 seconds)
  done (took 50.598495114 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.090491615 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.145567346 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.154451251 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077352839 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093694666 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115748064 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206182872 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190026285 seconds)
  done (took 2.831588885 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064354031 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.0772927 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102173071 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082048106 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064379834 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065409059 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.205286283 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079819295 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064002674 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102052511 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074066276 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06379284 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.416875504 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063629563 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064636153 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073383568 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065343347 seconds)
  done (took 3.469228588 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36309464 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.605059248 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.340882517 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073790489 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.982765766 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087766151 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.314909709 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13529237 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077210706 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537897181 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371590466 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131002752 seconds)
  done (took 18.775673206 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071144484 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071895273 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077514338 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076754306 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071943743 seconds)
  done (took 2.118136928 seconds)
done (took 100.38053473 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076921129 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.165758398 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066075437 seconds)
  done (took 2.014451489 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078999341 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078257514 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079769869 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077488316 seconds)
  done (took 2.071688284 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069881767 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07320481 seconds)
  done (took 1.892439789 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.246444513 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164320447 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092154174 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079230098 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076865664 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078878575 seconds)
  done (took 1.995530757 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068229998 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069375328 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070220853 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071035893 seconds)
  done (took 2.0259651 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06368734 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062550298 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066585082 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069853285 seconds)
  done (took 2.011824213 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.079086586 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079806392 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076446456 seconds)
  done (took 1.984760715 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.090956414 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093348764 seconds)
  done (took 1.934769563 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076335768 seconds)
  done (took 1.826584992 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.085039351 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095125389 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149556889 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109275976 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.148823613 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.133832398 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.07627603 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077691026 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072193627 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070665731 seconds)
  done (took 2.768346174 seconds)
done (took 22.855714022 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073799522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369703073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357965133 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084496011 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670593095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354565235 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989417717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090183258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.09808511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067129241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083254886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647270814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982526645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324615699 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968882193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32677106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649007176 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06633571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065578835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066731717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975180643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065830819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066276281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066353047 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.683864567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371792022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067600326 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322365563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066739232 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069579634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35518386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068403041 seconds)
  done (took 16.24433363 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065861979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120296628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070859347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082395105 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068801496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067999881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069309682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066810226 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107746506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066677977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083709091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066109631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070701529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068448391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087584709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067207161 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068658014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067696427 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066936815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070889483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085718771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066745443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067759881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0676535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067864984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081042906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06850541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067208365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067614115 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06974238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070508278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069265914 seconds)
  done (took 4.121485904 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116166862 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126601831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071818332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106171638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118235508 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068375603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148950356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090460412 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112567513 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067274321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083920977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067077651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102766888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069093803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087973684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067686211 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068854501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067679162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067892126 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068334341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085935695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067520165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06800238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067925535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0684129 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082156989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068574117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067409852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067260818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069554207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071306922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069321546 seconds)
  done (took 4.400156598 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066291837 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070529252 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079108421 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079398981 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065242649 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067472776 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068751451 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065096506 seconds)
  done (took 2.333639443 seconds)
done (took 28.868520602 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07405266 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065957999 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069182056 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085851934 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072189787 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068648886 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062697326 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072053188 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.06949462 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069664068 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07079368 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064574821 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068111476 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06361362 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070409985 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064600314 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071198985 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06907677 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069713714 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070616611 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067026225 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.0708075 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073024833 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069943597 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070028447 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069970699 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074631179 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070135656 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065577274 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068031481 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068141329 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075326368 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072133364 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071986057 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065296499 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064838515 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06930313 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066783136 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071470457 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073865211 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066986421 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074135326 seconds)
  done (took 4.674186376 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080187245 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085452174 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078423408 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078629035 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095989144 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080095849 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084266207 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077047732 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075248296 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08350556 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071797692 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078959191 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075758673 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070032546 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074752048 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073161302 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077802235 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07303144 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075927299 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075765396 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085114791 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070585741 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077816258 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077046095 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072671021 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077897282 seconds)
  done (took 3.809478627 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068864513 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081069152 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089884804 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147863178 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110087319 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078638088 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078120456 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092537934 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09538288 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065960282 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069635149 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090904536 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090082019 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072215485 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106501849 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08198154 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081425441 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068327558 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072267568 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095239937 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086737604 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08402244 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092822911 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082321113 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064652783 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067686415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071445513 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078915833 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072572112 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076880904 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069933438 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.06882313 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066014283 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076981507 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069717843 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064940708 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08933828 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076990573 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078384704 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108661831 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074505095 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066618244 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093471641 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127341398 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065193134 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068861634 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069340483 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076815208 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066388533 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093918155 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079768319 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064860349 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065674674 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066610256 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066336176 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081099387 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066997411 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067029396 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076651747 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071332991 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087171564 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070298728 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084715109 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06517667 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075521602 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066166362 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066570535 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063880448 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096003801 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071435534 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113683306 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066399034 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063657756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076698637 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075345515 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071234636 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064919316 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082773787 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076215611 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068409329 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076498216 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068463293 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068254977 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096270003 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065541152 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064533367 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063462319 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.06832373 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067676267 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065823288 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078671128 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064379551 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068231306 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079901254 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064989332 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065712687 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068534616 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067362249 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064795398 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078075212 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069255676 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066303501 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076998527 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065945812 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068426093 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078616839 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072850373 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065120046 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067062455 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.06837592 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067017844 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069284696 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068478905 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067561112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072119689 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072834662 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070752542 seconds)
  done (took 10.677760123 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158362036 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151099098 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067636227 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145161 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074147532 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071056848 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145683321 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085865173 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066103245 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066851736 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065705763 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094923138 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091700496 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.103807856 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07092412 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06607964 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089712051 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098640931 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148787977 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142996036 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090473663 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073035211 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068206504 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067489881 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067568806 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074767133 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083956671 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074626785 seconds)
  done (took 4.422569651 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.073412177 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.088571539 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070067342 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076794444 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084576667 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066321411 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067777853 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067436714 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08031708 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075269451 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066500642 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070618406 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069591961 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.06852712 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066581996 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071906113 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072425606 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065711192 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07003574 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071501174 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075966274 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090681624 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070083813 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065231497 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068206919 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065522075 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074639426 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077203925 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066250899 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.081187033 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063397483 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070297029 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079415207 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066791272 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065252649 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065972493 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065758033 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065982084 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065995251 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064149777 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064495898 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070591497 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06464698 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073915961 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079576579 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072726069 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067764114 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068565353 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0684987 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063492152 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068296647 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068160394 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068013818 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07309746 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069491212 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068726552 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069495698 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091479048 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071905336 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06599655 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065619005 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064318431 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068147236 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076043978 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082160628 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067926842 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064772371 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066248233 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071168676 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079374001 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064819404 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070431968 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063182331 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066683613 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.06839639 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06813168 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066463908 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064221921 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065371278 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065973859 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065881788 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065431279 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065373441 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.0684083 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064132127 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064510036 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065909257 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067201655 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074527797 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065408987 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069725673 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067020459 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064426216 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067924422 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071010059 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068223846 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078958743 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076650986 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066349877 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06413222 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078919954 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068055338 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065447143 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071938423 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070108191 seconds)
  done (took 9.161367763 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086024942 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06784956 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082519027 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089053852 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076204487 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071367026 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076873175 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067145873 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082311449 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065364619 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074843281 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064680935 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077657222 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076192559 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067842135 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07655559 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068643319 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083450057 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080367284 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064676735 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074674719 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078081379 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078191531 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080624431 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079626768 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080988189 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077806219 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068894083 seconds)
  done (took 3.948703834 seconds)
done (took 38.46160968 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.856801113 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.119011474 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.853932736 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.074863305 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.90329663 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.055013281 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.89176409 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.84420517 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.073862488 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.895382297 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.169936938 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.383778231 seconds)
done (took 66.963756976 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.885869427 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.009845332 seconds)
    (2/2) benchmarking "String"...
    done (took 2.107016496 seconds)
  done (took 5.899278807 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.133624784 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.644812663 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.109105495 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.844621979 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.850090547 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.279581665 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.646477736 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.299403956 seconds)
  done (took 31.456694922 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.040237894 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.077889841 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.550541485 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.580728301 seconds)
  done (took 16.073185502 seconds)
done (took 65.31963279 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.889796629 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.845049423 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.875576119 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.873855327 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.850789917 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.845943742 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.850025241 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.846804022 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.856825843 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.950674853 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.84483971 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.850983281 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.847560451 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.850048059 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.391075125 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.894696306 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.857855129 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.84944147 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.862844287 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.903088773 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.857271793 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.009694213 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.356558382 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.049424883 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.466359405 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.093358767 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.229173353 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.299809557 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.86861754 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.849239607 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.905468638 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.006822434 seconds)
  done (took 206.612542147 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.849701865 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.92955545 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.986980329 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.892969891 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.433906881 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.026410749 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.944590009 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.479057819 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.851650487 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.878569612 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.114025891 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.851360889 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.144725299 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.794610152 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.884729873 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.890676028 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.090261913 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.131192741 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.888817166 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.0088573 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.872266749 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.004948328 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.961328842 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.069728863 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.868644541 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.955318571 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.861120207 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.88185149 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.03617923 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.061096379 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.861323699 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.871176299 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.019606713 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.719630475 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.877073962 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.857754756 seconds)
  done (took 173.639966949 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.055945382 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.857056741 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.850780343 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.905128368 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.974425089 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.856007134 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.520819836 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.859633216 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.547402676 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.856363192 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.849606695 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.85013604 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.849030362 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.853548783 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.931925545 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.86388834 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.85348724 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.865849637 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.853266891 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.877914301 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.854382062 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.850958624 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.85196293 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.851049143 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.851202258 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.851903195 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.852240427 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.10910327 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.093341796 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.853049183 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.851371879 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.899120743 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.869608282 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.872808394 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.855916151 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.943886837 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.907378654 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.975955853 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.85692841 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.069678973 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.927997523 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.853066983 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.851368768 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.91668245 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.862972549 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.8524954 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.857299698 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.856412539 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.857445773 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.918888756 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.097274762 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.855024838 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.975292096 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.33041233 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.852368889 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.852861889 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.852942626 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.436403379 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.856906492 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.852867357 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.859106453 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.8600609 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.855122658 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.854834348 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.240936742 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.924184692 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.872109201 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.078324915 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.854872599 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.331632708 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.093811356 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.853213611 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.853238734 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.85367288 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.854178319 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.853649617 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.857649707 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.976465463 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.863917467 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.975978386 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.939694262 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.854689268 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.976853523 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.858831321 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.86510489 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.669413348 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.926800474 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.855088864 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.88979029 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.688876656 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.859368827 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.226506823 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.625195535 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.858210004 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.854765052 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.868619874 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.856344479 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.854541655 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.858609076 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.934446906 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.855225016 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.97777136 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.582699704 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.145299326 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.857384737 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.855805685 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.860421658 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.936699299 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.978116199 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.859210322 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.921769135 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.863621461 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.85877461 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.946212664 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.857209613 seconds)
  done (took 409.966856469 seconds)
done (took 794.119346409 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.448112936 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.428355575 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.525445195 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.435722947 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.415685466 seconds)
  done (took 14.046581636 seconds)
done (took 15.840636244 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.873287552 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.861736941 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.917312998 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.942481589 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.873134356 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.880702673 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.94147795 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.877550934 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.911196168 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.912089979 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.948021896 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.942286654 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.884082673 seconds)
  done (took 26.558300887 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.866383472 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.010816903 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.089026178 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.901616074 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.86509693 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.105151814 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.924321173 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.00940113 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.017589857 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.101507103 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.10983145 seconds)
  done (took 23.796705733 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.864695961 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.012111497 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.094922876 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.903962332 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.867268126 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.104350082 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.931235269 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.008559716 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.028772081 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.100636257 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.123309819 seconds)
  done (took 23.841883553 seconds)
done (took 75.993668968 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.861707649 seconds)
  done (took 3.657228221 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.892547111 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.028415664 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.862095474 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.858700694 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.859909551 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.862652458 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.859443203 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.861948511 seconds)
  done (took 16.881044262 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.861363478 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.861534133 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.861666209 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.861240827 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.861635179 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.861289969 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.86120816 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.861702195 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.86251537 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.860585287 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.861887971 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.861586296 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.86243021 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.861520166 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.862228901 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.862337855 seconds)
  done (took 31.583237712 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.863806337 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.862154416 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.862306214 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.86219233 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.861610406 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.862198943 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.86304817 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.861627861 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.86139607 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.862032511 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.862694354 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.86242512 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.862054983 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.862782667 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.861953765 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.863982813 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.861693899 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.862789929 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.866385968 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.86234534 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.864123914 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.862319545 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.863684065 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.862579066 seconds)
  done (took 46.50298471 seconds)
done (took 100.429897103 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.606144032 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.620995285 seconds)
  done (took 10.024593112 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.864522802 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.863902365 seconds)
  done (took 5.529827219 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.863623392 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.863920982 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.864883003 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.864245433 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.86438276 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.862488773 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.865661336 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.864541636 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.863009385 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.865035885 seconds)
  done (took 20.439186827 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.864105305 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.865089735 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.863652254 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.865951486 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.864884302 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.86458116 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.864231227 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.864603163 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.863981481 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.863754327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.865673849 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.863823412 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.865186952 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.865008289 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.865658726 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.865222446 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.864621971 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.865001582 seconds)
  done (took 35.362870761 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.865464917 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.865392529 seconds)
  done (took 5.529212137 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.86397843 seconds)
    (2/7) benchmarking "second"...
    done (took 1.865312452 seconds)
    (3/7) benchmarking "month"...
    done (took 1.864380959 seconds)
    (4/7) benchmarking "year"...
    done (took 1.865174933 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.866939241 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.865120764 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.865708214 seconds)
  done (took 14.855025639 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.865438817 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.024230114 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.096596833 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.708321414 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.867136781 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.869272418 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.222413546 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.870075471 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.871359831 seconds)
  done (took 21.194630426 seconds)
done (took 114.734964822 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.656703942 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.867113394 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.143308229 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.919104529 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.897189313 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.159682299 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.878537988 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.140752187 seconds)
done (took 43.465412814 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.873796286 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.864258547 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.892799864 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.895528511 seconds)
  done (took 22.454179353 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.866531884 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.64777889 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.911750503 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 4.086187181 seconds)
  done (took 23.516774901 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.251958125 seconds)
    (2/2) benchmarking "read"...
    done (took 2.213457784 seconds)
  done (took 6.270313425 seconds)
done (took 60.919712003 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865661264 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.866880535 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.865028482 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.865128321 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.865155572 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.865604499 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.864182101 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.864650483 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.865371218 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.865578081 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.864625806 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.864503978 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.866128441 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.862787214 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863930807 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.866402652 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864415881 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864348939 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.865652722 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867695228 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.865352957 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863445135 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.866152141 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.863895132 seconds)
  done (took 46.562808802 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.864004428 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.865842139 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.864430434 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.866276376 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.866883172 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.86589949 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.86644333 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.865410962 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.868242178 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.864735588 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.866377226 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.867386277 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.865077353 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.867082694 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8671185 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.866835417 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.866461132 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865846416 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866735769 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.868054294 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.867032448 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866650891 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.866872198 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.865428781 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.866511254 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866360493 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.86755715 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.867480944 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.865831634 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.8670274 seconds)
  done (took 57.793116713 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.867517867 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.868550479 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.868489918 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.867969569 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.867641164 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.868231101 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.868493906 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.866124148 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.869013687 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.868173667 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.871807194 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.867479009 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.867901042 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.868614377 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.868320106 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.86812755 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.867867958 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.867149428 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.869567329 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.868857114 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.869017786 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.868463747 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.870685339 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.868595538 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.869330978 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.869750247 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.86861497 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.867064889 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.868544438 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.868715012 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.867518058 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.867739184 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.869471284 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.86999549 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.86791206 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.870250356 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.86971436 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.869281305 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.869912322 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.871405692 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.870106559 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.87014016 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.870609372 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.870879273 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.870945626 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.869730297 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.869528177 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.868319118 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.868955265 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.870825339 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.872108765 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.871032284 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.872016605 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.869832145 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.870308614 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.8724301 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.870679861 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.870789138 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.873634471 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.870688329 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.870352061 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.870113804 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.86970397 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.871557563 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.871700735 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.870797806 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.870943175 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.872204072 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.870655442 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.870539819 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.871963715 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.872005524 seconds)
  done (took 136.417414988 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.872681671 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.875368085 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.870811018 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.871031832 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.870986403 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.872650165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.872140656 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872394752 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871694148 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.870374413 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872748844 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.871463698 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872282944 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.871974854 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874397748 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.872301671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.871232888 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.874850142 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.872041273 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.872004135 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.873809207 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.873646134 seconds)
  done (took 42.999349972 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.873778482 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.873589004 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.873407083 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.874130704 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.873787783 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.874572891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.873603732 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.873831784 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874592997 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.872983207 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.874715224 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872814437 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.872826672 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871600133 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.874315717 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.873146589 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.874993794 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.873081142 seconds)
  done (took 35.533382227 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.874739423 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.872698257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.873700384 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.873378929 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.874657291 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.874286358 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.873183488 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.876346973 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.87271689 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.87407645 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.873800514 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874419642 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.873373138 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873634349 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874180474 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.875293055 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.875339112 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875015196 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.875433289 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.876157344 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.876381749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.876685067 seconds)
  done (took 43.048316401 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.876472187 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.874846474 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.874391302 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.875166885 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.875073547 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.874906472 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.875739496 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.875602966 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.874585788 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.876044188 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.875881153 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.876800936 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.876102785 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.877093996 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.876668643 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.876336531 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.877466085 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.877424184 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.879935372 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.875434972 seconds)
  done (took 39.330722232 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.878156911 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877103299 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.876171638 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877912593 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876647911 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.879029706 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.877104493 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.876637659 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.876454575 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.877257459 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.87746449 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.877809364 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.877534982 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8766173 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.875927773 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876484454 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.876370527 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.875768146 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.876493777 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.878167597 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.878351461 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.87873102 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.876987358 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.878216441 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.877436778 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.877549047 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876828626 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.879954937 seconds)
  done (took 54.3772838 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.877544389 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.878568455 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.878720374 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.878562734 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.877855137 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.877968202 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.878970444 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.878945056 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.878596267 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.877120207 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.878653744 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.878238293 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.878740902 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.878338078 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.87897082 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.878265898 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.879158573 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.880805578 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.878700276 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879115494 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.880972353 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.878243939 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.881145314 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.878614965 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880917028 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.879647869 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.879082389 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.878106322 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.878296189 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.878839086 seconds)
  done (took 58.178452478 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.901001075 seconds)
    (2/2) benchmarking "in"...
    done (took 1.901333897 seconds)
  done (took 5.616859672 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.880649352 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.879144583 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.880323667 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.880064977 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.882161014 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.880439101 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.8808829 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.881287714 seconds)
  done (took 16.857250705 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.881281262 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.883650705 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.880786401 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.881606886 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.879879271 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.887790595 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.881537718 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.882521759 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.883305832 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.882875005 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.885405173 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.883512438 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.889856523 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.88438626 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.879184937 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.882293843 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.8831237 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.883601898 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.882548809 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.883171625 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.885794398 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.881831495 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.880984779 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.882051799 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.880915527 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.884967298 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.891910214 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.883502802 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.88492356 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.881409396 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.890082159 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.883886424 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.883596449 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.884224441 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.884402395 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.883924876 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.890420689 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.883722278 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.882622438 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.882310364 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.887020147 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.887235654 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.886554846 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.890521598 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.884310308 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.88386952 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.882947244 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.882900325 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.883994604 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.887558341 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.892042657 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.886865389 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.887330324 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.883969969 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.884851159 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.885162697 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.885528332 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.887563364 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.891883691 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.891089489 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.88783501 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.904530637 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.894725766 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.885294047 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.883908885 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.89175221 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.90976392 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.888394182 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.88686503 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.885829124 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.891897939 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.886181268 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.885148378 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.884973512 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.896414449 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.893458583 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.886053934 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.884893162 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.885098153 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.887003183 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.886996588 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.88520075 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.886916875 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.886530868 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.895370954 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.911285358 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.885330029 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.887152752 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.888559384 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.887969419 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.891590472 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.888587958 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.886195776 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.885735784 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.88850973 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.887720392 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.887457269 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.887188197 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.886267057 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.894317316 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.886079597 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.886582404 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.891152477 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.893277501 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.886205008 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.887695617 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.888537851 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.886400658 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.894076468 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.886271893 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.887641878 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.887574036 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.889130464 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.892828131 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.886835446 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8917682 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.896264321 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.89622205 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.889519587 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.889918896 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.891401602 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.891687627 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.896429503 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.911180807 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.887417607 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.892770026 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.893790618 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.899423605 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.891021172 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.887351579 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.893363798 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.888637824 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.88830707 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.891080273 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.88794874 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.889217077 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.888106956 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.88907348 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.890069851 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.889580955 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.891261838 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.890543505 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.890849179 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.889491654 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.89231456 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.889152226 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.893449965 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.898617961 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.890370287 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.889443661 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.890354723 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.89171086 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.891480153 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.890465361 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.88958101 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.888103028 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.889475545 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.890290276 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.89115366 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.889846761 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.890079882 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.890074995 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.894701515 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.891295833 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.890786868 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.890432422 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.889350681 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.891311449 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.891074689 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.891686848 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.891085834 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.889801633 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.893399674 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.889080583 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.889538803 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.890774028 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.891237196 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.888509214 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.893977536 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.90099816 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.893689682 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.899636274 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.889431948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.896053075 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.890692133 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.891959046 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.89189145 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.891560762 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.892412482 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.891112062 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.892602634 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.894494272 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.910396678 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.903909939 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.895673018 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.891785979 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.897538834 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.897169034 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.896462285 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.891223364 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891210736 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.893241954 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.892985012 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.892681479 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.893712414 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.893571759 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.891063969 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.893582368 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.896886756 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.89327452 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.891736668 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.893699339 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.892328241 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.894132806 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.894214029 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.892623177 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.892535376 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.891620222 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.89933146 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.895874718 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.894358239 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.892315576 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.896635071 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.893239735 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.893046632 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.893762301 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.89914099 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.893260406 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.894205537 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.901116866 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.895463242 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.894057463 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.893772462 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.893334836 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.896361458 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.893541183 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.896830044 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.902326993 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.896140007 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.894728039 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.896664257 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.893198413 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.897722837 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.893431575 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.894992781 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.894106802 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.895560982 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.893915965 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.894365929 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.899553331 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.892970591 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.893872448 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.893843791 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.896870547 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.894585278 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.896052453 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.893062569 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.899492458 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.903543391 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.899301074 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.896259689 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.896363565 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.895618967 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.894779433 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.89845399 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.895486247 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90554223 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.905667115 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.894408781 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.893566697 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.895025143 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.897680255 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.896966322 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.895243824 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.902365219 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.897092437 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.898228394 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.897995903 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.894946787 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.89356697 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.902365783 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.89843956 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.900543616 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.898163016 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.895247553 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.895241734 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.895473286 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.897613151 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.896114165 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.896603996 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.901620801 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.894850026 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.897897548 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.895133923 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.904085246 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.89666856 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.897062671 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.9019507 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.898037075 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.898050575 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.897326299 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.897447806 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.897624883 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.897976676 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.898104287 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.900375037 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.897355315 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.900990145 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.907839941 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.900038582 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.905995211 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.901373929 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.908225248 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.897665976 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.900183954 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.897974723 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.902461213 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.906017896 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.897180862 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.896068875 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.906081394 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.899898474 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.89792896 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.903237169 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.898298102 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.898508882 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.899008912 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.900203299 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.904767237 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.901515704 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.899104867 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.898868561 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.899522734 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.899628859 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.902433798 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.89828209 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.900666097 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.900817306 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.898842314 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.898779345 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.899092983 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.899687863 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.899518271 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.900271058 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.898846836 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.90761789 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.90135462 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.901210412 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.902906431 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.901152529 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.908582922 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.900488247 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.900502576 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.901317299 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.8985033 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.902359668 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.899091451 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.899430467 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.899891979 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.898890161 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.901359481 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.91073385 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.906601763 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.90136239 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.90202418 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.899837356 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.900046518 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.910516859 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.92598337 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.901136953 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.902706588 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.904758408 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.90762814 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.902402429 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.907740423 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.904892114 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.910273505 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.902265865 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.900547589 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.904598772 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.913943247 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.901438115 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.902665486 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.900609402 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.907514167 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.903955686 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.901522568 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.90326098 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.904441958 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.904465404 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.91308823 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.903383929 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.904126664 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.902684117 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.902064429 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.901772738 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.903472958 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.903958689 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.903742679 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.903560507 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.904137828 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.90511072 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.909132906 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.903428108 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.906031415 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.911608497 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.903865734 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.903953291 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.903677317 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.90289221 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.904670244 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.903626838 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.904009272 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.906203134 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.904653262 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.904096169 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.909382254 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.911976222 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.903858132 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.902407349 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.903419778 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.908033552 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.903357996 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.903353344 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.905023957 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.911757126 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.909136838 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.91661657 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.913505554 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.904069554 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.905948738 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.914085949 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.915181176 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.906118815 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.903915604 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.904372241 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.907598404 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.907224582 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.905089608 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.905779624 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.906058319 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.912362793 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.905274336 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.906015144 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.905016638 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.903609504 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.907570564 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.909711732 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.910150592 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.904090374 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.907477354 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.905147882 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.904990597 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.907904792 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.907979845 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.906838146 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.905951242 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.909095536 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.908908048 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.912706281 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.908112781 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.908276829 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.907928615 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.907328676 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.908387797 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.909402111 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.907040157 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.906198107 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.913580847 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.91484088 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.907552548 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.912286538 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.908380467 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.911095834 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.907945932 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.909205793 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.909768742 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.908157687 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.915209479 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.908258902 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.910074681 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.909612767 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.908921381 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.91219309 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.908158423 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.912924335 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.907843413 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.908056741 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.90709428 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.911625953 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.920994484 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.913225778 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.911169612 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.918700985 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.914627583 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.911543276 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.907892369 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.908208088 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.909346988 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.909966422 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.912946212 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.911759738 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.910777969 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.910313244 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.910130145 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.907763495 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.911820719 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.908421124 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.909224416 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.912212061 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.921080265 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.916354967 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.910290142 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.911903292 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.909582141 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.914180101 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.919789601 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.909252932 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.909992246 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.90962983 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.911541508 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.910937774 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.91865543 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.919758936 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.914582251 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.910218446 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.917025261 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.929856944 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.91232256 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.921326394 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.941632124 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.913804706 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.91063416 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.913138389 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.911389895 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.9108967 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.913269509 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.909886346 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.917595131 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.911496429 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.910729239 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.915806813 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.912646381 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.910084818 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.911661881 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.911852589 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.918181927 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.911984934 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.918232847 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.912147946 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.912565353 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.912961348 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.911900277 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.912442395 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.911407002 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.911415208 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.914464823 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.911461606 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.91369987 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.92093096 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.912693277 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.91403848 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.924229187 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.924151373 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.911774155 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.911881147 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.913781329 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.917019588 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.914447073 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.911554604 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.915650328 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.921345436 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.917565373 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.921100458 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.914279743 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.914348602 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.912413126 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.912136008 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.913719407 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.923332199 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.924605775 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.914525139 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.913284521 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.918159981 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.91119567 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.918689979 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.915953261 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.911900661 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.913376116 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.911626582 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.910890079 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.91148603 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.911278292 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.914975853 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.919458749 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.911823478 seconds)
  done (took 1134.111579078 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.908024978 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.907571965 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909314485 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.90878858 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.909063966 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.90794331 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.909013901 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.909046601 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.909850778 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.910039576 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.908565515 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.908357387 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.908291152 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.909090774 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.910840242 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.910271727 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.909039362 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.90900423 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.909730443 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.908607462 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.910272843 seconds)
  done (took 41.934709914 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.911010046 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.910979334 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.908759096 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.915991951 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.9042339 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.905161125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.906563404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.905554269 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.907822358 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904176377 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.903091321 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904641039 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.903593083 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.903443948 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.904454934 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.90120756 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.900665073 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.902333558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.899570227 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.901132384 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.901881149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.903448656 seconds)
  done (took 43.754007588 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.903107768 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.903328799 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.901707087 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.903683782 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.902121497 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.90240763 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.901826753 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.903040798 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.901043402 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.899554289 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.910270907 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.911316437 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.900901857 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.905561597 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.902770523 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.90117659 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.051091808 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.902522896 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.90259669 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.901359564 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.902374498 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.906980267 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.90039938 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.901896954 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.90178754 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.901561776 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.902142846 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.904631193 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.899652921 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.903286631 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.908021241 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.903840819 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.902473058 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.904900225 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.90276028 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.902078398 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.906153849 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.900826376 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.899933861 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.899713809 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.907772978 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.925596916 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.898898869 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.898137175 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.905199076 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.896040716 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.896114797 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.900724237 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.903511004 seconds)
  done (took 95.236442854 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.896262065 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.896378104 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.89572 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.897999375 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.899116652 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.897133606 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.89805168 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.897994169 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.895963114 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.898590009 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.899025473 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.896946102 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.89736023 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.896391414 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.896842689 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.897424419 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.896712312 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.898206648 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.895312842 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.897098211 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.896043625 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.895208762 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.896516017 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.897393545 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898128249 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.89657214 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.897966549 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.897931281 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.898572829 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.89975326 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.896431057 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.899181604 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.89649281 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.896241416 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.896163204 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.898949972 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.898578104 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.897257634 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.897287625 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.898985261 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.897672865 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.897430204 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.896190837 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.897160381 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.897042227 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.895695808 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.900581885 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.896681454 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.895940343 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.895464122 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.896400419 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.896375076 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.896367392 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.896425381 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.895172934 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.896846603 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.896995228 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.895869301 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.896292102 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.895601913 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.898596553 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.896190494 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.897608398 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.897482115 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.896082216 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.895339485 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.896316568 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.89761308 seconds)
  done (took 130.832994917 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.89298658 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.893103339 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.895292104 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.892953302 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.892729492 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.889234587 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.890400915 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.889007506 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.888551594 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.890766882 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88738179 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.887631894 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.886895277 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.886923237 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.888623617 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.885851937 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.885275509 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.884515292 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.886733308 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885925734 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.887342064 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.886019419 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.885468727 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.88558944 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.885733827 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.885130189 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.883829269 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.883850716 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.884347402 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.883038344 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.88494001 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.883297954 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.883764091 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.881581221 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.883459739 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.881806585 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.882432739 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882552734 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.882386132 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.881985579 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.881645485 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.882396992 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.881314715 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.880802648 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.881125038 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.881678138 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.881780044 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.88097261 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.881128274 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.881493557 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.882890048 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.882269086 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.882055388 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.880948096 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.881153548 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.880130879 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.881264332 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.881490276 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.879997066 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.880386986 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.880005383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.880829462 seconds)
  done (took 118.675165987 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.880099803 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.879281759 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.879821766 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.880037654 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.880621075 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.8808575 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.87898412 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.878989676 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.87841492 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.877937705 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.879778437 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.878202863 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879207174 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.878662166 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.878671062 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879534493 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.877048574 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.877159232 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.877264743 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.878084521 seconds)
  done (took 39.392722162 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.877988016 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.876681896 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.876856557 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.876118837 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.877670561 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.877541519 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.876421115 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.87799391 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877249461 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876966795 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.878282481 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.87760999 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877385743 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.876503017 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.877290604 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.876343496 seconds)
  done (took 31.845747908 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.876667959 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.877830232 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.87788263 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.877301204 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.878037315 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.876281347 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.877192678 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.877178018 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.876469805 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.878019495 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.877732605 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.87682087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.878109159 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.879103928 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.877728156 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.877297593 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.877597719 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.87793085 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.876962464 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.877626999 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.878041587 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.877322982 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.876189287 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.876609804 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.876278452 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.877435851 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.876939107 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.876508753 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.87599667 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.877663045 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.876687431 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.877232821 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.876545766 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.876809932 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.876265687 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.877062137 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.875915593 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.876886692 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.87671806 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.876648522 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.876541391 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.877405786 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.87668205 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.87655972 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.876662142 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.877925449 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.876996451 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.87627844 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.875749504 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.875391715 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.876513087 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.876119631 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.876041969 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.876152102 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.875701299 seconds)
  done (took 105.045910452 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.875570586 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.87706763 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.876576982 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.875134929 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.875641423 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.878256827 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.875411706 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.87586604 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.874768152 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.875695764 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.874735974 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.874575423 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.875101161 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.875215048 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.87445877 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.875253819 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.876873928 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.876129062 seconds)
  done (took 35.57200953 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.876062237 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.876103774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.878177372 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.875659328 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.875506281 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.875642467 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.87698769 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.875854825 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876036557 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.87551665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.874571679 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.875595435 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876033355 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.874947386 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.876280622 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875812393 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.876415201 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.875331255 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.877414146 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.875512988 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.876404363 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.875985516 seconds)
  done (took 43.081549623 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.876029798 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.87574885 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.890276115 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.893491274 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.893993016 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.906437277 seconds)
  done (took 13.144687515 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875306286 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87619496 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.875760132 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876392947 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878669867 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877488664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875251129 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875201072 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875933538 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875530228 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875474125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876623448 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875805048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876979242 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876034557 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876110069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877822226 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875271739 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875800465 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876187943 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879190361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875717069 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876972028 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876259902 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876277918 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876564951 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875987371 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878196351 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877482646 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876706695 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877123943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877062412 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877826571 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876840929 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876959105 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877050587 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878872109 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876095866 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877459054 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875901091 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.87605393 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87694709 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875984061 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878614715 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877388385 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877575345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877679734 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876232559 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879012814 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876678795 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878516355 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876554676 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879256595 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877792923 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878797276 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878215624 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878415476 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877824871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878320949 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879247667 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87837818 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878406507 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878581615 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878174876 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87932172 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877982221 seconds)
  done (took 125.70136459 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878692133 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.878715044 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877980352 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879769961 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878082518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878774565 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878713516 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878325301 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879169263 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879363665 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878130849 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878465498 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878052673 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879390225 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879453534 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878358021 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879542466 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88084655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879397091 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880615401 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879075384 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880056946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879617775 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878197848 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88250926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87921237 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879384159 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879560017 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879770954 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880423518 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879642255 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880361541 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880083426 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.880912002 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881104505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879978341 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880039377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880039522 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880239208 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879787807 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880946625 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881322577 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880541141 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880888822 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879893194 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88059097 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880935978 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880754639 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880583 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882678186 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881735256 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882832641 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881068999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880970209 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88160892 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881517309 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882844828 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880873752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88103466 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881890253 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880990004 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882479499 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881541168 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882346894 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880978019 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882719799 seconds)
  done (took 125.911596236 seconds)
done (took 2622.761880194 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.900333964 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.988956492 seconds)
  done (took 15.704562138 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.04679461 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.999287263 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.884048449 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.908125769 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.884200523 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.899078298 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.905297064 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.883500063 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.884969985 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.884230655 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.884096948 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.06820768 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.899735118 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.884998451 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.884707464 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.978549605 seconds)
  done (took 52.598883167 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.888519051 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.889017793 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.899810792 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.889916101 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.889409646 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.903060414 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.919542506 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.89398919 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.925895381 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.902804154 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.959946982 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.900045157 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.888747712 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.940355623 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.90308692 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.904476917 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.985600112 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.965115968 seconds)
  done (took 36.265921892 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.965488156 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.89841686 seconds)
  done (took 10.686211183 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.884898432 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.909550202 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.920367597 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.889619988 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.898409501 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.913176716 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.924204099 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.918968895 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.897872753 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.916351542 seconds)
  done (took 70.89252696 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.894440715 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.889879247 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.891426189 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.886539098 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.883417901 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.889688265 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.888643887 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.884794275 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.569679412 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.927065638 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.896218019 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.896600333 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.887638297 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.891258502 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.885763594 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.912645159 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.995242503 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.885233747 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.884999866 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.895556569 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.887165857 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.940058757 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.900308565 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.88819409 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.920797851 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.563505565 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.898016647 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.893258344 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.016319898 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.886008419 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.888154173 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.098550003 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.892903285 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.353273904 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.163175063 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.892963604 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.900168214 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.895912902 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.886397134 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.008490059 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.889981673 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.895770917 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.856914967 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.133743529 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.985828444 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.937881096 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.232655018 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.891202683 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.890696305 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.923654371 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.89451403 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.889575233 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.906598594 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.394579067 seconds)
  done (took 133.95283082 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.885327941 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.23465876 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055717096 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.889577222 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.170910139 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089850639 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.887499061 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932836402 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.887487818 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.113105894 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.141887476 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.992261356 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.889466831 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.886929292 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.885660014 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.887177294 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.040740363 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.957212905 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.891273572 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.885793 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914211877 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126803209 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.007123186 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.891862726 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.913546802 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.095936718 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.00754895 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.990606286 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.664510996 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.88792827 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.948683025 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.890380435 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.888134992 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.887555086 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.041303916 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.981165911 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972136026 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.889869152 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.887989671 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.886870591 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.632055439 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085826368 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.983399728 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.016961356 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.138103687 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.09144875 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.672030096 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.887483372 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.620666008 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.049698571 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.118521457 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.114481245 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.007263612 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.890052301 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.226490321 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.887898693 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.88927613 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.135099827 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111899509 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.987457895 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890591442 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.89000983 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.88868317 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.1768896 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.891521432 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.982055606 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.890459754 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.890817312 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.984221795 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.992774847 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.121198369 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098008347 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.922106783 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.244567549 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.395940897 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.134062717 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.95317551 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13785484 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.892458243 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.889431661 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965842831 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.739947263 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.141487783 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.169387632 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.134845742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.925756698 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.609385907 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.889640772 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.114070985 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.113457433 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.152092058 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133031753 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.127285399 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.203434633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.890129126 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.891122546 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.227695439 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014730485 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.893334632 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.233250334 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.121606949 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.453361014 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.916212066 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.193860237 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019897694 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.893986696 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.525257271 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.892232928 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.119725226 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.929806505 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.892510248 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.892126347 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.108665979 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.885402503 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.891614333 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.535585795 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.9537968 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.893853151 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12267666 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.894896051 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1606298 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.898797049 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12467406 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.479019438 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.9212716 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.064251765 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.137396442 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.896000912 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135462743 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137788907 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009994149 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110268558 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.599353258 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.893408946 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.178559351 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.899144653 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.892929262 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.059408805 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.894079954 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033421718 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.893774532 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.186052552 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917323763 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.131350393 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.898837795 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.146205669 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.928528631 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944412508 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.901108181 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022293447 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.897430826 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.812243978 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.049192003 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.894576575 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.895363288 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.444416875 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.892833094 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.039882201 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.120366282 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.91695443 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.963555982 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.553511887 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.89512054 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97398099 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916699421 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.279359887 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.894654799 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.144549007 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.896541757 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.895452105 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.893852074 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.177794932 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.076121114 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.897357964 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.893646924 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.803221967 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.894996583 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.893488065 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.075353145 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.243587093 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.895430641 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095533671 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.90014829 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.021511866 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.902650712 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.969544337 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.227348148 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.89468314 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.896238221 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.895357343 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.894811417 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.895861718 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101772562 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.925520598 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.436283798 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.031684695 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.169550069 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.205116018 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.133434027 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.936063064 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.898171716 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.15479335 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.901364879 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.956725134 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.900021908 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.915377029 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125292385 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.901597232 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.10358678 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.165059234 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.769467072 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940484182 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.897652973 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.8986665 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.89690844 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041089771 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980724326 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.900393052 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.898808562 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.010245556 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.017233218 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.104670732 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.8993511 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.967738437 seconds)
  done (took 908.126472756 seconds)
done (took 1230.047267769 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.89679036 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.897923584 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.901704656 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.901779123 seconds)
  done (took 29.429020529 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.898997554 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.899785403 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.898443305 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.90035021 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.90032457 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.900227325 seconds)
  done (took 13.228459423 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.048549878 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.900222588 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.902522587 seconds)
  done (took 21.681956759 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.973379709 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.305488238 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.037552117 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.332926106 seconds)
  done (took 10.480462251 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.900953485 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.900767393 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.900844625 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.901146007 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.900405894 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.901786367 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.903172339 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.900427134 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.9025605 seconds)
  done (took 18.944907761 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.673475882 seconds)
done (took 100.272524022 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.221381802 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.914915162 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.898081152 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.01114164 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.964433377 seconds)
    (6/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.29154503 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.273585265 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.994577448 seconds)
    (9/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.160244049 seconds)
    (10/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.910314714 seconds)
    (11/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.3656228 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.900238556 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.989888939 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.923482746 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.137469921 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.926891375 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 6.899821176 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.08624286 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.064431852 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.959701937 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.921681319 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.298237415 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.981505723 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.903403194 seconds)
    (25/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.164912317 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.423696587 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.98920096 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 5.113340354 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.990917167 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.288210208 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.243404983 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.145204223 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.901940016 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.689804374 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.207599757 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.046457819 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.926442154 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.900613316 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.451720398 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.535573749 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.913898196 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.069979498 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.159880015 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.960652495 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.105201714 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.995854563 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.977205446 seconds)
    (48/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.658050684 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.769214079 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.02125873 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.155114001 seconds)
    (52/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.004717414 seconds)
    (53/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.907331466 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.36117214 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.118479414 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.905656076 seconds)
    (57/309) benchmarking ("sort", Float64, false)...
    done (took 5.642281443 seconds)
    (58/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.182891096 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.030037691 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.126429577 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.577292451 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.155531986 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.842769933 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.908968026 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.102905688 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.056328454 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.920752877 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.903060522 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.996091424 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.044227965 seconds)
    (71/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.021453156 seconds)
    (72/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.946311307 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.562918932 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.392909233 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.91065357 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.18644875 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.117575123 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.921076384 seconds)
    (79/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.413078927 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.778655547 seconds)
    (81/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.048851873 seconds)
    (82/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.037695157 seconds)
    (83/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.685896722 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.050935606 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.375248522 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.234857378 seconds)
    (87/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.056968654 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.963464669 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.981566198 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.902629556 seconds)
    (91/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.396351757 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.377629172 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.062068358 seconds)
    (94/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.927197604 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.979896257 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.092945174 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.165854045 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.004140814 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.990578329 seconds)
    (100/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.421583903 seconds)
    (101/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.390258249 seconds)
    (102/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.31079668 seconds)
    (103/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.003772136 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.303741466 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.968271245 seconds)
    (106/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.034948896 seconds)
    (107/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.007625762 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.151297751 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.909284155 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.988829617 seconds)
    (111/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.906712435 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.014084362 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.922235286 seconds)
    (114/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.076149925 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.933416967 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.113106583 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.915441344 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.939656418 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.913650395 seconds)
    (120/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.072933626 seconds)
    (121/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.990643301 seconds)
    (122/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.04695845 seconds)
    (123/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.042891901 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.216846242 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.99220445 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.163557981 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.931332 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.905433186 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.72289663 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.391625211 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.910324851 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.05023417 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.289655712 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.298209933 seconds)
    (135/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.165598871 seconds)
    (136/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.213471303 seconds)
    (137/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.039204777 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.9370992 seconds)
    (139/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.656242746 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.073747556 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.170882112 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.05391562 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.239822744 seconds)
    (144/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.430506298 seconds)
    (145/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.812978816 seconds)
    (146/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.934513047 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.909948316 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.225429022 seconds)
    (149/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.355245945 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.995622112 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.304076367 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.205152629 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.936660174 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.185655249 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.43622078 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.271748079 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.220937497 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.490684215 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.668978685 seconds)
    (160/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.805847003 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.227815491 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.928252813 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204899896 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.815155383 seconds)
    (165/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.607196049 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.017592325 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.057091657 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.912810267 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.887461795 seconds)
    (170/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.993657263 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.041750725 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.919718387 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.761156125 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.993234789 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.256536772 seconds)
    (176/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.53990717 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.909827005 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.920297666 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.929984245 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.211987666 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.99270608 seconds)
    (182/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.825241558 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.990073069 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.180397749 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.038825749 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.393152817 seconds)
    (187/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.238274788 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.05951091 seconds)
    (189/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.131951706 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.044306746 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.044323215 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.920316074 seconds)
    (193/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.317078058 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.853748292 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.47231181 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.943295228 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.991075535 seconds)
    (198/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.932487885 seconds)
    (199/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.986097295 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.738275263 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.944624297 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.259122679 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.156901165 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.531566611 seconds)
    (205/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.788382737 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.095130865 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.983889513 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.040534305 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.224111572 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.089211686 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.166525023 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.825181437 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.644535544 seconds)
    (214/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.005682848 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.136656814 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.121547691 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.91323034 seconds)
    (218/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.245076498 seconds)
    (219/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.865890782 seconds)
    (220/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.235738239 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.214533539 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.513882051 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.058562719 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.019686677 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.569443538 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.912871693 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.944006295 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.948916467 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.10134457 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.946324772 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.24611289 seconds)
    (232/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.304223806 seconds)
    (233/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.914673909 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.071640664 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.197661226 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.937905595 seconds)
    (237/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.329985549 seconds)
    (238/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.11320683 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.247716674 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.314152313 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.12247758 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.913699259 seconds)
    (243/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.989759508 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.244266337 seconds)
    (245/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.6161986 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.187911654 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.915007321 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.060265485 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.384612156 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.914338753 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.914864617 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.19284139 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.014565156 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.2314177 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.930067523 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.007294251 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.453339025 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.141139511 seconds)
    (259/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.242805657 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.673973037 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.113000622 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.015391394 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.016450814 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.917181922 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.247168259 seconds)
    (266/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.307200725 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.915407005 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.938863742 seconds)
    (269/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.010299969 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.916949155 seconds)
    (271/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.092776747 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.921613428 seconds)
    (273/309) benchmarking ("sort", Int8, false)...
    done (took 4.796111268 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.934050318 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.913848749 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.766001851 seconds)
    (277/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.918125296 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.023247162 seconds)
    (279/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.835179922 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.179430089 seconds)
    (281/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.074945518 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.546289282 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.429844319 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.050513434 seconds)
    (285/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.006196395 seconds)
    (286/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.014279513 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.069123069 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.54791269 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.145915583 seconds)
    (290/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.802268536 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.941963748 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.692583409 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.798106434 seconds)
    (294/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.919603429 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.050419116 seconds)
    (296/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.001303856 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.25599932 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.034671474 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.92218386 seconds)
    (300/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.93814542 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.916228276 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.947589229 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.283892335 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 5.603946121 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.906703276 seconds)
    (306/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.936445388 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.915591683 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.75267592 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.874956642 seconds)
  done (took 1023.894689882 seconds)
done (took 1025.811300825 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.946092777 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.940199971 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.919496026 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.941147255 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.032909442 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.963880212 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.934348306 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.923937086 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.970299044 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.970703222 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.917746727 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.960934106 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.921200605 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.921511814 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.920435494 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.93856211 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.226802538 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.944140761 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.93969932 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.933441231 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.939440654 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.918355338 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.973055391 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.962737761 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.925586708 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.926190734 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.925476715 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.94126393 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.033816221 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.92499801 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.925648648 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.934392111 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.226019405 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.943754333 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.919607096 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.94150778 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.934251893 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.935055514 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.925986422 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.954087047 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.359301937 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.925271767 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.924772619 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.922291383 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.923290686 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.930161834 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.923146481 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.92996057 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.937868042 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.939433963 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.353425894 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.942625303 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.926299165 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.923572779 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.935598405 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.923374074 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.925362396 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.94004761 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.942448002 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.939167247 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.214938179 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.952873288 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.928663301 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.940330921 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.9315833 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.390084933 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.925920299 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.931219344 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.359774125 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.936217065 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.388573542 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.938717009 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.928319846 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.939424371 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.957293495 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.229615763 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.949108852 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.924726835 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.933460934 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.921850191 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.936679137 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.938731271 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.929374794 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.925635655 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.942443714 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.968295869 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.936999661 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.926641808 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.936026341 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.944534539 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.93363714 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.936445062 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.92846973 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.923311502 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.938501906 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.929150194 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.928714292 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.928342996 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.930272896 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.939350871 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.360137367 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.948045458 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.921940159 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.924042874 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.924020168 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.939968374 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.358906933 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.931163593 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.949447704 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.975296814 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.927401661 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.217230891 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.952318643 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.943295377 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.938249978 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.928278893 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.924862633 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.217750516 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.379206022 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.94663555 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.927082524 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.924374813 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.944049258 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.927875792 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.923711306 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.230914505 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.9524461 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.943677095 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.050412003 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.94156303 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.960295514 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.924834544 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.932189672 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.972935947 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.946431983 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.960150287 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.929459834 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945721294 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.946078023 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.92488258 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.940421661 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.940826328 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.92738679 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.935936412 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.925805079 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.972827967 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.942977249 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.942035616 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.948406164 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.050386457 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.925373372 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.220523518 seconds)
done (took 302.496490468 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.002728202 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.922953505 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.043515642 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.92679137 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.011354698 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.995963864 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.92501882 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.926023287 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.925670335 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.426920126 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.92509663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.933289487 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.92595349 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.925650785 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.995796474 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.926387528 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.92661367 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.372533459 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.926870763 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.005375179 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.926196543 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.926620526 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.927153546 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.445462934 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.925327651 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.926838574 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.004147093 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.928397782 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.377268683 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.92475853 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.924211617 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.391288746 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.005850394 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.958627441 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.934004034 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.932350916 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.013912864 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.93752522 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.993768906 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.99341855 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.046721368 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.958923747 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.926901016 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.92649815 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.930507061 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.928968792 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.92645505 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.959127676 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.928076003 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.934430909 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.372976976 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.933070822 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.93443175 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.928703054 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.927568629 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.955530173 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.929025649 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.928731155 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.006799289 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.93036632 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.99627233 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.431200751 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.429512003 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.928732288 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.927053187 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.929162318 seconds)
  done (took 189.181580304 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.992859168 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.003294426 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.994349993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.93264775 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.977583518 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.995642222 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.931759767 seconds)
  done (took 15.688192776 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.934728026 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.929446477 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.978521913 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.97858366 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.930222987 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.108087606 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.940141054 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.934779718 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.956992282 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.929910298 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.594396134 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.977787743 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.936308212 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.928939093 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.942868498 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.984987642 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.932011357 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.931858244 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.045209583 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.07891425 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.935779858 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.938122946 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.956162075 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.941492583 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.930481798 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.930515604 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.931206461 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.937731613 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.92968451 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.929942313 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.929917669 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.982687161 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929944257 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.930836537 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.931713914 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.931752481 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.930577116 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.932044482 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.930320243 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.930223249 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.931112425 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.930840675 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.930086015 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.929817432 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.931001159 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.954647477 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.930784766 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.931218513 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.930486127 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.931355184 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.957741803 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931677581 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.930539814 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.935781593 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.973725793 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.938615869 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.932471046 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.931425633 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.932201042 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.932065378 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.932496834 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.081063507 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.983334993 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.931739169 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.981264825 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.084637108 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.9315835 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.930782636 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.932420481 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.021567216 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.931779374 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.981239511 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.931174595 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.046296751 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.932738205 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.11221595 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.95507537 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.938625573 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.936389804 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.932147714 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.939975046 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.933165987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.933583 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.939100858 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.937863613 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.93349681 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.932922466 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.935486314 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.939542636 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.932397116 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.984875135 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.93248241 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.93405587 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.073172338 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.933196744 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.049210039 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.96120649 seconds)
  done (took 212.020733775 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.939613028 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.939128612 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.934862336 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.947600095 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.93442457 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.933510066 seconds)
  done (took 13.49270882 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.934754204 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.936291226 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.933098821 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.933731582 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.93302657 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.934348457 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.935710243 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.935847927 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.937656227 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.933558289 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.934538772 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.935205784 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.934508825 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.933504837 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.935518516 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.933749582 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.935364841 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.93408401 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.933404827 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.936443147 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.140286768 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.934505381 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.933230046 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.939631485 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.937978187 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.934288542 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.947305184 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.933712019 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.934467978 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.942302328 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.938459584 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.935621145 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.939274157 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.939281688 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.938454504 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.939215356 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.938068106 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.935273471 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.934718169 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.935589004 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.936786627 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.935644785 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.934863811 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.936371829 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.937332172 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.942683065 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.938790757 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.948752097 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.935178695 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.937291655 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.936738072 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.935208547 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.935612213 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.936347414 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.940369339 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.94226788 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.939974608 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.936357016 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.935222211 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.94067021 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.940037665 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.937123456 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.938763974 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.940070582 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.94462362 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.938312188 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.941225226 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.93967478 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.936566569 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.936147078 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.937164875 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.937553734 seconds)
  done (took 142.542303464 seconds)
done (took 574.796587561 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.975580465 seconds)
  done (took 8.842508229 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.069617274 seconds)
  done (took 9.032586454 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.641492464 seconds)
  done (took 10.508722057 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.956775542 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.974157745 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.948564043 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.938172821 seconds)
  done (took 29.69278557 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.2784525 seconds)
  done (took 9.145266913 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.945795003 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.940370099 seconds)
  done (took 15.825959939 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.948131818 seconds)
  done (took 8.815627455 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.282456317 seconds)
  done (took 9.159159834 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.95801824 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.959055782 seconds)
  done (took 15.805617374 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.940514012 seconds)
  done (took 8.80774079 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.172862343 seconds)
  done (took 10.130491938 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.941244212 seconds)
  done (took 8.848597133 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.971652149 seconds)
  done (took 8.841401046 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.219411189 seconds)
  done (took 10.086207497 seconds)
done (took 165.413395869 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.940378091 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.942641781 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.941526741 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.941514093 seconds)
  done (took 29.634022367 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.972888186 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.972905111 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.980980587 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.973968967 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.962775796 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.962429298 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.972156339 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.97321741 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.963462668 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.972934542 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.97396862 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.970445577 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.973252595 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.981795535 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.981706639 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.97149627 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.973046555 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.97336824 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.964580698 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.981413743 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.970915123 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.973617838 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.939024886 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.93859871 seconds)
  done (took 49.14324989 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.127843385 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.007042423 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.094391939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.992471079 seconds)
  done (took 10.091473823 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.938604889 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.002606428 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.990080406 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.98613668 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.990913887 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.041551828 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.99220954 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.075503452 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.066661982 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.065303207 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.947301607 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.959980086 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.963444053 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.986964602 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.044634437 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.939668025 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.93950758 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.055303503 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.002812148 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.12757841 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.938888344 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.994120639 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.991005764 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.993639471 seconds)
  done (took 49.904777451 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.94015926 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.948709976 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.947811868 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.940700297 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.940265089 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.942079323 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.948037454 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.941902247 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.963214192 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.942754111 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.941144643 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.941895513 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.948157113 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.941527452 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.941714907 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.955594168 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.956077545 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.942506443 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.94551979 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.948939012 seconds)
  done (took 40.789632078 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.939117637 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.785378129 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.285116269 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.191204956 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.94030152 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.94131799 seconds)
  done (took 31.952955563 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.954814324 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.9471096 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.941139857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.997714697 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.079774607 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.947094161 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.942440098 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.95146512 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.984910434 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.006343768 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.959037533 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.96756451 seconds)
  done (took 25.550334728 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.942159324 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.946222454 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.944406729 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.955674656 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.95090284 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.950903149 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.949042499 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.94210817 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.95631108 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.958377413 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.949083681 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.953860577 seconds)
  done (took 45.274442657 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.646566558 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01639553 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941746872 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.816252863 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39901185 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.493205661 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.837633532 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.695885902 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.409586538 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.869670686 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144575722 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.942098656 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.025122019 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.943108712 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213356171 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.285721389 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132859047 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184348498 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.58235939 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974994281 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.144559294 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162383774 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.231118799 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943189164 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945761662 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.069649328 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36136735 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.744741759 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97606924 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.231907056 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185492762 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.891286826 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99957579 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.94891276 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.958854409 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946121967 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949251746 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214654237 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.08455004 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078034471 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018251561 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195349055 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948341241 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.364598937 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.647851052 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.230941262 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.057029675 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944923053 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946631191 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945250056 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.870849649 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026817748 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.947100075 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949862387 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.646845199 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945521238 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019157584 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.946417654 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153231909 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.751724846 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.629090736 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.947403548 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947848986 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.519881937 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.041112947 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.064341803 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661530862 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326595199 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.360442793 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.042842346 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.946875338 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947787619 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.060299895 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909655432 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.71930027 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982090344 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.082061808 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.961968096 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.586448413 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243936002 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.361425775 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.498750072 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864462651 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225025373 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.623357231 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.932557574 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161869034 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.795639102 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871458848 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162708584 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976454805 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94917078 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.212014661 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705584509 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054907179 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.958505959 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381454581 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964001026 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950953384 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950185305 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.160742429 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323795678 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97785003 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066330459 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963379161 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.030358907 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872955306 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.961419767 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.948147726 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.851622475 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955588995 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862308851 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.990856125 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.602583228 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.986646998 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.888660801 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949859073 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.037574321 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986694273 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.898641066 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202046297 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.25128506 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.622013471 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890329275 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.077862179 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.309897839 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169449702 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.957494062 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.167305852 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479358551 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.36814249 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995506072 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240532009 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.013962577 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244019514 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377990797 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028582042 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.735699861 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.574921067 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.167349966 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966239889 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.953829801 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954360485 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956413225 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888829176 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.592643967 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.307573327 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.118750182 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.165774535 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.251002785 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.931239342 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.880794788 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255262628 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.088646295 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.94495809 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.610220452 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.335156918 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.75468441 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.977862183 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.068666309 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.112740971 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.90984369 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966866413 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029068262 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970481717 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.960329623 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.303653049 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314819988 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.954803229 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.955324859 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.901096846 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961743522 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.955256097 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.488762053 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919556086 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.956379883 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.964906677 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.826998967 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026527711 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956793912 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954946328 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.487677759 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.456034949 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.955355735 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.611219626 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.077250008 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029178367 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226182669 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.311448902 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077858279 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.658501538 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.37367554 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.063269366 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.653925532 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.879434343 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953926011 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.894668834 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955785784 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.954610932 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957814172 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.135914248 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.223005251 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257344443 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.423138795 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020790365 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157528337 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.661791034 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906584446 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.956133075 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960170693 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.955837968 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953939422 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.462923121 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.250029083 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.040401492 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983879833 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960358618 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083891865 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.965753435 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.881111625 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.955829888 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956375518 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37004287 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980047769 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.907191428 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.232237091 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.835096361 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073118055 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004237062 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.967179357 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961010018 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.658372963 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.99561066 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883137945 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369491502 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987567014 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.707248467 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445058584 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.54350806 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264864031 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.276203048 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.283826485 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.028824211 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.169834172 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041050746 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010236743 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043495547 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891066288 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.882504301 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.606112964 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293457508 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224849696 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964724796 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174113658 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.657513208 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185474319 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988818631 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.608277397 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260406085 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936180085 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973361362 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.263579872 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059407342 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039193833 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96038431 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.914527164 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291614114 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996246197 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.660536844 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972426511 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310753401 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374258168 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.020097777 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.297432081 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160915164 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.961445407 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312433109 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.141716641 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.991982735 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.964112779 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.945201757 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.174194909 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539048528 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.81501725 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964590171 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.092040589 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251917116 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.864182791 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.958981053 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.079169792 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212444278 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955672744 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.282929358 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323415315 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.068957681 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019301921 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186887199 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.611637765 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258317229 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.506083972 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.43967443 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962469776 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.882654951 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.657424754 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.159258994 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.955599011 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920654706 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168630224 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187009932 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635909015 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172376998 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.199803668 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.966639954 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.225152903 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02525003 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.051362145 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.233927202 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.387676225 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.203688158 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18547239 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502060304 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175345149 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4198343 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.11951967 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.95787843 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16148885 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172677861 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168945357 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.295275202 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130028988 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.677168225 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.969588853 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.169048757 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262398174 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020731564 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.30712149 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.130319747 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.046982071 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968565862 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026544673 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967560914 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97088299 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.311706827 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.49117258 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.977537122 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039985403 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.054807399 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.464777011 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.966656595 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.969864566 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231812132 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326718946 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.298139101 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.94848663 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.963143075 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969397276 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092326367 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.889777736 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97063013 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2338157 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.96720141 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353753629 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.10688258 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979621906 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.249697098 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.346036718 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.605476178 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.926687159 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968416627 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183171624 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265106342 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.124091996 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072752317 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234214829 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.299054284 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.995312913 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.300744083 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207296284 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976046213 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.842980242 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974266448 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098075474 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.167017008 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238307576 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.477381184 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.66672227 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233322712 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.836676971 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972320755 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.737288598 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236417091 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.237604842 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.021535346 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032608397 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972361933 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385721731 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.685207065 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101181721 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.828785111 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894869711 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.972068525 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302063179 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.214500909 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.678259394 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.973458301 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254520599 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272493065 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243036181 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.022019215 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.819221276 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190696367 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972824435 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.98096934 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.238941933 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192641008 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213911636 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973546047 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.971895882 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.779032941 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.895399208 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.975008108 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025592024 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196811411 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99011823 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.485965954 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.671524372 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248614164 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017703987 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971238097 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240405402 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.497235236 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.509594226 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96390231 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177565621 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.93762832 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258876465 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.964325198 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381838972 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262159353 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.963328782 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.469825539 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.203650783 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226577907 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899535589 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976758281 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178909443 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.819293132 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.969884009 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.958239379 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379063054 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193073539 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.703322148 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521596666 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.968245873 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.968277148 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395101329 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982874791 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387036071 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986686786 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975004416 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.473879506 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.653741677 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.241203352 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201040988 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.466600427 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.555713431 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.965070506 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.953506569 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95425709 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877386866 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305368385 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.141640291 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239032325 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988385237 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373993006 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9825581 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.251295948 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080276068 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.097242462 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005092938 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496199643 seconds)
  done (took 1699.068224452 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974780217 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.015567374 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.023612107 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.983808909 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.979264714 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.979839016 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983001478 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.967569305 seconds)
  done (took 57.804915062 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.980979621 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.980476671 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.968594079 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.966699929 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.967947384 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.965369713 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.124986347 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.972514315 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.968749174 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.970767801 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.965592551 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.965741099 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.254765565 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.982814604 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.964569449 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.964493466 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.975847347 seconds)
  done (took 75.844349967 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.966513528 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.199285611 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.026978878 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.965939189 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.906267224 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.976104891 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.94767973 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.985702208 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.97035486 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.191669116 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.262274622 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.974790985 seconds)
  done (took 91.268236892 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.970074175 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.966435784 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.967633289 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.966705667 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.967545819 seconds)
  done (took 11.735039316 seconds)
done (took 2219.966009205 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.196582687 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.023310563 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.061025083 seconds)
  done (took 5.981015797 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.113820726 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.158003063 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.271119878 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.036635817 seconds)
  done (took 10.478703824 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.289218454 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.347141052 seconds)
  done (took 6.531345578 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.314499018 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.988302696 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.375782378 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.965747606 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.971863413 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.972061324 seconds)
  done (took 22.810084822 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.966406537 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.966982486 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.966892276 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.967254661 seconds)
  done (took 9.761995657 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.965809892 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.672404228 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.967199642 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.97926419 seconds)
  done (took 21.481392939 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.115894834 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.082813646 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.10989792 seconds)
  done (took 8.205398308 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.187819173 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.075960904 seconds)
  done (took 7.160227883 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.112948691 seconds)
  done (took 4.009594938 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.995951303 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.237808697 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.46578692 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.495489499 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.619695467 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.722633087 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.262537236 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.19117513 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.381312344 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.381644527 seconds)
  done (took 25.651902894 seconds)
done (took 137.847820399 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.309825938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.983441396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.168523054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.325766352 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.191918143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.168427534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.189481637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.316901228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.99195054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.981971224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.323357124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.190155925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.136001142 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.980588749 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.138910332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.973750187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.183835594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.319802055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.001629917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.246108108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.193398282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.967746164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.165892712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.978320311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.189671955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.11467949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.509963707 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.972602698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.14303212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.515541037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.115361365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.379600916 seconds)
  done (took 171.266484144 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.962436355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.958593043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.959182859 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.957984394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.49721691 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.956538392 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.959193319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.959181499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.374671407 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.360479693 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.958606725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.506020005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.959391125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.957784956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.959835878 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.958097193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.53347089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.957023666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.957310988 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.955733349 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.953419283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.327909295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952710713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.325118934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.507465975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.951158144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.9531465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948296071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.941585035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.94213034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.940279185 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.931897444 seconds)
  done (took 212.216964667 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.935462674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.934924061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930989752 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.929812733 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.924320251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.924576431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.915800368 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.911987866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.604024792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.595546569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.912442971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.917531336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.92246422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.909698658 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.926829189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.907398771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.915665084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.906554938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.906623404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.90837661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.910050167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.747208773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.908231692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.763068736 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.895996122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.896540996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89820054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.896440983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.897385639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.897673427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.897957177 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.896921232 seconds)
  done (took 222.110540788 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.139912682 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.896990023 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.897929748 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.815797349 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.900192993 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.899401731 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.874966278 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.150284855 seconds)
  done (took 19.403555035 seconds)
done (took 626.907897421 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.25641147 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.728538743 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.095531654 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.936557881 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.205033098 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.990168887 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.932454499 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.005510895 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.852660456 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.010333368 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.589781161 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.960023417 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.680474112 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.960754976 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.055129764 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.987318233 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.478486175 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.573621032 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.076668616 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.003722153 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.117961323 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.885608781 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.015891826 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.81458846 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.607924333 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.936667055 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.264326268 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.481911268 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.946330184 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.092304783 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.645697025 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.510548214 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.950313682 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.933159536 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.98442478 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.969300338 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.459881421 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.945616192 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.058254983 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.67213001 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.018939784 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.678464332 seconds)
  done (took 106.19868479 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.924931524 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.921761914 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.921615667 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.92155372 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.930033806 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.91821055 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.922036741 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.92076018 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.920771638 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.921019677 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.921175734 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.9313414 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.923046701 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.92998066 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.922279502 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.923267007 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.920701865 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.931664932 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.922199195 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.922888559 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.922403989 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.921732728 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.916942616 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.923625714 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.921690923 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.922825025 seconds)
  done (took 51.861047161 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.91666386 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.087051678 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.159404751 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.940012743 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.918188895 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.921109456 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.935532374 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.925115435 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.919898252 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.917834299 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.021583552 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.923929843 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93595078 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.16142803 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.933863461 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.916275522 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.914937431 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.917938798 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.099967387 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.932384426 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.939281383 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.925096764 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.936594536 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.931435452 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.920693871 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.91670634 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.920953972 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.413689825 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.926705159 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.022400033 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.009454825 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.939700411 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.362847724 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.17275714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.97813805 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.931356933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.916522126 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.026297058 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.924851864 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.921976727 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.935993675 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.923619333 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.162128606 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.449881646 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.939100529 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.919043671 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.422033243 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.03458006 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.960592681 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.928801611 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.167573586 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.936153182 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.919501986 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.919349874 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.955589178 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931498178 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.918836973 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.271219172 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.933636635 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.935855076 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.923731244 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.920318606 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.09883099 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.929455675 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.088116459 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.929928171 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.928743773 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.920318444 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.166592732 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.937936574 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.462849754 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.936544793 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.922639053 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.026125977 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.095615903 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.450472678 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.934797932 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.104039551 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.383407119 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.94657195 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.932004957 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.404388979 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.9490573 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.930800439 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.923671975 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.923201785 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.923097124 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.966115118 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.938637546 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.370329554 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.456488919 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.296918187 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.949532514 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.933946175 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.923655826 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.279275946 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.932696811 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.922615637 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.159112381 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.471388207 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.937733794 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.931248872 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.438438259 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.938214448 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.942167452 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.931401076 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.176361555 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.940830858 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.96897691 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.92273555 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.93017168 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.931601184 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.940244027 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.932107332 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.922232663 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.427447897 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.04500092 seconds)
  done (took 238.806319904 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.925486204 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.919096444 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.921674368 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.913843438 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.913362846 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.913997303 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.915595682 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.911500192 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.9126404 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.909001151 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.907579331 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.912830381 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.91069032 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.912104526 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.955459947 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.914964027 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.510077683 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.911493113 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.909994322 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.907478815 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.554769237 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.912514714 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.911472494 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.909602884 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.913616864 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.912018094 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.918503979 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.952462582 seconds)
  done (took 168.745653567 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.910137223 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.023675568 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.924580377 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.936056521 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.915553632 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.904351724 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.00488826 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.91816434 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.907342127 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.906592291 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.904983394 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.961692623 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.911659883 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.003048322 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.933735024 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.002474014 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.002881099 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.900851069 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.897528867 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.899756608 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.927183115 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.905724649 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.956839582 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.018853897 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.913094025 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.015280278 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.91580189 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.898373036 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.897990796 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.010283219 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.916486779 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.957513153 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.924854281 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.916588946 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.01726306 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.012674181 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.001699793 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.000778227 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.902010392 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.897054202 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.900723791 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.902547431 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.012870182 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.916744909 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.899849492 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.016705052 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.916344143 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.900156273 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.901259465 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.898794556 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.912264726 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.91631345 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.96332486 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.027097121 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.938990118 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.922444562 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.000459464 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.024221254 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.902040533 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.000211958 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.904144477 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.015381675 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.915148209 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.899882342 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.899814102 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.905405624 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.932314068 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.002299042 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.999636592 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.902802185 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.993637636 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.934662781 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.898808071 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.892030283 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.892929592 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.00689415 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.011255932 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.922833878 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.925093175 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.918507602 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.896230051 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.890398227 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.88997671 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.906048354 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.896846597 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.004481003 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.009437547 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.894857364 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.890925674 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.89140165 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.891516076 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.91409397 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.009695948 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.925137234 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.996957874 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.952817743 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.961699226 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.902217992 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.90461956 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.89511435 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.953756901 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.904795392 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.902776989 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.196413348 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.951422068 seconds)
  done (took 205.695591314 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.278692366 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.932680403 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.946241328 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.220789438 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.389432646 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.862258643 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.934545287 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.938997298 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.972681945 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.165724529 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.009068659 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.956991615 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.923199883 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.912616004 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.935565938 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.974572498 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.945600854 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.28542679 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.156543339 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.4495427 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.92903971 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.238598725 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.274672017 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.52065931 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.985732814 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.351756403 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.544391005 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.10191436 seconds)
  done (took 63.962078846 seconds)
done (took 837.103424108 seconds)
SAVING RESULT...
DONE!
