cset: moving following pidspec: 22883
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.407693979 seconds)
loading group "string"... done (took 0.506434183 seconds)
loading group "linalg"... done (took 8.665996891 seconds)
loading group "parallel"... done (took 0.171217782 seconds)
loading group "find"... done (took 1.257065753 seconds)
loading group "tuple"... done (took 1.924999184 seconds)
loading group "dates"... done (took 1.478471755 seconds)
loading group "micro"... done (took 0.201502304 seconds)
loading group "io"... done (took 0.523793384 seconds)
loading group "scalar"... done (took 49.455993277 seconds)
loading group "sparse"... done (took 13.431826403 seconds)
loading group "broadcast"... done (took 1.258085153 seconds)
loading group "union"... done (took 9.935964315 seconds)
loading group "simd"... done (took 2.993943118 seconds)
loading group "random"... done (took 11.371396679 seconds)
loading group "problem"... done (took 2.195551009 seconds)
loading group "array"... done (took 23.634618769 seconds)
loading group "misc"... done (took 1.093042837 seconds)
loading group "sort"... done (took 3.672025806 seconds)
loading group "collection"... done (took 19.0114295 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.603333764 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.187695994 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200479988 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.276936813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.231209715 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165204517 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141980778 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.239075858 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.532500287 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20082869 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134663795 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.500607887 seconds)
done (took 6.15454043 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.250167223 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.177474267 seconds)
    (2/2) benchmarking "String"...
    done (took 0.165867255 seconds)
  done (took 1.021976441 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075422265 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157083514 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105913281 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092136542 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090699716 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107410641 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091441787 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107213716 seconds)
  done (took 1.434285145 seconds)
done (took 3.460378419 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500235917 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.85461337 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.513514981 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.143735379 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309526212 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.312831018 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.311752193 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203331873 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109376242 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08810544 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173464503 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.388259596 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.4138126 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.940344797 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088235139 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09374901 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.13177362 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.758746102 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079157454 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111370471 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.490671891 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.182840059 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097039804 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120180327 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184679904 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130834504 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.15943816 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.09920407 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662158934 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130223006 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180602106 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095241947 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156308748 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183352341 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.189948333 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107877785 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676398903 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200389771 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087656947 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097604134 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669004907 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118134202 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.18464537 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101196089 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.08772303 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179449271 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.090670294 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076065293 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107939651 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085320701 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16288109 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.432764231 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102506112 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169700524 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090849788 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.681134859 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097084682 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.269991229 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127514877 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093881179 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088814554 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086478526 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15236956 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.091967253 seconds)
  done (took 19.821774516 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143786818 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162583406 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076672055 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15391921 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120638359 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078185335 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100094993 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078578349 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107099803 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.194108177 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13599325 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150094992 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090748664 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090683508 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128852635 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247672566 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107797362 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118390027 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088383895 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088543081 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1377873 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095511867 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089242944 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107320222 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169337194 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202812284 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110680075 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123126594 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090284602 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093423863 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14055844 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143487703 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090623202 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088311863 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169305932 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121016636 seconds)
  done (took 5.134163739 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199113146 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12164027 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.206310232 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.157267931 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145596931 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164894431 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125573346 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.272284528 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.206290621 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175274432 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112224608 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119489397 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078061753 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078996689 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132702259 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078761529 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.423914042 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.190226326 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120880701 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.149526906 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082805808 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09886594 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361227978 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098880231 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077810103 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080191706 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081073189 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.177064615 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097902314 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.200090415 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.100722544 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083478604 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081546452 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098273958 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113033143 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138106411 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120749281 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094824847 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077368144 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219825575 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086648611 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076149191 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130289365 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115581004 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128617868 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.079539738 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099784101 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217778708 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078780977 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098693672 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.069933582 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.190895101 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.120968638 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075977786 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288493336 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.1173704 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079292061 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.150208783 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078206361 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.806632891 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113608565 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080786901 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098017355 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081006983 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077516243 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431695886 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100677789 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.253886669 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083326838 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158826524 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078789852 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095374107 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086454862 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083260021 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117999015 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078769267 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077643811 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077539813 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09602484 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079845561 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127928917 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084829064 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077410478 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157383533 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094860728 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09731973 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124340311 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080421687 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092251656 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110920301 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097780389 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079975808 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078894349 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.164025463 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079326965 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.127983517 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081023937 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142711587 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079396464 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.247953259 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081971194 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123907267 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099870802 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123481353 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098209952 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078974685 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099689087 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077997755 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078446447 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161072414 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077859857 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078274145 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07884953 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110265106 seconds)
  done (took 27.617610334 seconds)
done (took 53.250457808 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.430468874 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08316699 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080801313 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097286345 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081146592 seconds)
  done (took 1.530114715 seconds)
done (took 2.262419812 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.315653004 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.185883097 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101310109 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.182642969 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084402608 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189802196 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.17527681 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092639652 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199472458 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083110218 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182094129 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082399772 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101942735 seconds)
  done (took 2.734186869 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101000347 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106913808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099686922 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116885204 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084020764 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099151717 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11598607 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109508786 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099344602 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109090108 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084760704 seconds)
  done (took 1.858426204 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097912035 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104900952 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09695301 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114287379 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083602026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097416615 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112332218 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106624899 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096544623 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109953682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083980866 seconds)
  done (took 1.84027369 seconds)
done (took 7.162160936 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.077327646 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.132821471 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.1667644 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.209167162 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345850477 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236436409 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.562039418 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153135583 seconds)
  done (took 13.763271422 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.166285317 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.106542679 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090902749 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088786638 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088983203 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.109297302 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089166872 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092642088 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.110021468 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092199506 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087751517 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.107712703 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093993294 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089221805 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092338285 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.108753127 seconds)
  done (took 2.412322555 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141755204 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138425985 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096025402 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097267095 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108959019 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097334645 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099700489 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.111532652 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092412198 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093695804 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099686189 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113239998 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095932352 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09105391 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11236884 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115075828 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092578565 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11224012 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116883346 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11359055 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09693499 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093708786 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111198726 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097485413 seconds)
  done (took 3.357874983 seconds)
done (took 20.270044994 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145119951 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098798948 seconds)
  done (took 0.982325467 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141611713 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156759884 seconds)
  done (took 1.039700767 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110097128 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08816101 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134017795 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100860062 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089523716 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105099669 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113990894 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104077495 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089779902 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.088823857 seconds)
  done (took 1.770354816 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092876359 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093601582 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119365713 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136464823 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113369702 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09168891 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094124539 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091236915 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11026351 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08874229 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093650535 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123402494 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093955567 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124637241 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093963225 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094138592 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112952816 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093054331 seconds)
  done (took 2.609993534 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089630103 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090395009 seconds)
  done (took 0.928516372 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091802542 seconds)
    (2/7) benchmarking "second"...
    done (took 0.087668799 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090590114 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106137014 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088093133 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087934888 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103644623 seconds)
  done (took 1.404756517 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480354066 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.25939296 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.353153308 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105664461 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142317545 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.466013796 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.141766626 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102694452 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101237199 seconds)
  done (took 2.93630344 seconds)
done (took 12.417791346 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090030525 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218356696 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.621566992 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.109846859 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087530395 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157008528 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.279031943 seconds)
done (took 2.326009593 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336680854 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140739864 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081051787 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088914966 seconds)
  done (took 1.404466823 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080863423 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096635418 seconds)
  done (took 0.943428789 seconds)
done (took 3.110732822 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088584305 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.086452339 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086198276 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.135277012 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087454907 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.085451987 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.103909442 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086375028 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086899505 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087326518 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.105054302 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.087019637 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085905772 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103879942 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086204356 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085895436 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085934486 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101924041 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08814608 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085942964 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10211668 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086698611 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087242561 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085245779 seconds)
  done (took 3.009990985 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104521599 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09044646 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107157623 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0915445 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09104211 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10686553 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092403556 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088359773 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106606255 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09075043 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090799008 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106866383 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089621026 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091566867 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088234601 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107412639 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091564052 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088621829 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104224602 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091857701 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090251279 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10485414 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0914462 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09065385 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10776365 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092418921 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088065743 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105098775 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091993566 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091143197 seconds)
  done (took 3.634125982 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097070623 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084353332 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087297857 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111858465 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084436717 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088446564 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099654784 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086781706 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089155681 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086426765 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105334156 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087610127 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084271189 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.103469183 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088510634 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089965564 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095118691 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.102708233 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084509417 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08832406 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107433642 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085888513 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087189637 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086161808 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103869028 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084413357 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087194322 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102956266 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089509721 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087199064 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089975411 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106568225 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087661127 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096317064 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106160138 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087786509 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093048712 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.100394014 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089876842 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084657849 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083595252 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10384478 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084751316 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092998102 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.103147907 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088768616 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084873324 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088604213 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103549925 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091489074 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084080338 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101501736 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091241905 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088208113 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089667574 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.101744062 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088982906 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083585752 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.103947556 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088609995 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085760031 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084593354 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108802798 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088452006 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101943926 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110561091 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085713429 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090442582 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103778043 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093767673 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090480692 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112392998 seconds)
  done (took 7.485730229 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10186283 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096078428 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087920572 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10573338 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088665498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087362969 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109815777 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090026092 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089517981 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109916437 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089738137 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088896922 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088283257 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105842217 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088660735 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090085145 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110818422 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088726886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087969801 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105108054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090160182 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092354913 seconds)
  done (took 2.864964685 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235900477 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09540272 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135474131 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118266775 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106593423 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117688304 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093664955 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093685829 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108198155 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098443079 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09683459 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1090868 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106519981 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096381737 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115754675 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102397022 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092195478 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115258457 seconds)
  done (took 2.813446632 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104938456 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090798082 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125991008 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091233919 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09112242 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089134944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112825589 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11015674 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089698685 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.107365799 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096916924 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092091121 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.107378771 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091034642 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090036349 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107715255 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092069033 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089957228 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113477159 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097102127 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096220324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113505235 seconds)
  done (took 2.977630114 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104978465 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090577147 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124498986 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094432671 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090029097 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08870363 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113446684 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091385841 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094768079 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106479063 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09083708 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089745644 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121614089 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090607139 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095538453 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107302423 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091641933 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090775341 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106131685 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090529237 seconds)
  done (took 2.750814424 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.170931228 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121074388 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106275368 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114390284 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122621412 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107079429 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112818053 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123007864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105473096 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133481361 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106197834 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105147534 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130435874 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111962586 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105686992 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130755015 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113717186 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130367003 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106018038 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105915513 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134158411 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105250313 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129604321 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106230921 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105115152 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122027516 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10563168 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110308464 seconds)
  done (took 4.061328519 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089558157 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089022972 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088295161 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105287932 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08960058 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088475735 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087962837 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105185251 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089097548 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089186528 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105731384 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090382285 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089241563 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088783954 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105173121 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088958573 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089055256 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10514968 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089179571 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0893348 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088440071 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104985302 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089873906 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087972416 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087909933 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105649403 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089452549 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088999744 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104599934 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08906751 seconds)
  done (took 3.582188703 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102225905 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099490236 seconds)
  done (took 0.984722308 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101166608 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104343304 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08922077 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107753955 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096899213 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089478892 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115893886 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096734032 seconds)
  done (took 1.590813458 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.142038957 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161495477 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094833134 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100273578 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.16125889 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150925952 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131671181 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093723186 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106151567 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084138059 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.153609795 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082161546 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089887736 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104649192 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090944503 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095578812 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.088969135 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116130057 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096365232 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090475415 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111801666 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09575931 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09160352 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117866507 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085808151 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091461201 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.1116308 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10101496 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085454053 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110074778 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088517183 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089952612 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.111169108 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094727261 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090414381 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162014922 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097559062 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104538031 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091166113 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093521961 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.138987354 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09070039 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09165998 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105573029 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094137729 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094170987 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09423014 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108547623 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083451612 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085935215 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.10796016 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087100275 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08878045 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108195416 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090984669 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096240152 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.109258114 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087089303 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0866885 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103290898 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.0893434 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086106582 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109810256 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094007327 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09053262 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109029129 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090904682 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090299896 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091976071 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.109326867 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08947878 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104777215 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109945573 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09466129 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095189963 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.109297068 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088531423 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094657559 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107102186 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092286731 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093619018 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13633819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093558387 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085419552 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103487053 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097901305 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092198396 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110211451 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08494351 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099455488 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092352965 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.110368254 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084742197 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087448209 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104712784 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094531694 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083742494 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108823459 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09005477 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094392713 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112504221 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089706626 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091615884 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113537294 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096820675 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089378741 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15494805 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087886768 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08591581 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.111090524 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095566641 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083852223 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107447003 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090136635 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087639708 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085288714 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113565325 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091500129 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092479781 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112502988 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093054324 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092258654 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110405349 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090290196 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086760492 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.11150856 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099907921 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093202755 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.109196166 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091889339 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09121168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09061176 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113057199 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088688299 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09480844 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106440181 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090394844 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091552078 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.114085836 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091758657 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085861784 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107571163 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093243513 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089699862 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.111788191 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093328082 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086310698 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100747545 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092801615 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086079019 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091184561 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117985972 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087509616 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092513507 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105666084 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099012805 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087835382 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114061894 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094538781 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095253557 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114538403 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084447633 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089602308 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110898413 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093899538 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087732078 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.090704205 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.109561513 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099199181 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083702051 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112431009 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084835561 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089151174 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.112705205 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092811046 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093665192 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085459108 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148285977 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101653035 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112796224 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091507796 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091128145 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093830084 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.11177575 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09433289 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094552898 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.113719148 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089938325 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088679054 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113822447 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088390198 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092792986 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107954932 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09255289 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082795711 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.091795892 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103078761 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096336557 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093013567 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113668957 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096369077 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092236143 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108031758 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099691086 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087191966 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113306919 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084485117 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095507183 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.118686377 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097977579 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096658469 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091937911 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107954654 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092789859 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098598307 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111610351 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091851545 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091733066 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102850367 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085208454 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095534052 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.111471055 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087916266 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0918653 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091659176 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112247314 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089670011 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083771726 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113748196 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096102623 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086381494 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111407637 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088428275 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088660556 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11745957 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084767979 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087465646 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111428649 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097619278 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091267193 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108565505 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094884197 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09708483 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.093050215 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.112913325 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089970739 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09748442 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108220316 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09115299 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087931071 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.110744719 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085615316 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093267819 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108485893 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088944039 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087838027 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113056023 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098280192 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.095908488 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089264369 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.114636144 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.096766163 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.097136306 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107498193 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097068173 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086461177 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103656572 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089314514 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083884468 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.091743592 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106272619 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096057371 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090138977 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109098877 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095157115 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09246417 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107596786 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097060118 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101286202 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104631947 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085266466 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089295971 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118934065 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089541841 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088494053 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.111014307 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094933069 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095592413 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11309471 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089001097 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091443671 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115323464 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089158732 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09760282 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09625879 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.116551508 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088076699 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096285952 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106261033 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096335467 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084983029 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109480398 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092069553 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092308854 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106877721 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090954063 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088104446 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101799822 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089438528 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097218993 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.108315048 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09631185 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100994332 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090105807 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108922362 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088666335 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.097940602 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109307469 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099314772 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092071202 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103367395 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087089171 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097475607 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109497755 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097793141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08710528 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094745098 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118143187 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096223929 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092289707 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119281459 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10116315 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097069398 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116505346 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086527311 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090120501 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114276633 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093888495 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.094648736 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095391047 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.105359149 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096859248 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.097197774 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111860201 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091776532 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084606722 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.111890143 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099174789 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.093886572 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.113054718 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095394034 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092633459 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087061907 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114326085 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098808032 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091855982 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116487808 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093024969 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.095078833 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107491039 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099090323 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09273566 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105483281 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087074748 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089142516 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098174937 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105888838 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09684274 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096021956 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107898688 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091712381 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.095979558 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106997816 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097235483 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096731257 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107063946 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102476269 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09287411 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089628912 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.115065218 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097349894 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086447107 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109308539 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092411554 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098496948 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109844667 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099401381 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092581156 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114700717 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095319128 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.09692373 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096413189 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.116301146 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086663891 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099055344 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115468565 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095211897 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088407607 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110319367 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088274332 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090695545 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117862087 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09239676 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100337268 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097533585 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110180146 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090697423 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097712752 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110756316 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099331665 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088575553 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114923114 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086908322 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093519231 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.110302569 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100109174 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089213412 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106595 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098593978 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096424923 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095339741 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113622296 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099538068 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08580433 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105838905 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.095246711 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089638398 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120939853 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09635199 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090524863 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109750237 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095466095 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093445895 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098383677 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108130316 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090433223 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092681496 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11445522 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091219015 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086707714 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.116004775 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092568767 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094002346 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.11045548 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08885832 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091517451 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.118009533 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092247716 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08822911 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108618646 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101379387 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09160183 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088424045 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106292181 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099969008 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094707918 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118450153 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090087605 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09267852 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.110477907 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096423897 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098518159 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110116994 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095004088 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.0907174 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116918721 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098996004 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088850325 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109132467 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103969833 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097300996 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111922306 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098026109 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09166998 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098390308 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118900745 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096238078 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086170944 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107453124 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093686596 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086577616 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.113838204 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099749178 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091762112 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108335563 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09863502 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097577861 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.094955126 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.11484838 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088964229 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098703935 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108213629 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096784842 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086895646 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104879004 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096682442 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098326932 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091123861 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.113896955 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095250193 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095766145 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.107809326 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09257218 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095960565 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116649279 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099515576 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093029358 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109998301 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097506517 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103444469 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093891054 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111189909 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101302673 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.098785773 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114440233 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093626195 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097637398 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.118606598 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096440899 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.098776444 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110290923 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094017205 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.099954036 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.12009406 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104232842 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092065152 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106508912 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099425237 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091049417 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086770381 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117982762 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101548112 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.098576784 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114201869 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090810988 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102586171 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118067664 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094779822 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090977214 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110426254 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098673869 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090414692 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.115763575 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091764129 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10098106 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.118420335 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100520779 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101556856 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0872966 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119480155 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.0952036 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101553318 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.113999333 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089788453 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088091584 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.115048023 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101458332 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099905258 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.095810967 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.116692398 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098347395 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095358636 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113944551 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091991063 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.099662804 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.117754194 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095317976 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095592857 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112066395 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095506329 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094782914 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.098342359 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.12100624 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094556286 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102852107 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.120149715 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093063741 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090466754 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114412839 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096516655 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094766914 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117300797 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09282072 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088684202 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118845867 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101667037 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093149331 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09983786 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120838213 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094437083 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095595952 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121420209 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099844926 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095240662 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114478379 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098674861 seconds)
  done (took 60.200357319 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148049874 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101752605 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116409292 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096960913 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112071728 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116829735 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096842849 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097143436 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116395697 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106334066 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09602831 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11606577 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111947186 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115729678 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133285182 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104816952 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114475803 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098115425 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096864575 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096895654 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131082303 seconds)
  done (took 3.159302842 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119272001 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109398701 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128584183 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110840518 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102105347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128832271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108697044 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1282263 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111435341 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10338341 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130222613 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107620573 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12357503 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106812966 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105191565 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124389964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111875622 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102266771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12877834 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107343075 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124730625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110954202 seconds)
  done (took 3.368906477 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129388232 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098403525 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092911872 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115301702 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10019294 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095915247 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118254594 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097806579 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104522776 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090494985 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107515074 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092124923 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093676062 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116364903 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091398462 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096458753 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122653751 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100616158 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101008922 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.095364312 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107651843 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097475361 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097273631 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.105741788 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101995975 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100976111 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09572052 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119673895 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088279944 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09961297 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11499601 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092095639 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087553198 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086792583 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107491066 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10037419 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098936013 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.115413134 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099053267 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087915406 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097502427 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.119621184 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088006972 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096582019 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.115938032 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092007916 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.09938491 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095618513 seconds)
  done (took 5.709323267 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132098596 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161725205 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101906942 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13430426 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133044527 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106722702 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099030712 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135083596 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09917593 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121429365 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112649536 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110308835 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124270792 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103473509 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10126907 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122406689 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103297732 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099258788 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125738705 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101099071 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104521989 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124053424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.347132542 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129959344 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103973783 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09984256 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121193607 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103787138 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108322978 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125491552 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104050544 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104165136 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131215405 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102857625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099443504 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122180979 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111520088 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120819079 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103337929 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098298678 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120257572 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105519553 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102008866 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132611653 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101750469 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100446701 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12047173 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099663102 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109090981 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121766846 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107264065 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110869666 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123205295 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100848488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102608257 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129874151 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100444248 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099138896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.122603305 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108493379 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.116989211 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107160229 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109384454 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120593373 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.105977778 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109418151 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122315597 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103471701 seconds)
  done (took 8.887565104 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134583849 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102865676 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132333379 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111351609 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102285428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12483621 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10368942 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102918158 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12473646 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109273977 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122638716 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.198518267 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121234876 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108563102 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10373611 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125116542 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105254608 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104669976 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12514663 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104992118 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102748612 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133764002 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104236306 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131975368 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116032474 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101546437 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12524119 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104787894 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11127094 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125155425 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116119869 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124217454 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105462819 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112147506 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137604041 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105025514 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099098 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12515479 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105611312 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103400879 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123411971 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113051616 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124036712 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103010753 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104571978 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123832225 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115257429 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114940782 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129735857 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109440285 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.103581179 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133771712 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104467199 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124365218 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113494124 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118422236 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134547153 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113095002 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12450799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113037828 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110901537 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140264558 seconds)
  done (took 8.103156745 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103388653 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098207517 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097448753 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118332368 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098485159 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097865444 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097031302 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118381958 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098873354 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097841348 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118143359 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098766901 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098672064 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097351136 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118040386 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098572853 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097100625 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119612981 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100810994 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098146478 seconds)
  done (took 2.921221646 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.114501848 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114041059 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.12119632 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107519457 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101273118 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126401748 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101878826 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099582876 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099865706 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122336339 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109412482 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12746241 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102594419 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106514181 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127819939 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107493431 seconds)
  done (took 2.643970329 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124856046 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115529892 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189000141 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102899965 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122899944 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108031063 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100510341 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123262259 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101202183 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105749508 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10360286 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126259661 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10092896 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100613794 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122403328 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10392735 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098994116 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125122344 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102282402 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.186277542 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105815396 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100859904 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122882286 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104859354 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101505201 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.103862618 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.129506388 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100231497 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101180355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122987674 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103646147 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106363452 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121372936 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105633853 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.1007682 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121696148 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102516685 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099899421 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123792774 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101969664 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102793542 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102071515 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.122890599 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102906992 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099040291 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122709823 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100278043 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106365213 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122020269 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103641835 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100492474 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.12828152 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105814962 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107522696 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127765661 seconds)
  done (took 7.056978152 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116699483 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100622726 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132361083 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100447245 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101184904 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102166444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123107293 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103780774 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101131251 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120543377 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104657909 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101935362 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122153432 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103575063 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101993335 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101452214 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120511933 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102729371 seconds)
  done (took 2.819381703 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112165227 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101165544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104463375 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122114147 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101538505 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099772681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12130825 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100744459 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098282711 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.1006346 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123504963 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101413784 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099107318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122524402 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102375944 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10054994 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121640289 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101616604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.1003834 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098255899 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12246752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101787487 seconds)
  done (took 3.218702323 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111137763 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.179664942 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106281554 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18726299 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097038593 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095440483 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127010236 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097052964 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110518097 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117649115 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096922329 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09533338 seconds)
  done (took 2.284656054 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132585242 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136607466 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121887961 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102019496 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109417222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125773733 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105629355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105154096 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135814609 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115439508 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126162575 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114617553 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111618309 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134229736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109919623 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129676025 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106945687 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105070029 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122146637 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120162552 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105512761 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133830751 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106088462 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105481691 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126051039 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112883857 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133561566 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118580518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105858969 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135167889 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108966136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105226579 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135501115 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116896148 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12341699 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114380194 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104398317 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141647379 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108823305 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134999551 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102555683 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108917426 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134533062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110710991 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111884122 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127213102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110361634 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125438862 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10705696 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125191216 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134117734 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114651144 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130053257 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113295321 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112922343 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149337595 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116954443 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135262517 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109879894 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13792224 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115186179 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109184295 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135817509 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117735438 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134874043 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11413606 seconds)
  done (took 8.760891647 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142875061 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10136136 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126505111 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118216393 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135584504 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107476092 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10798769 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126921625 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108804794 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102932575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17014086 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107579183 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118471573 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136990984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105493771 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126550691 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108132958 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116326598 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12384797 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129597746 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127061926 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117629252 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112918623 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136736298 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116858461 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130701816 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108054233 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106705566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126986247 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107069494 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111036579 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127793952 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114893395 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101950064 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136345567 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106210198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106177998 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13345275 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105468912 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130043055 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115551594 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119409866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128784468 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106085147 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138329649 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106899415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106470783 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124121005 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107433135 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102523727 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139113071 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117921496 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13944781 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114702436 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105868099 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127823998 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106992263 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105161126 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128699669 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111773001 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113507439 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128528622 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12745857 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128569418 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10711747 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113153445 seconds)
  done (took 8.728453147 seconds)
done (took 164.381939369 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.154652708 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186966222 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145368544 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176302587 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093502192 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126978164 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14638883 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147650882 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089867985 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11381296 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092509452 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093960322 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.18214007 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093253206 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09122496 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116383876 seconds)
  done (took 2.917978195 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192069722 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306869828 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106146533 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117501822 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099250307 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096762583 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117399556 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099492982 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096626296 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125716651 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097990615 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092765126 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12418118 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094880832 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096403618 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095989716 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125923687 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095825509 seconds)
  done (took 3.057338111 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12206714 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140142953 seconds)
  done (took 1.139979789 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131024394 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190756889 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278017842 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166437864 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118543921 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136819421 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146632783 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129965647 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185215565 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130475351 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110161085 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096098656 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144186006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104095073 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11214783 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119931051 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125814013 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.111285326 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.134399298 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100182983 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118610208 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.122929024 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102362695 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132211356 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176802712 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.109179003 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.124882384 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10084541 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121139838 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112966438 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103658957 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136196937 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110667111 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1763013 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101788602 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172544976 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104019452 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.118518007 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111386678 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097567983 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122720361 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101880276 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109312342 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.1177502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101960672 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103380067 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.122959249 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100819573 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1047774 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127207714 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104331766 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125757081 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149068674 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126186027 seconds)
  done (took 7.718564587 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862029618 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143463272 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097687352 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.978850374 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148188593 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113332918 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.851732794 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145290432 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251927702 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.882726024 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114028964 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108970494 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255398033 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253698945 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.275033052 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354671541 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.695681142 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13410923 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126408063 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15987514 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105691042 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145263045 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118012121 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518211633 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098813016 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097956159 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12790451 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111262143 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175257075 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100028428 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123839931 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171775752 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289074422 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204139809 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120789443 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09918044 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097970767 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183508057 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266758386 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215688361 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191452393 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096834491 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097288206 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128655942 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1185041 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094746284 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177628398 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189472466 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188314382 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102936226 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133518841 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109552819 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105550656 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175077713 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096454207 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.377377907 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360823893 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098641255 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106687099 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13666388 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266377851 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099294849 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229289749 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149059208 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209097161 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097093372 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833437231 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182335811 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098035032 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12699886 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10564879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103431765 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129031394 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164725343 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.499746634 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11032349 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124673629 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098423765 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22953441 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098923777 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119809995 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15625163 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121371952 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10739117 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132643315 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111752493 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187782775 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267160932 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112341629 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107183103 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126157458 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112510758 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099246516 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230084641 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223821007 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173150102 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228047058 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108791351 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179035825 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182253289 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106772821 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186407665 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105409097 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13794462 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107798646 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219415293 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155226177 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101203611 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103775463 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131415345 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13401021 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126774559 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108407264 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188102043 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554991948 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.179790941 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097550217 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10552011 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107592687 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177743165 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127030327 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258727041 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10929613 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18352328 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107523599 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095375475 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129193591 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.176076815 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109587781 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10610736 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129311164 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108924106 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.276933295 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219373418 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111050403 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246057195 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.196897341 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105359106 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189435633 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128901223 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163052933 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131387992 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10762486 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098875082 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.847618315 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115234626 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106273152 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125592904 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182972197 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120096447 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103501033 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099599684 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095578597 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808056248 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124870072 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098189106 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101012056 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129303785 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107793613 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106342745 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127592158 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175210296 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242316364 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111782356 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128694799 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100488996 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17487476 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101214543 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099290225 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121267046 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101497822 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108540957 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126952253 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103494316 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187837442 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.150583843 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.247882458 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.633914687 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101198066 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099429188 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234454255 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122544795 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321580315 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107930412 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230594206 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183513317 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118531166 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358618918 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.161841397 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205186369 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102989876 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188407142 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0964984 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130809808 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.173988647 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101077238 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107126725 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17489772 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113606669 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13643112 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.272682097 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098891134 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256102419 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096070818 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18642389 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099555728 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130707258 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320212063 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098694742 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140988147 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17589758 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104986839 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100239363 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.670879619 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098952704 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133080857 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10726264 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228299936 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181677585 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127609491 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11052101 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112126024 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176886544 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227781465 seconds)
  done (took 47.236955213 seconds)
done (took 62.942363241 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294438948 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254507047 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.30363998 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.207540486 seconds)
  done (took 2.036666336 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.262348005 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160344905 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.229942515 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09652582 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.239531762 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095204712 seconds)
  done (took 1.984455296 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.483895535 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.364268051 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.30131197 seconds)
  done (took 2.051692744 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251393522 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237834198 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328391054 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.401009609 seconds)
  done (took 2.23851416 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.264126039 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12393827 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122093526 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.206339448 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.227789455 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209688381 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126312355 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17650639 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127089188 seconds)
  done (took 2.538998091 seconds)
done (took 11.750403419 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.328280473 seconds)
    (2/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.3141914 seconds)
    (3/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.21520516 seconds)
    (4/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.269544261 seconds)
    (5/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.342805516 seconds)
    (6/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.286299032 seconds)
    (7/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.286613731 seconds)
    (8/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.138670133 seconds)
    (9/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106038231 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.228395572 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.164451129 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.167891679 seconds)
    (13/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.192469544 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.1958548 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.211865445 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108167472 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.259764482 seconds)
    (18/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126567149 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129158395 seconds)
    (20/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.254024568 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083759568 seconds)
    (22/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.23537408 seconds)
    (23/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.150538527 seconds)
    (24/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076251589 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.230733226 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109192726 seconds)
    (27/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.179855272 seconds)
    (28/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.139908648 seconds)
    (29/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129113745 seconds)
    (30/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.209775095 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127795212 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.127153208 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.154471696 seconds)
    (34/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.167970646 seconds)
    (35/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.275647413 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.1073219 seconds)
    (37/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075986315 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.151592286 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.140293683 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.151922168 seconds)
    (41/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.134968508 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106498297 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107798559 seconds)
    (44/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.194681145 seconds)
    (45/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07529236 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.207270934 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170126678 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.24616521 seconds)
    (49/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109374606 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076924497 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11017588 seconds)
    (52/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.190212576 seconds)
    (53/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.161805074 seconds)
    (54/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.075794161 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.123541071 seconds)
    (56/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108415329 seconds)
    (57/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.241319683 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.149190095 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.151607875 seconds)
    (60/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194695924 seconds)
    (61/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.133780016 seconds)
    (62/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07580484 seconds)
    (63/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.117564205 seconds)
    (64/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.134207903 seconds)
    (65/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158438664 seconds)
    (66/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.133212053 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075222855 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075185154 seconds)
    (69/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.108744827 seconds)
    (70/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.081108449 seconds)
    (71/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.219169993 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.099467243 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.074798818 seconds)
    (74/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100859422 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.2257749 seconds)
    (76/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.192011825 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.074686799 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10396815 seconds)
    (79/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.209167901 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.1073908 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.167794985 seconds)
    (82/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.133270105 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122022091 seconds)
    (84/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.074839175 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.08193387 seconds)
    (86/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.109198432 seconds)
    (87/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083103318 seconds)
    (88/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077141823 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103995157 seconds)
    (90/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075076792 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.125519524 seconds)
    (92/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.142461264 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075802228 seconds)
    (94/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073828091 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.132072197 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10466246 seconds)
    (97/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077350159 seconds)
    (98/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118409515 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.125711411 seconds)
    (100/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.07657792 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10302121 seconds)
    (102/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.192813528 seconds)
    (103/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12184531 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099949069 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189241786 seconds)
    (106/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076505989 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077227956 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099123496 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.123204918 seconds)
    (110/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098693725 seconds)
    (111/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107666243 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.130932524 seconds)
    (113/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075265595 seconds)
    (114/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075775009 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114751569 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.154413568 seconds)
    (117/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124714687 seconds)
    (118/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.191359164 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103339542 seconds)
    (120/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.075139444 seconds)
    (121/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075449722 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.191540947 seconds)
    (123/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078223672 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.16435365 seconds)
    (125/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107215546 seconds)
    (126/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.192637167 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.157899887 seconds)
    (128/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.077752328 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.110632836 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099147999 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074904042 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074428049 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075420556 seconds)
    (134/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.101731778 seconds)
    (135/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108122548 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077342878 seconds)
    (137/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075439252 seconds)
    (138/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.074891682 seconds)
    (139/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.103178489 seconds)
    (140/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.252426027 seconds)
    (141/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.105903571 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.076190706 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128728061 seconds)
    (144/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.128150119 seconds)
    (145/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076233365 seconds)
    (146/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098515869 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076774287 seconds)
    (148/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.146354535 seconds)
    (149/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122816894 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.081422598 seconds)
    (151/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097066938 seconds)
    (152/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.100583571 seconds)
    (153/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083943065 seconds)
    (154/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109769971 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09939736 seconds)
    (156/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194437474 seconds)
    (157/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07714818 seconds)
    (158/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110973662 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121994465 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103225622 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107318056 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099465227 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.125747265 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100693604 seconds)
    (165/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075310775 seconds)
    (166/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.075999499 seconds)
    (167/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.099856617 seconds)
    (168/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101998588 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098313079 seconds)
    (170/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.121298569 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.076591034 seconds)
    (172/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.075271894 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106870367 seconds)
    (174/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193572686 seconds)
    (175/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.075814336 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121725811 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076986767 seconds)
    (178/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12553512 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100557341 seconds)
    (180/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108327094 seconds)
    (181/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.074444283 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.101640387 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100731499 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.075724043 seconds)
    (185/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07618841 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125406255 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109307188 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119411985 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.124209552 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083346422 seconds)
    (191/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083434684 seconds)
    (192/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.075402771 seconds)
  done (took 25.958170276 seconds)
done (took 26.870617407 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.211318566 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127571426 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108176418 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107154388 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202999655 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114235958 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148539237 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111767667 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116545499 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.131108674 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099137984 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121582985 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.130585135 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179435092 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109512669 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126254644 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100194867 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117027379 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148900281 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124556573 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202102048 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101614893 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118323611 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12458486 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177318192 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126399325 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107965586 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108600152 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.144949036 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110088865 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109338063 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124181438 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.125606626 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123369163 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09998071 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.13498408 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100902062 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083784424 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134539629 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110575645 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121101657 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133497044 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110142105 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101172672 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.133765638 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.1103203 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100605289 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.135097685 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100141216 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110622378 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101969731 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.15066044 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10938343 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.097547546 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.123310547 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102053755 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119353859 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124161641 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12287235 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099294792 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.124064015 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101681941 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111288324 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09970781 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134179411 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101599973 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108958736 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13679854 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109678356 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102008256 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125961801 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109848745 seconds)
done (took 9.725399532 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106003442 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145230523 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.196848434 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211082061 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128208581 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115058983 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141821478 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123942384 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111662007 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144627271 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136276345 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155573401 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179648271 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.139951776 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115184378 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111130344 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13726992 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109386963 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.207549197 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124158164 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124105791 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.140682092 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127684293 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140435425 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10453736 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125475952 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.131860559 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11335755 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103889528 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.145846189 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126581516 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104201125 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.13066364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124407366 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124632682 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142620642 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120057776 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112671222 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130149024 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107263717 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117512688 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145682638 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110005931 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.114483636 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138904581 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.125663526 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116515225 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142657548 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109815441 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111735291 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131406436 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131584447 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116213388 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146528384 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118173536 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117460769 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.149896779 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117802828 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10994591 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.143089683 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109366545 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10396628 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131828467 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127286632 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107508439 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144696627 seconds)
  done (took 9.506178126 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123775396 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134392632 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140422968 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115446797 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109179315 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123693288 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098604904 seconds)
  done (took 1.805136572 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101444146 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184754599 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206247191 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206973404 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179663095 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217434439 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147563543 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100481966 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133712104 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13499563 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186141415 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238979599 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109384022 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14087997 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183463071 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125797107 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185726902 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12632438 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114406974 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209419233 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116877703 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129146877 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139504656 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101172231 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206318314 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101640977 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260132893 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118540408 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134821158 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.113589199 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114847071 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204243371 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.206767564 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114849505 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108288602 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207499354 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205328758 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115895091 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.218614054 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105504059 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.205893642 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115948482 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115359576 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.139945368 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117825005 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.191989393 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119977889 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115161432 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.138379847 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.190256467 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.134880195 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185438505 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136232717 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115542777 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110377198 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.140867881 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12367695 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116111426 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214831669 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117722482 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.206973991 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.205013447 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183428165 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208886887 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124153708 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.215309894 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.202132489 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114959243 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109907573 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.143943425 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183489166 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.138905817 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116159129 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.195210664 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118859724 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.207003218 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183546366 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137904101 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114734311 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103642678 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138566012 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101973279 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171497236 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.140700083 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113086264 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117283914 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141075045 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115191866 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.105428149 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150518027 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114082254 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.136368505 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121118973 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114456113 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141443016 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.186175427 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138238337 seconds)
  done (took 15.531356737 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104773431 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102144516 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106871653 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128583026 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102834149 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102140782 seconds)
  done (took 1.623989027 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139433448 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115993045 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149016039 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117450834 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160099677 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.215496281 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.219738525 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110467961 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156797539 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125572821 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217364248 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.193386737 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.219088643 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117394398 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.222235003 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117037876 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.22136501 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113429517 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150441526 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113395295 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116310903 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148590925 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112648152 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20905975 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118608828 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.149610305 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112211563 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124356232 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.148993775 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118577141 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123311546 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143088248 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.115830518 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114171003 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.22347995 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111897992 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138345029 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118836199 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117042647 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143844586 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.193989762 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138750946 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122237701 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.143089511 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112476996 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.107883875 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.143642458 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110396987 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.224851496 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117789332 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118049578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144309439 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116969988 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119213052 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135874147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110815696 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.1438893 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.198208345 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.144270438 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109501184 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116275737 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144087568 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111878727 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119472811 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143202586 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120117362 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.107455064 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142552314 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113937328 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116781858 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144710559 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117022031 seconds)
  done (took 11.138498933 seconds)
done (took 40.55686695 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.548344166 seconds)
  done (took 2.520953282 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.822163663 seconds)
  done (took 1.796552791 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.827416016 seconds)
  done (took 18.832678443 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.514580381 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.58901445 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.021739585 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148108912 seconds)
  done (took 3.24788339 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.051572707 seconds)
  done (took 2.043582879 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.29231527 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263901236 seconds)
  done (took 1.536156561 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.712379649 seconds)
  done (took 1.707264695 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.516786411 seconds)
  done (took 2.501189042 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.351592146 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177508263 seconds)
  done (took 1.529554021 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.603213245 seconds)
  done (took 1.603143044 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.592054592 seconds)
  done (took 20.593155631 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245519099 seconds)
  done (took 1.249219104 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28315558 seconds)
  done (took 1.287966368 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.612182418 seconds)
  done (took 4.614807512 seconds)
done (took 66.048343838 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112163709 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114272746 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113177608 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138171946 seconds)
  done (took 1.470067435 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120998777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.115372891 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.138555096 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14134001 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121797874 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114967099 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141195452 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117630562 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114234737 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14393232 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116582443 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115200481 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144848971 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115518882 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112885802 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144554469 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119772836 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116047336 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1412882 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117514543 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115779536 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141446547 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119841292 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118635559 seconds)
  done (took 4.013882753 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111868252 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106162576 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108029885 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13124641 seconds)
  done (took 1.466800892 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124539833 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127302945 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151306702 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123328 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12809945 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152137046 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115643241 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112709442 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140279536 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12411287 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130641411 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155446477 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127230525 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117188758 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151920248 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110481711 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115680393 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15247446 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122443926 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122870672 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142696962 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122225615 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118940559 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151704085 seconds)
  done (took 4.144984677 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190259275 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12664688 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172369499 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160228074 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174123117 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113597685 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142062391 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147035173 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121843869 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116215424 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144237799 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160107739 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146855099 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117958305 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116503773 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146122717 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12778936 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121617116 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186846444 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.119321442 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146723987 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128436598 seconds)
  done (took 4.132958146 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118588852 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106395998 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10190663 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133195644 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118024183 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108571205 seconds)
  done (took 1.700431203 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106073032 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10079053 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101742051 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126436148 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105503017 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100953808 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100281394 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127191252 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100983255 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101048146 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.1253728 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101595771 seconds)
  done (took 2.311023059 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.328555815 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.1064353 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132925122 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108525988 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111529414 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103845679 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144525714 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106212641 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268491361 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101471758 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.142504727 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195906793 seconds)
  done (took 2.86535383 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197248995 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14389776 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287057263 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338051271 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182516771 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183979868 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262650055 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188343798 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174916234 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161324093 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211373976 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156836773 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177917948 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182901162 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165035754 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158390091 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190291191 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20100406 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166095612 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231581735 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154628571 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196091385 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186318401 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171908463 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135778612 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184351622 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11628377 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123990051 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188084154 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185194543 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169778456 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172435111 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138455456 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213468277 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246309455 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168501778 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282903208 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157586903 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168167711 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.212077333 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254250681 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136721477 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210315455 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174372602 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128053654 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211657786 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150653497 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206274903 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13195278 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16632351 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177920797 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201825081 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169762271 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160496488 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300381178 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131162934 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165153612 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164229236 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210681847 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196008055 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199877592 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119838366 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203770084 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214532456 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233961412 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140285327 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187322513 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123283514 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187099346 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202969048 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202845396 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155062688 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224801891 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156787371 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166784037 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19524537 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148807495 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226417302 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194147409 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11837846 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145789486 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157869136 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123365346 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21153993 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119916762 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239003242 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128854646 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341395274 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207693233 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152672171 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182392421 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154259224 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18565929 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143256729 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126508753 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139440633 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159400965 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179172716 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124168879 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179057087 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136271597 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.148012637 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14690158 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119010823 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191247415 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131009347 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187050869 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164970998 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156484037 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172130312 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17155209 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.157854693 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19004655 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216852686 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126919437 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128834924 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240270535 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191261621 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133298985 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201089869 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191886534 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174337347 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132386847 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186554837 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216643837 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140984577 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223054942 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134705922 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157869431 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137088006 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192472871 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155417993 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.176541768 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126082015 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159399798 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21451111 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123746047 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165341842 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20169747 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131455465 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122623223 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161489251 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132344294 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139263076 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.171660179 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134864071 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179161245 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16149032 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189901639 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151181566 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157911663 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164573085 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156678598 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.164848073 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175069355 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11840907 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198696999 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193214861 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153845208 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177882592 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186163235 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208093164 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168584427 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155581075 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179410309 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151186066 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118291914 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156833266 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192489451 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183881173 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185269686 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207238327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189184083 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158931833 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172009078 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162188523 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.209433476 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152080945 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.168121542 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16658642 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191697809 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117788606 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14834642 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125591429 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132890849 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154813994 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134091673 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199525407 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158671444 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205061778 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189726706 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133556581 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216361418 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122186058 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183964244 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170214698 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16305874 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186185858 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214726957 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198720592 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138999436 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185118469 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.11861697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124419748 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157782916 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159209375 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133152464 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161232463 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136203291 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216660407 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193338009 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145253669 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216703079 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18677685 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198820543 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.145687124 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159185056 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192819978 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164294804 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182367125 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155356095 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154939135 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217480832 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135580808 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218280909 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191948751 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174992183 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217946673 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.159309781 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156028935 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145083495 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1855888 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133850807 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188850613 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142733182 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125508208 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176059166 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133235054 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165587438 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204297888 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141097679 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200524792 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157626218 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193162846 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123334651 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164116414 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173399019 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167591478 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104109482 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163912404 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218609029 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171810219 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152157621 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198728317 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128322266 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.336337404 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184414797 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200142641 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131937611 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162334054 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168902442 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18702587 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157816492 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209146535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13741643 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228992515 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191563486 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140991478 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127709275 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173751023 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147782178 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.163436695 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145892185 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187250295 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140989922 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207168365 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134577747 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194653834 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170571002 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171324454 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146717307 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163529707 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220938526 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192918925 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194549869 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164033153 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191699246 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180175354 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119733568 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15259706 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129352366 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210319719 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126767952 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200118742 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.170952257 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210043862 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198127956 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159282193 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165700965 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124977101 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193377925 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144949054 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213453793 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132574527 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.164711202 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212101644 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127074849 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12770268 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185626047 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271947412 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171759384 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167983498 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133121608 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266423572 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153273376 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130014197 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185777183 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165203909 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.155854563 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177975655 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170076059 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164863603 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160831681 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159378853 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205841055 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183868554 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190177539 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166539118 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.170447844 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15640214 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185142645 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196960825 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143183288 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143218661 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183269121 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190413722 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205002929 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.128080241 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193932915 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163772308 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195761829 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196820425 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136453433 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207050426 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125507703 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187491442 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137931304 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122385778 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183526145 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.198018996 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127998722 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20022459 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166833502 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127563526 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153560539 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142410904 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189995252 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135616326 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.15444798 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17809842 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155187956 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175870765 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231018291 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126218216 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192273251 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144185715 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154270185 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13562011 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139983978 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158721788 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171797529 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205174055 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130002362 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200885842 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161509437 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188248795 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153273342 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169056855 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.331660976 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124471072 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216311309 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146687196 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222042241 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174265131 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171384705 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195069077 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146365345 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188177486 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143076986 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247310984 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159671009 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.191538231 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127897558 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166928447 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136999024 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129624226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177578007 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164530814 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167186572 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132597438 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192119698 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141645091 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.170176495 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140743306 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223285464 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14769881 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208166574 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182697377 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162853021 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169391493 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198516645 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124839691 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189195306 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167361704 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170726413 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146369479 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.161206069 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135598712 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23558016 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122593346 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183426842 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171166357 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193166895 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167805755 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.158158816 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172357584 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163521903 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171817438 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123425664 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179693784 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167213284 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160684767 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12374359 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196911571 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153987858 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.190288733 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138569177 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174035942 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218709137 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121109746 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158942286 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26800501 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182509276 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219248834 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135648088 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133543853 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171698937 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153893915 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.190757588 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167154183 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.15636939 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126916758 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.167931988 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154575473 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143479652 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191727139 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165937194 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186154539 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209270453 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131736922 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250631775 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168459569 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166552861 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.143613591 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126234335 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137597279 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159737942 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137376908 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209166878 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236939901 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159702451 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.171763648 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132032858 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123473807 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155976571 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163002412 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175545847 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164075598 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172315036 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102110271 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135523066 seconds)
  done (took 84.478090297 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160115696 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150315301 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165526052 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218838366 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191054867 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285300144 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227113934 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244302164 seconds)
  done (took 2.746313808 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117360516 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155313898 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137435297 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140101107 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.106619812 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.43956544 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128146297 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.145271301 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157127461 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148640406 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133134684 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.622176047 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113245093 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.140862473 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.117976734 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132034441 seconds)
  done (took 4.026976374 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.548867649 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535795137 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.806142689 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.290590651 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247929108 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199445357 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744946484 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.186261121 seconds)
  done (took 12.658585256 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.144081245 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133407434 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.328940585 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.254006599 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.146804101 seconds)
  done (took 2.116174478 seconds)
done (took 129.12965445 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12193389 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120478197 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119468249 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150123104 seconds)
  done (took 1.60692459 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174913221 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090165723 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091469647 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116423861 seconds)
  done (took 1.576181174 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40581212 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090271847 seconds)
  done (took 1.627773351 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148738862 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137941909 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164028565 seconds)
  done (took 1.5686751 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138740451 seconds)
  done (took 1.242820394 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125254416 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118632059 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.233382669 seconds)
  done (took 1.588143138 seconds)
done (took 10.32362443 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116958219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.923105668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.42969674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129738245 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707779955 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423348354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.461403417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170426134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170960152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134119731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128928996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685527793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.467557385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.868322029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.423302188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.897956203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.689993463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10822626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142559588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108602021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.435447653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133914136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10886139 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109040837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714312637 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418044005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107103005 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910398083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109022783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110365627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.422977456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109423212 seconds)
  done (took 20.973909728 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115537902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162430827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142693583 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111237124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110999044 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136025752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120105726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119287367 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200105967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107496209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.156370661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107628841 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111942809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134299397 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132894162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106694893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137966333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111642731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115665056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13565761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130179946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107698522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108315266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137642964 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108252757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127369494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135163483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120542621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106099895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140773343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112048128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107930033 seconds)
  done (took 5.131865864 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155603801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171974818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144464944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145523263 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183018338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110481088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220495722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14602843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199240476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109509834 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128812894 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134302881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148836054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108041823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161003331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108913891 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110863259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138612115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116484183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108906851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158442456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108347282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110765097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137312021 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109870431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13076094 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135934144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121017312 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106741113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14020897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114007412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107691824 seconds)
  done (took 5.455556022 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.122447363 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.122386838 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13010841 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16003679 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11732708 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120513087 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150573375 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118544744 seconds)
  done (took 2.162563685 seconds)
done (took 34.832637682 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134275226 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127327685 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.12812988 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15160823 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187836718 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144688535 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126971313 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115005009 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153701832 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129881661 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107073076 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115379123 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156267971 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118713616 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.21854692 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123003291 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223526735 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189430037 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145200141 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123746435 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115991002 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.222655065 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119800717 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.142893048 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.19312947 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110208016 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.209877728 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117850671 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147916683 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111245078 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.218084204 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121125663 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11525957 seconds)
  done (took 5.977824754 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206771367 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118051904 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147407671 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.11711566 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117726034 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145789429 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209356801 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145115363 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116677899 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116059489 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.114973685 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221782548 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.12362721 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143025254 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120268141 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107186264 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.239254592 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117367461 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108225969 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.12032557 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113607213 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116060165 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.250197592 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.11184541 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116701263 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.146425391 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12065684 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120702729 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.146482967 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.11947745 seconds)
  done (took 5.348656203 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.122652094 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129637353 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133035096 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212297027 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145160495 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157054319 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136367041 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.12999786 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166451719 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111794013 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124728648 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175052577 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126662684 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120363252 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142307664 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129342287 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130650078 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139282825 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118448977 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127101801 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160039929 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128524025 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.133121901 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.145760111 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109850553 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11684825 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.14774632 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125131939 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118240457 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123646481 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.142586014 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114305916 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.111098054 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174059158 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111359504 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123064717 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.163430771 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123950737 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.122015659 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171947301 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113832822 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110159582 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.164860007 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162793114 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.110597729 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.15217809 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122120552 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12279198 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.13821472 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129640983 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152000472 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.138713155 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130974511 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.108887311 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138464117 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119726408 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111152515 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141851789 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12649827 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113556262 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.161798807 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119283413 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12134383 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111744165 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151257678 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110402383 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109870777 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.143822291 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136803835 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117061115 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175366072 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111624391 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122707601 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.150903282 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12245445 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121918061 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.109924614 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153034009 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122511375 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117442581 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.152457986 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114206817 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.112895364 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.155922192 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132490409 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123330511 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151201908 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12342143 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114528432 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.139952244 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127764443 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.110964325 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.143600366 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124805784 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111539744 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.113557301 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.153304604 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122448949 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.108909928 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.164569855 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115423276 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.10982591 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.162865765 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114316434 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11649817 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.147899625 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154055644 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.110363929 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150133935 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125549497 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110923938 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117608768 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14370002 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111395736 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127819671 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157044292 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118495177 seconds)
  done (took 16.576421851 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.318796918 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.304122877 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.177557054 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.306094709 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154656169 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.205047259 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300949013 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.304792749 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111491442 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179377525 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163694683 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.273085924 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142641347 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.139234443 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.306079663 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.357211067 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171265384 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.148361268 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179333916 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125234258 seconds)
  done (took 5.518300851 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132308151 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146643131 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163784127 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139487126 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121625448 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.156290761 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11197754 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133549685 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152251233 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12140247 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113337141 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156281324 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124855493 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128303971 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155852698 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144006623 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118045276 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146357677 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134017843 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115337861 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130061743 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137016731 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120192356 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163403199 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130664536 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122350497 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139537047 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117530914 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118248418 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148604303 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117440101 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129787444 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.145456384 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104568361 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.122947873 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125767312 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14682797 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11507701 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116320449 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143239704 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128206913 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12511203 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.118270371 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126918398 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130677043 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107855778 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125321746 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155660636 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105061879 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130179992 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154178114 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127426875 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118451307 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.16366917 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119100313 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127719219 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151911147 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126915183 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116373579 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.138706886 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112053033 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115680886 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.119820276 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156765903 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124125766 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.130731236 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.157397164 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112051537 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116006248 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145359361 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116225734 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.124886777 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160989643 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122070978 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118490537 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154167916 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120397604 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092868091 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.120756587 seconds)
  done (took 11.482024256 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137257723 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121823328 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.1294326 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177346125 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125286262 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117013991 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151287926 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.131597908 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12842792 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.15940439 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127353183 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124290551 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164237178 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12205002 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121363198 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15739991 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12651368 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149021149 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160220805 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138786368 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125852538 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.146919592 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124027738 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122317069 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.16967104 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123007015 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138146046 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.156132838 seconds)
  done (took 5.033394646 seconds)
done (took 51.059487926 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.284576624 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.476209825 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.250980251 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.2488796 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.289974177 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.279919928 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.253134677 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.26498431 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.690532312 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.22270219 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.249328401 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.249964004 seconds)
done (took 28.909048432 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.335283795 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.76616259 seconds)
    (2/2) benchmarking "String"...
    done (took 1.532688819 seconds)
  done (took 4.439571302 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.242935413 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.242370585 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.488711849 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.244348301 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.235684442 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.240220442 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.2501211 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.240714779 seconds)
  done (took 16.081317445 seconds)
done (took 26.243468922 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.339111309 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.438739637 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.480847962 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.237723072 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.268729604 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.24123477 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.239857968 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.262491864 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.252706728 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.257443338 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.651101881 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.503929496 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.239854646 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.595952196 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.241326185 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.256463599 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.253209751 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.476779197 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.244623721 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.275283776 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.214475773 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.225368375 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.247388425 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.239751717 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.249563565 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.255584824 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.293029644 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.237197519 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.466838879 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.275549316 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.275560721 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.240779782 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.292937087 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.247500703 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.245256047 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.263747626 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.433474108 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.252782321 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.226488926 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.265500448 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.439112462 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.255602435 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.247796474 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.244465379 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.258852174 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.302604825 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.231949433 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.349986195 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.268979158 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.242624613 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.251338078 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.618185857 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.249797757 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.246538819 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.253954919 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.477776387 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.259708713 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.302325911 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.268932625 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.246145831 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.243486792 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.244077059 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.282771531 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.241671215 seconds)
  done (took 146.375668526 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.247968046 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.24272538 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.241086284 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.251113558 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.241403703 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.243587658 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.250056652 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.241494665 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.241388891 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.27059722 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.244840004 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.243062196 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.247561097 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.251858003 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.25871287 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.268869333 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.260348606 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.242401791 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.255165253 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.248054423 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.249936682 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.245083528 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.248818795 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.244700815 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.281889211 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.330048646 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.254096266 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.274786964 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.25100409 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.249242631 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.286279653 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.248132378 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.859747452 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.117397605 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.262200056 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.268520248 seconds)
  done (took 81.808868758 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.252003009 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.249413849 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251752867 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.283165234 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.249017311 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.825524178 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828811143 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.219124577 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.307872438 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.606137925 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.477820141 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.246907595 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343028501 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.255704134 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.246226454 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.252230548 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.268499364 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.27897672 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.244048955 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.25164719 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827253714 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.264155705 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.233891881 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.430480897 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.261241825 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281231741 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.636989802 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241653629 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284746537 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.318598521 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.583169234 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.295705665 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.247039 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.246432661 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.574618831 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362367319 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.244917443 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281328521 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.249852771 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.530577421 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.247100407 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.253996236 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.257120543 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879666872 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.245391908 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.82912883 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.253585947 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191920167 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.247791798 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.250162215 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.241188765 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.964862563 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.251695574 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.245888831 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.249943547 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.24729264 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.247224093 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.247758931 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.279054813 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.208204748 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.343736132 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.250326895 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.25920891 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283405932 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.252914377 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.319128864 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.252452743 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.452406271 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.307452232 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.35969348 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.832256773 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252957197 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35038646 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367095707 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.249579371 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.253435165 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253183916 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.252032799 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.365692033 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.250112208 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.939974202 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.427144686 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.264447966 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.6100257 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.354518682 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.251160194 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607365297 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.253529201 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.252257945 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.955424093 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.251391613 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349524543 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.248268631 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.253231932 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.255584252 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.940783244 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.827543377 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487569468 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.256242804 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.767044268 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.253401617 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.122409792 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.819208147 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.923827636 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.258783997 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.366023914 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.427892664 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.272625683 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.251991845 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.604283433 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.256939176 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.312210657 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.253041742 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.65312891 seconds)
  done (took 379.159808634 seconds)
done (took 608.483869532 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.125942734 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.074161974 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.237943755 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.090650471 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.072254365 seconds)
  done (took 11.753612374 seconds)
done (took 12.903948156 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.451662333 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.447907188 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318093481 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.449908016 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288133528 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.46828886 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430281647 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.265460574 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.364435705 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.340914744 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.370781609 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302997449 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.29029139 seconds)
  done (took 18.943877962 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.71233976 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.26270233 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318475658 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517452131 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.295195603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528182311 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.59057801 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.26692111 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425963511 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275558563 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.275756237 seconds)
  done (took 18.62327747 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.703462674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.267462326 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.323245122 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518048934 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.301103434 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543565828 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.586172539 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.267555733 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.402935015 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282283452 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.278351527 seconds)
  done (took 18.625582144 seconds)
done (took 57.340916274 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.294561547 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.362174103 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.294411785 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.277791788 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.277033554 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.275586165 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.277590453 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.275159954 seconds)
  done (took 11.491107655 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.272154166 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.2777277 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.269313393 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.270529905 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.272136839 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.27189678 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.268755502 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.269213919 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.275012445 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.274751564 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.277327071 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.271622572 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.272483264 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.272557671 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.272662389 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.273084756 seconds)
  done (took 21.518744468 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.27701522 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.270284139 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.273040552 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.273687879 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.271325103 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.273177588 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.274361492 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.269428913 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.275828667 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.273507947 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.273482162 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.271443733 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.271660069 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.27467423 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.272194197 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.274584685 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.269505314 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.27284607 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.278854177 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.273986097 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.275595415 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.273253382 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.273526479 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.27246604 seconds)
  done (took 31.71513798 seconds)
done (took 65.879404965 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.26102688 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.280396669 seconds)
  done (took 5.696580409 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.333559394 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.333468178 seconds)
  done (took 3.819283983 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.278109103 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.274138964 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.277700852 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.277641126 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.276574524 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.273006238 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.27416149 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.27270873 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.276197875 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.276210401 seconds)
  done (took 13.91768533 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.275486434 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.275494461 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.273822642 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.276276328 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.279859295 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.273327444 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.281039738 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.278372631 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.275697322 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.277002997 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.277482046 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.274977424 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.273505635 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.274441703 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.277199696 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.276776026 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.27332314 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.276588679 seconds)
  done (took 24.126992194 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.290920907 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.292939546 seconds)
  done (took 3.748910955 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.405985888 seconds)
    (2/7) benchmarking "second"...
    done (took 1.319835273 seconds)
    (3/7) benchmarking "month"...
    done (took 1.381818447 seconds)
    (4/7) benchmarking "year"...
    done (took 1.372150735 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.317010884 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.297781046 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.320400409 seconds)
  done (took 10.574521236 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.279555679 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.48616472 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.612254821 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.864491709 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.278887525 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.279390386 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.189447709 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.280752114 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.280321114 seconds)
  done (took 14.713510328 seconds)
done (took 77.749344765 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.27523066 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.312506329 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.295426831 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.281148005 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.623541374 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.283439053 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.268606685 seconds)
done (took 16.50204571 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.244533567 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.246142569 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.258647927 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.27604617 seconds)
  done (took 10.183495378 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.262831004 seconds)
    (2/2) benchmarking "read"...
    done (took 1.610128609 seconds)
  done (took 5.029804197 seconds)
done (took 16.377970945 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277540501 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.27942157 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.280790658 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.279199123 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.280423194 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.284048094 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.286341675 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.283559522 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.282581981 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.283942303 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.277483017 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.281950687 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278999067 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281083307 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278969311 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279402892 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.281278726 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273390815 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.278109645 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.278951409 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281667985 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280323539 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.278934393 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.280431586 seconds)
  done (took 31.888050083 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.27844319 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.282419166 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.278432835 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.278779005 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.276399704 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.279233331 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.285280538 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.28233704 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.285537615 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.287530496 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28395629 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.281807438 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.280953543 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.277962782 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281430799 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.282086489 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.277366754 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280644941 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274639092 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.278101775 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.282089298 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282421981 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2817264 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275606054 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.283819965 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281341994 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.280463788 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.279918272 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281939943 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.278986407 seconds)
  done (took 39.587833941 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.281535555 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.280919479 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.280608804 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.2839011 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.280903082 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.283691764 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.282270403 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.280833861 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.280387892 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.283202785 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.280118904 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.279156699 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.284809068 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.281222188 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.280852049 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.279982045 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.281342211 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.28232059 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.280476665 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.28168195 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.281753151 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.27884666 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.28067563 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.281410517 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.286301504 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.28586662 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.283344425 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.286426907 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.282691755 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.285881348 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.287056429 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.281799376 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.286026444 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.288151732 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.280568625 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.281461295 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.285501771 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.281815925 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.283133679 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.282764625 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.285448178 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.282573572 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.283215815 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.283516615 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.281774494 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.280556154 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.28247263 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.287723919 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.287520809 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.280803927 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.285078567 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.286939043 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.283243172 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.285867128 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.281309542 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.288879395 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.283270524 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.284960107 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.284375493 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.285161448 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.284436793 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.28089732 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.283325285 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.280946131 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.281841507 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.289394852 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.285932359 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.285452423 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.280089481 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.285058719 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.282286841 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.284735556 seconds)
  done (took 93.552355416 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.285830199 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282917505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286130818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.28720945 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280444448 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283427638 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.287207357 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288848305 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282270571 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.283779053 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286774924 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285850513 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284448891 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286320457 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28717198 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.282362228 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286687672 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281566993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.282710333 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282707792 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285904865 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286427386 seconds)
  done (took 29.432977232 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28357341 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28570581 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.285365676 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.286683147 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289180492 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289885329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288385833 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292287386 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285096074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284478397 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286745982 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285240221 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285787368 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285519737 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283899917 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286525987 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281229241 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28734456 seconds)
  done (took 24.319348573 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.283508447 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.282329865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.28326847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.286215948 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.290909692 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.286134421 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283051924 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.286117213 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.283013801 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.28613153 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.283830699 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286095729 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.285468889 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287522241 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282667127 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.284355666 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.278999339 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285947109 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279905936 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280625751 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.28500017 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280799636 seconds)
  done (took 29.415324903 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283355857 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279042388 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.281629335 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284628736 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283534895 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.28362938 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.282531862 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.284476872 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.285058272 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.28951089 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28685146 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285060951 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.286112531 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285961959 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.280910598 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284851211 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284075163 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288384681 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286508376 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28438651 seconds)
  done (took 26.853382677 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287996871 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284429564 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286807779 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281574657 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284009606 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28202117 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284457608 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.284562246 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284355077 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286546119 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28674854 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286854529 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288136639 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284718347 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285730288 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284809733 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283626184 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285633096 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286833381 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284461109 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288822445 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286139848 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28858977 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288642959 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283224683 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286945032 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285941625 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285914203 seconds)
  done (took 37.162992151 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284619046 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288726454 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.292863283 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.287922736 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.284756917 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.289443687 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.287706394 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.291277348 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.286890229 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290337876 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.284514025 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.288453343 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284365137 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.28836934 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290538043 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.28608274 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286444449 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.288489664 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286761196 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288766565 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.288277252 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291932636 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.291588859 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289785886 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288408274 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.291821084 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288298278 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290200333 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290626824 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.291433037 seconds)
  done (took 39.827549954 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.309471283 seconds)
    (2/2) benchmarking "in"...
    done (took 1.307926637 seconds)
  done (took 3.784895183 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.290033477 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28477878 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.289512 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288928172 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.291796948 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.291049957 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.288152315 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289220328 seconds)
  done (took 11.481378647 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.280069578 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.29052161 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.290903069 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.286936755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.288403524 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.278874474 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292423212 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.296780322 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.283263551 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.282577199 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.283436807 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.282643711 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.285629919 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284696922 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.285792927 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285721655 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.290046701 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.289500959 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.288119012 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.288999052 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2906905 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282741078 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287015368 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.295949967 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.283395046 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.289046268 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.291293972 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.29645938 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280865612 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.289387404 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.286323153 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.291713561 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.292225369 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.290645094 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.2923131 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.291153772 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293641217 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290384778 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.294575369 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295804968 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29099092 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.296781611 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.282441555 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.290237174 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28863958 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.295473369 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.29307575 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.294808423 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.286074032 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.284633225 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.293317235 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283345791 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.296953507 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.288483819 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.294052507 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294066643 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.3021682 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.283484411 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.288885739 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.296750157 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.299462682 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.293241892 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293083719 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.298474443 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288954143 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.290830534 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297952803 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.297704059 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.29303547 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.290259549 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.293364786 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.30598839 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.300454087 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.302687095 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294234462 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.29301487 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292896207 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294755961 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.296828885 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.298866935 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.29648951 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294047595 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291216823 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292097512 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.288010473 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.296844151 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.295252074 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.293296167 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.283364044 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296434738 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.302968013 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.29578192 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.284426032 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.290763063 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.29479224 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.300673523 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.286607111 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.294251426 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.297556914 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.291501976 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.30145564 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291284126 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.297336206 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.302306486 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294040224 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.294911156 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.303256026 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287842897 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.297413162 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.301842581 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294636838 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.285627763 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.291771875 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.302749435 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.289337976 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.289987769 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.298301967 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.292976554 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.298003971 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.301101444 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293621246 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.303624006 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.302934357 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.300437982 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.290450214 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.300424822 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.298884534 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.296928526 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.304483923 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.298699821 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.297694477 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.293505136 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.304502608 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.293002061 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.301716449 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.289306228 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.300842274 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.296871236 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.298580381 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.290226814 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.301224485 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.291925894 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.299789142 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.305838911 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.307123969 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.29685613 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.306621844 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.294960446 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.294665201 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.300744402 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.30143168 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.300041088 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.291614995 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.298373551 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.290132671 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.298170255 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.293808067 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.304282812 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29718958 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.303164056 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.299731608 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.296954723 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300393461 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.307045816 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.302593167 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.297356287 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.303361035 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.298412799 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.299790086 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.292976859 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.301358606 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.291793217 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.296762052 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.303081544 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.301152669 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.304150582 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.296541799 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309319235 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301196838 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300121437 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.291027104 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.300468171 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.304202554 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.301071387 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.313928119 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.300351578 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.300156814 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.295766228 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.295739952 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.302114321 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.294008147 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.302257393 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.309074393 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311229294 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.297443988 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.300678383 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.294098095 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.301616907 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.299054103 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.307905397 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.302972975 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301026056 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296481284 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305149147 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.302435693 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.306284644 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.293293988 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.305687954 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.301812331 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.304304748 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309682985 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.302773268 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301996343 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.305487388 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.303803334 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300961116 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.296164994 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.311640751 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.295982784 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.299364878 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.309633858 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.30322298 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.305722056 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.318230601 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.303369526 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311105926 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.304639015 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.300642454 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.308988854 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.302522999 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.303056929 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.308589462 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.306365598 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.30075476 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313505181 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.307955228 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.295686259 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.307103958 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.310830797 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.306381541 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.300127748 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.306930738 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.309150332 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.303228929 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.304629063 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.298424964 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308338028 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.308132244 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.316099965 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.297309506 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.306046549 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.300910515 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.310218911 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.302117982 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.309545831 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.306262679 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.309055755 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.316541864 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.306305523 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298195157 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.305469616 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.309606795 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.305855213 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29556453 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.309855036 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.304091788 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.307907753 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.302638131 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.300418453 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.310635725 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.300125223 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.307315682 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.298358547 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.313255101 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.321644188 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309596768 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.309486517 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.309456574 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308053232 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.30900851 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.306295285 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.299424437 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302291044 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.299730349 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.300848898 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.308433861 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303422346 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.310995053 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304640327 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.308838567 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.311488847 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.309426852 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.302208646 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.311219423 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.30770366 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.305940504 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.302024456 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.309040718 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.304710633 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31231872 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.312657851 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.30450838 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.317167857 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.314730308 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.307084575 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.305372799 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.307248365 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.302526031 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.305930429 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.314468195 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.30219918 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.311992719 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.2992557 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.309434483 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.304498495 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313620693 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.318845479 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.29955587 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.313258394 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.311679588 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.299340866 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.301899683 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.310489804 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.31840965 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.318996822 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.301972736 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.311112266 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312023473 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.307485671 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.309758559 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.308890254 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.305459134 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.310814059 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.313952215 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.312055915 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.306316078 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313718986 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.3170188 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.312324105 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.307756685 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.305897175 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.312373102 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.322431839 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.308314227 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.309065417 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.304899614 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.312413139 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.309985748 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.310714757 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.315638722 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.312605049 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.313380302 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.317460704 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315496445 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.315440589 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.315403471 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.322239308 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315129953 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.323645332 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.303055319 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.31917013 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.313241382 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.308797053 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.309834272 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.308252845 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.315676865 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.302434702 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.317226668 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.309022673 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.3092723 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.314020498 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.319770847 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.307312504 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310115432 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320560624 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.305156402 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.313815233 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.314329641 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.303139266 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.316123901 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.313611697 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.303434518 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.314127231 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310085919 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.315085724 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.304376154 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.312852477 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.305121605 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.313574131 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.314200538 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.314980849 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.312075908 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.314636516 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.306877482 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.313475614 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.317737778 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.321805149 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.30887387 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.313168546 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.306478146 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.319644924 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.324280195 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.309001087 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321312899 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.314310857 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.310950568 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.315518257 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.324082558 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309051566 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318047109 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.307262467 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.308564433 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.312898619 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.317100096 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.318762938 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.316819323 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.309150252 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.315739264 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320969607 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.319379289 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317026363 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.311904496 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.321643482 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.306494706 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.307899784 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.318485915 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.310954191 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318922683 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.309350871 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.313286833 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.309641432 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.320172986 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.315913077 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.315925068 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.305412055 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.313355023 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.31857541 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.320239451 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.312905605 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.309959977 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.3202283 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.307961749 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311560848 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.316360981 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.309965441 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.31519014 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.323757477 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.313521021 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.310542641 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.311702677 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321802344 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.318653549 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.321985144 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.309670104 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.320285848 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.32695854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323920256 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.310511522 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.313586257 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.315980329 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.319561349 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.319850568 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.312420373 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.326302072 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.325007587 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.320222284 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.314315264 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.322360358 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.308705852 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323242405 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.316415825 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.316079323 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.323795358 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.312068372 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.326027076 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.323365811 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.317471816 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.310540445 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.318039588 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.314259035 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.312128288 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.323955427 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316457252 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.327712775 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.32075241 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.323528634 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.320801829 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.319507763 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.3179482 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.311316443 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.321585818 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.311920355 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.320321509 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.319316607 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.313569181 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.324571044 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.31828877 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308035537 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.316763192 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.324623194 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.319100673 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.311811498 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.320698759 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.323853941 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.331162647 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.321077699 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31588353 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.31970663 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.326326941 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324776472 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.318646228 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.315892271 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.331775774 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.335857663 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317533807 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.321055713 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.32592845 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.333244148 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.322587755 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.321793216 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.318695505 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.321324878 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.326712972 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.324669014 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.331329517 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330726084 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.317151005 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.326201972 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.317067337 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.31884609 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.323210992 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333934589 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.324019527 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.322429953 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.331330647 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.333654841 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320069787 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.337405061 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.333790416 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.323798773 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.333844206 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.31466382 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.324535279 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.320570548 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.326264739 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.327470973 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.325029525 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.328709864 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.313729276 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.323909543 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.33220972 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.33223543 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.325668447 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.316241135 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.316869631 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.324863382 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.326207067 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.321859275 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.325140722 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.323369568 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.324014267 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.319039692 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33535947 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.342064362 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.331948037 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.324422155 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.324116414 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.32310806 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.330716565 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.324174713 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.326488291 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.331364876 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.322721127 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.321819983 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.331572081 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.322808867 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.316328927 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.319208375 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.322926537 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.327540393 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.337316748 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.342221528 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.330193801 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.326043722 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329346308 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.324295935 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324409872 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.330345756 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.322217073 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.317732536 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.322369159 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.326953554 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.326021962 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.324021096 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.321444076 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.329834842 seconds)
  done (took 780.754209574 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.32714403 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327153938 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32688787 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.327531645 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322471739 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324295244 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3277552 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321906007 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.330941661 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32610602 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.332153191 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32866686 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.324682894 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.325112364 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.328336766 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.326514488 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328351309 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.323074064 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327438872 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32553453 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.328096622 seconds)
  done (took 29.058635396 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.329475832 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.326575652 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328795052 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.329646462 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328106758 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.32517354 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.326295933 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329453556 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329255965 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328451358 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.334405938 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326688851 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.329820693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.326494024 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327036869 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330766247 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.328520365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327308382 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.327544941 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.330591655 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326315423 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.327525294 seconds)
  done (took 30.427610118 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.329603075 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.331911431 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.32508045 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.330778819 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.328249423 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.327904072 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.333308993 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.326794666 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.327888107 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.322338794 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.319550037 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.319837858 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.32401898 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.335069352 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.327930115 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.332883366 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.333972198 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.329654918 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.326804103 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.333129981 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.332969513 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.342311915 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.331004781 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.328513996 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.332292783 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.32972212 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.328155579 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.333645817 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.321673833 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.333307163 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.327075642 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.321274814 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.335553415 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.331050313 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.323193101 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.332496887 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.330403162 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.330275695 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.332259122 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.330320384 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.343927025 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.33457899 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.337064726 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.343441748 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.333776787 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.326212203 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.339563248 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.329571353 seconds)
  done (took 65.068829739 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.335447103 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.333512608 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.332067177 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.330684894 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.3337143 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.329007359 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.331067066 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.329108697 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.333516868 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.33122827 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.335934938 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.332859079 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.330383911 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.329710813 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.334353807 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.334540529 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.337405789 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.332323535 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.333358861 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.334051951 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.330473238 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.334241229 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.332313922 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.331454728 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.332866561 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.33686935 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.336053311 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.337883856 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.333614851 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.334132273 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.33376082 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.33272672 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.336120773 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.334584195 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.338490924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.331242306 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.334033195 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.334188176 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.335278041 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.333368939 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.337720503 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.336999604 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.340848268 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.337833097 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.338533946 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.340935608 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.335202943 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.335392583 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.335440736 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.335413284 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.338374063 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.341467689 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.333508158 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.339024113 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.338165693 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.338503125 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.335435238 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.333794251 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.336978205 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.338665193 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.333110348 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.333269746 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.335290412 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.335673984 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.336303134 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.337327676 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.334645246 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.334873674 seconds)
  done (took 91.968798311 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334505698 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.336649618 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340092554 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337171923 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337106096 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.336496953 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.342270602 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.337431925 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.339394435 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.33988788 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339335575 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.338582433 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.338493531 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.339772633 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.337819715 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339910205 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.33682411 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336468263 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.337481195 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339201326 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.336221048 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.341836589 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.335364916 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.338024079 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336634112 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.338144742 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.341463465 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.338594906 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341855159 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.342690531 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.339976229 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.339342926 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.344415135 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.336749037 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.341036264 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.339239369 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.338052659 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340093644 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.342159612 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.342164581 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.341471217 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339615683 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.337399555 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.340218983 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.341585152 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.339400046 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.341427326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.339470725 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.343453308 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.343715579 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.340464455 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.338181713 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340810601 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.340308768 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.34409859 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.339774539 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342208015 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.340459728 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340232738 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.338987234 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.346417453 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.33894964 seconds)
  done (took 84.267949141 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343503779 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343636261 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.343281949 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.337031354 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.338669964 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.3451287 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34459598 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.342790526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.342426471 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.343803737 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343246644 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342691382 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340763982 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342544757 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.344074071 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346778208 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340419592 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.345737839 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.344193208 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.344428458 seconds)
  done (took 28.07210017 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.342439908 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.343213122 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.340698654 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347572165 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.345719271 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.344977149 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.344969029 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3414117 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343144986 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341918226 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.341432582 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.347446048 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34282713 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.34464088 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.344210769 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.343757083 seconds)
  done (took 22.718670924 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.345001071 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.341867264 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.344232655 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.343159908 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.343626303 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.345447348 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.342895571 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.346250345 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.339671071 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.341017146 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.348670093 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.342250199 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.344928949 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.344588454 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.343118814 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.342575112 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.345185204 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.347409422 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.346007558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.34408746 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.346221874 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.343308809 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.344508656 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.349096726 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.34343228 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.348907471 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.350221036 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.345256879 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.346309724 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.343740207 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.349329873 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.348497697 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.349403755 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.345304925 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.348889444 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.351957323 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.346849461 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.349162532 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.344474603 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.348045536 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.346304581 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.345310998 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.346927669 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.351132013 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.344629849 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.346010069 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.343586629 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.347034965 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.347310354 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.34357978 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.347674601 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.346720399 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.347073979 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.350211724 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.348815396 seconds)
  done (took 75.239530732 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351547794 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.356074765 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.352174254 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.350296277 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.349488822 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.351624376 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.3479156 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.350656439 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349353962 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.348846823 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.346312911 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.353329388 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347745823 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.35004928 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.349162449 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351045518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.352644779 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.346823148 seconds)
  done (took 25.525829433 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.35180255 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353356936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.348279596 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.350760566 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.345691946 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.351857612 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349194956 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.348422119 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350371576 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.350003783 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348862911 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.348944352 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352318158 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.348644791 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.351659363 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351718663 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.35239534 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350736373 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.34684437 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349512696 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.352261025 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352796065 seconds)
  done (took 30.925063892 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.343809734 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.340467801 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.336900098 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.353085636 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.349336396 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.34511505 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.338885612 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.339365804 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.359055387 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.366323249 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.361390167 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.34836299 seconds)
  done (took 17.400478912 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352777249 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351038345 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351307852 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356131868 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355992937 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354319313 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353427734 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349275031 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355226906 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355678211 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35652292 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353073691 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352660724 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352747806 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356241915 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357681413 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356423441 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354391266 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353510409 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35491335 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35472303 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355130998 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355060647 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356610093 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354064324 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351999617 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353962629 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355948287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353315943 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353443007 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352156651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351564497 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351694815 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357468035 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354851577 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352367363 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353929418 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357503935 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356879616 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353807807 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354227124 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355966727 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357141082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354809563 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353662977 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353263927 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35224122 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356098459 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355145513 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35580157 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356071462 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355587991 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356681641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355538919 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356178488 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354377245 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351833691 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353713744 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354621329 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359608592 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36016599 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358594014 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36034822 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357962304 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358057368 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356849002 seconds)
  done (took 90.645284062 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356309197 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.358147612 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358486542 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358423531 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357415184 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356543556 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359843464 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362486633 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35702132 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358416247 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361347743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355324995 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361998974 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360933838 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358981462 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361626689 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361133278 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36125645 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360976111 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359977007 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360527249 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358908626 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361486212 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36016835 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361749954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362535973 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359221112 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359862617 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36383687 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359440618 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361324288 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359713708 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360373056 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.358180714 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35892033 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362982962 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358910337 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36001692 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361058274 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361966899 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35747108 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362092361 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357422588 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359808243 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358194604 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361522914 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362624877 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360463972 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360787688 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358647667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361426056 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35985307 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362314204 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360811592 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3595408 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362271578 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357908846 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362932028 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359521958 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357773973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362926187 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362081363 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362477709 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362261834 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362749422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362266953 seconds)
  done (took 91.004000005 seconds)
done (took 1831.539620394 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.518656787 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.477022219 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.354556984 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.368290198 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.35190309 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.355907523 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.365100028 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.349378529 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.355425953 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.352735637 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.349537802 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.560486718 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.393515527 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.348834877 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.35369339 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.451660606 seconds)
  done (took 27.536923208 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.383796717 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.364428494 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.478700666 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.361108174 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.383902354 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.554682414 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.420168456 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.358959928 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.538873256 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.380274624 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.346020384 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.380187982 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.355382779 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.349209748 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.395930076 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.555533893 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.633724003 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.350132791 seconds)
  done (took 29.823305949 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.835647287 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.369447581 seconds)
  done (took 5.439004004 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.381230873 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.362951969 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.36274143 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.356980149 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.355677366 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.357045786 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.361688158 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.358264356 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.359111987 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.495221093 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.36325061 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.37695851 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.373860534 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.363796273 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.366334194 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.408634029 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.515485558 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.365224202 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.370540243 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.368544577 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.361285007 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.454228178 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.405753452 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.373771489 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.494432886 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.361008574 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.365087184 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.36631489 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.483072469 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.36938378 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.359988506 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.360738419 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.364734116 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.357389773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.909656082 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.356758675 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.387948853 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.373532759 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.368119412 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.48920462 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.366817447 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.365991387 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.353089601 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.904768288 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.478009482 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.492367081 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.389942955 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.358981555 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.364103946 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.43413308 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.36455508 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.363647835 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.42191536 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.199311699 seconds)
  done (took 87.086949775 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.41277667 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.354779071 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541189622 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.37082003 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.353855795 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.3716995 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.355582278 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.662887586 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.370028485 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.35508524 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.693094693 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.00908667 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.36891632 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.418215213 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.390878559 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.415860353 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.356543398 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.374807576 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.379911336 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.355082762 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948529855 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.364173189 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.353360236 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.446755466 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.396279527 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.930285107 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.359873661 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.356098427 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.364995998 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.352849234 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967160111 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.361102573 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.40514998 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.357755311 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.660928313 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.777021247 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.726631657 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.353421252 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.392369479 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.362444616 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.432079625 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.90952602 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.74260209 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.358332201 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.358069465 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.91020546 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.357312621 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.372092092 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.372362504 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.631689352 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.36031289 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.360647254 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.36403153 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.365337084 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.358318745 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.428557937 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.430509009 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.91681072 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.358326486 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.353641718 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.366201196 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.357121409 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.361645114 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.360343376 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.362851193 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.752228865 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.608861055 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.364736952 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.756163397 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.958618611 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.360113323 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055729816 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.376596522 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.377059498 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.409255676 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.359721527 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.354296012 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.910454195 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.35754691 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.358600436 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.732548325 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.360393505 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.686583394 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.383971545 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.367172701 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.978928448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.368395815 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.406587636 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.359290935 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.376592385 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.357837343 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.368027499 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.661606785 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.414893409 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.358863895 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.366740238 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.384830831 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.361106452 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.362963982 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.372868914 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039238577 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.367781864 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.360794211 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.385907107 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.376202393 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.36659005 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.364216282 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.366423251 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.660356854 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.363731058 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.367857157 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.366017491 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.374640968 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.368029749 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.45948622 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.367253733 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.696802539 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.364587406 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.362961422 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.366663606 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.366264854 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.403463603 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35952911 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.369887326 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.364291942 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.662376687 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.384834649 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.35850997 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.366521764 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.362948188 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.362858302 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.363285423 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.421483836 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.369006642 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.263191005 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.371914861 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.379852915 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.366885676 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.371835915 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.364789871 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.371056999 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.364744831 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.677802049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.669711009 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.610060302 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.369985434 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.369231207 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.239283957 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.369358435 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549414459 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.387894408 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.364292532 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.648323385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.594942325 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.366075717 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.364330659 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.369582018 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.650986516 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.367452523 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.69823379 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.999370526 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.360124435 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.368142797 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.258376796 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.192067173 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.363550427 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.370648428 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.680178245 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.383952183 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.366064043 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.369068333 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.368837089 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.367104635 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.371865612 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.375492009 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.366027969 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.369167607 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.657487317 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.563657758 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.384111752 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.375255326 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.918464926 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.388346588 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.366898775 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.38252758 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.366750868 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.365192491 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.429689951 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.369810078 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.417844369 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.366507486 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.379295871 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.948524857 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.364805172 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.389555915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.565443458 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.172843691 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.363720069 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.369664705 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.368848517 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.423141032 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.953722122 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.402374809 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.700587689 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.371796046 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.412135438 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.370299913 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.378734982 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958468937 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.370084085 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.387118064 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.139582548 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.366771026 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.849566328 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.366931118 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.373267585 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.057986673 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.369367509 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.370852973 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.363787394 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.365470046 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.695448748 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.370646273 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.373850363 seconds)
  done (took 507.111258247 seconds)
done (took 658.225064423 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.371017051 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.372220569 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.348540021 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.367395958 seconds)
  done (took 10.702695703 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.385677673 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.37301636 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.386536854 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.371753407 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.385179429 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.371303395 seconds)
  done (took 9.520324292 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.369673864 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.369732733 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.368508387 seconds)
  done (took 8.354047112 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.604994556 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.391526174 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.7449377 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.367802875 seconds)
  done (took 9.357707441 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.382546041 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.38704399 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.386555466 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.388214781 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.388726893 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.387662019 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.386078286 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.388608136 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.390615491 seconds)
  done (took 13.729456953 seconds)
done (took 52.907181911 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.34032246 seconds)
    (2/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.465755064 seconds)
    (3/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.436937314 seconds)
    (4/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.394464252 seconds)
    (5/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.349174333 seconds)
    (6/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.588069096 seconds)
    (7/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.5437321 seconds)
    (8/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.546610795 seconds)
    (9/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.414709105 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.226294896 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.4407603 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.496083678 seconds)
    (13/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.492301285 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.344105702 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.473078457 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.412288661 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.385710453 seconds)
    (18/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.449379345 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.625894749 seconds)
    (20/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.341668055 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.649025434 seconds)
    (22/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.360161494 seconds)
    (23/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.458141989 seconds)
    (24/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.371875609 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.504838308 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.398470745 seconds)
    (27/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.636935307 seconds)
    (28/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.388540482 seconds)
    (29/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.45442899 seconds)
    (30/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.447669372 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.451171581 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.472632935 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.511696491 seconds)
    (34/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.350677058 seconds)
    (35/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.348524763 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.422384897 seconds)
    (37/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.347438913 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.539500279 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.454791432 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.392756098 seconds)
    (41/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.411898767 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.495423818 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.439635879 seconds)
    (44/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.346936861 seconds)
    (45/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.352521953 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.131045726 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.155700853 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.352401756 seconds)
    (49/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.406942801 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.350498679 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.486020786 seconds)
    (52/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.204783008 seconds)
    (53/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.346273927 seconds)
    (54/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.352551269 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.481842588 seconds)
    (56/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.407475488 seconds)
    (57/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.401976589 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.742390999 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.656207354 seconds)
    (60/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.346347803 seconds)
    (61/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.455927972 seconds)
    (62/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.562961605 seconds)
    (63/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.34777196 seconds)
    (64/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.415595876 seconds)
    (65/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.636714028 seconds)
    (66/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.453249882 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.520677422 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.371726379 seconds)
    (69/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.442246266 seconds)
    (70/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.601064302 seconds)
    (71/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.568957162 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.497843883 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.524625516 seconds)
    (74/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.470638881 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.074610205 seconds)
    (76/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.523097234 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.211731 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.503582905 seconds)
    (79/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.549653554 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.411173255 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.567123709 seconds)
    (82/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.440028558 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.467520087 seconds)
    (84/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.517000749 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.49095256 seconds)
    (86/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.367625543 seconds)
    (87/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.497207186 seconds)
    (88/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.35560564 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.464393535 seconds)
    (90/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.162139479 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.638802526 seconds)
    (92/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.355585013 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.381868461 seconds)
    (94/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.286608185 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.403151792 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.460089847 seconds)
    (97/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.39019271 seconds)
    (98/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.458392071 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.486774802 seconds)
    (100/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.351618342 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.548278229 seconds)
    (102/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.216974494 seconds)
    (103/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.462819626 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.375715491 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.361594164 seconds)
    (106/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.351342192 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.512043836 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.53929537 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.470521396 seconds)
    (110/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.505979266 seconds)
    (111/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.410843766 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.414233972 seconds)
    (113/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.243731583 seconds)
    (114/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.248086174 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.382779643 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.408884916 seconds)
    (117/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.451498248 seconds)
    (118/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.357386362 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.646666948 seconds)
    (120/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.356805776 seconds)
    (121/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.095035323 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.471410905 seconds)
    (123/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.447624256 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.356091193 seconds)
    (125/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.418076554 seconds)
    (126/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.214760747 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.360405143 seconds)
    (128/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.571696327 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.353123812 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.501109078 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.245592053 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.533945633 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.180126584 seconds)
    (134/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.356009123 seconds)
    (135/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.416338428 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.356274906 seconds)
    (137/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.355284166 seconds)
    (138/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.609437834 seconds)
    (139/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.44363867 seconds)
    (140/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.487883202 seconds)
    (141/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.602660042 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.543332482 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.549001177 seconds)
    (144/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.576687209 seconds)
    (145/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.061549057 seconds)
    (146/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.574143347 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.362263208 seconds)
    (148/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.508129855 seconds)
    (149/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.470470614 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.356525159 seconds)
    (151/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.470287579 seconds)
    (152/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.464078716 seconds)
    (153/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.497001349 seconds)
    (154/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.450248856 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.54860042 seconds)
    (156/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.49128092 seconds)
    (157/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.374817011 seconds)
    (158/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.52932336 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.496393111 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.376916917 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.415703801 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.402195428 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.53795291 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.53712648 seconds)
    (165/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.528444316 seconds)
    (166/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.353114338 seconds)
    (167/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.183383281 seconds)
    (168/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.393358172 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.493239798 seconds)
    (170/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.441990296 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.144679512 seconds)
    (172/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.071055719 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.420290978 seconds)
    (174/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.567052362 seconds)
    (175/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.275307895 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.492231604 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.357727366 seconds)
    (178/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.382301063 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.537532474 seconds)
    (180/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.41575506 seconds)
    (181/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.118131049 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.359856979 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.474515529 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.633367371 seconds)
    (185/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.354907694 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.396928748 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.426707481 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.58780411 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.497611773 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.505134021 seconds)
    (191/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.603708132 seconds)
    (192/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.118535286 seconds)
  done (took 348.914704818 seconds)
done (took 350.16391769 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410928625 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.474166717 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.390412969 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.390375978 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389722843 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.383271625 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.412315148 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.391999129 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.403070331 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.408003264 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.384354118 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.396816872 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.407498029 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.404957957 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.424710252 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.391790861 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.392508272 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.403898311 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.406783158 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.407346353 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3931316 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394909766 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.417111932 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.392783957 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401167978 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39724907 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.395904929 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.380965789 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.398940424 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.406464804 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.384173063 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.395142144 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.410277224 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.404533495 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398477416 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.4015919 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393668461 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.476790257 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.413025475 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.402275405 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.402477386 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.40635704 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.39970835 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.394355516 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.406340895 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.420335873 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401823939 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.407943952 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.384191144 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.393620014 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.409668427 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.408131484 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.403141342 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.393452037 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.379841454 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.425842972 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.402215985 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41188473 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.401844155 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396094544 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.427847388 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414796794 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.408148349 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402339635 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.400396293 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.410906011 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.407160052 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.407359492 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.402634043 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395035152 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397808791 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.403657281 seconds)
done (took 110.320995986 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.516598303 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.390954947 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.550151932 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.404387039 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.569144121 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.518224199 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.399984024 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.404446313 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.400835935 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.202789322 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.403094707 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.401413376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.393132094 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.400377732 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.521195547 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.401673569 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.402331822 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.098358566 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.406185913 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.528145093 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.393276933 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.406481484 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.404675895 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.208210737 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.391319565 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.388784993 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.531038669 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.406885941 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.107543218 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.389239716 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.392996881 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.110115592 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.532138035 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.422643243 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.410024102 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.413587191 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.564504501 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.408336064 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.519122236 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.523513715 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.554983818 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.445731723 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.388648697 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.39615 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.407615389 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.406515728 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.403823333 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.430654613 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.392527435 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.403417792 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.103611449 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.416586735 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.412519283 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.4078861 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.405162694 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.427614741 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.410854364 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.407501787 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.534140775 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.407369786 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.52298037 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.207448433 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.203383896 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.40694628 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.391115487 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.409384318 seconds)
  done (took 112.807287997 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.465242004 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.48516148 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.511639951 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.39592671 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.449211421 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.516382847 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.39932623 seconds)
  done (took 11.488970308 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.405938564 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.405887625 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.44825492 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44473448 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.408842968 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.57294551 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410577521 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.412005098 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.407565613 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.447332867 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.409605155 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.408937873 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.420589962 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.39875222 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.449150453 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.412731986 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.518188829 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.401765068 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.410939862 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.552822342 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.406174469 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.413784381 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.450410633 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.410909316 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.413388984 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.407923604 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.184017843 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409220102 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.408807933 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.409456364 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.409410351 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.466615131 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410761317 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.397379715 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.412943383 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.517726994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.411198896 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.416843829 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.418014177 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.408212733 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.416248943 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.410034685 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.409214987 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.408562788 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.409423444 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.427132902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.408896876 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.409446493 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.410269948 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408747745 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.452894197 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.410701592 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.414388142 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.409270504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.455873404 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.422666596 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.412906941 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.409758167 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.413036112 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.412469942 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.553770093 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.447870559 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.413372042 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.450558401 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411410819 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.414681524 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.409756271 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.411832694 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.492332212 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.413789534 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.446874104 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.411371061 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.582584902 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.424703717 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.412748559 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.405233591 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.407356986 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411641798 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.398987473 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.408977109 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.413343313 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.40384219 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.409257514 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.410179795 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.414566323 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.560227543 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.511958801 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.412805114 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.418792897 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.409783794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.413451115 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.456625022 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.412173201 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.413708558 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454614825 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.522769548 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.457736016 seconds)
  done (took 144.757177985 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.418436214 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.417675587 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.408695989 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.434096192 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.402865805 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.405701075 seconds)
  done (took 9.758947876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.407852396 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.416040517 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.408881407 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.41365846 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.413509057 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.415236899 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.414936963 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.404325281 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.418188471 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.412368838 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.414891787 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.418540694 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.415344685 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.413131922 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.412095582 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.414357393 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.417714622 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.413563001 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.414238466 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.415079779 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.40361111 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.418134815 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.415269886 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.409134664 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.422050098 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.412727139 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.433323726 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.412811573 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.414462554 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.414865513 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.416926192 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.420224596 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.408091474 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.41413762 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.419683888 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.408681452 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420442595 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.423013128 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.418231739 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.419972655 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.41934903 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.420066544 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.420519967 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.420638137 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.412234911 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.413364974 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.425710792 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.428630786 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.415456727 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.420546693 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.422623224 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.419297389 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.41818379 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.424229895 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.411607694 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41092157 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.426477088 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.416764055 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.416559043 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.411362381 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.424599804 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.422759669 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.412434239 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.42052603 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.417959276 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.423890495 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.413805447 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.42204904 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.415997505 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.418605064 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.418829808 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.418640691 seconds)
  done (took 104.279243939 seconds)
done (took 384.352886656 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.848140103 seconds)
  done (took 4.122633791 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.558444805 seconds)
  done (took 3.83819972 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.110337311 seconds)
  done (took 24.395230543 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.449095491 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.419394237 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.413587183 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.398526043 seconds)
  done (took 10.957641813 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.876161189 seconds)
  done (took 4.149394373 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.428396372 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.406397533 seconds)
  done (took 6.111701524 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.647263807 seconds)
  done (took 3.923070814 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.751709999 seconds)
  done (took 4.031812809 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.422413816 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.4325897 seconds)
  done (took 6.13617634 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.380755313 seconds)
  done (took 3.654314039 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.42552155 seconds)
  done (took 21.698677833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.4330174 seconds)
  done (took 3.709804812 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.439043847 seconds)
  done (took 3.714760111 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.197904102 seconds)
  done (took 6.473074499 seconds)
done (took 108.191953237 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.399897978 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.407992593 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.406193415 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.409984849 seconds)
  done (took 10.891537414 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.484832468 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.48862245 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.490657871 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.479321556 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.479984566 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.485552004 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.442573952 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.4450766 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.469376806 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.466960177 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.487838993 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.468869936 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.480812787 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.44095053 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.467808722 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.480055325 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.475515943 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.489610158 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.443165754 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.471663365 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.421412839 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.473628877 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.4701021 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.41684583 seconds)
  done (took 36.499323026 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903056294 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.47583351 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.56380942 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.461752952 seconds)
  done (took 7.677904636 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.522637001 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.524849984 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.540375858 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.584407517 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.613625153 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.540065698 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.446926088 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.441234298 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.428183306 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.521351034 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.598084086 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.52281994 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.740727025 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.418883118 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.737944974 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.417175733 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.417961773 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.523874245 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.569307458 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.598517282 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.41922746 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.521935356 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.52662275 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.522852775 seconds)
  done (took 37.974818226 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.425919601 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.430973106 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.421850122 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.432367502 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.422929679 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.418656314 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.422118002 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.42738434 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.421448212 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.422366418 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.419284015 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.438370752 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.422923779 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.421747083 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.427978483 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.423074649 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.425825873 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.427418641 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.427857987 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.422850313 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.424105045 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.424595184 seconds)
  done (took 32.632111901 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.407146974 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.404846797 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.757254951 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.661957645 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.410428703 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.409714891 seconds)
  done (took 14.333867963 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.486310794 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.640336604 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.416241876 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.786387747 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.880776571 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.417501991 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.41542074 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.676287861 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.995926442 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.997490571 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.482169029 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.491135282 seconds)
  done (took 20.968584655 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.424494133 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.414286886 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.42309739 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.42770654 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.472068334 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.418046794 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.420221232 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.407169112 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.477015321 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.481215174 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.422060745 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.472482336 seconds)
  done (took 22.536490106 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49598765 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419072745 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415430524 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494122013 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421387402 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417722369 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471465086 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155714886 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.423309404 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695124284 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420028785 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505357518 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664361719 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428737817 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426612984 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.394261669 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649132855 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937864257 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425349062 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423793744 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456250917 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429247194 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423530835 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664820584 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.425442911 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41678592 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.683945893 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418752527 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7172882 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694007791 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697694233 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427712087 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693959426 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092166521 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529284232 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635630009 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433427234 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.422641043 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.400189305 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.426076913 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451442295 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426931042 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691781208 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429668263 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421869713 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428038554 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157613457 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.428421967 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.420609279 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422494182 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691183369 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509238067 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.42898442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421564639 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435558479 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425153476 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.423702405 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548434907 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061341883 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422283743 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432407852 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.426719215 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437619849 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432808529 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10182807 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.431117345 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.427152751 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426441015 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4219779 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42236086 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452973176 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423294339 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.437749399 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42371083 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228063872 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437295911 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429201833 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995644304 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437172048 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.425553365 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645765382 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423084738 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424985471 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.422302013 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420972177 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207247205 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435335999 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.391540735 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469656335 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178804695 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64900571 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44894843 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452247516 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644658851 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.389178722 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423189676 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.43639139 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431306285 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447006469 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162571489 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422352794 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.430234643 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672338377 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.637359165 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42525769 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.402385934 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94021406 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444403829 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.454533336 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426344489 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64874846 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.081363612 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697533135 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441826143 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467129697 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42524959 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265683773 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438066898 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.43716369 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43006498 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724609752 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.289573287 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4330287 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500468087 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43726765 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425614327 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438898631 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433184614 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.425996094 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.621780988 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433208283 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.702652926 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.434024488 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428896838 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.426559545 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447081759 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.435179861 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.646920564 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443482149 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705722645 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431908946 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428025241 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427964488 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.644759545 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.428692369 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.454350748 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.767820692 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427606751 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43439727 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705297019 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465300446 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539893926 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461268978 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.426900412 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.68272828 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.434558069 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.43280026 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442825257 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438306126 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430972192 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.436378261 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420915167 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075222038 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415276213 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437722297 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43028034 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.444582351 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50424444 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437771184 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.65114459 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.446274886 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423429461 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.456738206 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.427636279 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655588611 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702729601 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.437445501 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610484289 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.939239826 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085396962 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453345502 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.431988702 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.430474712 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.430156215 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431038091 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431186913 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433556364 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653005567 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716756776 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435152889 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.087630636 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435383907 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432780396 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.4445933 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701114696 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.447341904 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432177695 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.4402776 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437890447 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453027592 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.708547269 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661855043 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.446535189 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430476127 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.953648327 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4400529 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434972743 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431963005 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457786193 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434038684 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374187282 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.777668811 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428457766 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709769408 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436754044 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.456781821 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.431975308 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434616258 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451385125 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.457228066 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440101166 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.655368778 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451086122 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443963089 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076281399 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278117396 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036602163 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452308627 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.446836619 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435144602 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.208043062 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439322019 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435704857 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700080818 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206462075 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439514575 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944139842 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.438046382 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249359606 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707578397 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662540746 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450618022 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.441741349 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716212649 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653847957 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45938374 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446086761 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440205414 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.401785677 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00285746 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434930479 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621053806 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202572509 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439342113 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.443872424 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.439426004 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.441264627 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863890007 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44014427 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436194458 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.449633386 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440879534 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321910275 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.445033759 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436175481 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114750475 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453370941 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.95748873 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443078766 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659597649 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.718221916 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.687883995 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.445691315 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.447266315 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.682800002 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.711434264 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444414746 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451541454 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04091988 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.30041146 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.44444353 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437881307 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279811087 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450214999 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741477327 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.447491459 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.440558681 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461141367 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438524259 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439445974 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.439095822 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.444186869 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411579014 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956690055 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.441230414 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439674248 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454272841 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442919039 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.685938376 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.455013614 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090091776 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669521042 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427607391 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474115345 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.443972557 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438157646 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.431112525 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437072833 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436731078 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452250491 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663087791 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438804296 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.413020243 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507302396 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654372109 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.436153961 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.439031175 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681722709 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.445454893 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.460942646 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297106154 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4784944 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.454708452 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446369233 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430346583 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482932536 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512112834 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663537334 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.722445217 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.721563398 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871704324 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444856281 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447954244 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.455527479 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52147334 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442276626 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.448139617 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.45722722 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09487981 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263179136 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.114351083 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723843519 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.447974328 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451784929 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44136593 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683199919 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439183234 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716131343 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440010141 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.440092054 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482466537 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456432655 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450744752 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656575622 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713915859 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441861426 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447300306 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448225469 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.444081888 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722444861 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.66041903 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966069326 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03031122 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450479199 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.448734162 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.222527284 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722911566 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442780823 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445813067 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442620585 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.452897718 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.452302157 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.456032577 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442356081 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674843751 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717213891 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137564248 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.724392425 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.633233918 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.361986492 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442969597 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.71699505 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278989753 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66697393 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111119162 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2168721 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704115942 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519297484 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669754253 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.448281207 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681873312 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.443091219 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.451150462 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445769105 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445143406 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.444573194 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.719971893 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113735472 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703237345 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.450868683 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.459319602 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478209199 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.66944848 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.672037548 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235377047 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668723657 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725179734 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45951601 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.446338265 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114167076 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724438401 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450717312 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.451810968 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678854563 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.451806052 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480746415 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.319309664 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.443574319 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029628799 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.664041383 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468495243 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456183663 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.221735019 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11209979 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.448948563 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973739875 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453218245 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450776475 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729830993 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.454525952 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.456315436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732361511 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.453394041 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453658158 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678569084 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.1085475 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268887153 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.46376189 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447560567 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.472864725 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447991566 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523875777 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453458487 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458622565 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.872417276 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.452908964 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448620236 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45982731 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.449830306 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464433049 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.453444362 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448354267 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.456797441 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.419300666 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.419822521 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463601833 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577039642 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029626285 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450291604 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.062724582 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.784149922 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.696497538 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45691741 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.421803593 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.453989225 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45063665 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449193687 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449190832 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.447186811 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0200798 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.460264043 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.734056835 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.45771726 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.660577139 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659828603 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448380533 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680939232 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465932162 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476768672 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.417958803 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450225714 seconds)
  done (took 1014.590423881 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.443013591 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.462687245 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.453336095 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.460195219 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.457415862 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.475164278 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.485659145 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.445053693 seconds)
  done (took 20.99384802 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.443376137 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.453032203 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.445079261 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.450878862 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.454450123 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.957226402 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.460757705 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.450343578 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.463872987 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.445966661 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.461289202 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.177983153 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.473433986 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.451197381 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.459915458 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.457718996 seconds)
  done (took 33.817925825 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.32214546 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.563144031 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.358760406 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.505492677 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.473564523 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.446350965 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.684491561 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.472613119 seconds)
  done (took 27.140087478 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.456333155 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.456672808 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.456655578 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.455703661 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.45662867 seconds)
  done (took 8.593701804 seconds)
done (took 1289.925417378 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.457017338 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.459564053 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.459371398 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.459354541 seconds)
  done (took 7.147939999 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.426417914 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.424604131 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.424218831 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.438815138 seconds)
  done (took 10.026563382 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.184547109 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.115559106 seconds)
  done (took 5.611183889 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.992970163 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.991153338 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.991984246 seconds)
  done (took 7.290413283 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.752880289 seconds)
  done (took 3.066240241 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.42801946 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.442256953 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.181478024 seconds)
  done (took 8.362996997 seconds)
done (took 42.818036873 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.451772429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.203074223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.597797745 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.448275026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.601246722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.598310005 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.694956825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.452712139 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.440807006 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.440591946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.447783119 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.602822586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.679080679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.203338754 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.68121388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.204391238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.602741982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.460448791 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.441680599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.466279286 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.692400785 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.45248622 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.441662905 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.448782076 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.608885408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.58791841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4519306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.203926157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.454252418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.452897398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.585792673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.442163808 seconds)
  done (took 84.852668241 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.450118129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.441834319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.442991916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.458941973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.443528008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.442018462 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.460234253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.454966344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.451054732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.445268079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.442934031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.444410822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.442574781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.443664575 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.445203604 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.443521677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.444913099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.458394959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.443981786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.443883428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.447160022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.443645757 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.444052356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.444144313 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.444861209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.462805644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.463431137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.454222733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.443639398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.44424205 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.446772912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.463701955 seconds)
  done (took 79.660287463 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.458662071 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.444574227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.451448897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.443200142 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.449595139 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.456292103 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.447524155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.442612957 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.445164214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.44832901 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.446259654 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.447765061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.446773193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.449907371 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.448882913 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.448150525 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.445342563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.45110068 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.461524261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.446589948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.446285526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.452889193 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.44560284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.453489468 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.450568772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.448204565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.463649745 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.464521995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.472165659 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.447225719 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.451090628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.478004398 seconds)
  done (took 79.766482651 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.690785551 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.462135252 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.466800627 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.457744838 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.465995926 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.462005528 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.455938284 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.69297442 seconds)
  done (took 15.470310523 seconds)
done (took 261.059116163 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.457914461 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.965763079 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.490123214 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.456989461 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.473283059 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.485920016 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.686160927 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.489769387 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.688076919 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.48190306 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.491597691 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.458855846 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.299605898 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.615774818 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.300274686 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.420290905 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.377151611 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.447938879 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.036154029 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.756118974 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.490992924 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.452377213 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.298242475 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.395543694 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.425361684 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.537889107 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.556721527 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.692020589 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.622074032 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.536977463 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.98549825 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.460205746 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.459115789 seconds)
  done (took 67.110259602 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.456358546 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.464360609 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.466190463 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.465192444 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.464789509 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.465030003 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.456571264 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.467070327 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.466114093 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.465350039 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.466199687 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.466646542 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.467485842 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.464876357 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.466339069 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.437076116 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.455495538 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.466657398 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.456701221 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.438533778 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.465308868 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.466702419 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.466414378 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.465866544 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.468259203 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.466311958 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.467301017 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.46788531 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.467579212 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.468628602 seconds)
  done (took 45.212373664 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.467283994 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.034909358 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.228949064 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.472615561 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.460355778 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.463614546 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.769092188 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.469657955 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.462896051 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.462596832 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.957046842 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.470534405 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.493836939 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.240103197 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.461855894 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.469409494 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.468136091 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.460109791 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.04749351 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.470338274 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.765509501 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.468529932 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.767107959 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.469036099 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.464532236 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.460482743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.467394921 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.275599648 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.482752873 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.960327729 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.295423571 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.767486892 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.211373146 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.287600861 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.299087953 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.477781778 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.470147275 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.964870427 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.463783848 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.461865586 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.764152618 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.462629806 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.250750162 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.162650582 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.480872596 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.473131169 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.310728845 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.96495473 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.726259562 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.469542737 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.279005489 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.468961401 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.472525856 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.464668613 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.721118153 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.465714865 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.462843044 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.349915196 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.473680674 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.767954622 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.473079476 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.463858841 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.044344765 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.463099183 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.047272241 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.465780882 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.472459691 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.465566375 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.255817161 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.469296567 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.183381337 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.485026396 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.472533068 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.963585193 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.046350112 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.360338069 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.466427645 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.052646514 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.245990091 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.785537988 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.46969082 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.252297361 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.789262235 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.469418197 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.475242659 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.475245446 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.47605542 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.5386533 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.767374489 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.097577215 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.176856803 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.352841761 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.773482144 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.475316724 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.46740342 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.343216302 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.476339957 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.474798031 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.239912878 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.183810762 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.48448667 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.475153419 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.173397859 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.48766984 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.773197997 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.47244674 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.284038067 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.467521654 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.535221365 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.475145137 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.475010612 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.46954137 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.772266904 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.471438107 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.477235635 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.160712726 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.991385395 seconds)
  done (took 204.330974684 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.460959843 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.476502595 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.461090143 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.45999954 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.461109141 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.469016625 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.460587916 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.46033358 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.466110335 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.46236781 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.460699329 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.469212368 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.46859258 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.462507827 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.461613565 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.48020357 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.462199812 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.464171419 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.480894349 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.463070495 seconds)
  done (took 46.63838688 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.478164889 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.061210771 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.035176415 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.479173791 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.477950535 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.469629979 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.528575442 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.478548386 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.478020162 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.785235809 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.653998538 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.48435834 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.479833215 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.47904903 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.036499596 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.45062843 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.785903241 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.059889143 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.479657717 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.061028067 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.450060635 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.479185549 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.468623316 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.06356399 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.796543134 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.774547177 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.530824874 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.061433025 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.481204692 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.479230679 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.062369275 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.480995278 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.472149939 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046391589 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.47992429 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.49213565 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.47744841 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.533360418 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.532640438 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.788401137 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.068365921 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.783812551 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.490883609 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.640059155 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.483352355 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.449180327 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.073054799 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.479957643 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.450456779 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.481927373 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.485535195 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.047520602 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.471692284 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.048723554 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.482307224 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.481137032 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.065230007 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.04898029 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.044267753 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.658903298 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.476722034 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.778536734 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.486761726 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.074979443 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.482486749 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.482342787 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.481919577 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.657327264 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.081918194 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.783281027 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.795902325 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.791618226 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.482916189 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.545003356 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.486682139 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.790574332 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.54355195 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.887880906 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.790797278 seconds)
  done (took 133.66065056 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.758436581 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.590858383 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.867679291 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.068664653 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.993137069 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.614253881 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.594674577 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.724946235 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.500801536 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.589060867 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.170990018 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.570498482 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.246986363 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.543471309 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.586335935 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.599419923 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.892375925 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.475489571 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.144078352 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.150262713 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.485391893 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.582393313 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.985510729 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.672578576 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.470556636 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.081116987 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.455800933 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.016210613 seconds)
  done (took 55.764738925 seconds)
done (took 554.031411783 seconds)
SAVING RESULT...
DONE!
