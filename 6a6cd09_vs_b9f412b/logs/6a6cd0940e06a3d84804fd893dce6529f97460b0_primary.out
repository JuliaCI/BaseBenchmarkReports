cset: moving following pidspec: 18249
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.633582267 seconds)
loading group "string"... done (took 0.531325029 seconds)
loading group "linalg"... done (took 10.026479556 seconds)
loading group "parallel"... done (took 0.188133138 seconds)
loading group "find"... done (took 1.403705988 seconds)
loading group "tuple"... done (took 2.1475681 seconds)
loading group "dates"... done (took 1.494461994 seconds)
loading group "micro"... done (took 0.203792434 seconds)
loading group "io"... done (took 0.586456008 seconds)
loading group "scalar"... done (took 56.872783024 seconds)
loading group "sparse"... done (took 14.543873726 seconds)
loading group "broadcast"... done (took 1.246578582 seconds)
loading group "union"... done (took 10.726917886 seconds)
loading group "simd"... done (took 3.302749977 seconds)
loading group "random"... done (took 12.655306887 seconds)
loading group "problem"... done (took 2.283807721 seconds)
loading group "array"... done (took 25.295773941 seconds)
loading group "misc"... done (took 1.182720733 seconds)
loading group "sort"... done (took 3.917762718 seconds)
loading group "collection"... done (took 21.631536462 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.670786072 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13972422 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.229814138 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.329995832 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240909986 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15984629 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156946302 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.277813902 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.15500704 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.215609267 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.148472833 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.550218473 seconds)
done (took 5.994895447 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.244539817 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.249405126 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167992217 seconds)
  done (took 1.074431173 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.068791495 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.168687586 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089486049 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.105380603 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10717089 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089985026 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.105853758 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105138682 seconds)
  done (took 1.43223067 seconds)
done (took 3.492293851 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.52009046 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.856715987 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.557665575 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.158204367 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304824107 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.335838245 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.349620255 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.216795465 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.08663026 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.100924278 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176547411 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.435080709 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.424513753 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.015900211 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098989672 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.08745364 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.126649308 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.786469448 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.071991367 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.126025612 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.546938173 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.186763478 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.108918542 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.110566426 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192471089 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127366626 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16754048 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.082695883 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.669609209 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.121274171 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.195708626 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.075802854 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168718677 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201548232 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222971609 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.086503822 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673098446 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.193615753 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092711289 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095507579 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669212464 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120052819 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.163151248 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.097243602 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.083565594 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185478047 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.10722286 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.088408194 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089649627 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.094572507 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.153542309 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460342351 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.086160679 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.151572926 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.100594149 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.712179451 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092042089 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27257685 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.129069854 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.102691522 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.071486733 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.098315508 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.149455307 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.087445794 seconds)
  done (took 20.221601846 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.15721511 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162141339 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071016615 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152257341 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138515953 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074985416 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.096562594 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088397616 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107522402 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.193038776 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136718903 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.163157475 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08388028 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084702162 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144674123 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244582734 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118299285 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100575641 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100298932 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091364965 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136823515 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.108443401 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08905827 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105055231 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166222616 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201435101 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113729231 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117516143 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099671576 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095246924 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13779257 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157545288 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070771011 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09969826 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188462728 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114167699 seconds)
  done (took 5.196037503 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.220586324 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116580743 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.206296372 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177603243 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144715978 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169034898 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148615867 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.284668468 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.210574124 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176504312 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123937462 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.0904567 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088017789 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080494009 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091654509 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.486298967 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.186381168 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136340429 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.138139517 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075855763 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.093390755 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.730656522 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092594648 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073147205 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094234238 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.070325484 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.193576547 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10900776 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093938809 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.164859139 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.077822522 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.093803827 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126153943 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.183688124 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128798855 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13642909 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074794607 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.148057135 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088450276 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225610019 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097959886 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07155122 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.136698106 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127837738 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110992346 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089718264 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094753046 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222659038 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087266366 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.094103073 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.107930247 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.189778127 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.129730801 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071905299 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.315246006 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098046255 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089616754 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.088935338 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.831928093 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.107571537 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.089185495 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073721154 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093079846 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073472876 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.459387736 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091026554 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.876731921 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075968769 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157512386 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091331145 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091621666 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080519901 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097458699 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101326998 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092404408 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072835975 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.090288743 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073304134 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.090970604 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.075005119 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.137513785 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095065534 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075408245 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155419472 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103290406 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098862832 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121281017 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.076407684 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086229297 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12214838 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073911013 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089983105 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.161409263 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072413384 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.136623685 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087133902 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121259396 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090695365 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072998653 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.261290695 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085960689 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.133459203 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076752709 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119135959 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.105821893 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092264704 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078297751 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.090283213 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074836925 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155660248 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072547894 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093925006 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074158149 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106250889 seconds)
  done (took 27.910055011 seconds)
done (took 53.991752944 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.506312356 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109689251 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089825819 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106505608 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10873945 seconds)
  done (took 1.666463058 seconds)
done (took 2.384941721 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.378016795 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.191922412 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.114516869 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.183854049 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096467667 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192755562 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.17982947 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10270908 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205714646 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093315525 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185196297 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093815023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079741961 seconds)
  done (took 2.840589772 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09385571 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.123107577 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093501199 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109651064 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076582824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109095429 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09282566 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.126672196 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093200082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101919978 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0755848 seconds)
  done (took 1.812030503 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089930118 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117802723 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090234881 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107837265 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076737892 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105828027 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090010048 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121033031 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090550728 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103239992 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076284457 seconds)
  done (took 1.786106577 seconds)
done (took 7.147918191 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.147634817 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.274837224 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148691964 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.196370089 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.37536146 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.250618514 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607678333 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.165915069 seconds)
  done (took 12.054397939 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.11610479 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096953501 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.144092006 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081537301 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099458094 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080876292 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096544808 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084099053 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099031884 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080530136 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096216826 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082196065 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098096 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081201358 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096984438 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081890546 seconds)
  done (took 2.302475603 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117629887 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117099077 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104020783 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106705811 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084892857 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102769779 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088948893 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103018087 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084848262 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100341566 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104873069 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090098005 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102779534 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084115685 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.1035832 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090015776 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099419299 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105497024 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090081359 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104655903 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090148504 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102748519 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102470148 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089373952 seconds)
  done (took 3.200581465 seconds)
done (took 18.275478946 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16209433 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076071026 seconds)
  done (took 0.964805293 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14752231 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.149054202 seconds)
  done (took 1.033815806 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107554829 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094350239 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133999554 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112736601 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08165221 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096110905 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.128687164 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081541481 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094990471 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082165103 seconds)
  done (took 1.75052706 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08469718 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099498236 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091095133 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.144786359 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109085618 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099887036 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085187873 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101609627 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.087607288 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096798616 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088960161 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117895647 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103815301 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105236964 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101022706 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105653137 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.094435805 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103875687 seconds)
  done (took 2.558342906 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079635544 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097759844 seconds)
  done (took 0.913973489 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085727968 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096267171 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085420607 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101986905 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083462218 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098620792 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083567035 seconds)
  done (took 1.369420382 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.546715967 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.263198444 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.385082402 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116443823 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.137391515 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.357119385 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.138243006 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.11396367 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113777488 seconds)
  done (took 2.953501054 seconds)
done (took 12.277561062 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.080859623 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.227665699 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.631026015 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118699541 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079669034 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.137284949 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.309983838 seconds)
done (took 2.329470351 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332491015 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150584159 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082665468 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080264626 seconds)
  done (took 1.38145413 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07146784 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104811511 seconds)
  done (took 0.925028848 seconds)
done (took 3.060443791 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113064202 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096669108 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079930455 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098646166 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.08033645 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098699543 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080192273 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09692281 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08085767 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095863704 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079938995 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079942279 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.0959216 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080389941 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095363937 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079910909 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096615056 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079825545 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097237394 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081079606 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097494372 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080620673 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096925806 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080879273 seconds)
  done (took 2.925558764 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102246946 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100019701 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087435255 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.103427156 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104788603 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088939363 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10392251 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084982574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104237954 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.085191438 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10543346 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105004221 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084415759 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10536067 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085397797 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104378299 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088715901 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099405531 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099868503 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089675721 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103751375 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085736174 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104590784 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087262232 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104007837 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104788045 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083768108 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100474851 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0878888 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103577275 seconds)
  done (took 3.653634364 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088634791 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091548334 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079429825 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102372828 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079611778 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081948929 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095862331 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07981173 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099562513 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080852435 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101333879 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081520991 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095080624 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083554384 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.099517947 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084995374 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108998792 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078600559 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094698452 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082167802 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101993335 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079622117 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098901956 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08185643 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097605047 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078997334 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097994886 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081457557 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081879568 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097226846 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084096288 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.101028606 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081776592 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106719216 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085566415 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.098133328 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.087302143 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095736998 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082959505 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095187642 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078552057 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.099329351 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07934976 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106042441 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082128974 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099292193 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07954432 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100715818 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082185544 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102285814 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079935899 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095586985 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08595599 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101006083 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085990046 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094632146 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082900338 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078769082 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100153095 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082230448 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095192528 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078419588 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102049075 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084165076 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114959754 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106020538 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079312424 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.084330972 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100384293 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.103672495 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.084741053 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109568978 seconds)
  done (took 7.301133161 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092511281 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109598527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084522735 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101930118 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082660958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.103434267 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090069508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098962996 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085794968 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108695304 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083440923 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101358514 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084435537 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100919722 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083163341 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101168468 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10857202 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083875606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083813233 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10087058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084719313 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107272264 seconds)
  done (took 2.836600349 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234014621 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104389512 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144699013 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115248605 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102973259 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114380942 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101669072 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09033619 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103533812 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093705191 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108921753 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088266048 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122614616 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110188008 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109403663 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096350769 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104946979 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096532483 seconds)
  done (took 2.800776802 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096936801 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099219792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106769501 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102063078 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087003455 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104121642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110241063 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.101291619 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102540808 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.086969664 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.11266908 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090333741 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103210127 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103126926 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08624926 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102208917 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086473152 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10248905 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095793629 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110211732 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110305631 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097037681 seconds)
  done (took 2.959843797 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09863329 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099284212 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113241204 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103205853 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099765116 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084397344 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108702799 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085937749 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111555812 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086417718 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102890373 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086010597 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.11140102 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086113584 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107918471 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10240382 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085054327 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102177543 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085529249 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100509518 seconds)
  done (took 2.725735377 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175515051 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096272466 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112582874 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12608383 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09953926 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11551544 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11173007 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116017962 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116412614 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115062603 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11521086 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115531019 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11155174 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123512622 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11666934 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111741994 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12713832 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129334918 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.221469071 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115853374 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130731501 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099152383 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128230714 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116492714 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100674074 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11676443 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099843182 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123239938 seconds)
  done (took 4.147084073 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081550343 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081107025 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097027565 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.080189394 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097105678 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080252459 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.097296803 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080446967 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09761517 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080061619 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.096274046 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080717583 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097430655 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08048861 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08110549 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096801026 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080437857 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096453179 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080674586 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097483522 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080762562 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097255504 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080899004 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097375053 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079711706 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09658497 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080604071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096848054 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080047009 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080972031 seconds)
  done (took 3.395089343 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094743608 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109021334 seconds)
  done (took 0.969066743 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.089289098 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116817355 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082132677 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102936965 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092945246 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101816357 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095038148 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108622738 seconds)
  done (took 1.55159667 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.161717368 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.150117002 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086051759 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108631773 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.149747533 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151610562 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.124975094 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10206767 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078338124 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.088498893 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.141248961 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073676234 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.098956095 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078727926 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109316699 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106358159 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083749797 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109715421 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091545019 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102809814 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090007738 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108859178 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086833463 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.110561424 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077214277 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103731073 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106934253 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.097061585 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099542519 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.086264506 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.10927522 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085232446 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104951799 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089061741 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101355896 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.156295002 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092374475 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10990613 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101668617 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089292021 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107163506 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08195742 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100564008 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078956551 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100590557 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085702327 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102706267 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08260304 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091254541 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074926615 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09920153 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077787448 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098306845 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083202773 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.099140835 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106737479 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083363709 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093455081 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078631258 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.096254322 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.082390078 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.095767894 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086077674 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.105052308 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081733384 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103909 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085890014 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.103018155 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087628331 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102056594 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.085588046 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12418104 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103989039 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091359286 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107332994 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084853621 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099917609 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090385601 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101578357 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086470851 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.107002198 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092233458 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09875119 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097389651 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081145604 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109673106 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085862469 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103708694 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.075931621 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111550858 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087346478 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102841396 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077724902 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100099992 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090279361 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105068602 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077724126 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103229831 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.083888502 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108146403 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091572118 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096335735 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087528685 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106890899 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091139545 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.100857222 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.149119601 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082086604 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.098825099 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.087307072 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108977568 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078921094 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106945626 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.083037707 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094513164 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080416005 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107698636 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.102064743 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086104126 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.106046096 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083505722 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.103868797 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086530958 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101076707 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080368975 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.106068145 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094385932 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105282005 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086166776 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10245797 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085722325 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102991179 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089027481 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.100104586 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091945203 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099538966 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.084042731 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103830871 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091326113 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.104567724 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098847644 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084565313 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104089245 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08588109 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105259121 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087635536 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099329219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.078285855 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104956027 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081804185 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.103152547 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09623404 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098639691 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087958043 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.100022741 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112640673 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083420461 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107794467 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087818582 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108175871 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089684969 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09021831 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080207867 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100704262 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08486384 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.097903971 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08336216 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09831472 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088246183 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.092751441 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085598268 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092514967 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077824853 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107193417 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08573928 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.105352499 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.078610992 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114862579 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095261629 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105753224 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.098608138 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081559375 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102984389 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085447469 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103076818 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088035124 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10350599 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080124547 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.098684475 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090315322 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.09542894 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.088085648 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102444838 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086572267 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094340625 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086865181 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093925228 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090555976 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107034238 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09046469 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.108537091 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086811636 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103164011 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113310508 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.093025813 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.106283858 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078495469 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106557582 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096492511 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109462155 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092919356 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.104777557 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083783803 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.104385908 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095917134 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105978382 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085409798 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104637812 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07967767 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096755812 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.093311749 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.106419024 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.081963901 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.102292925 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087810096 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106608032 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084369406 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096216997 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090039983 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10958434 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098996054 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08710969 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.09984745 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084335569 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112853784 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07943282 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099524014 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089234118 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10819905 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.085149929 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.101897128 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.088839414 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.111528075 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088751821 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.114866347 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082427815 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107975743 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081913738 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.100314281 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.080062493 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10203542 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076893254 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100260416 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.100878359 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.080191919 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.096948948 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086679413 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107457289 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087618965 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098369902 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086808672 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105770834 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088860562 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095369439 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089785891 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.096192066 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.075223856 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.097603943 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.075489731 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.10544699 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081844707 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.108484408 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082456595 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09965829 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086223264 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111912335 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099697166 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.091084534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112931013 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.076693006 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097365001 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083452051 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103394952 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080741015 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100114248 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086354309 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104339323 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104525715 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088441932 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.095211885 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083044398 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10470445 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.078557896 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106568148 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088286105 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107117497 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.079856653 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106124165 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.083113511 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109158472 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080271163 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.103700401 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086239687 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105159264 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083576812 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102687255 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099655909 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079554253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101231703 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.092851624 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.098031055 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09063141 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102228862 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085699831 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.098024479 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082511726 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110207562 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.080832394 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.111465357 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.087338783 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098993212 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080645861 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11016384 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088341214 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.110738725 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082560667 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.108838424 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094129465 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.108814207 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0874339 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113670588 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095350437 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.110824676 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093595937 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095742686 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083783169 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11140366 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.102355098 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.088613975 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.106016303 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081725402 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108169528 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093608873 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.106276811 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085537298 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.098348434 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.087772643 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.110903127 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08588613 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.106024529 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086145557 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103694191 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080174619 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108656133 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.09229446 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.100581843 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088077426 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100687567 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086829512 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.098286415 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090116702 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104139432 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080401465 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097148161 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084245986 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111773579 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078550997 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.110146656 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.091714975 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102944999 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085453517 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.108816421 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083383635 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102609651 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09077561 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101739465 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11482627 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08969761 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.099510188 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090249666 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10491453 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076174412 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.097144878 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078327868 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107669755 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081001013 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104743519 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083774531 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104890478 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084362818 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105430183 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088053652 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106089067 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.076201713 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107403806 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08652203 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102944028 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.080294069 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098794602 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.076304041 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.100009681 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08860916 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09744053 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092355075 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108384961 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.098388899 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081188419 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105167683 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082683526 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107916625 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.077943212 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100822474 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.076687474 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.103775571 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082547959 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106648277 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.079751034 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.094279652 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086894046 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106464108 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086750734 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.103942633 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089270511 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.094714583 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077507264 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103770584 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.080467584 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111055987 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079128388 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.099007668 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098894704 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085503651 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10333017 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089720146 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096047593 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080068357 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.101857909 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082766631 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095553496 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.077365394 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10467499 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083120088 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100924361 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.082982078 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.095659574 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.082497336 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108583067 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.080834576 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094163292 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081369006 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107907375 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.082132064 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097996081 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.076562508 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107659781 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.103663361 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089351454 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.095712612 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085007104 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.098309038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085709494 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107616175 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.081951727 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101526245 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.081314951 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106664346 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089079612 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09638745 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077594196 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111815998 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086827507 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10302219 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103322785 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083222356 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107790249 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089465784 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10319554 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.076942653 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.095487771 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07881508 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.094413981 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.085336043 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107690965 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081876685 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.098863179 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086857302 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104634839 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085070087 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103713482 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.076715199 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109195853 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.080398758 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10516592 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.076732507 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093483875 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085069896 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106713393 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07759392 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097936726 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085151747 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10304182 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.077778081 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.099281197 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.086796441 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105706531 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088714501 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100375287 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.081932681 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105294051 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095015725 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103288171 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.081593089 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109411322 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107898632 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083694601 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.100551979 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086603083 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107764959 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.085627061 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108053319 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.081610882 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09668318 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.091628316 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.11112841 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111895427 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082046349 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09490833 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088239931 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095746325 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078121637 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.106684995 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091211575 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109818965 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.082910285 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.098558084 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091190619 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101353903 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084096335 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.099917344 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.080620337 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106838331 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081457448 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105112301 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081099268 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109505798 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090434071 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106547928 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092564149 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09500554 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089575808 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.103543978 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110973601 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084125908 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.095577793 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.077881988 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103276294 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.09029166 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.108319183 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086295571 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086302533 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106296889 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102722347 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084091273 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.099277108 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.0902985 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106808257 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084456945 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103512802 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.078617858 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096685626 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084442701 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10736661 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.091044376 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.102988113 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094303213 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109899165 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.081718939 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09900436 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084741088 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.105113369 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.083288815 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105750502 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080421571 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.096816166 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089137838 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108827469 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083888934 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1093484 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11020299 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08324035 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.104062321 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092266731 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.107746873 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084611267 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.102796249 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086740682 seconds)
  done (took 57.586600667 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153480738 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093183794 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103741559 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085232926 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128472765 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086945562 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103708194 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087172933 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105346514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115035559 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085866772 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10433954 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106164611 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131002723 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128148969 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117124505 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086054956 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107676254 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087278409 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107163689 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105119115 seconds)
  done (took 3.042545182 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106573673 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121657081 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119333503 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105730669 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113695911 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119397158 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119912111 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10157586 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123078128 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11595818 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10584279 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118933605 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.116622214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09979431 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114235688 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117094057 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123689023 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095709208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121030771 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.122072553 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098692458 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120018988 seconds)
  done (took 3.316683397 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092691335 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087294944 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099008414 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.084592416 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105388552 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.086003328 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.104069187 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085354619 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11143322 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.078305499 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094995629 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.079951514 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.101211304 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.085560507 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09813812 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084999447 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111738408 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08821058 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108133828 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084989561 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.095381245 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.084367239 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.105452248 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.076421405 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.108271886 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089825585 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.104543678 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088379963 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.094760584 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087588252 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102833657 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07859927 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09451725 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.07617605 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.094644316 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088075072 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087573049 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10502455 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085094333 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09454146 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.086082432 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10712853 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.076665197 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.105183774 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.085087368 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.098772493 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089312985 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.103436639 seconds)
  done (took 5.282200018 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120768564 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159308233 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09076873 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148976245 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125784708 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119325097 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088866563 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149815887 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108905666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.09070392 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128622762 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127962972 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092400973 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114528488 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110731759 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091789653 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113665405 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089784712 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116642341 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091126001 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116058933 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112397213 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125006651 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.105989642 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114520499 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09238189 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110181699 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11440066 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.104963673 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117869008 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116049144 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097592579 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126811554 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115565818 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091869205 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110410639 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127249901 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.093440761 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112198961 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088374925 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111054113 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113918189 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094549882 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128318655 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111415648 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.095083243 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109870109 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.088007589 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124440796 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112315126 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.100651175 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12609003 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113141376 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.092746547 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115251841 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124913021 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.091895292 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107773575 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.093525084 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124453797 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107576956 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.096850838 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127830276 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110553064 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09917391 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126902443 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113387103 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094087469 seconds)
  done (took 8.487768793 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118009543 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115454215 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126600285 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107890716 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115113697 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114428694 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094936312 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.114245794 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095306398 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121805643 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114761971 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.203196442 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.110533021 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100390161 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11484155 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094821547 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114501209 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114043529 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096089141 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11363119 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113826517 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108163102 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115192111 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126137209 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129514886 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091829932 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115836181 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094916549 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127713491 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113864227 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109849962 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114058501 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114628841 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107891827 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130610625 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.115697135 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088873921 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114395187 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.115954986 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096206963 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111109891 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125339637 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096517048 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110745158 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096829777 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115328422 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.129506939 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129657719 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.101803847 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126116571 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116537045 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108459545 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116775398 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115082372 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106798629 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138017596 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130254229 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13340735 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097570792 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12716906 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129385935 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141417378 seconds)
  done (took 7.980370339 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086478493 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085256627 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105067596 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085649646 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105994563 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08560593 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105244944 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085740721 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10530637 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.086515792 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104941621 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085959074 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104752459 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08549968 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085811928 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104926933 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086371118 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10497887 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087211758 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104541974 seconds)
  done (took 2.7243003 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096238712 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127957187 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090153422 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118836835 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090323811 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117557216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109899592 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089977785 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10983654 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09121128 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120190599 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120868097 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091032801 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118784081 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120872738 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.097693231 seconds)
  done (took 2.540622262 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.112613426 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.130626005 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.174576023 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112185962 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.090306499 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.116805668 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090095206 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.111520124 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.088429137 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115735736 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.092603941 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113373511 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090077155 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.110596485 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.089762359 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112420025 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.088674856 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.111652355 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109015027 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.170618966 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097107511 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.115430892 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09367983 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118393177 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09394202 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.118189156 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.120365473 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.09185648 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111431968 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.093019876 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.113552079 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097821703 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108485585 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.095301408 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109935894 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.090387959 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108570488 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.091327269 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112657069 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109396103 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090518065 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112093065 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089555674 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113337017 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.087499718 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111238313 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.087778636 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116911444 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.090909967 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112600457 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089570629 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.115147986 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.094381336 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118527986 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117570168 seconds)
  done (took 6.705250016 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101989073 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111226369 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102724275 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107962167 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090728808 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113093008 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090713354 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113831131 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091532838 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106170203 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092496927 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113175887 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111776137 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091067392 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112468265 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091801455 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106252953 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.09086809 seconds)
  done (took 2.676088359 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094983432 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110230336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0950665 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110117031 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090242705 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109472452 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087481692 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108228191 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088221665 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.109252763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089483139 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.111128547 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088342625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.110848792 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090529094 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108570936 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089149028 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109412294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089260811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10769686 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089459793 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10747329 seconds)
  done (took 3.034618621 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.100848156 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.170282396 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.118534442 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.186817423 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109902743 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086656989 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.120021315 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.087162154 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12485265 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.106398199 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.084972326 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.106091038 seconds)
  done (took 2.240803488 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11441808 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145741097 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09030696 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110902494 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122291538 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095382884 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116744417 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096352651 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125095054 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130849607 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11627586 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106453869 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127875089 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128932186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121764919 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100991194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116787001 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097163764 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110252116 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137451023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096157769 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126008387 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116686787 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095396622 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115920435 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128778354 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106119696 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130250213 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11685068 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126979973 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101730206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117406417 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12750862 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110699074 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110733005 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127439674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095171436 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136948977 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122056312 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128471717 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09029632 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12264691 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127855029 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103164534 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126337569 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117127821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103934365 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116788851 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117028351 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145087949 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10294571 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128794247 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123398438 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107455082 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129532842 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145854036 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133047018 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131514785 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102606658 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130555998 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128523779 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123379474 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109110545 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13226198 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123007223 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128877895 seconds)
  done (took 8.64319783 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131920962 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113973056 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117220633 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111902373 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129655194 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118517373 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099407537 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116888603 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117656095 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093239002 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163841032 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117919042 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109193495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128691537 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119224996 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098352603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116552375 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130550264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092751577 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146423191 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117445304 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129876386 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109352827 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130018203 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132689688 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122384257 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097838745 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118663514 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118012371 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097977751 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124959216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09664137 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128841041 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112796614 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12988775 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097735544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117853865 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105822283 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116883899 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125483832 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108931942 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139049894 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117090953 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117397344 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113286508 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117119051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118293623 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092832752 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117993287 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09286593 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132464064 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132885798 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133767132 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130518254 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098159554 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118012719 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097390933 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117805767 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11761592 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103767757 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130036254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119171825 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146618728 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097285049 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117827503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130635101 seconds)
  done (took 8.610886652 seconds)
done (took 158.887477097 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.130591343 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189203381 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.126882652 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164790137 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080582288 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136574335 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133627218 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.128647727 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.100032384 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079499075 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.100583871 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082380359 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168835166 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07973886 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09966002 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083290903 seconds)
  done (took 2.729584174 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181436571 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.333636544 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122856877 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087958083 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107514839 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079885074 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10921916 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11171789 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.083607387 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11483902 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080947324 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102335151 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.094034869 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101322732 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.084871903 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100627941 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11390401 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080017035 seconds)
  done (took 2.94896612 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104407805 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146053252 seconds)
  done (took 1.107187566 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114628715 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183147392 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316535385 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126648572 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12761174 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126560721 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150391566 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097120145 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196744421 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12252804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123181341 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083054334 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.132995505 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113929572 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.100678591 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103465709 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135999695 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.098432736 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11946424 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088825528 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.128910225 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.110590432 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092029327 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.119599994 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.190056938 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121497938 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089998174 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.110293521 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088730443 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119699669 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.109193518 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.103919045 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123159815 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.195319466 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.088702675 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.190771069 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.092057895 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107564881 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.099749241 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.10818326 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09175523 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112294048 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122203631 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083276149 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.110368495 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.093220029 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109677895 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110724751 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.090244066 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116155896 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112545756 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.088480303 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189094118 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.094793243 seconds)
  done (took 7.426869568 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.826845868 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148312114 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085786858 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.954618382 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134290451 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12226291 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.806170671 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107439367 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.290492583 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.81593832 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124310145 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098375032 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239729247 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.296328238 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.342314599 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370755514 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.69787423 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100251997 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136625581 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157676284 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119246054 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13293667 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108561742 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.667167163 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086703298 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107028472 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096212403 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119320426 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166469226 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.1078692 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090142895 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.210938242 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.300709644 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218746359 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086596273 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106882487 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08452176 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.195115107 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286149784 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20861031 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.19474874 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103457352 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084634238 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116276264 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129380546 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082319029 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189211604 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.182119504 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181791501 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11425706 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120099539 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09925792 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115876463 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166279217 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10483867 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.368030083 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374460477 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086056128 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118350417 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124561991 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262651292 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108123499 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238016263 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136872288 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225509277 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085057053 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.916232846 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17392803 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105943024 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093571044 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116989477 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114993954 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094842595 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191818686 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.608986554 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120933772 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112359135 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085057475 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.262335252 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086152496 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10685584 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171460912 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08686662 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118525328 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122622109 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118210707 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177606766 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257922675 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121382535 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096866909 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114336432 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123849478 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088869567 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.249395752 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227802344 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164302456 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.224165711 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118196378 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.170630417 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174402026 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113760272 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176954636 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116122667 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124111684 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094345504 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226973595 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147148104 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109068416 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092440357 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118986784 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151891419 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089390247 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118153673 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177931623 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.702198135 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.174445965 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.104030911 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.090034298 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118152753 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170937842 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116344008 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279208783 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098129853 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193855329 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095213963 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104103518 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096353133 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.191945098 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097171007 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118267837 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116368219 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097303909 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.297120036 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213337829 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120047098 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269905374 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.203929564 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094954785 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205761035 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096843206 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.20286359 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098398373 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115230883 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108966542 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.889041283 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122862876 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118509548 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092966287 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.224744028 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1070904 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087680764 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107469616 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083042289 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.897592627 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111226045 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083392791 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109461322 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094737533 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117931968 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117667002 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093166197 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168425479 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246323873 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120435566 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116358541 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085835131 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.189560008 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.088210647 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108041595 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085479501 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108368341 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097852388 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115393468 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088609734 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.20626597 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163593501 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233533176 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.770352458 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085612515 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107314585 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244089249 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085872701 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.337248148 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118948097 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238854762 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174725858 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105639337 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.373035612 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.178486682 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.224632394 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089877093 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.20112868 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083954402 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119090179 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167899475 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107665616 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094786225 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185478285 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101947943 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12046059 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.357917776 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086248714 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.285417939 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082947426 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177312745 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108769583 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115850995 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33466679 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086088192 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126555479 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167350987 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114817515 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086151012 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.856756582 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086782895 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121468115 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115449062 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236227407 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174931654 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119553519 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097728072 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120341001 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.168220309 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.245412695 seconds)
  done (took 48.776545946 seconds)
done (took 63.838762051 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301929881 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267364125 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.327359285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196561457 seconds)
  done (took 2.053163206 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.205881968 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148066046 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.182790646 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081291202 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.183954812 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102241942 seconds)
  done (took 1.786131882 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.508846626 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.376097657 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.316445095 seconds)
  done (took 2.084160298 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263481651 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276036007 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.314590765 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.46239801 seconds)
  done (took 2.299707833 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.239749051 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129633685 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102348014 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.182687951 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.225783218 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.176622213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13295017 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153345233 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128425777 seconds)
  done (took 2.399428679 seconds)
done (took 11.51000344 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.368826907 seconds)
    (2/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.42032436 seconds)
    (3/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.313296421 seconds)
    (4/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.217873037 seconds)
    (5/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.323432322 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.206896916 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.168257471 seconds)
    (8/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.232303441 seconds)
    (9/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.257875264 seconds)
    (10/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.319578155 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118281694 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.160781797 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.198749271 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.170570619 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120652667 seconds)
    (16/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117969704 seconds)
    (17/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094486737 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132593116 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.140739518 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086848195 seconds)
    (21/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128555782 seconds)
    (22/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092460126 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.148504228 seconds)
    (24/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.214689558 seconds)
    (25/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.22863922 seconds)
    (26/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.108376139 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.243804638 seconds)
    (28/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.236459495 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111307796 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096915254 seconds)
    (31/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.296079805 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.172690315 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124726977 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083336263 seconds)
    (35/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.185761944 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.202763258 seconds)
    (37/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.221763201 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.305635382 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111002778 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.070828911 seconds)
    (41/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.209740256 seconds)
    (42/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.142697212 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114949533 seconds)
    (44/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09475477 seconds)
    (45/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.340960439 seconds)
    (46/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13354544 seconds)
    (47/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081170108 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08767428 seconds)
    (49/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.169331778 seconds)
    (50/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.24955193 seconds)
    (51/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159754689 seconds)
    (52/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.072465458 seconds)
    (53/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.188883753 seconds)
    (54/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093303998 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083752565 seconds)
    (56/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.209555487 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.236709222 seconds)
    (58/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072528804 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110544252 seconds)
    (60/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.15704289 seconds)
    (61/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09571166 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185133433 seconds)
    (63/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.195027098 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115306229 seconds)
    (65/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.144085462 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148687861 seconds)
    (67/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.096370085 seconds)
    (68/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071185512 seconds)
    (69/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.073066661 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.18853227 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072186975 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111566033 seconds)
    (73/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.225597759 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088026028 seconds)
    (75/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.184214859 seconds)
    (76/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094595406 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129526245 seconds)
    (78/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.135367002 seconds)
    (79/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093729675 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115110513 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.108115222 seconds)
    (82/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.093667126 seconds)
    (83/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.079011442 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072802867 seconds)
    (85/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.211898475 seconds)
    (86/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.074210873 seconds)
    (87/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.105242512 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084753347 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119097594 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119456901 seconds)
    (91/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.093199237 seconds)
    (92/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.109790575 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114021352 seconds)
    (94/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.073342365 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11069013 seconds)
    (96/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.073116678 seconds)
    (97/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.169141927 seconds)
    (98/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.228350782 seconds)
    (99/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154187894 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136981555 seconds)
    (101/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219246808 seconds)
    (102/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.148943225 seconds)
    (103/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.096208065 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087330816 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117999039 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.249517348 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.073866782 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.214574447 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.09911144 seconds)
    (110/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.103139433 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085665217 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.112357358 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087528491 seconds)
    (114/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09496413 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.071420961 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.235247303 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094078259 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111849195 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.072444735 seconds)
    (120/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096278071 seconds)
    (121/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073860433 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116998876 seconds)
    (123/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.079799618 seconds)
    (124/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.071361618 seconds)
    (125/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.211286902 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07127161 seconds)
    (127/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.094715934 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073928044 seconds)
    (129/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.217482802 seconds)
    (130/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.073495617 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132429792 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.107976686 seconds)
    (133/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.164604846 seconds)
    (134/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.081334206 seconds)
    (135/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.229228459 seconds)
    (136/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07306023 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119688892 seconds)
    (138/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080615461 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.095130624 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085596992 seconds)
    (141/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.096663591 seconds)
    (142/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.098164972 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072798247 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117612822 seconds)
    (145/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.173065776 seconds)
    (146/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.073148576 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087928233 seconds)
    (148/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.095176829 seconds)
    (149/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.2505072 seconds)
    (150/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096072055 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.096726649 seconds)
    (152/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072098245 seconds)
    (153/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.074329088 seconds)
    (154/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.103695531 seconds)
    (155/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.074228498 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117536637 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09384535 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109310131 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099389366 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117756231 seconds)
    (161/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18916997 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.132860843 seconds)
    (163/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072606309 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.097732066 seconds)
    (165/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095055461 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.074662532 seconds)
    (167/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109372397 seconds)
    (168/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072411229 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108879529 seconds)
    (170/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086000554 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.095014251 seconds)
    (172/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094909142 seconds)
    (173/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131879524 seconds)
    (174/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073500066 seconds)
    (175/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072602166 seconds)
    (176/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.121563163 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111821226 seconds)
    (178/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094725525 seconds)
    (179/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072088497 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112018827 seconds)
    (181/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.071987241 seconds)
    (182/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.095212829 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088953443 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113109606 seconds)
    (185/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.071863279 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109834893 seconds)
    (187/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098231033 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.072387379 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096754727 seconds)
    (190/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.074779989 seconds)
    (191/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072598618 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112177783 seconds)
  done (took 26.52417669 seconds)
done (took 27.412630733 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224835587 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104726213 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119004705 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119631002 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.182027151 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.095993073 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.136149578 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.097647522 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127353513 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.096597766 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10754467 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.105328983 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118701744 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.18986731 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.123957077 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088060053 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.112092991 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.106546258 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.134370208 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.110340861 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205744419 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088868929 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.129552477 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087030579 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.184205972 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111825389 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095708191 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121794727 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.109337965 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.120687068 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098319091 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.110606516 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.134108765 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.108722577 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109709569 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095963529 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10919961 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083030892 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.120728702 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.098324142 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.129532288 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.097648101 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.121557209 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088249165 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.121420361 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096409501 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110232043 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122301346 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085947386 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122354093 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08965048 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.132320241 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.096593131 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109244888 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085130785 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111946886 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.104072112 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110263424 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109734852 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110591277 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089726762 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109692222 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099340207 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11012224 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.09674262 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.110515963 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096612302 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.12215823 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119554949 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089562514 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087589808 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117295084 seconds)
done (took 9.159188652 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091751783 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.161295341 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.181694173 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.19299313 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.140079698 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.128024016 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099571407 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.135278484 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.099186721 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129897289 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149060213 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.118802884 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.187896919 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127214744 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.127812396 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099744007 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122275685 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.093022794 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.188535295 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135959561 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139762993 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104434535 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.141982277 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.126823313 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091212574 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.147271009 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.119551538 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.098592525 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115740303 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09958956 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.137026677 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.093221795 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.118001001 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130887181 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107800838 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125839985 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.103183362 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121944506 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.092800284 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.115035475 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.127043725 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103723403 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115674926 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127257039 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.099579425 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.126799278 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.098407374 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125188855 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093520198 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122440588 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.093583819 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.143798135 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127398662 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104666231 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.128054841 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099649889 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125787808 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.100626188 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.119375728 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.100196414 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114294321 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092345317 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11740051 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139847562 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095873171 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.125355218 seconds)
  done (took 8.934209347 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110658996 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.150655183 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.12855324 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.104204535 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.123373775 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08488566 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107384219 seconds)
  done (took 1.747753944 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085864651 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.19107229 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18567507 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183915962 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.1855499 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.218508454 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109391741 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.110325575 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.123434652 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.12090616 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189729512 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242583419 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096120021 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.129228807 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.190144654 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08649481 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.213665929 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08585538 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125694649 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.186526048 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10420557 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.379298125 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.126809628 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.086922358 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.18400717 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11157399 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239702062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130623392 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095014275 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124800062 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.101527113 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.193835526 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208876759 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100515263 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119623965 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18426425 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.183145152 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101341212 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222496539 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.088999648 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.18397563 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124553286 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.101888989 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.127607983 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.101256095 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168102668 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130373602 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127904524 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.098765139 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192159534 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122948559 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186539446 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.099252473 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.123324432 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.123339369 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103086714 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131820135 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101608829 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.190364734 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127753334 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183103817 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183353894 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183832159 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183368074 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13469457 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188812337 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182734824 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122969936 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095337564 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126106533 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184493349 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.099701572 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.12654053 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.172240678 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128299199 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.182833528 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183853615 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097231233 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124703737 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091067792 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123618671 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086940322 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.170460327 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124384422 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098158952 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130923293 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125560454 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.100904978 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115472669 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.1369937 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.10068298 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.124298435 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.10607327 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.123650526 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128994613 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.187873291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.098259 seconds)
  done (took 14.820434898 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087735265 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113105866 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092429644 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113423366 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.088393629 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11312305 seconds)
  done (took 1.568097535 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116518413 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126469001 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111474544 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126975192 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.174864022 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.194348729 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.19320731 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120292214 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.118674314 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.135535051 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.194048972 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195175014 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.190821427 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.129809371 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.197305594 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129437147 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.19912293 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101029449 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.135081989 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125317334 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.104204506 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130596074 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099970498 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.179338934 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129221924 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.130146709 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098372675 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136817396 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.135840714 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.097688509 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130039312 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104184654 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.116624301 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120620063 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.198878372 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.092135789 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12296664 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.106866126 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128609425 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.128290954 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.197539215 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098474612 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.134596757 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.131629144 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095233537 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117406517 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.106740726 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.121259371 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.198171237 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.13116526 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.106818578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128718593 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.128885918 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.10737708 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.117492155 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096193677 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.130807854 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.197996034 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131780946 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.092916127 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.128656381 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.105355652 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120223563 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132983927 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105316681 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.131441258 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094015714 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127189259 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12524681 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.104393033 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.131928694 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.103892745 seconds)
  done (took 10.445441245 seconds)
done (took 38.452009335 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.181932882 seconds)
  done (took 2.143651868 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.892174032 seconds)
  done (took 1.855095154 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.782031202 seconds)
  done (took 17.78142318 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.543111526 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.623714015 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.115706413 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158687231 seconds)
  done (took 3.406596286 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.044627301 seconds)
  done (took 2.029249781 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.337811931 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.253624913 seconds)
  done (took 1.560991155 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.699067846 seconds)
  done (took 1.682128705 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.520783766 seconds)
  done (took 2.49271054 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362440962 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167450167 seconds)
  done (took 1.515270503 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.676111493 seconds)
  done (took 1.662999816 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.119066954 seconds)
  done (took 18.099624539 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229456231 seconds)
  done (took 1.222787834 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303814388 seconds)
  done (took 1.290753682 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.515455297 seconds)
  done (took 4.498711164 seconds)
done (took 62.216611582 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100388466 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125130101 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100725893 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122863824 seconds)
  done (took 1.429753979 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108773532 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125908269 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10567639 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125324666 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108081631 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126267666 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101437867 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129048889 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126264508 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103801803 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128096357 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100775389 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129552269 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101626605 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124166616 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105374179 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128292914 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.127135939 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103401998 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.127161597 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.101675094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128923988 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105317775 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.128769817 seconds)
  done (took 3.790005624 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09892426 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.115859 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.093709346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11481258 seconds)
  done (took 1.414327514 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111625401 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141462554 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113053261 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133097233 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.139667444 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113452464 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124908964 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097524087 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125507314 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110946969 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.14328739 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139248226 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115364129 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.128778725 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113511434 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119697716 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.101965616 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13938471 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134180267 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.111313266 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.126821456 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108675776 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.132502915 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.112304666 seconds)
  done (took 3.923739176 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.182171181 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.140211989 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.151668048 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173219611 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.137134236 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.125323858 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.158039931 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.108378734 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.135073161 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.104407337 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.128645212 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.175194189 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107762528 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127606313 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.128052647 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.107502423 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.139379998 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.13415344 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.145766666 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.131586654 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13502926 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.114870396 seconds)
  done (took 3.987953803 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106972761 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117211104 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088749727 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116794343 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105404498 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119843968 seconds)
  done (took 1.649956713 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100010737 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.110409611 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091371554 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.089574389 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.113725433 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084669568 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.108537164 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.086062279 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.110953316 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.085612677 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.11291021 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084296402 seconds)
  done (took 2.173852234 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.284521976 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11487477 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118445668 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090966503 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123824428 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089279265 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.12931044 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.090602241 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.257748116 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090020569 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.13000253 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.198289137 seconds)
  done (took 2.719480126 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214699781 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104134251 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312308653 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.385283508 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162349561 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174865667 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275752758 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173938921 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193683024 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148602612 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19713093 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168368943 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135926986 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200017075 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148475157 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.188619482 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185306738 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226232215 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149279947 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226842463 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170128108 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184999436 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199011037 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157670584 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149579923 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157043421 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12786585 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109260743 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178173701 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175219488 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180687514 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156720233 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148985517 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207130194 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192789746 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183617386 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.310913518 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137184322 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19582305 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199805392 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284775077 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150581492 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201431135 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161107198 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111845276 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203878994 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162723499 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203347241 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141903998 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152269009 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192051172 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18871774 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190124225 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143179557 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29729817 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139881398 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.129908162 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182724725 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223597392 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212652321 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189797098 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105651006 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216762391 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199505822 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222685344 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154895963 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.175054131 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108905175 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205945396 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216307768 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193028744 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175865942 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219276244 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111004402 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181408888 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175506381 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159815097 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215595307 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18104035 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126559512 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160230232 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117427193 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133089398 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191952712 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103848531 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255346559 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115764901 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.380406261 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213475959 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165789892 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170538677 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172107835 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176785811 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157203951 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095850374 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150912797 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.169235038 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163835651 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111300423 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1642533 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150644532 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134415162 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158477965 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104770776 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180672432 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159982795 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175381984 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180779395 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.112682727 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18945026 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157435626 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174008664 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1764452 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205017418 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136207829 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114234087 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252706109 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177780746 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.123629371 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182912982 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236594974 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17877601 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116649325 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170447749 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234230597 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124710343 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237153296 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118033603 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140974797 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157616236 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183166928 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165587167 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165297937 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106438722 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.177423649 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199577539 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133908127 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119788582 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21863022 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117968393 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135218669 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145457714 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116561092 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151810548 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159618745 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148960431 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136072296 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177417146 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17486322 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163649503 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143210507 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175219199 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137756511 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153828405 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156106278 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.128113386 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189531995 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209578011 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137201731 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193189522 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17257035 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201991649 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182384921 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137264788 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195439302 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133147925 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102888662 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169556368 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183486466 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170445651 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.231324573 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199287052 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176252311 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.177228512 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157357364 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175699205 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194772581 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165847442 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.127273287 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183478026 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178139931 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.13000968 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.107185305 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136947279 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147238215 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113163679 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142919763 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186586481 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171677807 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196193578 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178872465 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145773956 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203912098 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1358403 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169400909 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.193696701 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119279817 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205288666 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226682483 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190203382 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123740529 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170628666 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.13015563 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108568192 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145400909 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174549664 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144360354 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116053784 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149223303 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203480519 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18244165 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157495132 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209855245 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174599255 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241314172 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102735335 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170705041 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176701631 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177816671 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168968835 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137735564 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.172083098 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204020758 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146553516 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203825204 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179351675 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192159389 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215029174 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.177248728 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138639227 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131791064 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201300162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120712899 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169012337 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154554307 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111008798 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160790403 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145342224 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15186793 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188698145 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151207778 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195114573 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.165893031 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180809332 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106758058 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148559177 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188610704 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150822928 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094319937 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17721054 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234487778 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128618699 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164742069 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181743757 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137612131 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.33973626 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195666502 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192030488 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142847654 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118787824 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183707487 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167553167 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170932213 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222050689 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123827372 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244967926 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154187889 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.152073408 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138441611 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156547962 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132080528 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157359429 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.163011174 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178491237 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.150823687 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191615049 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147908821 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180234128 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187455886 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127159492 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158888162 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147933532 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236982588 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178175408 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184399032 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.178698768 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175985548 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220852297 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105041808 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13568267 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.116221494 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223732592 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110606245 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187337686 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215187608 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203134906 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183657793 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177522078 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146013783 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.107034635 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176886301 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158877176 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205876172 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142401352 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.149031932 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19699619 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.153554324 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111148234 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175290941 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287109626 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154357757 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181238712 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.126006193 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274548629 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110762724 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140254278 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167861372 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177170364 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.115248475 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.19282455 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184243768 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150010967 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143278175 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143019247 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198427927 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240843792 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173365107 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181664871 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.125729026 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167812701 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170596711 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183519479 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153609833 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156469786 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139538771 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204879792 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.190756954 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142798372 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181618774 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181200997 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181704557 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182792422 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144728998 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195224878 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135161985 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170974084 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122836632 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134992057 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167933176 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189389185 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137896563 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18108731 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18114644 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112497863 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136603547 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126651632 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175681101 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145928324 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137926791 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187190008 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.109851778 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191744547 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219786369 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136837813 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176319513 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153897122 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1122067 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146933579 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153294388 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112242799 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180541617 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189541093 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141444794 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182396324 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171158379 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144245349 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166934607 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153100261 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.967620639 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.110671024 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20073791 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156432738 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200443812 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159159564 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187186052 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17987564 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155335101 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170976382 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128891276 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.222868049 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170941767 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182945688 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139019032 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126360729 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150486682 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1414707 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160266416 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181140575 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120479012 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14869332 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181259843 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154145509 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.127751576 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149885582 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211723093 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160500565 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190885848 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225614443 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117115751 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185908912 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183272569 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137989805 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.171635054 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178723201 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156512122 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155611086 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.115782225 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.147259796 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221450489 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13477611 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168342567 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182582906 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153154336 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182837985 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144381701 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189243269 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149911649 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186359915 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108593728 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165406531 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181753966 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140881403 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.110320975 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181913363 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167164242 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.175729082 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153212156 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15613857 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202094217 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.132647688 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113921262 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307208785 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138320792 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234049765 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.155316297 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116344766 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153601677 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164620521 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178083063 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181357133 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11196349 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13829321 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.158318747 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.17883524 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.133252996 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17904251 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186683498 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168679352 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19848365 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.152587684 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253467086 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14690882 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152696797 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135058539 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139316251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12219178 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142997171 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147823958 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200153092 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222658714 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.175655416 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.15327176 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109541356 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.135672805 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113242618 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171936972 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161932582 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179278819 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154466655 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.096004199 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148342187 seconds)
  done (took 82.45470658 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144087615 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138189336 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149125945 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198521232 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166535686 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26198473 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.205790511 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221531119 seconds)
  done (took 2.570727376 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.101860215 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.135028862 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142948119 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.12347631 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.090208712 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.444822664 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.137113208 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.099484296 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.180167946 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.129982663 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.115105601 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.65739472 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.096114966 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.127204609 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128975521 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.113744922 seconds)
  done (took 3.897985856 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.180167542 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.517461471 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.754304294 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.268846334 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.230278308 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.181682265 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.736891824 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.188989252 seconds)
  done (took 12.138429096 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.130832718 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146729047 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.321106232 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.22784822 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.162172358 seconds)
  done (took 2.079910323 seconds)
done (took 125.215658455 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108064607 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133705941 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106425867 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.136683853 seconds)
  done (took 1.567332059 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.159656751 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.112668814 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.086955262 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.110122223 seconds)
  done (took 1.559695763 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.486977495 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.112882325 seconds)
  done (took 1.716567535 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129946963 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.150939317 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.120479972 seconds)
  done (took 1.496970383 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118474602 seconds)
  done (took 1.212454326 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111959817 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129936509 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.20081106 seconds)
  done (took 1.536916114 seconds)
done (took 10.179155506 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104543246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.940594589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.389861369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141125398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.744656356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378035085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.433112471 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159826273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209551414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089703484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141124917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.69150215 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.420813639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.887367854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.376566145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.886252646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674589068 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118251855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099585021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119410649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.385444086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117222902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092666098 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116997162 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67318631 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.438890504 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118150295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.875407568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117445808 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098320874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.40622691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.090068735 seconds)
  done (took 20.622590128 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101331408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182212927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102745529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120078751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098825999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118862988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.131546144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.106566392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195334554 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118991059 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114125232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117048109 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097299826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118881258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144760038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091300202 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11896988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091401715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.127441707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093724288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139958026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089740096 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121737422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091050572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118618896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.123045345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118840191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.132865297 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091109192 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126059587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.094831137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092157308 seconds)
  done (took 4.833086426 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142425186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193914781 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132342358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127136069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178960645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120951311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213271326 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16043813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199354214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091420743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144147108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091069594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.165322814 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092428791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145953395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11923127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09341649 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118958368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101039074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121124727 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113554448 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118069095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092970757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119308466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.091837889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15293486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11763577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.106622342 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119113391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099105041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121964963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092549793 seconds)
  done (took 5.204957897 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110042022 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13409211 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119294333 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147337883 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101302298 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133688987 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106418628 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129339894 seconds)
  done (took 2.088552355 seconds)
done (took 33.845724263 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122067693 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141241223 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114073937 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137525111 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187312405 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097469124 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.139835371 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098598205 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135810172 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114303225 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.119645674 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.10065025 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.141228262 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104427909 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.189687656 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.136494642 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.193903946 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.191810334 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.100056153 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.13672637 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.099791942 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.194045578 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.133188266 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101064976 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.19644889 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121576403 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.184016514 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103800464 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.131521235 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097613633 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.19032205 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133741676 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.100573667 seconds)
  done (took 5.58451779 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.201275509 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.102001575 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.128409222 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.100136631 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.101417347 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.12736374 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.201849162 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098654333 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128497199 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.098772771 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.127937842 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.200863131 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.104810197 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.12361184 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.102662981 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.123707719 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.200659706 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.101914987 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.119791725 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.084399561 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.123316703 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098084222 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.212349161 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.123954106 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.100706885 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128193051 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.103174513 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.132936074 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.101968158 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.129630942 seconds)
  done (took 4.950994479 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109073611 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142069117 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119002303 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195448134 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157586087 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.105489601 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.148544797 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.113982894 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.147696454 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.093127943 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.136698206 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15905023 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110382816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.133292402 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.094374703 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14118698 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117118065 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.12117927 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101018964 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139411816 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114150737 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.139915029 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146348449 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100887087 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119410509 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100269926 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.131280364 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107161281 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.133091895 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.114258769 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126094933 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096746667 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123520737 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.160284782 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.098415651 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.133714304 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.118544645 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134367126 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.106360906 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149410814 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126197209 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.100354342 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14833255 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.150633323 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123449867 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.10703015 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.133713903 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.110283722 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121916222 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111511612 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.173858888 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.120292985 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.113785048 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.121095238 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093009846 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132341622 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.093740259 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125979998 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.113788726 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124307291 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.117779096 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128063634 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134662947 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095299311 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132302638 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.093531959 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092718775 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123414756 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150600737 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102063017 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16013387 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09319779 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.13494451 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106684362 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132502567 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105426477 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.121275335 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104166532 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133073382 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099529477 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138493733 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.095836361 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123995316 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.108940946 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141538671 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.133992299 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.139980218 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13463111 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0971933 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.123201633 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110844599 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121891184 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098831335 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140914032 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093166161 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125590988 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13509331 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.105543086 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.12115004 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119275476 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12775617 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.092756422 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146612212 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.102251737 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127661211 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.101795206 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.172749658 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09248016 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.133628487 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135887514 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.09318872 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129437973 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096243501 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120273991 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.111274583 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.137976481 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100423669 seconds)
  done (took 15.39332373 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.290397159 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.305212638 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204264765 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308748157 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.108167158 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.205655418 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.303395488 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.277618339 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128042842 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.165638768 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.184777021 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.249872607 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123279127 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.150919166 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.276781712 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.371260556 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.152667477 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.167405476 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163926784 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137732628 seconds)
  done (took 5.403622301 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119716404 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158559668 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145346284 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126654389 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.133066539 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.106507455 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120837156 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.148444952 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104102293 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131002037 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.095786636 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.140237265 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105463091 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.138024509 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109648873 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.165141996 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128756549 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.0998472 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.149143814 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.099241453 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128006615 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153042899 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.104469098 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143514157 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.139549955 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.104824808 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120724864 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098967232 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.128024075 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.101923548 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.127160815 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.11806498 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127833732 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.096629045 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133856867 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.109567206 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127316303 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096224633 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126233511 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096902653 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.137662663 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105610646 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12878703 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087387875 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.141164185 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094680739 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.13708382 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.105692194 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.131555412 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111427752 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.134989348 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108126918 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127845085 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.116153426 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.127321595 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112410872 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13393505 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.137482685 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.099494922 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.121211919 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.091523824 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126060443 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.102435266 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.137703254 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105729817 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.146382001 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.138993422 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093101032 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12789323 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097039994 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.12587426 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108860519 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148199351 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102102012 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.129411096 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106703533 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.130170017 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084499478 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132335949 seconds)
  done (took 10.672815539 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12289587 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131799022 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111735303 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.157283087 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106890677 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128186654 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102597219 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.141253775 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109612067 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.138440365 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137418129 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.107821668 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.145214252 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104235099 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131766839 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110561878 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135631557 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.164060971 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111394015 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.153862153 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.109455023 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127234084 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.105281461 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.133864494 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.153351897 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.104143681 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.152464451 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.107336355 seconds)
  done (took 4.682141918 seconds)
done (took 47.792220593 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.244965973 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428692088 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.209822886 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.216988566 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.218532549 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.232865768 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220645938 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.216517715 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.089666569 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.192902841 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.213939572 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.233269766 seconds)
done (took 27.853987237 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.282312829 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.735244989 seconds)
    (2/2) benchmarking "String"...
    done (took 1.488482321 seconds)
  done (took 4.352315732 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.200867452 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.210711576 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.535157472 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.209733338 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.211344612 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.212962238 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.223611463 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.217542131 seconds)
  done (took 15.948511892 seconds)
done (took 25.910954478 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.253405921 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.375316771 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.440252563 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.220680993 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.212124487 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.210413367 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.206173197 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.218210587 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.216790185 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.21869813 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.59841395 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.473039031 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.224951177 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.57864102 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.208574141 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.237299892 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.206404502 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.453045587 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.212184008 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.250278186 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.192742756 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.194015727 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.239350407 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.214086286 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.208531546 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.223391281 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.259019751 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.214656331 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.411897004 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.212926359 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.240048665 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.209473935 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.250749234 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.211549559 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.20981543 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.215012975 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.387868765 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.218903181 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.212365638 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.215610359 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.407379886 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.211625708 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.21230445 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.210811419 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.219006177 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.254906658 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.206098743 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.313452541 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.239316329 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.236216284 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.274809829 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.599716754 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.20851527 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.213796441 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.237306903 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.433221203 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.219757108 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.257008767 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.237590611 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.214787403 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.224938655 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.221353813 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.253933664 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.216081826 seconds)
  done (took 144.208961437 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.211519336 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.212521369 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.219942924 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.233017171 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.219857066 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.218781904 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.218312226 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.211055043 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.221719793 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.221729352 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.21630252 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.217204216 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.216880644 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.17539275 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.216307942 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.230042312 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.21720294 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.233948597 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230588578 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.209180953 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.218494221 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.2203679 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.231610773 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.220777355 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.257715035 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.309733173 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.259691106 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.234206246 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.218579668 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.213885676 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.260091088 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.241473088 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.794019945 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.081704443 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.229037676 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.225861805 seconds)
  done (took 80.701541652 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.217035447 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.219819551 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213873217 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.246869169 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.220818508 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.763072791 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.764421819 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.939812474 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.454718648 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.467542612 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.440721024 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.212692842 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311338523 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.225153392 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215297595 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.231221238 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.244039515 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215136098 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217217487 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.754629812 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.232026255 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.331476081 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.405831069 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.223633476 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249287057 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.541556843 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2146586 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.219479424 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248748947 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.547938036 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.26352154 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213778609 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.559456008 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.250772218 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325546592 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218482145 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252317502 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218793084 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215206872 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491734314 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216390863 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.220532942 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.221563232 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.853922115 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214240754 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.764456137 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219400392 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.138534461 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.220250232 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222236107 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.156544256 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.787532564 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.23344135 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.223379654 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.228221692 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.220014864 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217029838 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.252851988 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.186210944 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314283525 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221253616 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.223122709 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252725282 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.222627612 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.305006508 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230997261 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.939063029 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292188174 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.338761852 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761413151 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.226211374 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323293331 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336544268 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.221006329 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.217670738 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.220737484 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.229571525 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.225958447 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.335831828 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.217000397 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.886755709 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.389781937 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.23450093 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.482327029 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.321959058 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.21998684 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.555104809 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222271477 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.221951374 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.923523603 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312418837 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.217082476 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.222641709 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22022215 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.885998704 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.761231778 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.432554953 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.224362283 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.223408483 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.745929442 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.22534635 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.057143544 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.747502647 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.865997598 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.225544953 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330099405 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.392223819 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228700514 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.221370564 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.473899562 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.223545532 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.281192499 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.224679645 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.551968913 seconds)
  done (took 374.143643766 seconds)
done (took 600.177944061 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.100750039 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.054087202 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.186886576 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.074432464 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.049179442 seconds)
  done (took 11.601349571 seconds)
done (took 12.739129867 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.407402141 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.405234904 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278047854 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40529135 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247385429 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.417121883 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387609622 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.240134709 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.332396186 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300619955 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328135314 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.266094112 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.250948283 seconds)
  done (took 18.404938176 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.474138048 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.223849287 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293104138 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.483459806 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263452601 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490345695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.519232389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.223241821 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380463225 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244400113 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247611193 seconds)
  done (took 17.981808455 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495475377 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.226290885 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297684725 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479591773 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.267649034 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526375606 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.529071543 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.225226806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389488498 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243867937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238559506 seconds)
  done (took 18.058674087 seconds)
done (took 55.581430192 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247542942 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.31106153 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.247863284 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231665409 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.232552769 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.233851318 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.233259159 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.239088027 seconds)
  done (took 11.117654904 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.235968944 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.235360082 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.23560993 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.231957276 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.232369342 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.233313484 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.233735602 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.235879703 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.234235138 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.237175526 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.233097006 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.233675081 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.237050697 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.235452062 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.233470813 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.234256707 seconds)
  done (took 20.894543094 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.234378167 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.235867232 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.232705552 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.231214699 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.234124707 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.236158358 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.235401443 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.237140797 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.231210129 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.234652674 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.235066857 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.235143267 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.235466633 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.233703473 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.235751327 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.235466881 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.236444694 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.233079357 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.239371142 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.235217218 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.237061335 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.232831427 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.233470342 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.233813352 seconds)
  done (took 30.774576111 seconds)
done (took 63.927354647 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.227646653 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.25638426 seconds)
  done (took 5.627141595 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.292656346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.295678828 seconds)
  done (took 3.732772023 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233353803 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.235112507 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.234015491 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.233069943 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.237718367 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.237487214 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.233179002 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.235322532 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.231309811 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.233778456 seconds)
  done (took 13.489513769 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.235846235 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.234997838 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.237056375 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.234870792 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.233136767 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.236855353 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.235983212 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.231929985 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.230979049 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.231711102 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235405544 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.234143902 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.238550716 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.235035052 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.237217894 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.233345777 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.237076271 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.238571884 seconds)
  done (took 23.377976616 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.247634983 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.256979897 seconds)
  done (took 3.647649047 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.365482808 seconds)
    (2/7) benchmarking "second"...
    done (took 1.276955963 seconds)
    (3/7) benchmarking "month"...
    done (took 1.342104067 seconds)
    (4/7) benchmarking "year"...
    done (took 1.33356884 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.279916298 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.256701728 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.279138624 seconds)
  done (took 10.279239086 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.24032607 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.434230151 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.547425976 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821258579 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.244457496 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236097827 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.196304436 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.242655878 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.248566388 seconds)
  done (took 14.357857575 seconds)
done (took 75.654411049 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.225689103 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.297608439 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.263728137 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.231512582 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.573779304 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.222500915 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.228607535 seconds)
done (took 16.188753945 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.219620553 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.227258404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.236786556 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.229317524 seconds)
  done (took 10.060327188 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.247254757 seconds)
    (2/2) benchmarking "read"...
    done (took 1.524507982 seconds)
  done (took 4.917435975 seconds)
done (took 16.124667363 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.241226932 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240235785 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.239648921 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.23705113 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.238682501 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.236167142 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.243266585 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.242333196 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.237106563 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.237086566 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.240629887 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.237087725 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.240478189 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237560943 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238352662 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243706966 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240817481 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.237414873 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.240404866 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241449095 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242930586 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240668861 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.236705377 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.238173444 seconds)
  done (took 30.896662569 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.240326981 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.237018472 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.241415702 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239243374 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.240422006 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.23959823 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241497212 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.240060713 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.239919052 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.241346183 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245037935 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.245961149 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.238477168 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.241864362 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242559756 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.241124076 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.244745537 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243709162 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240413741 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.243971585 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.240663093 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240620176 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.243197487 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242096084 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.24072533 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242801003 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.244316886 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.243463307 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247095799 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.244451479 seconds)
  done (took 38.402904909 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.244178414 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244081026 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.243752573 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.242524002 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.237357718 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.245186646 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.24209514 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.241612307 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.2437749 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.243999852 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.243164498 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.240761684 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238252634 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.243789717 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243647829 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.238350293 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.245170157 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.243978367 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239594793 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.241335113 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.241582557 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.245083066 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.242381537 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242023095 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.24609055 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.245843602 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.242447458 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.244347356 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243915031 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238177901 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.242419532 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.24206586 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.244140262 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.244620497 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.239609589 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.242112793 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.244057577 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.241156897 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.242851667 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.241969774 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.242555562 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.245989765 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.241569225 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244968892 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.243041536 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.241383745 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.242028569 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.243197382 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.239644393 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.24024264 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.244924809 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.244159122 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.244091789 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23984778 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.243913745 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.23963977 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.244317665 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.240212278 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.247115752 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.2419793 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.24269631 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245461784 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240363021 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241449886 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.243551035 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24105934 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.24329892 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.246165902 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.241885562 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.243111097 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.243730386 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.245832921 seconds)
  done (took 90.629069446 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245925494 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.24523609 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244721907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245909293 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243112869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243940476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.247011479 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245228853 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245670316 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244002858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243739306 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246020999 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242576222 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245120742 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244692049 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251040404 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243926065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246606468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.243584474 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244290714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246446323 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.245714061 seconds)
  done (took 28.548456021 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250012811 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24955342 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.246578493 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252363669 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251312101 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2498341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246744766 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250190487 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247876069 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24620632 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250406363 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24770559 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249664486 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249045385 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24770177 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252045869 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25570445 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251237205 seconds)
  done (took 23.646757294 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.248623044 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.252756576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249522562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.251308207 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.24932643 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255348525 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249662832 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25319028 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.25473986 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.253392407 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.248953187 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251672059 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.251502735 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247661953 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250215342 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.250359462 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.250384159 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256808264 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25061987 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251873828 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25032138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253655122 seconds)
  done (took 28.685732288 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255586606 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249877881 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253821429 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247287776 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.25127516 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252264961 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250656151 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.253436883 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.251671449 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249180804 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253489736 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2518869 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.255793145 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251507148 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.251470755 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256843547 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252017812 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253969752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254949028 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.251105925 seconds)
  done (took 26.204965024 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252597505 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250221483 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253603409 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252477134 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254116103 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253419333 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253048317 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.254351204 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251514577 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254786155 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252259237 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252071574 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258077887 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253622652 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253483444 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257044781 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260083944 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258944823 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25698644 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255779722 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253241808 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253276714 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25391267 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251643782 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259093576 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259044325 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255069198 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253322976 seconds)
  done (took 36.286594866 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25420313 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255140657 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.265918401 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.256455985 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.259163157 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.253258456 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251997787 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.254145732 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256464309 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255447916 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.253840887 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.256296598 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.257173185 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.253717716 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256927129 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.25458506 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254081399 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.255061377 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255430364 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254104621 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.255937546 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25434957 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.250423077 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255278791 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254881837 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.256268668 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253939371 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256359193 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256717177 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.255192347 seconds)
  done (took 38.822602028 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.277241255 seconds)
    (2/2) benchmarking "in"...
    done (took 1.271060884 seconds)
  done (took 3.710553495 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.252557125 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251784185 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.256194652 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25230899 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253892985 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254419825 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254817385 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25711923 seconds)
  done (took 11.192945461 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.258152161 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.255700072 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.254257819 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255511722 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.257482378 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.256598442 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26539818 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258564501 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.258838416 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.258440932 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.260290876 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.25638037 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.259248478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258489033 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256583044 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259236518 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.262173848 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.253888445 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.255893374 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.254191193 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256755699 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26047543 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259207396 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.259645706 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.257822412 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.268397308 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.265284329 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.258789036 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259326961 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.263025005 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.261444536 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254637918 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.258036682 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.256635064 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257545076 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.260174968 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267835959 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282141594 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26534625 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262089529 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257663373 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.261922444 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259320328 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.261325614 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260496334 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.257986548 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.262319615 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258703732 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.25544278 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.257288548 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260063354 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259959119 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25692108 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266245685 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.261422911 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26954067 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279865909 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.262466849 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.262986393 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270980512 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.272275544 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.266579484 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264204407 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.257457823 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264191584 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263474265 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268348495 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.263446085 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.260727788 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260309847 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.267406874 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274026907 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269123533 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.256396067 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261370788 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261688907 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262411938 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258100427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266390038 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269310846 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.260499386 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257706431 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265830298 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265593541 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.263406431 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.262284606 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.259855682 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.263282634 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.261190636 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27302121 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.284453465 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.260429652 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.262149397 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.264362805 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.264402921 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.264819281 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.261459582 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263586001 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.260973579 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.261012719 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262881532 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263740039 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269491137 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263154681 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262927091 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.273599351 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.27019788 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263485967 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.27568669 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.269721131 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263190334 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.267009891 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.267345733 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.268597311 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265029015 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.26639736 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.268109187 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.26776611 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.266066321 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.266579522 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269517638 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272860102 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.26799586 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264105725 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.266655892 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.273407594 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26635054 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.27042659 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.26857314 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.267275538 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.268610334 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.269169183 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.265681088 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.26809625 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268055657 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269509561 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.264842581 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265031824 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.267440176 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.273310529 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.2700829 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.268089078 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.270670312 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.272375518 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.26572235 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267388985 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.274474989 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.271454009 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.269689516 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.268374923 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.266580407 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267086885 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.26924046 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.268027704 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.269027158 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267317689 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.270474271 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.268294547 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265535879 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.267460733 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268090419 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.271729056 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272974026 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.269385528 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.271960987 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.269726232 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.270149058 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.267371869 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265104676 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.268084411 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267286571 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.268623494 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270244423 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270668469 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266009583 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266532203 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.269881138 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267326684 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268198295 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2658974 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270122668 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271163518 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.268451161 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.281618302 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.273289319 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271083178 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268357536 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.268506031 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.270156111 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268293619 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.27124132 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.270279124 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279569456 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280401729 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.27027344 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269791253 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.270103735 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.269771484 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.274274685 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.271957632 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.267915317 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266359308 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272389757 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269183927 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.271435799 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.26831138 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.269379756 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269781893 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.268499993 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268965715 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270583932 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.271101084 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273567029 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.273078275 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269135639 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268895056 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270383598 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.270937848 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.270436852 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.272251573 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.268638605 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268888313 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.279163471 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.27290347 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275459785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276122263 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.275074192 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.271898513 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270142623 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273539656 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.272540951 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279718441 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27636984 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.27151416 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281387146 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.292584222 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.273146624 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.274987198 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.272866254 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.270647368 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.275005014 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279691715 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.271935702 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271288834 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.273489242 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274223869 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273620778 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.27749884 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.275577377 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.274921659 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273627826 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.274094889 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.273210188 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274362238 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.275138698 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.277456376 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275924218 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274768876 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.27042641 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272451877 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272321583 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272683625 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272361455 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275855175 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.277533422 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.280996026 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.280301957 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.278194649 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.276780889 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273586522 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.278029391 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.271757099 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.274720404 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285233407 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281947733 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283181147 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.276249085 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.274687039 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278444483 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.278404882 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277597994 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279007829 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275685856 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.279826778 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.27415029 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.273816749 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275448024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.273832994 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280455127 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.281883143 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277587898 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.275501356 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.276558127 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.276805211 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.277025484 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276444511 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.280160338 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.277949962 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.277606252 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283131152 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.277938699 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.277641253 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285619622 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281099723 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.276579111 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.276579946 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.280701883 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.276440369 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.279321382 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.276852871 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276114738 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280225717 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278994353 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.279528335 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.279120246 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287021244 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.280020514 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.278315021 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.278489309 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.275342551 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.276627404 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.27805777 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.277173846 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285256074 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282403001 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.283022147 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.278048932 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276241767 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276489526 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.279574803 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.277588763 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281488233 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.279058944 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292082833 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.305294442 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.282653932 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280734298 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.279732103 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.280111523 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.277083103 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276911329 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281356155 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.278315343 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.282785461 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.280598201 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.278480769 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.277778254 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278231812 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.281362792 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.278760633 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.276795387 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287751049 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.284064575 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279303041 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.278510448 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.288177838 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282611864 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28731654 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282375249 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.281119317 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278189527 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.27661335 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279307 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.277771199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.278778521 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.28005932 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278303473 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281871081 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.280247633 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.282342467 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.28164509 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280719055 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27923002 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280584781 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280846282 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.280170706 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281693065 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278642299 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.281585246 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.280919308 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.279373365 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.2796258 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.27983137 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281500735 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282438455 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277376785 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.282617445 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281773388 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280911347 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.280696473 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.279993158 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280142603 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.280164717 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.284933144 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.28099488 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284880711 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.286033595 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.282623018 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285656056 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.287540017 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.288405305 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.286231857 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280737534 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284611104 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.28229324 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.279738056 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.282968357 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.286533434 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284181641 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286691012 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.282458399 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286345328 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28014709 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.287713917 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.286476284 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.283737472 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.285572658 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.28238029 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283034 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282225575 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282827984 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.286454488 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282071887 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.286894043 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.283474245 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283799189 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280962928 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284190086 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284898869 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.286617963 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286939808 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.283152682 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.28406868 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283162364 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.280319029 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.286710311 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.293282727 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28978311 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.29165706 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.286218848 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286095689 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.286052731 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287532471 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.285112028 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.285339882 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.286622181 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.284696496 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.285682112 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.287174636 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.28534445 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283188393 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.292433304 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.291211046 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.28583047 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.298398255 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.312489037 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285309654 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.287628061 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.287989542 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.286086356 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.287455666 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283061096 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.285083984 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296812371 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.294429398 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286544831 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28961148 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.286536796 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.286268345 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284648387 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284528946 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.288119364 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289182545 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.28492273 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288219024 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286496725 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.283359914 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.28304709 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.287659216 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287311909 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.289005426 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.288884992 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286879822 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.292336693 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.289378123 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287409662 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288652179 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.284110118 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.285565252 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.285521053 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286745201 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.287166099 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.292232089 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.289331254 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.289044291 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.292748896 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28575603 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288480499 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.290837167 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.29262702 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.28824813 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.289270015 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.29082923 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.29600648 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291257416 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.285785285 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291502534 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.29203361 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.29076055 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289164703 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.290226073 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.29102965 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302357541 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.308250088 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289209269 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288197306 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290832749 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.290996613 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.288951266 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.28926502 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.293111023 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.28874583 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.287490405 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289590441 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299497406 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.313128972 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.294299113 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.289252194 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.293287238 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.289202766 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.293622669 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286716593 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.286849953 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.290828577 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.296155458 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290239905 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290744032 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299331286 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.294382634 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.289981192 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288966778 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288991996 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.288702247 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291073998 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286150756 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.288635832 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289055596 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288439734 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.291551476 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290198418 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.296013778 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.289060279 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28514019 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.287036944 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291002693 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.288954421 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.287122736 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288446865 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.286071334 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.284750568 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.282618991 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.285938361 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298177596 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300450582 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.289202462 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.284608034 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286765664 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.294072684 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294967354 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28814866 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290561459 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.290461226 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.287871388 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.293600233 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289173918 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.290491354 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.288144308 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.28844227 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289492576 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.289430478 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297816948 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297109509 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.296311535 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293300619 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286401885 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.288252287 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291059402 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29037785 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289103227 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.289916819 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.290341598 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290183147 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.289518381 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.289956289 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.288013922 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.292983802 seconds)
  done (took 762.440450036 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284380429 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285375114 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285651192 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285027288 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287057414 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290067209 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285840733 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290413137 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286894928 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289424339 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28634269 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287317884 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286203431 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28813102 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286608029 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287886294 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287965479 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290176421 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288149902 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287710929 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285525432 seconds)
  done (took 28.225186485 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.289917673 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.28947696 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289536517 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291430005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289951168 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28646868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29039969 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290751012 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290337879 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291637489 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.288459661 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287946735 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.289753095 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.287600409 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290220027 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290958904 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28904529 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287836043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285560919 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288541404 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287817704 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286663393 seconds)
  done (took 29.555364773 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.291747373 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.29118622 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.286953314 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.288725576 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.287280321 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.285277623 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.288123891 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.291150193 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.289451183 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.292595128 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.29237747 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.293144045 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.296086027 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.293227913 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.293644992 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.291631831 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290738285 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295447565 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.291634681 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.29324673 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298521706 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.29932057 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.289650899 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.290912678 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.294251297 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.292513882 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.29172204 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.297170721 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.295565351 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.293547401 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.292887633 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.291752223 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299152212 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.299284265 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.293992093 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.293469716 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290402209 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.293282516 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.292613715 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.295588762 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.296307465 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2932412 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.302737569 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.300925434 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.28998471 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291410174 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296617547 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.293844543 seconds)
  done (took 63.269567529 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.293867269 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.293472556 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298063798 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294716864 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.291893029 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.29268203 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.294564459 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294128127 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.293316819 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.293118095 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.293873241 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.294938308 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294377525 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.293553428 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.293076616 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296262452 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294634892 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294785571 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.292827204 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.292892844 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.295579253 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.295509408 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.296513464 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295587175 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297149378 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295576843 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294683166 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.295527335 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.297918315 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297583325 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.293520139 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.295002539 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.297960262 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.295221991 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29461304 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.296405007 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.298640597 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.299964157 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.296380066 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.29690968 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298191434 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297303938 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.297134652 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.296678452 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295472269 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.29531899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296298764 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.294759399 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.294975422 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.294673589 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.296411061 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.297412157 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298060908 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.299921277 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295236784 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.298331342 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296592267 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.29894966 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.297558354 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.299281277 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299246301 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.297612411 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.2952025 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.299101265 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300050365 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302681639 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.296735603 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.297865384 seconds)
  done (took 89.329752609 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305245036 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.2974012 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299254025 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301679364 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299023585 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.306782703 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300763035 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303912794 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299655219 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300829034 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29757491 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303015649 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.301154077 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30169913 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296842932 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30069146 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300010103 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301519681 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300839325 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300524602 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301407269 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.3022585 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.301816049 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.299876921 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305244506 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300416648 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301766052 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.299916387 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299595685 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298886842 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301920901 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.301874449 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30257604 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301424191 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.300058575 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.30272475 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303983104 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302847857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.309031506 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.30194172 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306559726 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302204597 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.298613053 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.301864136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305613669 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303615362 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303340248 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.30718284 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306152545 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299997823 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.302973278 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306365339 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307352299 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31173742 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305047663 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.309404476 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304238258 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307215759 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302622101 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309053605 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305984871 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.312961426 seconds)
  done (took 81.976334418 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306267226 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302190637 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.307575227 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.304232866 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305475912 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.304588732 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30421 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.302799128 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.301531386 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.30276672 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303007629 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304085324 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304709809 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305664914 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.304766944 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302561486 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303225425 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.301539809 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305662657 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30402735 seconds)
  done (took 27.28217767 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.312671115 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302735857 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.305902034 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308278659 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.304863677 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308002467 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305239115 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307690953 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304525249 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303319812 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303447406 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304019675 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301496148 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304727498 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30390152 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308366881 seconds)
  done (took 22.0929595 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.309509158 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.303826824 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.303521126 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.305857922 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307904402 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.300363159 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.305025311 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305889989 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.305551058 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.302869414 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.307727287 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.306016829 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.304126045 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304391842 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.302508352 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.304212704 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.303806946 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.30540535 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.301373926 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304561776 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.308534813 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305103958 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307568151 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.30533796 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.304502875 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.308538272 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306394096 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.304701262 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.298945493 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.309262047 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30334535 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305538085 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.302794037 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.304070761 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.305130507 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311161258 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.309623973 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.302939522 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.304439255 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.30843141 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.306208041 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.307255206 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.304049227 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.301592322 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.30970774 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30305634 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.30487212 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.307654561 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.303368216 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.304982118 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.307091368 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.304646495 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.307952412 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.307142833 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304837693 seconds)
  done (took 72.998486291 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306263003 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304326604 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305454456 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311247783 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305556838 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.305038321 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.304181686 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306572545 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304421136 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.304260587 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305858542 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.308707437 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304339377 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304433128 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30592494 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304319533 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.3044248 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308812054 seconds)
  done (took 24.707649174 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.311903198 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.307293695 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.305540901 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.307049457 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.307859656 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.307752554 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305309424 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.309101442 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310621678 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.307036034 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306240797 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.307855822 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30645607 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.308361678 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311739281 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30647736 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.309692727 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306712977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.308459832 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308028097 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309419711 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306680338 seconds)
  done (took 29.980234603 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.306239463 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.308604948 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.309104763 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.31738385 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.315164434 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.306118632 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.308511528 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.30583343 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.323074683 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.32877136 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.32294655 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.313032433 seconds)
  done (took 16.970738439 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309468079 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308943892 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30645089 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308079535 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311359017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307721574 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309592987 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309638343 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305991869 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308975528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309345435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309175579 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308516275 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307496425 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308733507 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308129805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308974181 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30563954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31060059 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310236241 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307832112 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310310401 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31093589 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31033581 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310779886 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313643853 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307643168 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31188773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309518388 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30727856 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307449919 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30749486 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306847532 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312688826 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309985757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3103865 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308872767 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311024913 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310149083 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310282931 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314923508 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311310941 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312891176 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307493205 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309124071 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310461669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314374176 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31358698 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313515679 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309983266 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308846379 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309067665 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309555059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312004773 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311906034 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310832424 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311097144 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307621812 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310574713 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31083985 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311188275 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308893098 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313997562 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314380829 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310172055 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312161923 seconds)
  done (took 87.668049263 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311708318 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310015486 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311819191 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311525271 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311494997 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310375462 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311790232 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31142453 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309300105 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310522461 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310344424 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311484928 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311892322 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310684511 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314773021 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312718896 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310726349 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31222015 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314199177 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314102229 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314006947 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313139202 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313950282 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313090703 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316217634 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31583942 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31575584 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315359372 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317051671 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317730865 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313376681 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312924174 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310761454 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31287351 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314519652 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31240789 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311891135 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317091254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311186072 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313802879 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313944413 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312439617 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314345113 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311533791 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317023412 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313233899 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315433109 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318633315 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314844375 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312704503 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316278863 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316735134 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313345485 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314047299 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316641995 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312745994 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314125973 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317172625 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313426861 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313425243 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313682787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31466904 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313349728 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315627825 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31313888 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316112158 seconds)
  done (took 87.904970727 seconds)
done (took 1782.573353818 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.487961639 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433500375 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.314192828 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.327628025 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.31092813 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.312165267 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.326104403 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.309082699 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.311446447 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.316092815 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313713603 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499827976 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.348436039 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.312792116 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.314112095 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.408483717 seconds)
  done (took 26.853935051 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.342992986 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321150615 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.428344321 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.33309486 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.342056387 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.49903045 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.374546815 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.324456937 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.47615826 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.332903697 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.319452841 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.336745407 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319070264 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.321836981 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.331773009 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.503490455 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.559714652 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.3204557 seconds)
  done (took 29.001211859 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.733869319 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.321541876 seconds)
  done (took 5.267976621 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.335747909 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317728175 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.315174429 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.314760185 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.309216679 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.321734921 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.314527334 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.318714415 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.312718056 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.431053278 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.320534202 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.325340459 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331136696 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.317606928 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.313534846 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.362075834 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.492928278 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.313701072 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315510758 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.321736001 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.312615716 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.432439172 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356794586 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.319132879 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432585543 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.31894628 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.327216791 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.329755381 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.483171583 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.31939774 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.317312094 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318827827 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.316726899 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.224337987 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.835391009 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.32755388 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337589537 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.324359021 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.31414213 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.489113092 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313962752 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324061489 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.307887189 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.8357034 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.431562033 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.43026612 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.327488341 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.319797774 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320205729 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.381318954 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.323662481 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.321191801 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.377716697 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.143158369 seconds)
  done (took 84.511696731 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.359670573 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.311572925 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490057595 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.3279684 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315530152 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311127242 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.325438887 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.572977918 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.357286565 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.309073829 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.62215312 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.942287429 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313913516 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.343035828 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.420064416 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.433685622 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312234435 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.328079893 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.312972728 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.306250496 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881253208 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334458421 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.309362136 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.800013913 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.343772993 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.832118098 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.310892203 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.313735862 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.307158881 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.306305642 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878433119 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329813627 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.408443161 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.311754783 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.587460194 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678056415 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636128361 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.311057825 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337846132 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.312545273 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.313307966 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8146723 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.653414341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.30906731 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.309712522 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810239093 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.308138572 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.321124739 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.314659511 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.579884976 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.315567115 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.3314317 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310429655 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322026115 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.309709011 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.438002961 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.449591262 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822811302 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308188824 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.320998962 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.378540049 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.312989782 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.311072691 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.315091855 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.313416766 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653959348 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.6951968 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.321993597 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.655891294 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.861777432 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.322253648 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.933090291 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.322662239 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.351339178 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.709260482 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.312750978 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.307491988 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827966984 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.325875489 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.310100983 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.631812033 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.311415497 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.609413754 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.327623919 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319823613 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892974277 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.330025579 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.356291757 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.306087579 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.322302219 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.308630734 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334159157 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.6029643 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.362083744 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.310905192 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.312230722 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.363027226 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319241131 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.307195718 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.307059045 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928492336 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.331939753 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.306633869 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323704505 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305434456 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.313398556 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.307674878 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.310769593 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.597011281 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.306475463 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.316120669 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306924079 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.305239373 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.319744103 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.800329703 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.313935343 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.588013013 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.306726438 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313479022 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.312203984 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306737717 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.36737346 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306820689 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.309782257 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.306373052 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.606519395 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.321162161 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.308482748 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305849062 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.30711988 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326163478 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313361937 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.324123711 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.311480428 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.207462857 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.347071696 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.359765278 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.306790955 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.317810892 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307046118 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.320755243 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307217869 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629712547 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.587792259 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.69086497 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.313521539 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.307531119 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.192421026 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.36463816 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489078889 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.326648174 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308553006 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5850631 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.678213256 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.308949979 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.308622215 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.312537363 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613990073 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.309214588 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636914986 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903024048 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322346087 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.317306456 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.201892957 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.135898083 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.313704867 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.313753244 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.5969679 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.323645761 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.311207537 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.308668687 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.310088152 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.308933933 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.31626609 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.313193706 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.309642314 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.309505423 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.429939521 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500632417 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.32291699 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311889288 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813435908 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.397848101 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30947814 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.314937175 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.311203003 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310134803 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.445520607 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.311864093 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.35557848 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.313022144 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.314764384 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.838768412 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.311049076 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.312071174 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500540142 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083984504 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.310015524 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.309962336 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.310802318 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.439533971 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843895787 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.375756868 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.589838983 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.312795751 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347927666 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.31177364 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.381260726 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84533559 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.315423301 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.310728423 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058534402 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.326610366 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.962001937 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.311299998 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.312080188 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948986761 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.327068331 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.313155576 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.310104357 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317743133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.659231338 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.308591446 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.336184491 seconds)
  done (took 497.208410584 seconds)
done (took 644.054471734 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.309952896 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.314630495 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.295847621 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.317061716 seconds)
  done (took 10.451699293 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321654651 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.320516663 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317551318 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.319350383 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317383662 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320670995 seconds)
  done (took 9.135532922 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.316684902 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.317946244 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.316899094 seconds)
  done (took 8.16835777 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.506990492 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.331282771 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.642671047 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.334719505 seconds)
  done (took 9.036053561 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318798686 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.316055466 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.317396826 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.316138964 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.317163694 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.319835332 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.318600143 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.318867954 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319471956 seconds)
  done (took 13.080127694 seconds)
done (took 51.086698017 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.292514401 seconds)
    (2/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.095063104 seconds)
    (3/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.295667353 seconds)
    (4/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.464097859 seconds)
    (5/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.095046273 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.385588918 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.402786676 seconds)
    (8/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.480987924 seconds)
    (9/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.511679119 seconds)
    (10/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.411393468 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.354800243 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.459041048 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.425722406 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.441624802 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.463310726 seconds)
    (16/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.34152214 seconds)
    (17/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.338631069 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.353034704 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.452235425 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.407191614 seconds)
    (21/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.317496662 seconds)
    (22/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.349623614 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.314798732 seconds)
    (24/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.368147384 seconds)
    (25/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.020914411 seconds)
    (26/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.389374981 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.310882689 seconds)
    (28/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.394172082 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.424850784 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.346849866 seconds)
    (31/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.295746386 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.305214088 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.328469682 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.511759745 seconds)
    (35/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.361990365 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.336725541 seconds)
    (37/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.303064066 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.314671927 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.31730215 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.105932928 seconds)
    (41/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.409052329 seconds)
    (42/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.382613997 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.431171374 seconds)
    (44/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340882627 seconds)
    (45/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.202902699 seconds)
    (46/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.376405583 seconds)
    (47/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.296260931 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.460933066 seconds)
    (49/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.36478608 seconds)
    (50/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.969830152 seconds)
    (51/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.419945173 seconds)
    (52/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.340493682 seconds)
    (53/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347870211 seconds)
    (54/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.974826748 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.298024159 seconds)
    (56/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.296855476 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.475250184 seconds)
    (58/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.303357059 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.413833879 seconds)
    (60/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.354021192 seconds)
    (61/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.313498794 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.452202517 seconds)
    (63/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.203937782 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.406632103 seconds)
    (65/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.343827842 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.39519352 seconds)
    (67/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.298062843 seconds)
    (68/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.023743853 seconds)
    (69/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.341906251 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.31374168 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.207773645 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.375272063 seconds)
    (73/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.325068948 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.325091381 seconds)
    (75/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.305101499 seconds)
    (76/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.351635429 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.390401163 seconds)
    (78/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.351629397 seconds)
    (79/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.408037227 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.413749775 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.392058444 seconds)
    (82/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.472865821 seconds)
    (83/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.371443562 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.313526515 seconds)
    (85/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.07000215 seconds)
    (86/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.318682722 seconds)
    (87/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.301437702 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.42670379 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.342228888 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.515151242 seconds)
    (91/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.585088544 seconds)
    (92/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.360050806 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.375319219 seconds)
    (94/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.298218635 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.328222256 seconds)
    (96/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.373372224 seconds)
    (97/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.444491944 seconds)
    (98/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.020951439 seconds)
    (99/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.225478707 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.362755344 seconds)
    (101/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.423310854 seconds)
    (102/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.447253604 seconds)
    (103/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.300304599 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.327624381 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.384117222 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.314125143 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.435130846 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.029282544 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.436837718 seconds)
    (110/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.452808306 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.438538707 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.516257705 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.42823826 seconds)
    (114/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.301897583 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.114867479 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.066050378 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.35178175 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.512863905 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.302885632 seconds)
    (120/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.050889098 seconds)
    (121/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.230837457 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.493380331 seconds)
    (123/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.410370681 seconds)
    (124/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.977691507 seconds)
    (125/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.064205642 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.109989199 seconds)
    (127/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.455735525 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.507157405 seconds)
    (129/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.166026424 seconds)
    (130/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.303237163 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.459706711 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.399251838 seconds)
    (133/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.38492759 seconds)
    (134/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.475538073 seconds)
    (135/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.474951733 seconds)
    (136/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.303332649 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362472743 seconds)
    (138/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.551553412 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.112942672 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.396755761 seconds)
    (141/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.403510872 seconds)
    (142/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.377706851 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.066807125 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.373946769 seconds)
    (145/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.419380437 seconds)
    (146/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.316497992 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.472498076 seconds)
    (148/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.314506707 seconds)
    (149/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.312965471 seconds)
    (150/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.343820089 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.026865622 seconds)
    (152/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.3032726 seconds)
    (153/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.391819874 seconds)
    (154/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.450858207 seconds)
    (155/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.363666195 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.363443181 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.413413103 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.375378921 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.361836348 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.350634768 seconds)
    (161/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.075874287 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.431242886 seconds)
    (163/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.521527594 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.304674544 seconds)
    (165/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.371162292 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.30352363 seconds)
    (167/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.501625061 seconds)
    (168/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.466739703 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.438976643 seconds)
    (170/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.376712305 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.068851716 seconds)
    (172/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.359409509 seconds)
    (173/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.545687291 seconds)
    (174/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.30463049 seconds)
    (175/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.453209356 seconds)
    (176/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.362500424 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.415057413 seconds)
    (178/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.346079064 seconds)
    (179/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.977357955 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.324875794 seconds)
    (181/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.317641421 seconds)
    (182/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.456965794 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.457876106 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.464655397 seconds)
    (185/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.536132896 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.438595173 seconds)
    (187/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.363851637 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.30902231 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.311961912 seconds)
    (190/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.39705812 seconds)
    (191/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.464308842 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.455531512 seconds)
  done (took 333.025697874 seconds)
done (took 334.242782292 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345398657 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.418057206 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.342819581 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34371396 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342850734 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.297831149 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.35694876 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.325843948 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362582561 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.361310764 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.297371244 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.337997937 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.346002956 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.354102017 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.44941115 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.326452849 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.345156527 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.331256049 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.337789605 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.394124423 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34343811 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342148852 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351996172 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.345046061 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346194921 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346551043 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347757864 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.316404749 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.33066517 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.338181225 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.318034306 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.362749983 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.363210457 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.360698812 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341917817 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.333279475 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344662446 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.419037999 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.357639593 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354671067 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.338346219 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362321511 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331075087 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.331430165 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.362974282 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.350802643 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347566549 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.450222231 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.318749256 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.292954671 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346951207 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.393034783 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.339053003 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.288043646 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.334267516 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.457335947 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363363413 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347384695 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33147905 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345868539 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.452717121 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34745327 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.395435136 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34700468 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.332683438 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.349220248 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.364723739 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.395606329 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.332727076 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344720873 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345361843 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.340846773 seconds)
done (took 106.597964623 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.460935199 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.337180101 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.495099792 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.335872995 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.495692536 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.475961929 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.336165209 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.336942078 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.334999626 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.16527574 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.334229981 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.335920337 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.337698113 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.33534156 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.457410421 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337158129 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.333589777 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.058968343 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.337810298 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.477425444 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.338076378 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.337394186 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.336460958 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.173663275 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.338060319 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.331431445 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.479110474 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.337794823 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.073928993 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.330288991 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.333422477 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.074014026 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.474140039 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.356070255 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.346283038 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.348299935 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.49630137 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.35658761 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.459965906 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.463728153 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.510740026 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.376299632 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.332168559 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.337658815 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.339695382 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.340149923 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.338658849 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.367455628 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.337392721 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.339075176 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.062244419 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.349252985 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.339197382 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.339068372 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.338340358 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.367050505 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.338874943 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.341003952 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.480695834 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.341295634 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.464021654 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.17466139 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.162400332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.339799792 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.338534267 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.340182744 seconds)
  done (took 108.876170594 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.411826999 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.416776678 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.447445032 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.341403275 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.388094575 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.447675821 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.342646003 seconds)
  done (took 11.03413879 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.345710027 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.340623849 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.388512559 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.389004024 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.339154998 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.513143987 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338620682 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.351902149 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.339497528 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39291125 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.33935071 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.33999065 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.348124845 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.339593317 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.388553322 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.352782305 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.45971033 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.343196266 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.341081755 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.493375239 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341452611 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.349025573 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.393343458 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.35331482 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.341583846 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.347721792 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.125747855 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34043922 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344159428 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.342304837 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341822514 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.408748609 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341300936 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.341792113 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342030744 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455970822 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.340695145 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34184508 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.342878118 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.345752728 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.343235293 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.341540727 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.344286546 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.341690565 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.341879894 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.368979514 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.34175187 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.34235482 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.342069892 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.344682261 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.393138878 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.344877541 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.342982048 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.342625623 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.396446424 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353557821 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342666905 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.34293808 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34232883 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345041673 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.496648614 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391715544 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.343225788 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391149527 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344295332 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.345528361 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.343869123 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.34477582 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433265325 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.343922458 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.391432802 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.34444354 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.525048197 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.370447795 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343602135 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.349090497 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.349036535 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342923175 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.342826934 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.3518164 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.34571353 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.348155713 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.353172575 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34439129 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344702553 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.50651145 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453189083 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345514421 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.36139428 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.354234594 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.344099629 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.396323357 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.345825678 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.345407717 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396281011 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465008133 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.39675108 seconds)
  done (took 138.542446444 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359305326 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359829582 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.349282412 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.37514029 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.349058391 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.34640246 seconds)
  done (took 9.381865146 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348868784 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.348703573 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.346278639 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.345907267 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.346172987 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.346247167 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.345387593 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351208142 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.347702149 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.346001932 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.348142214 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.3486511 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.345210214 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.347377617 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.347241572 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348087303 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.347491974 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347818861 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.347348362 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348578237 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.344988699 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.348394493 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350814597 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.350244387 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.349478744 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.347255603 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372922673 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.347116751 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.348017531 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.356677617 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.366209483 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.346523095 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.351513451 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.35387199 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.349692743 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.351110134 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35086436 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.348266751 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349149295 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.347848832 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.350076871 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348836261 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.348879224 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.34990372 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.351916521 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.354484342 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.350453846 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376392409 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.348777016 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.349050997 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.349806918 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.350066535 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.351347652 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.350360308 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.354929992 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369191357 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.35298435 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.350405752 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.350679103 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352822947 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.354140963 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.350094882 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354020417 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.351626101 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.350943518 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.349970106 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354964972 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352954313 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351024891 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.350710044 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.350862114 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.353503301 seconds)
  done (took 99.511631964 seconds)
done (took 368.578614738 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.21921788 seconds)
  done (took 4.466862959 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.426963835 seconds)
  done (took 3.676825525 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.132129901 seconds)
  done (took 21.389511542 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.440738732 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.39553772 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.374289914 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.347019711 seconds)
  done (took 10.805402931 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.719614791 seconds)
  done (took 3.965500766 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.344769722 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.354517261 seconds)
  done (took 5.948848673 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.549036035 seconds)
  done (took 3.795570966 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.593800669 seconds)
  done (took 3.847789833 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.368140143 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.349543754 seconds)
  done (took 5.972073213 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.324528186 seconds)
  done (took 3.57088758 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.859870211 seconds)
  done (took 18.111727232 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.359880255 seconds)
  done (took 3.610596147 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.358284805 seconds)
  done (took 3.605480197 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.685142921 seconds)
  done (took 5.931897275 seconds)
done (took 99.946571513 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.345359758 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.345572941 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.347091218 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.345387686 seconds)
  done (took 10.628442124 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.403435661 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.403612773 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412586059 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.407436796 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409593715 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403277491 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.378330239 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.377740723 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.403011053 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.405767625 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.411123717 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41084337 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403765123 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.37825171 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403364606 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408882524 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.403940609 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.406871192 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.377444619 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409354237 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.353076697 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.407272871 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.403456041 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.35374711 seconds)
  done (took 34.784462143 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.849321435 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.42315149 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.507832191 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.403066573 seconds)
  done (took 7.43260234 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.483783942 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.483133717 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.493702804 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.541018405 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.564740041 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.495124866 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.378104736 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.37388233 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.359723233 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.483507701 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.521530002 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.439544906 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.745767926 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.353369156 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.739558752 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353067486 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.354887631 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.482757292 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.539452512 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.561686656 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.353799225 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.486314458 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.485610517 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444087245 seconds)
  done (took 36.766898528 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.362453455 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.369997837 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.361878483 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.369945704 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.355833242 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.361636026 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.356441828 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.360055809 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.355939837 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.355424317 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.361676266 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.369727722 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.355681932 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.354772 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.362704469 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.357036272 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.370177847 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.362196187 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.36326921 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.364764048 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.35682768 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.362909492 seconds)
  done (took 31.202562118 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.351079257 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.349720942 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.701334614 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.606024102 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.350697484 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.358376528 seconds)
  done (took 13.969869969 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.423246232 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.564158909 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.358916304 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.682181735 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.763595333 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.359913952 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.358754384 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.584384375 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.875209441 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.851327633 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.41763305 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.429013292 seconds)
  done (took 19.925231285 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.36317654 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.35469544 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.35957366 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.374033188 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.406005116 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.36195836 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.363918203 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.350897681 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.413580157 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.412376366 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.362410691 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.408646536 seconds)
  done (took 21.789236888 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433691634 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352670913 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35709208 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37393839 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352595537 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368936148 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371690288 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048755009 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.375932828 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627070806 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367328169 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441755435 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353487994 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363029413 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355687094 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.23566678 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583368548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819382221 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361565831 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36326705 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938194551 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372189279 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360261055 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558160652 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37769659 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359327045 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.617594954 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354184206 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616424918 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593211012 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592850717 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362195394 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629368237 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006187187 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480917511 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549852624 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382454815 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357642425 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.339558996 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.378837203 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390979234 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363384519 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586116774 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364217217 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354761682 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360523129 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060484478 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381194218 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.353917129 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355335823 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587034202 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446392602 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.361003262 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354516994 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409498492 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360276538 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.361121609 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488694617 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382002118 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355624372 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386081016 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.362352679 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354175145 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358691696 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97258512 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.370304756 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.36237213 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362419976 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367695734 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370584436 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386077 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356528325 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.400610005 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355695622 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07948782 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366231632 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36547564 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889420495 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363196074 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.363505213 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580873997 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35787624 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356748234 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.357147337 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358011193 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046176267 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375270943 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.33907426 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431469052 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074536998 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577806888 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380424179 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941473712 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584735672 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.338467299 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360333951 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.364792464 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365025964 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378232534 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056994124 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386842253 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.369071842 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357740394 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.568811381 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371123761 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.248746203 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827727531 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376359904 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.389059487 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370372735 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56584537 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.941760634 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603644616 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366753407 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396579544 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359657285 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101670195 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367595835 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.372407333 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359044952 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644037649 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.137206532 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367667113 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432131995 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3687219 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362387737 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361391646 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381945701 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36323745 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.546635714 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389427428 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601568688 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.369256485 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358756545 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.368748423 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362271099 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.381891528 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58195061 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360932502 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642691663 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360919358 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365059628 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369507209 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.577162363 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.374608665 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.374174372 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361292543 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375255221 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367508467 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612709686 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400933235 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477867503 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393884716 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.361994833 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381483511 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.367486699 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.368109028 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362134276 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384685983 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379323309 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.371874042 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374739085 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94934669 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346024952 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373808866 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369034155 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.378756018 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434115754 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370291352 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56481334 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382648223 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383706859 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.373634648 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.371412588 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58379852 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597014947 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.372094878 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542798224 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.828747575 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962679185 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38587372 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.364784295 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.364481711 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.364517123 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366223594 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366983862 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365617948 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563438801 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611446337 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371924378 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.974871463 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372736727 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364992928 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.379117781 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598431975 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.379680162 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36644067 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.363500472 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365376441 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375366507 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.604018778 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592850008 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.380656243 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364068276 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.884297726 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373888885 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366825149 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365448079 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396396811 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368235504 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165919875 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366519279 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36822189 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621516894 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375807213 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.388790448 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.368088497 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376543897 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384933494 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.395127955 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382691271 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.571345544 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378895064 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373711363 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367403498 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120977659 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903831821 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375999487 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.384814527 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37483483 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074929965 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391329762 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374972419 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600108748 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071503313 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386166297 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836828191 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.39996099 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093491378 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604988551 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598609276 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369007579 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.381579798 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61074678 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58613807 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400121104 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38021787 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375825431 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.349229624 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907732426 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388246444 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553659971 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076918856 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39977753 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375779666 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.442374898 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.386449503 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768084457 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388268079 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370724056 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383583163 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374629771 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17636803 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384271485 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371406239 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988925307 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390878593 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.844562266 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387863133 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.5725373 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614103153 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.595944436 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.388662899 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.380890662 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.369321861 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608543305 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384457026 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39039541 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908264759 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.233589383 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.386856923 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372616067 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117142985 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388357118 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637397171 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.387271499 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.390035081 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394054403 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371803899 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372817739 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.371805926 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38901046 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349969783 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834418313 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.397831384 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396813715 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387115391 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384606123 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38174559 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.388057354 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957785034 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607434191 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381490249 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412135023 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.3791995 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375269082 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.362774704 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373764867 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385008844 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425999184 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600760303 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376251992 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.36009819 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390725168 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59037841 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374647765 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378225082 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613172261 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.380063998 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.384005489 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137391789 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971365023 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387133806 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382191888 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384046449 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427434862 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447094228 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580236559 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.617418535 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619250341 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780760726 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394743539 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383633363 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.397629982 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462001334 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380012252 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.385904351 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.393260037 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96554923 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123304827 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.977091306 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61885629 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387994054 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380630292 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377206624 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618772995 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378718788 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654358469 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37698526 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.394396065 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404293825 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377172584 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400213552 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595210178 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651237601 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377986884 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389183197 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381013699 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.379909125 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621969745 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597361089 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847641961 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910105733 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385471083 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390390116 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093268765 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673338412 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376809671 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380499219 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381100274 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.394649469 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402766549 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.387564785 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382204726 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610492205 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614566178 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032482653 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632094624 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.997437684 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.25829721 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393791452 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385820313 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381798784 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588503132 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98031498 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071016365 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387881237 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455761469 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583889484 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.387398196 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617827666 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.382525187 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37915681 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382297683 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389180197 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.388521539 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616724531 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980990497 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387225836 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.385145594 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.384620705 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969665334 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.590848746 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605959823 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083080761 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607528539 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62116995 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405498713 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383051227 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978141184 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628621962 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388217592 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.387931389 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613781581 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403911323 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424063547 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.252063667 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.382340026 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912634369 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.600946877 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404955866 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385068948 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.075899054 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983193798 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.389435378 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851730835 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394008401 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386058306 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665037695 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.389043136 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381256306 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66670862 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.386330935 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379636834 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591247027 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.971546472 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113326589 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.39888877 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402428149 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.402249363 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379013578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451219181 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397453453 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402667073 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.786241932 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398467464 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380566122 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393210227 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.379855665 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387377697 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.387240834 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3797032 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.386876537 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.379214664 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.37951615 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388867749 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512624808 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926997541 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40468577 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.99705295 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.716880434 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381499485 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383343922 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.36959349 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.386720408 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383860609 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381719528 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38212217 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399793207 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904553632 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.385145548 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.628015696 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398232786 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.595795309 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596093634 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384055845 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611444823 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385962606 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407625438 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.363166991 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380797087 seconds)
  done (took 990.449755866 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391143102 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.414437217 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.39852701 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.435723814 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411905383 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.494934092 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.453009575 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465745239 seconds)
  done (took 20.74720556 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.385396844 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.398965918 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.399046313 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.39883935 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.391400727 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.83367996 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.399904345 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.399485321 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.405699948 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.388687199 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.394534345 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.035691079 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.41277004 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.395837315 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.397138718 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.401281772 seconds)
  done (took 32.730952549 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.135829446 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.432017574 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.926435937 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.418032506 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.39180251 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.401245543 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.527349337 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.40371076 seconds)
  done (took 25.919076996 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.397953691 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.399571428 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.398631924 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.3988284 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.405047567 seconds)
  done (took 8.282984138 seconds)
done (took 1255.879613231 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.398968283 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.393497945 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.392737318 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390814669 seconds)
  done (took 6.865546645 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.365844507 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.367785621 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.370238239 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.385972135 seconds)
  done (took 9.773726521 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.032639288 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.957243647 seconds)
  done (took 5.27381514 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.886556992 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.899696495 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.890669545 seconds)
  done (took 6.959055989 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.659219376 seconds)
  done (took 2.94273801 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.362819817 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.393793416 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.108439133 seconds)
  done (took 8.150151176 seconds)
done (took 41.253391948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386383337 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.155871179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.543589438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.38744438 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.580906841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.544692621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.635648347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.388183373 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.39841056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.392711593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.389090959 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.591415192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.620922414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.152506165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.62322829 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.151854436 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.55103809 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394365183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388624181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.389866597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.649100676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398018917 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397660637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.400152751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.548599227 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.533051223 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.398362024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.152663155 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.389745646 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415021894 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.534431173 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.401463575 seconds)
  done (took 83.171728211 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.388220333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.408173212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.393854988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.398556834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.389628264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.392308394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.391612523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.391617058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.390380124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.389470424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416223619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.390578798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.393589047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.401036529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.392476657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39656739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.38901373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392476558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414674036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391118621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39200629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.39158452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393299455 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.396035275 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.397383977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.390007112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.409752992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.390909017 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391216272 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405852685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.391230933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.410876782 seconds)
  done (took 77.958199362 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.392103853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.405837021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391972766 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.390846313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390662382 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.394804702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394189239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40558353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.40643333 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394641355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39408582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.391119901 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39669174 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.405709431 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407100935 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.407105522 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.408133796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.39369496 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.397909495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391490302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.393166294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.408187896 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.39343158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408532945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393186617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394376397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401301432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.392380224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.39416429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403030357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.393216116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393879438 seconds)
  done (took 78.018779537 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.625012468 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.39747209 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39971436 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.392723871 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.400624264 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.398268614 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.392924379 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.630464137 seconds)
  done (took 14.926776962 seconds)
done (took 255.360876231 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.393150552 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.872369795 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.441369281 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.392910609 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.419766073 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.419917382 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.611863556 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439394334 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.609989906 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.416363749 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.419193801 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.407042983 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.147196071 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.550597406 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.179737369 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.280417004 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.234568564 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.40881193 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.945125453 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.673560174 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.424395687 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.409405727 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.165438752 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.257647964 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.376008298 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.494841117 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.493104812 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.621199292 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.550591873 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.476928681 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.896958693 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.404379865 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.407937696 seconds)
  done (took 64.534151807 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.402047997 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.400693124 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.399886747 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.401711097 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.4010207 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.401379671 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.401474126 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.400769586 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.402192311 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.400548776 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.400255899 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.401876197 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.402607427 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.402029432 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.401462556 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.385562005 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.402877782 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.400574847 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.402659966 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.386442032 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.401448991 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.401738288 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.401962683 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.401694961 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.40157647 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.400919293 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.401932553 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.403078865 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.402224525 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.403363372 seconds)
  done (took 43.311247242 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.40321452 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.943897244 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.097426515 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.417897061 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.404819032 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.408768521 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.673617014 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.409077213 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.407259783 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.408692954 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.846006985 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.407455996 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439003106 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.118552254 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.413366728 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.40421672 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.405823561 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.407139614 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.957608323 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.416548895 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.688337918 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.404942263 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.674207363 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.415946165 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.425754629 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407257599 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.412252354 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.178548244 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.425970771 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.846053257 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.124672996 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.674678879 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.146895827 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.144235879 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.13992277 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.41220387 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.40740476 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.852722059 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.410096163 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.40723877 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.6726344 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.410581003 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.105962654 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.088123298 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.43032571 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.406489732 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.206233343 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.849338306 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.631672467 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.413368403 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.138819143 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.411594225 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.409326141 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.410411495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.632509291 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.410721051 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.409556575 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.25417541 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.413302773 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.675863636 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.409608619 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.407665047 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.953427982 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.409234854 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.949665938 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.41184821 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.416819774 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.42772601 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.10770945 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.412738761 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.10198109 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.430406645 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.408445493 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.849158775 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.950954811 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.250919757 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.411201692 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.95807166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.176196761 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.690308959 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.412909638 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.157592344 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.69462896 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.412864548 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.410331263 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.410373369 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.408466662 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476608841 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.673486001 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.024141592 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.096753782 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.263371848 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.67932783 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.420990279 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.412895542 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.258783227 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.409029152 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.410771944 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.106900439 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.1035311 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.435931587 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.418483303 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.106617531 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.436036155 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.679038349 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.41751075 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.147667797 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.413257455 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.502274468 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.410685586 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.418128299 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.432660815 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.679936516 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.416243889 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.410833045 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.089025779 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.885884473 seconds)
  done (took 195.348175875 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.409445756 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.423720786 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.40950278 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.423246826 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.408162757 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416131773 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.407277705 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.407677069 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.411573616 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.408382316 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.406704557 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.414560514 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414845824 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.407953866 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.40857236 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.407875179 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.408449893 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.415007218 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.408375877 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.407406997 seconds)
  done (took 45.526544006 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.414498051 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.939652464 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.910083136 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.415710285 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.413146796 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.412557837 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.466688645 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.414248637 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.414390224 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.694222829 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.575517522 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.416174753 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.41484391 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.412432541 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.910221551 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.398046801 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.69448743 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.93630895 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.415235815 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.938026693 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.399619219 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.414465847 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.416341346 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.937462385 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.693821609 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.682047335 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.468184514 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.940008136 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.415154916 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.41455716 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.939907543 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.414221268 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.417299963 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.923226596 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.43197498 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.430212583 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.415518591 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.470840307 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.473172838 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.698434065 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.946203258 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.682252927 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.426131607 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.576303294 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.417776791 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.399195529 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.935761632 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.433892713 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.401989171 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.417444105 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.421957724 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.915640787 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.436535917 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.917500445 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.433675383 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.418265401 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.939969818 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.913638746 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.930347067 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.579682313 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.418025868 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.687414879 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.416784246 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.941426124 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.434639278 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.416328826 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.418218229 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.583015997 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.961146574 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.68581099 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.700352894 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.698995469 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.418860622 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.474298697 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.435299066 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.702487272 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.473261873 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.795987314 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.70168314 seconds)
  done (took 127.220603721 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.679118824 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.52074744 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.791004745 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.962785575 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.892747959 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.555211829 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.526874913 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.673176372 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.426186003 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.51634449 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.021950905 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.524305995 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.1436767 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.4823384 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.519103133 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.552436965 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.787711553 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.341841879 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.056985329 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.009543229 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.418147288 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.542125615 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.927955026 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.618221272 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.426921986 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.957654146 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.321164829 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.905705965 seconds)
  done (took 53.409929352 seconds)
done (took 530.641321179 seconds)
SAVING RESULT...
DONE!
